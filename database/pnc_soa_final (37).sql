-- phpMyAdmin SQL Dump
-- version 4.8.5
-- https://www.phpmyadmin.net/
--
-- Host: 127.0.0.1
-- Generation Time: Sep 17, 2019 at 07:40 AM
-- Server version: 10.1.38-MariaDB
-- PHP Version: 7.3.4

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET AUTOCOMMIT = 0;
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `pnc_soa_final`
--

-- --------------------------------------------------------

--
-- Table structure for table `answer_sheets`
--

CREATE TABLE `answer_sheets` (
  `id` int(10) UNSIGNED NOT NULL,
  `student_id` int(11) NOT NULL,
  `exam_id` int(11) NOT NULL,
  `assessment_id` int(11) DEFAULT NULL,
  `student_outcome_id` int(11) NOT NULL,
  `curriculum_id` int(11) NOT NULL,
  `time_limit` double NOT NULL,
  `description` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `passing_grade` double NOT NULL,
  `is_submitted` tinyint(1) NOT NULL DEFAULT '0',
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `answer_sheets`
--

INSERT INTO `answer_sheets` (`id`, `student_id`, `exam_id`, `assessment_id`, `student_outcome_id`, `curriculum_id`, `time_limit`, `description`, `passing_grade`, `is_submitted`, `created_at`, `updated_at`) VALUES
(1, 9, 1, 1, 7, 44, 60, 'SET A', 60, 1, '2019-08-31 22:04:24', '2019-08-31 22:07:25'),
(2, 9, 1, 2, 7, 44, 60, 'SET A', 60, 1, '2019-08-31 22:09:23', '2019-08-31 22:12:32'),
(3, 35, 1, 3, 7, 44, 60, 'SET A', 60, 1, '2019-09-01 23:29:57', '2019-09-01 23:41:05'),
(4, 34, 1, 4, 7, 44, 60, 'SET A', 60, 1, '2019-09-01 23:44:16', '2019-09-01 23:54:19'),
(5, 33, 1, 5, 7, 44, 60, 'SET A', 60, 1, '2019-09-02 02:20:02', '2019-09-02 02:25:18'),
(6, 32, 1, 6, 7, 44, 60, 'SET A', 60, 1, '2019-09-02 02:28:58', '2019-09-02 02:33:34'),
(7, 29, 1, 7, 7, 44, 60, 'SET A', 60, 1, '2019-09-02 02:34:26', '2019-09-02 02:39:38'),
(8, 28, 1, 8, 7, 44, 60, 'SET A', 60, 1, '2019-09-02 02:40:58', '2019-09-02 02:48:50'),
(9, 25, 1, 9, 7, 44, 60, 'SET A', 60, 1, '2019-09-02 02:50:23', '2019-09-02 02:55:20'),
(10, 24, 1, 10, 7, 44, 60, 'SET A', 60, 1, '2019-09-02 02:58:09', '2019-09-02 03:09:06'),
(11, 23, 1, 11, 7, 44, 60, 'SET A', 60, 1, '2019-09-02 03:11:31', '2019-09-02 03:18:49'),
(12, 21, 1, 12, 7, 44, 60, 'SET A', 60, 1, '2019-09-02 03:21:03', '2019-09-02 03:26:38'),
(13, 20, 1, 13, 7, 44, 60, 'SET A', 60, 1, '2019-09-02 03:27:35', '2019-09-02 03:34:35'),
(14, 19, 1, 14, 7, 44, 60, 'SET A', 60, 1, '2019-09-02 03:38:10', '2019-09-02 03:44:07'),
(15, 18, 1, 15, 7, 44, 60, 'SET A', 60, 1, '2019-09-02 03:44:53', '2019-09-02 04:01:30'),
(16, 17, 1, 16, 7, 44, 60, 'SET A', 60, 1, '2019-09-02 04:02:40', '2019-09-02 04:09:06'),
(17, 16, 1, 17, 7, 44, 60, 'SET A', 60, 1, '2019-09-02 04:09:55', '2019-09-02 04:19:24'),
(18, 10, 1, 18, 7, 44, 60, 'SET A', 60, 1, '2019-09-02 13:13:39', '2019-09-02 13:19:13'),
(19, 11, 1, 19, 7, 44, 60, 'SET A', 60, 1, '2019-09-02 13:26:55', '2019-09-02 13:30:53'),
(20, 13, 1, 20, 7, 44, 60, 'SET A', 60, 1, '2019-09-02 13:32:32', '2019-09-02 13:39:01'),
(21, 36, 1, 21, 7, 44, 60, 'SET A', 60, 1, '2019-09-15 04:31:58', '2019-09-15 05:17:43');

-- --------------------------------------------------------

--
-- Table structure for table `answer_sheet_test_questions`
--

CREATE TABLE `answer_sheet_test_questions` (
  `id` int(10) UNSIGNED NOT NULL,
  `answer_sheet_id` int(11) NOT NULL,
  `test_question_id` int(11) NOT NULL,
  `title` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `body` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `body_html` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `student_outcome_id` int(11) NOT NULL,
  `course_id` int(11) NOT NULL,
  `difficulty_level_id` int(11) NOT NULL,
  `performance_criteria_id` int(11) NOT NULL,
  `pos_order` int(11) DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `answer_sheet_test_questions`
--

INSERT INTO `answer_sheet_test_questions` (`id`, `answer_sheet_id`, `test_question_id`, `title`, `body`, `body_html`, `student_outcome_id`, `course_id`, `difficulty_level_id`, `performance_criteria_id`, `pos_order`, `created_at`, `updated_at`) VALUES
(1, 1, 289, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q33', 'A number of the form 213ab, where a and b are digits, has a reminder less than 10 when divided by 100. The sum of all the digits in the above number is equal to 13. Find the digit b.', 'A number of the form 213ab, where a and b are digits, has a reminder less than 10 when divided by 100. The sum of all the digits in the above number is equal to 13. Find the digit b.', 7, 92, 1, 6, 43, '2019-08-31 22:04:24', '2019-08-31 22:04:24'),
(2, 1, 142, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q2', 'The set O of odd positive integers less than 10 can be expressed by _____________.', 'The set O of odd positive integers less than 10 can be expressed by _____________.', 7, 96, 1, 6, 76, '2019-08-31 22:04:24', '2019-08-31 22:04:24'),
(3, 1, 51, 'CCS102 - COMPUTER PROGRAMMING 1 Q21', 'What is the output of this program?\n\n[[#code18]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class main_class <br />\n    {<br />\n        public static void main(String args[])<br />\n        {<br />\n            int x = 9;<br />\n            if (x == 9) <br />\n            { <br />\n                int x = 8;<br />\n                System.out.println(x);<br />\n            }<br />\n        } <br />\n    }</code></pre>', 7, 90, 2, 6, 27, '2019-08-31 22:04:24', '2019-08-31 22:04:24'),
(4, 1, 114, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q24', 'The mean of a data set is equal to 10 and its standard deviation is equal to 1. If we add 5 to each data value, then the mean and standard deviation become', 'The mean of a data set is equal to 10 and its standard deviation is equal to 1. If we add 5 to each data value, then the mean and standard deviation become', 7, 92, 2, 6, 45, '2019-08-31 22:04:24', '2019-08-31 22:04:24'),
(5, 1, 214, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q14', 'Android is based on which kernel?', 'Android is based on which kernel?', 7, 125, 1, 6, 89, '2019-08-31 22:04:24', '2019-08-31 22:04:24'),
(6, 1, 137, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q19', 'Polymorphism occurs when the methods of the child class.', 'Polymorphism occurs when the methods of the child class.', 7, 95, 2, 6, 62, '2019-08-31 22:04:24', '2019-08-31 22:04:24'),
(7, 1, 267, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q30', 'A floor function map a real number to :', 'A floor function map a real number to :', 7, 96, 3, 6, 84, '2019-08-31 22:04:24', '2019-08-31 22:04:24'),
(8, 1, 215, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q15', 'Which is the latest mobile version of android?', 'Which is the latest mobile version of android?', 7, 125, 1, 6, 91, '2019-08-31 22:04:24', '2019-08-31 22:04:24'),
(9, 1, 126, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q8', 'A control used to show a list of strings which you can select.', 'A control used to show a list of strings which you can select.', 7, 95, 1, 6, 56, '2019-08-31 22:04:24', '2019-08-31 22:04:24'),
(10, 1, 254, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q30', 'What is an HTTP client class in android?', 'What is an HTTP client class in android?', 7, 125, 3, 6, 100, '2019-08-31 22:04:24', '2019-08-31 22:04:24'),
(11, 1, 97, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q7', 'The expression (3i - 2)(i + 1) - 7 can be simplified to which of the following expressions?', 'The expression (3i - 2)(i + 1) - 7 can be simplified to which of the following expressions?', 7, 92, 2, 6, 46, '2019-08-31 22:04:24', '2019-08-31 22:04:24'),
(12, 1, 40, 'CCS102 - COMPUTER PROGRAMMING 1 Q10', 'Static binding uses which information for binding?', 'Static binding uses which information for binding?', 7, 90, 1, 6, 23, '2019-08-31 22:04:24', '2019-08-31 22:04:24'),
(13, 1, 38, 'CCS102 - COMPUTER PROGRAMMING 1 - Q8', 'Which of the following is true about try block in C#?', 'Which of the following is true about try block in C#?', 7, 90, 1, 6, 19, '2019-08-31 22:04:25', '2019-08-31 22:04:25'),
(14, 1, 57, 'CCS102 - COMPUTER PROGRAMMING 1 Q27', 'Which of these is necessary to specify at time of array initialization?', 'Which of these is necessary to specify at time of array initialization?', 7, 90, 2, 6, 30, '2019-08-31 22:04:25', '2019-08-31 22:04:25'),
(15, 1, 52, 'CCS102 - COMPUTER PROGRAMMING 1 Q22', 'What is the output of this program?\n\n[[#code19]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class box <br />\n    {<br />\n        int width;<br />\n        int height;<br />\n        int length;<br />\n    } <br />\n    class mainclass <br />\n    {<br />\n        public static void main(String args[]) <br />\n        {        <br />\n             box obj = new box();<br />\n             obj.width = 10;<br />\n             obj.height = 2;<br />\n             obj.length = 10;<br />\n             int y = obj.width * obj.height * obj.length; <br />\n             System.out.print(y);<br />\n        } <br />\n    }</code></pre>', 7, 90, 3, 6, 32, '2019-08-31 22:04:25', '2019-08-31 22:04:25'),
(16, 1, 112, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q22', 'A school committee consists of 2 teachers and 4 students. The number of different committees that can be formed from 5 teachers and 10 students is', 'A school committee consists of 2 teachers and 4 students. The number of different committees that can be formed from 5 teachers and 10 students is', 7, 92, 1, 6, 42, '2019-08-31 22:04:25', '2019-08-31 22:04:25'),
(17, 1, 244, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q20', 'To update contents of content provider using curser and commit you need to call _______________.', 'To update contents of content provider using curser and commit you need to call _______________.', 7, 125, 2, 6, 95, '2019-08-31 22:04:25', '2019-08-31 22:04:25'),
(18, 1, 275, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q24', 'How should you arrange catch blocks?', 'How should you arrange catch blocks?', 7, 95, 2, 6, 64, '2019-08-31 22:04:25', '2019-08-31 22:04:25'),
(19, 1, 87, 'CCS101 - INTRODUCTION TO COMPUTING - Q8', '____________ are the four general operations that are performed in each machine cycle.', '____________ are the four general operations that are performed in each machine cycle.', 7, 89, 2, 6, 14, '2019-08-31 22:04:25', '2019-08-31 22:04:25'),
(20, 1, 246, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q22', 'Which of  the following holds Java source code for the application?', 'Which of  the following holds Java source code for the application?', 7, 125, 2, 6, 94, '2019-08-31 22:04:25', '2019-08-31 22:04:25'),
(21, 1, 121, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q3', 'These are additional operators used to return Boolean values.', 'These are additional operators used to return Boolean values.', 7, 95, 1, 6, 55, '2019-08-31 22:04:25', '2019-08-31 22:04:25'),
(22, 1, 108, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q18', 'The population of a country increased by an average of 2% per year from 2000 to 2003. If the population of this country was 2 000 000 on December 31, 2003, then the population of this country on January 1, 2000, to the nearest thousand would have been', 'The population of a country increased by an average of 2% per year from 2000 to 2003. If the population of this country was 2 000 000 on December 31, 2003, then the population of this country on January 1, 2000, to the nearest thousand would have been', 7, 92, 3, 6, 50, '2019-08-31 22:04:25', '2019-08-31 22:04:25'),
(23, 1, 148, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q8', 'What is the Cardinality of the Power set of the set {0, 1, 2}.', 'What is the Cardinality of the Power set of the set {0, 1, 2}.', 7, 96, 1, 6, 72, '2019-08-31 22:04:25', '2019-08-31 22:04:25'),
(24, 1, 42, 'CCS102 - COMPUTER PROGRAMMING 1 Q12', 'Which of the following is not a keyword in java?', 'Which of the following is not a keyword in java?', 7, 90, 1, 6, 18, '2019-08-31 22:04:25', '2019-08-31 22:04:25'),
(25, 1, 252, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q28', 'What is bean class in android?', 'What is bean class in android?', 7, 125, 3, 6, 99, '2019-08-31 22:04:25', '2019-08-31 22:04:25'),
(26, 1, 34, 'IT01- CCS102 - COMPUTER PROGRAMMING 1 - Q4', 'Which of the following operator returns the size of a data type in C#?', 'Which of the following operator returns the size of a data type in C#?', 7, 90, 1, 6, 22, '2019-08-31 22:04:25', '2019-08-31 22:04:25'),
(27, 1, 136, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q18', 'Private Button print = new button();', 'Private Button print = new button();', 7, 95, 2, 6, 61, '2019-08-31 22:04:25', '2019-08-31 22:04:25'),
(28, 1, 285, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q29', 'The period of 2 sin x cos x is', 'The period of 2 sin x cos x is', 7, 92, 1, 6, 35, '2019-08-31 22:04:25', '2019-08-31 22:04:25'),
(29, 1, 248, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q24', 'What is the use of content provider in android?', 'What is the use of content provider in android?', 7, 125, 2, 6, 97, '2019-08-31 22:04:25', '2019-08-31 22:04:25'),
(30, 1, 223, 'CC101 - INTRODUCTION TO COMPUTING - Q11', 'The sum of 11101 + 10111 equals ________.', 'The sum of 11101 + 10111 equals ________.', 7, 89, 2, 6, 10, '2019-08-31 22:04:25', '2019-08-31 22:04:25'),
(31, 1, 155, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q15', 'Let the set A is {1, 2, 3} and B is {2, 3, 4}. Then number of elements in A U B is _____.', 'Let the set A is {1, 2, 3} and B is {2, 3, 4}. Then number of elements in A U B is _____.', 7, 96, 1, 6, 69, '2019-08-31 22:04:25', '2019-08-31 22:04:25'),
(32, 1, 212, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q12', 'Which company bought android?', 'Which company bought android?', 7, 125, 1, 6, 93, '2019-08-31 22:04:25', '2019-08-31 22:04:25'),
(33, 1, 48, 'CCS102 - COMPUTER PROGRAMMING 1 Q18', 'What is JRE?', 'What is JRE?', 7, 90, 2, 6, 29, '2019-08-31 22:04:25', '2019-08-31 22:04:25'),
(34, 1, 132, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q14', 'C# treats the multiple catch statements like cases in a _____________ statement.', 'C# treats the multiple catch statements like cases in a _____________ statement.', 7, 95, 1, 6, 58, '2019-08-31 22:04:25', '2019-08-31 22:04:25'),
(35, 1, 147, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q7', 'The set of positive integers is _____________.', 'The set of positive integers is _____________.', 7, 96, 1, 6, 70, '2019-08-31 22:04:25', '2019-08-31 22:04:25'),
(36, 1, 99, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q9', 'Evaluate the following:\n \nlog<sub>4</sub> 25', 'Evaluate the following:<br />\n <br />\nlog<sub>4</sub> 25', 7, 92, 1, 6, 41, '2019-08-31 22:04:25', '2019-08-31 22:04:25'),
(37, 1, 93, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q3', 'If 2x - 8 ≥ 2, then', 'If 2x - 8 ≥ 2, then', 7, 92, 1, 6, 39, '2019-08-31 22:04:25', '2019-08-31 22:04:25'),
(38, 1, 243, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q19', 'Android provides a few standard themes, listed in ________.', 'Android provides a few standard themes, listed in ________.', 7, 125, 2, 6, 96, '2019-08-31 22:04:25', '2019-08-31 22:04:25'),
(39, 1, 78, 'CCS101 - INTRODUCTION TO COMPUTING -  Q19', 'This coding system is designed to support international languages like Chinese and Japanese.', 'This coding system is designed to support international languages like Chinese and Japanese.', 7, 89, 3, 6, 17, '2019-08-31 22:04:25', '2019-08-31 22:04:25'),
(40, 1, 145, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q5', 'What is the Cartesian product of A = {1, 2} and B = {a, b}?', 'What is the Cartesian product of A = {1, 2} and B = {a, b}?', 7, 96, 2, 6, 78, '2019-08-31 22:04:25', '2019-08-31 22:04:25'),
(41, 1, 111, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q21', 'For x greater than or equal to zero and less than or equal to 2 π, sin x and cos x are both decreasing on the intervals', 'For x greater than or equal to zero and less than or equal to 2 π, sin x and cos x are both decreasing on the intervals', 7, 92, 2, 6, 47, '2019-08-31 22:04:25', '2019-08-31 22:04:25'),
(42, 1, 116, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q26', 'If f(x) is an odd function, then | f(x) | is', 'If f(x) is an odd function, then | f(x) | is', 7, 92, 2, 6, 44, '2019-08-31 22:04:25', '2019-08-31 22:04:25'),
(43, 1, 32, 'CCS102 - COMPUTER PROGRAMMING 1 - Q2', 'Which of the following is a reserved keyword in C#?', 'Which of the following is a reserved keyword in C#?', 7, 90, 1, 6, 21, '2019-08-31 22:04:25', '2019-08-31 22:04:25'),
(44, 1, 256, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q32', 'What is the difference between content values and cursor in android SQlite?', 'What is the difference between content values and cursor in android SQlite?', 7, 125, 3, 6, 98, '2019-08-31 22:04:25', '2019-08-31 22:04:25'),
(45, 1, 278, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q27', 'What will be the output of the following code?\n\n[[#code28]]', 'What will be the output of the following code?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">csharp</span></div><pre><code class=\"language-csharp\">try<br />\n{<br />\n  int num = 100;<br />\n  int den = 0;<br />\n  try<br />\n  {<br />\n    MessageBox.Show(\"Message1\");<br />\n    int res = num/den;<br />\n    MessageBox.Show(\"Message2\");<br />\n  }<br />\n  catch(ArithmeticException ae)<br />\n  {<br />\n    MessageBox.Show(\"Message3\");<br />\n  }<br />\n  MessageBox.Show(\"Message4\");<br />\n}</code></pre>', 7, 95, 3, 6, 68, '2019-08-31 22:04:25', '2019-08-31 22:04:25'),
(46, 1, 124, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q6', 'This data type stores the address of the value which means that they refer to a memory location.', 'This data type stores the address of the value which means that they refer to a memory location.', 7, 95, 1, 6, 52, '2019-08-31 22:04:25', '2019-08-31 22:04:25'),
(47, 1, 33, 'IT01- CCS102 - COMPUTER PROGRAMMING 1 - Q3', 'Which of the following converts a type to a double type in C#?', 'Which of the following converts a type to a double type in C#?', 7, 90, 1, 6, 26, '2019-08-31 22:04:25', '2019-08-31 22:04:25'),
(48, 1, 140, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q22', 'A _______ is an identifier that denotes a storage location.', 'A _______ is an identifier that denotes a storage location.', 7, 95, 2, 6, 63, '2019-08-31 22:04:25', '2019-08-31 22:04:25'),
(49, 1, 127, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q9', 'Commonly used  control to execute commansd when it is clicked.', 'Commonly used  control to execute commansd when it is clicked.', 7, 95, 1, 6, 60, '2019-08-31 22:04:25', '2019-08-31 22:04:25'),
(50, 1, 143, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q3', 'Power set of empty set has exactly _________ subset.', 'Power set of empty set has exactly _________ subset.', 7, 96, 1, 6, 77, '2019-08-31 22:04:25', '2019-08-31 22:04:25'),
(51, 1, 286, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q30', 'The probability that an electronic device produced by a company does not function properly is equal to 0.1. If 10 devices are bought, then the probability, to the nearest thousandth, that 7 devices function properly is', 'The probability that an electronic device produced by a company does not function properly is equal to 0.1. If 10 devices are bought, then the probability, to the nearest thousandth, that 7 devices function properly is', 7, 92, 3, 6, 49, '2019-08-31 22:04:25', '2019-08-31 22:04:25'),
(52, 1, 203, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q3', 'Android doesn\'t  support which format?', 'Android doesn\'t  support which format?', 7, 125, 1, 6, 87, '2019-08-31 22:04:25', '2019-08-31 22:04:25'),
(53, 1, 204, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q4', 'Android supports which features.', 'Android supports which features.', 7, 125, 1, 6, 92, '2019-08-31 22:04:25', '2019-08-31 22:04:25'),
(54, 1, 270, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q33', 'In the given AP series the term at position 11 would be\n5, 8, 11, 14, 17, 20………50.', 'In the given AP series the term at position 11 would be<br />\n5, 8, 11, 14, 17, 20………50.', 7, 96, 3, 6, 82, '2019-08-31 22:04:25', '2019-08-31 22:04:25'),
(55, 1, 59, 'CCS102 - COMPUTER PROGRAMMING 1 Q29', 'What is the output of this program?\n\n[[#code24]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class evaluate <br />\n    {<br />\n        public static void main(String args[]) <br />\n            {<br />\n	        int arr[] = new int[] {0 , 1, 2, 3, 4, 5, 6, 7, 8, 9};<br />\n	        int n = 6;<br />\n                n = arr[arr[n] / 2];<br />\n	        System.out.println(arr[n] / 2);<br />\n            } <br />\n    }</code></pre>', 7, 90, 3, 6, 34, '2019-08-31 22:04:25', '2019-08-31 22:04:25'),
(56, 1, 70, 'Projectile motion 2', 'An adventurous cliff jumper runs horizontally off a cliff. We can ignore air resistance.\n\n[[#img27]]\n\nWhich diagram best describes the horizontal velocity vectors and trajectory during the person’s fall?\n\nAssume the origin of the coordinate system to be the cliff edge.\n\nA red dot represents a vector of zero magnitude.', 'An adventurous cliff jumper runs horizontally off a cliff. We can ignore air resistance.<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/PgCOEtvEENxNaqgGLMWLrysCTt8GwyXUqH8p2sz7.png\" width=\"200\" height=\"200\" /><br />\n<br />\nWhich diagram best describes the horizontal velocity vectors and trajectory during the person’s fall?<br />\n<br />\nAssume the origin of the coordinate system to be the cliff edge.<br />\n<br />\nA red dot represents a vector of zero magnitude.', 7, 89, 1, 6, 4, '2019-08-31 22:04:25', '2019-08-31 22:04:25'),
(57, 1, 72, 'CCS101 - INTRODUCTION TO COMPUTING - Q25', 'What type of software is a screen saver?', 'What type of software is a screen saver?', 7, 89, 2, 6, 12, '2019-08-31 22:04:26', '2019-08-31 22:04:26'),
(58, 1, 162, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q22', 'If n(A)=10 , n(B)=30,n(C)=50 and if set A,B,C are pairwise disjoint then which of the following is correct?', 'If n(A)=10 , n(B)=30,n(C)=50 and if set A,B,C are pairwise disjoint then which of the following is correct?', 7, 96, 2, 6, 79, '2019-08-31 22:04:26', '2019-08-31 22:04:26'),
(59, 1, 89, 'CCS101 - INTRODUCTION TO COMPUTING - Q5', 'A memory management technique that uses hard drive space as additional RAM.', 'A memory management technique that uses hard drive space as additional RAM.', 7, 89, 1, 6, 2, '2019-08-31 22:04:26', '2019-08-31 22:04:26'),
(60, 1, 79, 'CCS101 - INTRODUCTION TO COMPUTING -Q18', 'Which of the following is/are not part of the CPU?', 'Which of the following is/are not part of the CPU?', 7, 89, 3, 6, 16, '2019-08-31 22:04:26', '2019-08-31 22:04:26'),
(61, 1, 211, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q11', 'Web browser available in android based on', 'Web browser available in android based on', 7, 125, 1, 6, 85, '2019-08-31 22:04:26', '2019-08-31 22:04:26'),
(62, 1, 77, 'CCS101 - INTRODUCTION TO COMPUTING - Q20', 'A programming error that occurs when running a program produces incorrect results.', 'A programming error that occurs when running a program produces incorrect results.', 7, 89, 1, 6, 9, '2019-08-31 22:04:26', '2019-08-31 22:04:26'),
(63, 1, 205, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q5', 'For ___________, code used by Android is not open source.', 'For ___________, code used by Android is not open source.', 7, 125, 1, 6, 90, '2019-08-31 22:04:26', '2019-08-31 22:04:26'),
(64, 1, 66, 'Binary to decimal conversion 1', 'Convert 10100011 from binary to decimal.', 'Convert 10100011 from binary to decimal.', 7, 89, 1, 6, 8, '2019-08-31 22:04:26', '2019-08-31 22:04:26'),
(65, 1, 68, 'Describing two-dimensional motion with vectors', 'A golfer hits a golf ball upwards at an angle of 75°, degree with the horizontal. We can ignore air resistance.\n\n[[#img22]]\n\nWhich graph best describes the golf ball\'s vertical displacement over time?\n\nAssume the origin of the coordinate system to be the point on the ground where the ball was initially at rest.', 'A golfer hits a golf ball upwards at an angle of 75°, degree with the horizontal. We can ignore air resistance.<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/MYpfYGJo93eMWxPVag4ii0jWIwamFw8EKp4yFlbj.png\" width=\"300\" height=\"150\" /><br />\n<br />\nWhich graph best describes the golf ball\'s vertical displacement over time?<br />\n<br />\nAssume the origin of the coordinate system to be the point on the ground where the ball was initially at rest.', 7, 89, 1, 6, 3, '2019-08-31 22:04:26', '2019-08-31 22:04:26'),
(66, 1, 283, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q32', 'You have a TextBox control and a Help button that the user can press to get help on allowable values. You validate the data entered by the user in the TextBox control. If the user enters an invalid value, you set the focus back in the control using the Cancel property of the CancelEventArgs. A user reports that once he enters invalid data in the text box, he cannot click the Help button. What should you do to correct the problem?', 'You have a TextBox control and a Help button that the user can press to get help on allowable values. You validate the data entered by the user in the TextBox control. If the user enters an invalid value, you set the focus back in the control using the Cancel property of the CancelEventArgs. A user reports that once he enters invalid data in the text box, he cannot click the Help button. What should you do to correct the problem?', 7, 95, 3, 6, 67, '2019-08-31 22:04:26', '2019-08-31 22:04:26'),
(67, 1, 95, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q5', 'What is the square root of -144?', 'What is the square root of -144?', 7, 92, 1, 6, 38, '2019-08-31 22:04:26', '2019-08-31 22:04:26'),
(68, 1, 92, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q2', 'Solve the inequality \n4x + 8 > 5x +9', 'Solve the inequality <br />\n4x + 8 > 5x +9', 7, 92, 1, 6, 37, '2019-08-31 22:04:26', '2019-08-31 22:04:26'),
(69, 1, 225, 'CCS101 - INTRODUCTION TO COMPUTING - Q7', 'Converting (1010111)<sub>2</sub> to base yields which of the following results?', 'Converting (1010111)<sub>2</sub> to base yields which of the following results?', 7, 89, 2, 6, 11, '2019-08-31 22:04:26', '2019-08-31 22:04:26'),
(70, 1, 151, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q11', 'Two sets are called disjoint if there _____________ is the empty set.', 'Two sets are called disjoint if there _____________ is the empty set.', 7, 96, 1, 6, 73, '2019-08-31 22:04:26', '2019-08-31 22:04:26'),
(71, 1, 131, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q13', 'A method of MessageBox class that allows you to call a message box for prompting user with messages and information.', 'A method of MessageBox class that allows you to call a message box for prompting user with messages and information.', 7, 95, 1, 6, 59, '2019-08-31 22:04:26', '2019-08-31 22:04:26'),
(72, 1, 138, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q20', 'A method_____an exception when that method detects that a problem has occured.', 'A method_____an exception when that method detects that a problem has occured.', 7, 95, 2, 6, 65, '2019-08-31 22:04:26', '2019-08-31 22:04:26'),
(73, 1, 119, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q1', 'This is a repetition control stricture that allows you to efficiently write a loop that needs to execute a specific number of times.', 'This is a repetition control stricture that allows you to efficiently write a loop that needs to execute a specific number of times.', 7, 95, 1, 6, 57, '2019-08-31 22:04:26', '2019-08-31 22:04:26'),
(74, 1, 260, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q23', 'In the given figure the if n(A)=20,n(U)=50,n(C)=10 and n(A∩B)=5 then n(B)=? \n\n[[#img34]]', 'In the given figure the if n(A)=20,n(U)=50,n(C)=10 and n(A∩B)=5 then n(B)=? <br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/23B9WIeQ00wE4pw7nsRG6le8KJWkZ1jI9HG7nYv3.jpeg\" width=\"300\" height=\"150\" />', 7, 96, 2, 6, 80, '2019-08-31 22:04:26', '2019-08-31 22:04:26'),
(75, 1, 61, 'CCS102 - COMPUTER PROGRAMMING 1 Q31', 'Where is array stored in memory?', 'Where is array stored in memory?', 7, 90, 2, 6, 31, '2019-08-31 22:04:26', '2019-08-31 22:04:26'),
(76, 1, 129, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q11', 'A control similar to an ordinary label having an underline and resembles a link on a web page.', 'A control similar to an ordinary label having an underline and resembles a link on a web page.', 7, 95, 1, 6, 54, '2019-08-31 22:04:26', '2019-08-31 22:04:26'),
(77, 1, 113, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q23', 'Five different books (A, B, C, D and E) are to be arranged on a shelf. Books C and D are to be arranged first and second starting from the right of the shelf. The number of different orders in which books A, B and E may be arranged is', 'Five different books (A, B, C, D and E) are to be arranged on a shelf. Books C and D are to be arranged first and second starting from the right of the shelf. The number of different orders in which books A, B and E may be arranged is', 7, 92, 2, 6, 48, '2019-08-31 22:04:26', '2019-08-31 22:04:26'),
(78, 1, 219, 'Computer Hardware - Q3', 'A device that enables a computer to communicate over telephone lines.', 'A device that enables a computer to communicate over telephone lines.', 7, 89, 1, 6, 1, '2019-08-31 22:04:26', '2019-08-31 22:04:26'),
(79, 1, 76, 'CCS101 - INTRODUCTION TO COMPUTING _ Q21', '_______ is a duplicate copy of data or other computer content for use in the event that the original version is destroyed.', '_______ is a duplicate copy of data or other computer content for use in the event that the original version is destroyed.', 7, 89, 2, 6, 13, '2019-08-31 22:04:26', '2019-08-31 22:04:26'),
(80, 1, 39, 'CCS102 - COMPUTER PROGRAMMING 1 Q9', 'What of the following is the default value of an instance variable?', 'What of the following is the default value of an instance variable?', 7, 90, 1, 6, 25, '2019-08-31 22:04:26', '2019-08-31 22:04:26'),
(81, 1, 150, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q10', 'The intersection of the sets {1, 2, 5} and {1, 2, 6} is the set _____________.', 'The intersection of the sets {1, 2, 5} and {1, 2, 6} is the set _____________.', 7, 96, 1, 6, 74, '2019-08-31 22:04:26', '2019-08-31 22:04:26'),
(82, 1, 122, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q4', 'These operators take two operands, such as arithmetic operators (+,-,*,/).', 'These operators take two operands, such as arithmetic operators (+,-,*,/).', 7, 95, 1, 6, 53, '2019-08-31 22:04:26', '2019-08-31 22:04:26'),
(83, 1, 58, 'CCS102 - COMPUTER PROGRAMMING 1 Q28', 'What is the output of this program?\n\n[[#code22]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class array_output <br />\n    {<br />\n        public static void main(String args[]) <br />\n        {<br />\n            int array_variable [] = new int[10];<br />\n	    for (int i = 0; i < 10; ++i) <br />\n            {<br />\n                array_variable[i] = i;<br />\n                System.out.print(array_variable[i] + \" \");<br />\n                i++;<br />\n            }<br />\n        } <br />\n    }</code></pre>', 7, 90, 3, 6, 33, '2019-08-31 22:04:26', '2019-08-31 22:04:26'),
(84, 1, 41, 'CCS102 - COMPUTER PROGRAMMING 1 Q11', 'What is correct syntax for main method of a java class?', 'What is correct syntax for main method of a java class?', 7, 90, 1, 6, 24, '2019-08-31 22:04:26', '2019-08-31 22:04:26'),
(85, 1, 104, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q14', 'What is the result when you put the expression x<sup>2</sup> +10x+41 into vertex form by completing the square ?', 'What is the result when you put the expression x<sup>2</sup> +10x+41 into vertex form by completing the square ?', 7, 92, 3, 6, 51, '2019-08-31 22:04:26', '2019-08-31 22:04:26'),
(86, 1, 90, 'CCS101 - INTRODUCTION TO COMPUTING - Q4', 'A letter, digit, or special character is represented by a code in a ___.', 'A letter, digit, or special character is represented by a code in a ___.', 7, 89, 3, 6, 15, '2019-08-31 22:04:26', '2019-08-31 22:04:26'),
(87, 1, 202, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q2', 'What is android?', 'What is android?', 7, 125, 1, 6, 86, '2019-08-31 22:04:26', '2019-08-31 22:04:26'),
(88, 1, 144, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q4', 'What is the cardinality of the set of odd positive integers less than 10?', 'What is the cardinality of the set of odd positive integers less than 10?', 7, 96, 1, 6, 71, '2019-08-31 22:04:26', '2019-08-31 22:04:26'),
(89, 1, 156, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q16', 'If A has 4 elements B has 8 elements then the minimum and maximum number of elements in A U B are respectively', 'If A has 4 elements B has 8 elements then the minimum and maximum number of elements in A U B are respectively', 7, 96, 1, 6, 75, '2019-08-31 22:04:26', '2019-08-31 22:04:26'),
(90, 1, 220, 'Computer Hardware - Q2', 'An input device that reads printed text and graphics and transfers them to a computer in digital form.', 'An input device that reads printed text and graphics and transfers them to a computer in digital form.', 7, 89, 1, 6, 7, '2019-08-31 22:04:26', '2019-08-31 22:04:26'),
(91, 1, 107, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q17', 'If Log <sub>4 </sub>(x) = 12, then log 2 (x / 4) is equal to', 'If Log <sub>4 </sub>(x) = 12, then log 2 (x / 4) is equal to', 7, 92, 1, 6, 40, '2019-08-31 22:04:27', '2019-08-31 22:04:27'),
(92, 1, 207, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q7', 'ABD stands for', 'ABD stands for', 7, 125, 1, 6, 88, '2019-08-31 22:04:27', '2019-08-31 22:04:27'),
(93, 1, 50, 'CCS102 - COMPUTER PROGRAMMING Q20', 'What happens when thread\'s yield() method is called?', 'What happens when thread\'s yield() method is called?', 7, 90, 2, 6, 28, '2019-08-31 22:04:27', '2019-08-31 22:04:27'),
(94, 1, 1, 'Solving for basic equation - Q1', 'solve for x:\n2x + 3 = 5', 'solve for x:<br />\n2x + 3 = 5', 7, 92, 1, 6, 36, '2019-08-31 22:04:27', '2019-08-31 22:04:27'),
(95, 1, 82, 'CCS101 - INTRODUCTION TO COMPUTING - Q15', '10111 is the two\'s complement representation of', '10111 is the two\'s complement representation of', 7, 89, 1, 6, 5, '2019-08-31 22:04:27', '2019-08-31 22:04:27'),
(96, 1, 74, 'CCS101 - INTRODUCTION TO COMPUTING - Q23', 'An electronic tool that allows information to be input, processed, and output.', 'An electronic tool that allows information to be input, processed, and output.', 7, 89, 1, 6, 6, '2019-08-31 22:04:27', '2019-08-31 22:04:27'),
(97, 1, 160, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q20', 'The shaded area of figure is best described by\n\n[[#img32]]', 'The shaded area of figure is best described by<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/5iL0Nsol7VkygnPftlQm5guoA5NqiGISBGevRke8.jpeg\" width=\"300\" height=\"150\" />', 7, 96, 3, 6, 83, '2019-08-31 22:04:27', '2019-08-31 22:04:27'),
(98, 1, 149, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q9', 'The union of the sets {1, 2, 5} and {1, 2, 6} is the set _______________.', 'The union of the sets {1, 2, 5} and {1, 2, 6} is the set _______________.', 7, 96, 2, 6, 81, '2019-08-31 22:04:27', '2019-08-31 22:04:27'),
(99, 1, 277, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q26', 'Which of the following will result from compiling this code, assuming that all other code for your form works properly?\n\n[[#code27]]', 'Which of the following will result from compiling this code, assuming that all other code for your form works properly?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">csharp</span></div><pre><code class=\"language-csharp\">try<br />\n{<br />\n  //Write code to allocate some resources<br />\n}<br />\nfinally<br />\n{<br />\n  //Write code to Dispose all allocated resources<br />\n}</code></pre>', 7, 95, 3, 6, 66, '2019-08-31 22:04:27', '2019-08-31 22:04:27'),
(100, 1, 31, 'Order of operation - Q1', 'What is the output of the following code?\n\n[[#code14]]', 'What is the output of the following code?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">double x = 2;<br />\ndouble y = 3;<br />\ndouble z = 5;<br />\n<br />\ndouble output = x + x * y + (x + 2 * z);<br />\n<br />\nSystem.out.println(output);</code></pre>', 7, 90, 1, 6, 20, '2019-08-31 22:04:27', '2019-08-31 22:04:27'),
(101, 2, 58, 'CCS102 - COMPUTER PROGRAMMING 1 Q28', 'What is the output of this program?\n\n[[#code22]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class array_output <br />\n    {<br />\n        public static void main(String args[]) <br />\n        {<br />\n            int array_variable [] = new int[10];<br />\n	    for (int i = 0; i < 10; ++i) <br />\n            {<br />\n                array_variable[i] = i;<br />\n                System.out.print(array_variable[i] + \" \");<br />\n                i++;<br />\n            }<br />\n        } <br />\n    }</code></pre>', 7, 90, 3, 6, 33, '2019-08-31 22:09:24', '2019-08-31 22:09:24'),
(102, 2, 225, 'CCS101 - INTRODUCTION TO COMPUTING - Q7', 'Converting (1010111)<sub>2</sub> to base yields which of the following results?', 'Converting (1010111)<sub>2</sub> to base yields which of the following results?', 7, 89, 2, 6, 11, '2019-08-31 22:09:24', '2019-08-31 22:09:24'),
(103, 2, 254, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q30', 'What is an HTTP client class in android?', 'What is an HTTP client class in android?', 7, 125, 3, 6, 100, '2019-08-31 22:09:24', '2019-08-31 22:09:24'),
(104, 2, 108, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q18', 'The population of a country increased by an average of 2% per year from 2000 to 2003. If the population of this country was 2 000 000 on December 31, 2003, then the population of this country on January 1, 2000, to the nearest thousand would have been', 'The population of a country increased by an average of 2% per year from 2000 to 2003. If the population of this country was 2 000 000 on December 31, 2003, then the population of this country on January 1, 2000, to the nearest thousand would have been', 7, 92, 3, 6, 50, '2019-08-31 22:09:24', '2019-08-31 22:09:24'),
(105, 2, 77, 'CCS101 - INTRODUCTION TO COMPUTING - Q20', 'A programming error that occurs when running a program produces incorrect results.', 'A programming error that occurs when running a program produces incorrect results.', 7, 89, 1, 6, 9, '2019-08-31 22:09:24', '2019-08-31 22:09:24'),
(106, 2, 34, 'IT01- CCS102 - COMPUTER PROGRAMMING 1 - Q4', 'Which of the following operator returns the size of a data type in C#?', 'Which of the following operator returns the size of a data type in C#?', 7, 90, 1, 6, 22, '2019-08-31 22:09:24', '2019-08-31 22:09:24'),
(107, 2, 289, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q33', 'A number of the form 213ab, where a and b are digits, has a reminder less than 10 when divided by 100. The sum of all the digits in the above number is equal to 13. Find the digit b.', 'A number of the form 213ab, where a and b are digits, has a reminder less than 10 when divided by 100. The sum of all the digits in the above number is equal to 13. Find the digit b.', 7, 92, 1, 6, 43, '2019-08-31 22:09:24', '2019-08-31 22:09:24'),
(108, 2, 68, 'Describing two-dimensional motion with vectors', 'A golfer hits a golf ball upwards at an angle of 75°, degree with the horizontal. We can ignore air resistance.\n\n[[#img22]]\n\nWhich graph best describes the golf ball\'s vertical displacement over time?\n\nAssume the origin of the coordinate system to be the point on the ground where the ball was initially at rest.', 'A golfer hits a golf ball upwards at an angle of 75°, degree with the horizontal. We can ignore air resistance.<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/MYpfYGJo93eMWxPVag4ii0jWIwamFw8EKp4yFlbj.png\" width=\"300\" height=\"150\" /><br />\n<br />\nWhich graph best describes the golf ball\'s vertical displacement over time?<br />\n<br />\nAssume the origin of the coordinate system to be the point on the ground where the ball was initially at rest.', 7, 89, 1, 6, 3, '2019-08-31 22:09:24', '2019-08-31 22:09:24'),
(109, 2, 32, 'CCS102 - COMPUTER PROGRAMMING 1 - Q2', 'Which of the following is a reserved keyword in C#?', 'Which of the following is a reserved keyword in C#?', 7, 90, 1, 6, 21, '2019-08-31 22:09:24', '2019-08-31 22:09:24'),
(110, 2, 205, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q5', 'For ___________, code used by Android is not open source.', 'For ___________, code used by Android is not open source.', 7, 125, 1, 6, 90, '2019-08-31 22:09:24', '2019-08-31 22:09:24'),
(111, 2, 150, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q10', 'The intersection of the sets {1, 2, 5} and {1, 2, 6} is the set _____________.', 'The intersection of the sets {1, 2, 5} and {1, 2, 6} is the set _____________.', 7, 96, 1, 6, 74, '2019-08-31 22:09:24', '2019-08-31 22:09:24'),
(112, 2, 1, 'Solving for basic equation - Q1', 'solve for x:\n2x + 3 = 5', 'solve for x:<br />\n2x + 3 = 5', 7, 92, 1, 6, 36, '2019-08-31 22:09:24', '2019-08-31 22:09:24'),
(113, 2, 160, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q20', 'The shaded area of figure is best described by\n\n[[#img32]]', 'The shaded area of figure is best described by<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/5iL0Nsol7VkygnPftlQm5guoA5NqiGISBGevRke8.jpeg\" width=\"300\" height=\"150\" />', 7, 96, 3, 6, 83, '2019-08-31 22:09:24', '2019-08-31 22:09:24'),
(114, 2, 252, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q28', 'What is bean class in android?', 'What is bean class in android?', 7, 125, 3, 6, 99, '2019-08-31 22:09:24', '2019-08-31 22:09:24'),
(115, 2, 138, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q20', 'A method_____an exception when that method detects that a problem has occured.', 'A method_____an exception when that method detects that a problem has occured.', 7, 95, 2, 6, 65, '2019-08-31 22:09:25', '2019-08-31 22:09:25'),
(116, 2, 31, 'Order of operation - Q1', 'What is the output of the following code?\n\n[[#code14]]', 'What is the output of the following code?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">double x = 2;<br />\ndouble y = 3;<br />\ndouble z = 5;<br />\n<br />\ndouble output = x + x * y + (x + 2 * z);<br />\n<br />\nSystem.out.println(output);</code></pre>', 7, 90, 1, 6, 20, '2019-08-31 22:09:25', '2019-08-31 22:09:25'),
(117, 2, 277, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q26', 'Which of the following will result from compiling this code, assuming that all other code for your form works properly?\n\n[[#code27]]', 'Which of the following will result from compiling this code, assuming that all other code for your form works properly?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">csharp</span></div><pre><code class=\"language-csharp\">try<br />\n{<br />\n  //Write code to allocate some resources<br />\n}<br />\nfinally<br />\n{<br />\n  //Write code to Dispose all allocated resources<br />\n}</code></pre>', 7, 95, 3, 6, 66, '2019-08-31 22:09:25', '2019-08-31 22:09:25'),
(118, 2, 89, 'CCS101 - INTRODUCTION TO COMPUTING - Q5', 'A memory management technique that uses hard drive space as additional RAM.', 'A memory management technique that uses hard drive space as additional RAM.', 7, 89, 1, 6, 2, '2019-08-31 22:09:25', '2019-08-31 22:09:25'),
(119, 2, 50, 'CCS102 - COMPUTER PROGRAMMING Q20', 'What happens when thread\'s yield() method is called?', 'What happens when thread\'s yield() method is called?', 7, 90, 2, 6, 28, '2019-08-31 22:09:25', '2019-08-31 22:09:25'),
(120, 2, 244, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q20', 'To update contents of content provider using curser and commit you need to call _______________.', 'To update contents of content provider using curser and commit you need to call _______________.', 7, 125, 2, 6, 95, '2019-08-31 22:09:25', '2019-08-31 22:09:25'),
(121, 2, 207, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q7', 'ABD stands for', 'ABD stands for', 7, 125, 1, 6, 88, '2019-08-31 22:09:25', '2019-08-31 22:09:25'),
(122, 2, 40, 'CCS102 - COMPUTER PROGRAMMING 1 Q10', 'Static binding uses which information for binding?', 'Static binding uses which information for binding?', 7, 90, 1, 6, 23, '2019-08-31 22:09:25', '2019-08-31 22:09:25'),
(123, 2, 76, 'CCS101 - INTRODUCTION TO COMPUTING _ Q21', '_______ is a duplicate copy of data or other computer content for use in the event that the original version is destroyed.', '_______ is a duplicate copy of data or other computer content for use in the event that the original version is destroyed.', 7, 89, 2, 6, 13, '2019-08-31 22:09:25', '2019-08-31 22:09:25'),
(124, 2, 147, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q7', 'The set of positive integers is _____________.', 'The set of positive integers is _____________.', 7, 96, 1, 6, 70, '2019-08-31 22:09:25', '2019-08-31 22:09:25'),
(125, 2, 248, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q24', 'What is the use of content provider in android?', 'What is the use of content provider in android?', 7, 125, 2, 6, 97, '2019-08-31 22:09:25', '2019-08-31 22:09:25'),
(126, 2, 124, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q6', 'This data type stores the address of the value which means that they refer to a memory location.', 'This data type stores the address of the value which means that they refer to a memory location.', 7, 95, 1, 6, 52, '2019-08-31 22:09:25', '2019-08-31 22:09:25'),
(127, 2, 78, 'CCS101 - INTRODUCTION TO COMPUTING -  Q19', 'This coding system is designed to support international languages like Chinese and Japanese.', 'This coding system is designed to support international languages like Chinese and Japanese.', 7, 89, 3, 6, 17, '2019-08-31 22:09:25', '2019-08-31 22:09:25'),
(128, 2, 72, 'CCS101 - INTRODUCTION TO COMPUTING - Q25', 'What type of software is a screen saver?', 'What type of software is a screen saver?', 7, 89, 2, 6, 12, '2019-08-31 22:09:25', '2019-08-31 22:09:25'),
(129, 2, 42, 'CCS102 - COMPUTER PROGRAMMING 1 Q12', 'Which of the following is not a keyword in java?', 'Which of the following is not a keyword in java?', 7, 90, 1, 6, 18, '2019-08-31 22:09:25', '2019-08-31 22:09:25'),
(130, 2, 145, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q5', 'What is the Cartesian product of A = {1, 2} and B = {a, b}?', 'What is the Cartesian product of A = {1, 2} and B = {a, b}?', 7, 96, 2, 6, 78, '2019-08-31 22:09:25', '2019-08-31 22:09:25'),
(131, 2, 136, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q18', 'Private Button print = new button();', 'Private Button print = new button();', 7, 95, 2, 6, 61, '2019-08-31 22:09:25', '2019-08-31 22:09:25'),
(132, 2, 104, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q14', 'What is the result when you put the expression x<sup>2</sup> +10x+41 into vertex form by completing the square ?', 'What is the result when you put the expression x<sup>2</sup> +10x+41 into vertex form by completing the square ?', 7, 92, 3, 6, 51, '2019-08-31 22:09:25', '2019-08-31 22:09:25'),
(133, 2, 278, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q27', 'What will be the output of the following code?\n\n[[#code28]]', 'What will be the output of the following code?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">csharp</span></div><pre><code class=\"language-csharp\">try<br />\n{<br />\n  int num = 100;<br />\n  int den = 0;<br />\n  try<br />\n  {<br />\n    MessageBox.Show(\"Message1\");<br />\n    int res = num/den;<br />\n    MessageBox.Show(\"Message2\");<br />\n  }<br />\n  catch(ArithmeticException ae)<br />\n  {<br />\n    MessageBox.Show(\"Message3\");<br />\n  }<br />\n  MessageBox.Show(\"Message4\");<br />\n}</code></pre>', 7, 95, 3, 6, 68, '2019-08-31 22:09:25', '2019-08-31 22:09:25'),
(134, 2, 142, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q2', 'The set O of odd positive integers less than 10 can be expressed by _____________.', 'The set O of odd positive integers less than 10 can be expressed by _____________.', 7, 96, 1, 6, 76, '2019-08-31 22:09:25', '2019-08-31 22:09:25'),
(135, 2, 137, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q19', 'Polymorphism occurs when the methods of the child class.', 'Polymorphism occurs when the methods of the child class.', 7, 95, 2, 6, 62, '2019-08-31 22:09:25', '2019-08-31 22:09:25'),
(136, 2, 113, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q23', 'Five different books (A, B, C, D and E) are to be arranged on a shelf. Books C and D are to be arranged first and second starting from the right of the shelf. The number of different orders in which books A, B and E may be arranged is', 'Five different books (A, B, C, D and E) are to be arranged on a shelf. Books C and D are to be arranged first and second starting from the right of the shelf. The number of different orders in which books A, B and E may be arranged is', 7, 92, 2, 6, 48, '2019-08-31 22:09:25', '2019-08-31 22:09:25'),
(137, 2, 57, 'CCS102 - COMPUTER PROGRAMMING 1 Q27', 'Which of these is necessary to specify at time of array initialization?', 'Which of these is necessary to specify at time of array initialization?', 7, 90, 2, 6, 30, '2019-08-31 22:09:25', '2019-08-31 22:09:25'),
(138, 2, 93, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q3', 'If 2x - 8 ≥ 2, then', 'If 2x - 8 ≥ 2, then', 7, 92, 1, 6, 39, '2019-08-31 22:09:25', '2019-08-31 22:09:25'),
(139, 2, 156, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q16', 'If A has 4 elements B has 8 elements then the minimum and maximum number of elements in A U B are respectively', 'If A has 4 elements B has 8 elements then the minimum and maximum number of elements in A U B are respectively', 7, 96, 1, 6, 75, '2019-08-31 22:09:25', '2019-08-31 22:09:25'),
(140, 2, 219, 'Computer Hardware - Q3', 'A device that enables a computer to communicate over telephone lines.', 'A device that enables a computer to communicate over telephone lines.', 7, 89, 1, 6, 1, '2019-08-31 22:09:25', '2019-08-31 22:09:25'),
(141, 2, 119, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q1', 'This is a repetition control stricture that allows you to efficiently write a loop that needs to execute a specific number of times.', 'This is a repetition control stricture that allows you to efficiently write a loop that needs to execute a specific number of times.', 7, 95, 1, 6, 57, '2019-08-31 22:09:25', '2019-08-31 22:09:25'),
(142, 2, 129, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q11', 'A control similar to an ordinary label having an underline and resembles a link on a web page.', 'A control similar to an ordinary label having an underline and resembles a link on a web page.', 7, 95, 1, 6, 54, '2019-08-31 22:09:25', '2019-08-31 22:09:25'),
(143, 2, 79, 'CCS101 - INTRODUCTION TO COMPUTING -Q18', 'Which of the following is/are not part of the CPU?', 'Which of the following is/are not part of the CPU?', 7, 89, 3, 6, 16, '2019-08-31 22:09:25', '2019-08-31 22:09:25'),
(144, 2, 116, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q26', 'If f(x) is an odd function, then | f(x) | is', 'If f(x) is an odd function, then | f(x) | is', 7, 92, 2, 6, 44, '2019-08-31 22:09:25', '2019-08-31 22:09:25'),
(145, 2, 148, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q8', 'What is the Cardinality of the Power set of the set {0, 1, 2}.', 'What is the Cardinality of the Power set of the set {0, 1, 2}.', 7, 96, 1, 6, 72, '2019-08-31 22:09:25', '2019-08-31 22:09:25'),
(146, 2, 215, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q15', 'Which is the latest mobile version of android?', 'Which is the latest mobile version of android?', 7, 125, 1, 6, 91, '2019-08-31 22:09:25', '2019-08-31 22:09:25'),
(147, 2, 267, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q30', 'A floor function map a real number to :', 'A floor function map a real number to :', 7, 96, 3, 6, 84, '2019-08-31 22:09:25', '2019-08-31 22:09:25'),
(148, 2, 132, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q14', 'C# treats the multiple catch statements like cases in a _____________ statement.', 'C# treats the multiple catch statements like cases in a _____________ statement.', 7, 95, 1, 6, 58, '2019-08-31 22:09:25', '2019-08-31 22:09:25'),
(149, 2, 202, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q2', 'What is android?', 'What is android?', 7, 125, 1, 6, 86, '2019-08-31 22:09:25', '2019-08-31 22:09:25'),
(150, 2, 127, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q9', 'Commonly used  control to execute commansd when it is clicked.', 'Commonly used  control to execute commansd when it is clicked.', 7, 95, 1, 6, 60, '2019-08-31 22:09:26', '2019-08-31 22:09:26'),
(151, 2, 286, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q30', 'The probability that an electronic device produced by a company does not function properly is equal to 0.1. If 10 devices are bought, then the probability, to the nearest thousandth, that 7 devices function properly is', 'The probability that an electronic device produced by a company does not function properly is equal to 0.1. If 10 devices are bought, then the probability, to the nearest thousandth, that 7 devices function properly is', 7, 92, 3, 6, 49, '2019-08-31 22:09:26', '2019-08-31 22:09:26'),
(152, 2, 92, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q2', 'Solve the inequality \n4x + 8 > 5x +9', 'Solve the inequality <br />\n4x + 8 > 5x +9', 7, 92, 1, 6, 37, '2019-08-31 22:09:26', '2019-08-31 22:09:26');
INSERT INTO `answer_sheet_test_questions` (`id`, `answer_sheet_id`, `test_question_id`, `title`, `body`, `body_html`, `student_outcome_id`, `course_id`, `difficulty_level_id`, `performance_criteria_id`, `pos_order`, `created_at`, `updated_at`) VALUES
(153, 2, 111, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q21', 'For x greater than or equal to zero and less than or equal to 2 π, sin x and cos x are both decreasing on the intervals', 'For x greater than or equal to zero and less than or equal to 2 π, sin x and cos x are both decreasing on the intervals', 7, 92, 2, 6, 47, '2019-08-31 22:09:26', '2019-08-31 22:09:26'),
(154, 2, 122, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q4', 'These operators take two operands, such as arithmetic operators (+,-,*,/).', 'These operators take two operands, such as arithmetic operators (+,-,*,/).', 7, 95, 1, 6, 53, '2019-08-31 22:09:26', '2019-08-31 22:09:26'),
(155, 2, 151, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q11', 'Two sets are called disjoint if there _____________ is the empty set.', 'Two sets are called disjoint if there _____________ is the empty set.', 7, 96, 1, 6, 73, '2019-08-31 22:09:26', '2019-08-31 22:09:26'),
(156, 2, 87, 'CCS101 - INTRODUCTION TO COMPUTING - Q8', '____________ are the four general operations that are performed in each machine cycle.', '____________ are the four general operations that are performed in each machine cycle.', 7, 89, 2, 6, 14, '2019-08-31 22:09:26', '2019-08-31 22:09:26'),
(157, 2, 203, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q3', 'Android doesn\'t  support which format?', 'Android doesn\'t  support which format?', 7, 125, 1, 6, 87, '2019-08-31 22:09:26', '2019-08-31 22:09:26'),
(158, 2, 162, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q22', 'If n(A)=10 , n(B)=30,n(C)=50 and if set A,B,C are pairwise disjoint then which of the following is correct?', 'If n(A)=10 , n(B)=30,n(C)=50 and if set A,B,C are pairwise disjoint then which of the following is correct?', 7, 96, 2, 6, 79, '2019-08-31 22:09:26', '2019-08-31 22:09:26'),
(159, 2, 82, 'CCS101 - INTRODUCTION TO COMPUTING - Q15', '10111 is the two\'s complement representation of', '10111 is the two\'s complement representation of', 7, 89, 1, 6, 5, '2019-08-31 22:09:26', '2019-08-31 22:09:26'),
(160, 2, 211, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q11', 'Web browser available in android based on', 'Web browser available in android based on', 7, 125, 1, 6, 85, '2019-08-31 22:09:26', '2019-08-31 22:09:26'),
(161, 2, 114, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q24', 'The mean of a data set is equal to 10 and its standard deviation is equal to 1. If we add 5 to each data value, then the mean and standard deviation become', 'The mean of a data set is equal to 10 and its standard deviation is equal to 1. If we add 5 to each data value, then the mean and standard deviation become', 7, 92, 2, 6, 45, '2019-08-31 22:09:26', '2019-08-31 22:09:26'),
(162, 2, 90, 'CCS101 - INTRODUCTION TO COMPUTING - Q4', 'A letter, digit, or special character is represented by a code in a ___.', 'A letter, digit, or special character is represented by a code in a ___.', 7, 89, 3, 6, 15, '2019-08-31 22:09:26', '2019-08-31 22:09:26'),
(163, 2, 52, 'CCS102 - COMPUTER PROGRAMMING 1 Q22', 'What is the output of this program?\n\n[[#code19]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class box <br />\n    {<br />\n        int width;<br />\n        int height;<br />\n        int length;<br />\n    } <br />\n    class mainclass <br />\n    {<br />\n        public static void main(String args[]) <br />\n        {        <br />\n             box obj = new box();<br />\n             obj.width = 10;<br />\n             obj.height = 2;<br />\n             obj.length = 10;<br />\n             int y = obj.width * obj.height * obj.length; <br />\n             System.out.print(y);<br />\n        } <br />\n    }</code></pre>', 7, 90, 3, 6, 32, '2019-08-31 22:09:26', '2019-08-31 22:09:26'),
(164, 2, 204, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q4', 'Android supports which features.', 'Android supports which features.', 7, 125, 1, 6, 92, '2019-08-31 22:09:26', '2019-08-31 22:09:26'),
(165, 2, 59, 'CCS102 - COMPUTER PROGRAMMING 1 Q29', 'What is the output of this program?\n\n[[#code24]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class evaluate <br />\n    {<br />\n        public static void main(String args[]) <br />\n            {<br />\n	        int arr[] = new int[] {0 , 1, 2, 3, 4, 5, 6, 7, 8, 9};<br />\n	        int n = 6;<br />\n                n = arr[arr[n] / 2];<br />\n	        System.out.println(arr[n] / 2);<br />\n            } <br />\n    }</code></pre>', 7, 90, 3, 6, 34, '2019-08-31 22:09:26', '2019-08-31 22:09:26'),
(166, 2, 107, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q17', 'If Log <sub>4 </sub>(x) = 12, then log 2 (x / 4) is equal to', 'If Log <sub>4 </sub>(x) = 12, then log 2 (x / 4) is equal to', 7, 92, 1, 6, 40, '2019-08-31 22:09:26', '2019-08-31 22:09:26'),
(167, 2, 121, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q3', 'These are additional operators used to return Boolean values.', 'These are additional operators used to return Boolean values.', 7, 95, 1, 6, 55, '2019-08-31 22:09:26', '2019-08-31 22:09:26'),
(168, 2, 256, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q32', 'What is the difference between content values and cursor in android SQlite?', 'What is the difference between content values and cursor in android SQlite?', 7, 125, 3, 6, 98, '2019-08-31 22:09:26', '2019-08-31 22:09:26'),
(169, 2, 243, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q19', 'Android provides a few standard themes, listed in ________.', 'Android provides a few standard themes, listed in ________.', 7, 125, 2, 6, 96, '2019-08-31 22:09:26', '2019-08-31 22:09:26'),
(170, 2, 283, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q32', 'You have a TextBox control and a Help button that the user can press to get help on allowable values. You validate the data entered by the user in the TextBox control. If the user enters an invalid value, you set the focus back in the control using the Cancel property of the CancelEventArgs. A user reports that once he enters invalid data in the text box, he cannot click the Help button. What should you do to correct the problem?', 'You have a TextBox control and a Help button that the user can press to get help on allowable values. You validate the data entered by the user in the TextBox control. If the user enters an invalid value, you set the focus back in the control using the Cancel property of the CancelEventArgs. A user reports that once he enters invalid data in the text box, he cannot click the Help button. What should you do to correct the problem?', 7, 95, 3, 6, 67, '2019-08-31 22:09:26', '2019-08-31 22:09:26'),
(171, 2, 38, 'CCS102 - COMPUTER PROGRAMMING 1 - Q8', 'Which of the following is true about try block in C#?', 'Which of the following is true about try block in C#?', 7, 90, 1, 6, 19, '2019-08-31 22:09:26', '2019-08-31 22:09:26'),
(172, 2, 48, 'CCS102 - COMPUTER PROGRAMMING 1 Q18', 'What is JRE?', 'What is JRE?', 7, 90, 2, 6, 29, '2019-08-31 22:09:26', '2019-08-31 22:09:26'),
(173, 2, 97, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q7', 'The expression (3i - 2)(i + 1) - 7 can be simplified to which of the following expressions?', 'The expression (3i - 2)(i + 1) - 7 can be simplified to which of the following expressions?', 7, 92, 2, 6, 46, '2019-08-31 22:09:26', '2019-08-31 22:09:26'),
(174, 2, 74, 'CCS101 - INTRODUCTION TO COMPUTING - Q23', 'An electronic tool that allows information to be input, processed, and output.', 'An electronic tool that allows information to be input, processed, and output.', 7, 89, 1, 6, 6, '2019-08-31 22:09:26', '2019-08-31 22:09:26'),
(175, 2, 66, 'Binary to decimal conversion 1', 'Convert 10100011 from binary to decimal.', 'Convert 10100011 from binary to decimal.', 7, 89, 1, 6, 8, '2019-08-31 22:09:26', '2019-08-31 22:09:26'),
(176, 2, 143, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q3', 'Power set of empty set has exactly _________ subset.', 'Power set of empty set has exactly _________ subset.', 7, 96, 1, 6, 77, '2019-08-31 22:09:26', '2019-08-31 22:09:26'),
(177, 2, 223, 'CC101 - INTRODUCTION TO COMPUTING - Q11', 'The sum of 11101 + 10111 equals ________.', 'The sum of 11101 + 10111 equals ________.', 7, 89, 2, 6, 10, '2019-08-31 22:09:26', '2019-08-31 22:09:26'),
(178, 2, 260, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q23', 'In the given figure the if n(A)=20,n(U)=50,n(C)=10 and n(A∩B)=5 then n(B)=? \n\n[[#img34]]', 'In the given figure the if n(A)=20,n(U)=50,n(C)=10 and n(A∩B)=5 then n(B)=? <br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/23B9WIeQ00wE4pw7nsRG6le8KJWkZ1jI9HG7nYv3.jpeg\" width=\"300\" height=\"150\" />', 7, 96, 2, 6, 80, '2019-08-31 22:09:26', '2019-08-31 22:09:26'),
(179, 2, 33, 'IT01- CCS102 - COMPUTER PROGRAMMING 1 - Q3', 'Which of the following converts a type to a double type in C#?', 'Which of the following converts a type to a double type in C#?', 7, 90, 1, 6, 26, '2019-08-31 22:09:26', '2019-08-31 22:09:26'),
(180, 2, 220, 'Computer Hardware - Q2', 'An input device that reads printed text and graphics and transfers them to a computer in digital form.', 'An input device that reads printed text and graphics and transfers them to a computer in digital form.', 7, 89, 1, 6, 7, '2019-08-31 22:09:26', '2019-08-31 22:09:26'),
(181, 2, 212, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q12', 'Which company bought android?', 'Which company bought android?', 7, 125, 1, 6, 93, '2019-08-31 22:09:26', '2019-08-31 22:09:26'),
(182, 2, 95, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q5', 'What is the square root of -144?', 'What is the square root of -144?', 7, 92, 1, 6, 38, '2019-08-31 22:09:26', '2019-08-31 22:09:26'),
(183, 2, 112, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q22', 'A school committee consists of 2 teachers and 4 students. The number of different committees that can be formed from 5 teachers and 10 students is', 'A school committee consists of 2 teachers and 4 students. The number of different committees that can be formed from 5 teachers and 10 students is', 7, 92, 1, 6, 42, '2019-08-31 22:09:26', '2019-08-31 22:09:26'),
(184, 2, 214, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q14', 'Android is based on which kernel?', 'Android is based on which kernel?', 7, 125, 1, 6, 89, '2019-08-31 22:09:26', '2019-08-31 22:09:26'),
(185, 2, 285, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q29', 'The period of 2 sin x cos x is', 'The period of 2 sin x cos x is', 7, 92, 1, 6, 35, '2019-08-31 22:09:26', '2019-08-31 22:09:26'),
(186, 2, 140, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q22', 'A _______ is an identifier that denotes a storage location.', 'A _______ is an identifier that denotes a storage location.', 7, 95, 2, 6, 63, '2019-08-31 22:09:26', '2019-08-31 22:09:26'),
(187, 2, 270, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q33', 'In the given AP series the term at position 11 would be\n5, 8, 11, 14, 17, 20………50.', 'In the given AP series the term at position 11 would be<br />\n5, 8, 11, 14, 17, 20………50.', 7, 96, 3, 6, 82, '2019-08-31 22:09:27', '2019-08-31 22:09:27'),
(188, 2, 126, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q8', 'A control used to show a list of strings which you can select.', 'A control used to show a list of strings which you can select.', 7, 95, 1, 6, 56, '2019-08-31 22:09:27', '2019-08-31 22:09:27'),
(189, 2, 144, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q4', 'What is the cardinality of the set of odd positive integers less than 10?', 'What is the cardinality of the set of odd positive integers less than 10?', 7, 96, 1, 6, 71, '2019-08-31 22:09:27', '2019-08-31 22:09:27'),
(190, 2, 155, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q15', 'Let the set A is {1, 2, 3} and B is {2, 3, 4}. Then number of elements in A U B is _____.', 'Let the set A is {1, 2, 3} and B is {2, 3, 4}. Then number of elements in A U B is _____.', 7, 96, 1, 6, 69, '2019-08-31 22:09:27', '2019-08-31 22:09:27'),
(191, 2, 51, 'CCS102 - COMPUTER PROGRAMMING 1 Q21', 'What is the output of this program?\n\n[[#code18]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class main_class <br />\n    {<br />\n        public static void main(String args[])<br />\n        {<br />\n            int x = 9;<br />\n            if (x == 9) <br />\n            { <br />\n                int x = 8;<br />\n                System.out.println(x);<br />\n            }<br />\n        } <br />\n    }</code></pre>', 7, 90, 2, 6, 27, '2019-08-31 22:09:27', '2019-08-31 22:09:27'),
(192, 2, 246, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q22', 'Which of  the following holds Java source code for the application?', 'Which of  the following holds Java source code for the application?', 7, 125, 2, 6, 94, '2019-08-31 22:09:27', '2019-08-31 22:09:27'),
(193, 2, 39, 'CCS102 - COMPUTER PROGRAMMING 1 Q9', 'What of the following is the default value of an instance variable?', 'What of the following is the default value of an instance variable?', 7, 90, 1, 6, 25, '2019-08-31 22:09:27', '2019-08-31 22:09:27'),
(194, 2, 99, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q9', 'Evaluate the following:\n \nlog<sub>4</sub> 25', 'Evaluate the following:<br />\n <br />\nlog<sub>4</sub> 25', 7, 92, 1, 6, 41, '2019-08-31 22:09:27', '2019-08-31 22:09:27'),
(195, 2, 275, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q24', 'How should you arrange catch blocks?', 'How should you arrange catch blocks?', 7, 95, 2, 6, 64, '2019-08-31 22:09:27', '2019-08-31 22:09:27'),
(196, 2, 61, 'CCS102 - COMPUTER PROGRAMMING 1 Q31', 'Where is array stored in memory?', 'Where is array stored in memory?', 7, 90, 2, 6, 31, '2019-08-31 22:09:27', '2019-08-31 22:09:27'),
(197, 2, 131, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q13', 'A method of MessageBox class that allows you to call a message box for prompting user with messages and information.', 'A method of MessageBox class that allows you to call a message box for prompting user with messages and information.', 7, 95, 1, 6, 59, '2019-08-31 22:09:27', '2019-08-31 22:09:27'),
(198, 2, 41, 'CCS102 - COMPUTER PROGRAMMING 1 Q11', 'What is correct syntax for main method of a java class?', 'What is correct syntax for main method of a java class?', 7, 90, 1, 6, 24, '2019-08-31 22:09:27', '2019-08-31 22:09:27'),
(199, 2, 149, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q9', 'The union of the sets {1, 2, 5} and {1, 2, 6} is the set _______________.', 'The union of the sets {1, 2, 5} and {1, 2, 6} is the set _______________.', 7, 96, 2, 6, 81, '2019-08-31 22:09:27', '2019-08-31 22:09:27'),
(200, 2, 70, 'Projectile motion 2', 'An adventurous cliff jumper runs horizontally off a cliff. We can ignore air resistance.\n\n[[#img27]]\n\nWhich diagram best describes the horizontal velocity vectors and trajectory during the person’s fall?\n\nAssume the origin of the coordinate system to be the cliff edge.\n\nA red dot represents a vector of zero magnitude.', 'An adventurous cliff jumper runs horizontally off a cliff. We can ignore air resistance.<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/PgCOEtvEENxNaqgGLMWLrysCTt8GwyXUqH8p2sz7.png\" width=\"200\" height=\"200\" /><br />\n<br />\nWhich diagram best describes the horizontal velocity vectors and trajectory during the person’s fall?<br />\n<br />\nAssume the origin of the coordinate system to be the cliff edge.<br />\n<br />\nA red dot represents a vector of zero magnitude.', 7, 89, 1, 6, 4, '2019-08-31 22:09:27', '2019-08-31 22:09:27'),
(201, 3, 202, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q2', 'What is android?', 'What is android?', 7, 125, 1, 6, 86, '2019-09-01 23:29:57', '2019-09-01 23:29:57'),
(202, 3, 95, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q5', 'What is the square root of -144?', 'What is the square root of -144?', 7, 92, 1, 6, 38, '2019-09-01 23:29:57', '2019-09-01 23:29:57'),
(203, 3, 142, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q2', 'The set O of odd positive integers less than 10 can be expressed by _____________.', 'The set O of odd positive integers less than 10 can be expressed by _____________.', 7, 96, 1, 6, 76, '2019-09-01 23:29:57', '2019-09-01 23:29:57'),
(204, 3, 89, 'CCS101 - INTRODUCTION TO COMPUTING - Q5', 'A memory management technique that uses hard drive space as additional RAM.', 'A memory management technique that uses hard drive space as additional RAM.', 7, 89, 1, 6, 2, '2019-09-01 23:29:57', '2019-09-01 23:29:57'),
(205, 3, 111, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q21', 'For x greater than or equal to zero and less than or equal to 2 π, sin x and cos x are both decreasing on the intervals', 'For x greater than or equal to zero and less than or equal to 2 π, sin x and cos x are both decreasing on the intervals', 7, 92, 2, 6, 47, '2019-09-01 23:29:57', '2019-09-01 23:29:57'),
(206, 3, 219, 'Computer Hardware - Q3', 'A device that enables a computer to communicate over telephone lines.', 'A device that enables a computer to communicate over telephone lines.', 7, 89, 1, 6, 1, '2019-09-01 23:29:57', '2019-09-01 23:29:57'),
(207, 3, 32, 'CCS102 - COMPUTER PROGRAMMING 1 - Q2', 'Which of the following is a reserved keyword in C#?', 'Which of the following is a reserved keyword in C#?', 7, 90, 1, 6, 21, '2019-09-01 23:29:57', '2019-09-01 23:29:57'),
(208, 3, 68, 'Describing two-dimensional motion with vectors', 'A golfer hits a golf ball upwards at an angle of 75°, degree with the horizontal. We can ignore air resistance.\n\n[[#img22]]\n\nWhich graph best describes the golf ball\'s vertical displacement over time?\n\nAssume the origin of the coordinate system to be the point on the ground where the ball was initially at rest.', 'A golfer hits a golf ball upwards at an angle of 75°, degree with the horizontal. We can ignore air resistance.<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/MYpfYGJo93eMWxPVag4ii0jWIwamFw8EKp4yFlbj.png\" width=\"300\" height=\"150\" /><br />\n<br />\nWhich graph best describes the golf ball\'s vertical displacement over time?<br />\n<br />\nAssume the origin of the coordinate system to be the point on the ground where the ball was initially at rest.', 7, 89, 1, 6, 3, '2019-09-01 23:29:57', '2019-09-01 23:29:57'),
(209, 3, 225, 'CCS101 - INTRODUCTION TO COMPUTING - Q7', 'Converting (1010111)<sub>2</sub> to base yields which of the following results?', 'Converting (1010111)<sub>2</sub> to base yields which of the following results?', 7, 89, 2, 6, 11, '2019-09-01 23:29:57', '2019-09-01 23:29:57'),
(210, 3, 150, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q10', 'The intersection of the sets {1, 2, 5} and {1, 2, 6} is the set _____________.', 'The intersection of the sets {1, 2, 5} and {1, 2, 6} is the set _____________.', 7, 96, 1, 6, 74, '2019-09-01 23:29:57', '2019-09-01 23:29:57'),
(211, 3, 277, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q26', 'Which of the following will result from compiling this code, assuming that all other code for your form works properly?\n\n[[#code27]]', 'Which of the following will result from compiling this code, assuming that all other code for your form works properly?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">csharp</span></div><pre><code class=\"language-csharp\">try<br />\n{<br />\n  //Write code to allocate some resources<br />\n}<br />\nfinally<br />\n{<br />\n  //Write code to Dispose all allocated resources<br />\n}</code></pre>', 7, 95, 3, 6, 66, '2019-09-01 23:29:57', '2019-09-01 23:29:57'),
(212, 3, 286, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q30', 'The probability that an electronic device produced by a company does not function properly is equal to 0.1. If 10 devices are bought, then the probability, to the nearest thousandth, that 7 devices function properly is', 'The probability that an electronic device produced by a company does not function properly is equal to 0.1. If 10 devices are bought, then the probability, to the nearest thousandth, that 7 devices function properly is', 7, 92, 3, 6, 49, '2019-09-01 23:29:57', '2019-09-01 23:29:57'),
(213, 3, 40, 'CCS102 - COMPUTER PROGRAMMING 1 Q10', 'Static binding uses which information for binding?', 'Static binding uses which information for binding?', 7, 90, 1, 6, 23, '2019-09-01 23:29:57', '2019-09-01 23:29:57'),
(214, 3, 278, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q27', 'What will be the output of the following code?\n\n[[#code28]]', 'What will be the output of the following code?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">csharp</span></div><pre><code class=\"language-csharp\">try<br />\n{<br />\n  int num = 100;<br />\n  int den = 0;<br />\n  try<br />\n  {<br />\n    MessageBox.Show(\"Message1\");<br />\n    int res = num/den;<br />\n    MessageBox.Show(\"Message2\");<br />\n  }<br />\n  catch(ArithmeticException ae)<br />\n  {<br />\n    MessageBox.Show(\"Message3\");<br />\n  }<br />\n  MessageBox.Show(\"Message4\");<br />\n}</code></pre>', 7, 95, 3, 6, 68, '2019-09-01 23:29:58', '2019-09-01 23:29:58'),
(215, 3, 66, 'Binary to decimal conversion 1', 'Convert 10100011 from binary to decimal.', 'Convert 10100011 from binary to decimal.', 7, 89, 1, 6, 8, '2019-09-01 23:29:58', '2019-09-01 23:29:58'),
(216, 3, 122, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q4', 'These operators take two operands, such as arithmetic operators (+,-,*,/).', 'These operators take two operands, such as arithmetic operators (+,-,*,/).', 7, 95, 1, 6, 53, '2019-09-01 23:29:58', '2019-09-01 23:29:58'),
(217, 3, 143, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q3', 'Power set of empty set has exactly _________ subset.', 'Power set of empty set has exactly _________ subset.', 7, 96, 1, 6, 77, '2019-09-01 23:29:58', '2019-09-01 23:29:58'),
(218, 3, 129, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q11', 'A control similar to an ordinary label having an underline and resembles a link on a web page.', 'A control similar to an ordinary label having an underline and resembles a link on a web page.', 7, 95, 1, 6, 54, '2019-09-01 23:29:58', '2019-09-01 23:29:58'),
(219, 3, 70, 'Projectile motion 2', 'An adventurous cliff jumper runs horizontally off a cliff. We can ignore air resistance.\n\n[[#img27]]\n\nWhich diagram best describes the horizontal velocity vectors and trajectory during the person’s fall?\n\nAssume the origin of the coordinate system to be the cliff edge.\n\nA red dot represents a vector of zero magnitude.', 'An adventurous cliff jumper runs horizontally off a cliff. We can ignore air resistance.<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/PgCOEtvEENxNaqgGLMWLrysCTt8GwyXUqH8p2sz7.png\" width=\"200\" height=\"200\" /><br />\n<br />\nWhich diagram best describes the horizontal velocity vectors and trajectory during the person’s fall?<br />\n<br />\nAssume the origin of the coordinate system to be the cliff edge.<br />\n<br />\nA red dot represents a vector of zero magnitude.', 7, 89, 1, 6, 4, '2019-09-01 23:29:58', '2019-09-01 23:29:58'),
(220, 3, 211, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q11', 'Web browser available in android based on', 'Web browser available in android based on', 7, 125, 1, 6, 85, '2019-09-01 23:29:58', '2019-09-01 23:29:58'),
(221, 3, 207, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q7', 'ABD stands for', 'ABD stands for', 7, 125, 1, 6, 88, '2019-09-01 23:29:58', '2019-09-01 23:29:58'),
(222, 3, 112, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q22', 'A school committee consists of 2 teachers and 4 students. The number of different committees that can be formed from 5 teachers and 10 students is', 'A school committee consists of 2 teachers and 4 students. The number of different committees that can be formed from 5 teachers and 10 students is', 7, 92, 1, 6, 42, '2019-09-01 23:29:58', '2019-09-01 23:29:58'),
(223, 3, 99, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q9', 'Evaluate the following:\n \nlog<sub>4</sub> 25', 'Evaluate the following:<br />\n <br />\nlog<sub>4</sub> 25', 7, 92, 1, 6, 41, '2019-09-01 23:29:58', '2019-09-01 23:29:58'),
(224, 3, 147, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q7', 'The set of positive integers is _____________.', 'The set of positive integers is _____________.', 7, 96, 1, 6, 70, '2019-09-01 23:29:58', '2019-09-01 23:29:58'),
(225, 3, 260, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q23', 'In the given figure the if n(A)=20,n(U)=50,n(C)=10 and n(A∩B)=5 then n(B)=? \n\n[[#img34]]', 'In the given figure the if n(A)=20,n(U)=50,n(C)=10 and n(A∩B)=5 then n(B)=? <br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/23B9WIeQ00wE4pw7nsRG6le8KJWkZ1jI9HG7nYv3.jpeg\" width=\"300\" height=\"150\" />', 7, 96, 2, 6, 80, '2019-09-01 23:29:58', '2019-09-01 23:29:58'),
(226, 3, 144, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q4', 'What is the cardinality of the set of odd positive integers less than 10?', 'What is the cardinality of the set of odd positive integers less than 10?', 7, 96, 1, 6, 71, '2019-09-01 23:29:58', '2019-09-01 23:29:58'),
(227, 3, 248, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q24', 'What is the use of content provider in android?', 'What is the use of content provider in android?', 7, 125, 2, 6, 97, '2019-09-01 23:29:58', '2019-09-01 23:29:58'),
(228, 3, 59, 'CCS102 - COMPUTER PROGRAMMING 1 Q29', 'What is the output of this program?\n\n[[#code24]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class evaluate <br />\n    {<br />\n        public static void main(String args[]) <br />\n            {<br />\n	        int arr[] = new int[] {0 , 1, 2, 3, 4, 5, 6, 7, 8, 9};<br />\n	        int n = 6;<br />\n                n = arr[arr[n] / 2];<br />\n	        System.out.println(arr[n] / 2);<br />\n            } <br />\n    }</code></pre>', 7, 90, 3, 6, 34, '2019-09-01 23:29:58', '2019-09-01 23:29:58'),
(229, 3, 90, 'CCS101 - INTRODUCTION TO COMPUTING - Q4', 'A letter, digit, or special character is represented by a code in a ___.', 'A letter, digit, or special character is represented by a code in a ___.', 7, 89, 3, 6, 15, '2019-09-01 23:29:58', '2019-09-01 23:29:58'),
(230, 3, 107, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q17', 'If Log <sub>4 </sub>(x) = 12, then log 2 (x / 4) is equal to', 'If Log <sub>4 </sub>(x) = 12, then log 2 (x / 4) is equal to', 7, 92, 1, 6, 40, '2019-09-01 23:29:58', '2019-09-01 23:29:58'),
(231, 3, 267, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q30', 'A floor function map a real number to :', 'A floor function map a real number to :', 7, 96, 3, 6, 84, '2019-09-01 23:29:59', '2019-09-01 23:29:59'),
(232, 3, 155, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q15', 'Let the set A is {1, 2, 3} and B is {2, 3, 4}. Then number of elements in A U B is _____.', 'Let the set A is {1, 2, 3} and B is {2, 3, 4}. Then number of elements in A U B is _____.', 7, 96, 1, 6, 69, '2019-09-01 23:29:59', '2019-09-01 23:29:59'),
(233, 3, 127, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q9', 'Commonly used  control to execute commansd when it is clicked.', 'Commonly used  control to execute commansd when it is clicked.', 7, 95, 1, 6, 60, '2019-09-01 23:29:59', '2019-09-01 23:29:59'),
(234, 3, 108, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q18', 'The population of a country increased by an average of 2% per year from 2000 to 2003. If the population of this country was 2 000 000 on December 31, 2003, then the population of this country on January 1, 2000, to the nearest thousand would have been', 'The population of a country increased by an average of 2% per year from 2000 to 2003. If the population of this country was 2 000 000 on December 31, 2003, then the population of this country on January 1, 2000, to the nearest thousand would have been', 7, 92, 3, 6, 50, '2019-09-01 23:29:59', '2019-09-01 23:29:59'),
(235, 3, 246, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q22', 'Which of  the following holds Java source code for the application?', 'Which of  the following holds Java source code for the application?', 7, 125, 2, 6, 94, '2019-09-01 23:29:59', '2019-09-01 23:29:59'),
(236, 3, 41, 'CCS102 - COMPUTER PROGRAMMING 1 Q11', 'What is correct syntax for main method of a java class?', 'What is correct syntax for main method of a java class?', 7, 90, 1, 6, 24, '2019-09-01 23:29:59', '2019-09-01 23:29:59'),
(237, 3, 74, 'CCS101 - INTRODUCTION TO COMPUTING - Q23', 'An electronic tool that allows information to be input, processed, and output.', 'An electronic tool that allows information to be input, processed, and output.', 7, 89, 1, 6, 6, '2019-09-01 23:29:59', '2019-09-01 23:29:59'),
(238, 3, 289, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q33', 'A number of the form 213ab, where a and b are digits, has a reminder less than 10 when divided by 100. The sum of all the digits in the above number is equal to 13. Find the digit b.', 'A number of the form 213ab, where a and b are digits, has a reminder less than 10 when divided by 100. The sum of all the digits in the above number is equal to 13. Find the digit b.', 7, 92, 1, 6, 43, '2019-09-01 23:29:59', '2019-09-01 23:29:59'),
(239, 3, 121, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q3', 'These are additional operators used to return Boolean values.', 'These are additional operators used to return Boolean values.', 7, 95, 1, 6, 55, '2019-09-01 23:29:59', '2019-09-01 23:29:59'),
(240, 3, 203, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q3', 'Android doesn\'t  support which format?', 'Android doesn\'t  support which format?', 7, 125, 1, 6, 87, '2019-09-01 23:29:59', '2019-09-01 23:29:59'),
(241, 3, 116, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q26', 'If f(x) is an odd function, then | f(x) | is', 'If f(x) is an odd function, then | f(x) | is', 7, 92, 2, 6, 44, '2019-09-01 23:29:59', '2019-09-01 23:29:59'),
(242, 3, 1, 'Solving for basic equation - Q1', 'solve for x:\n2x + 3 = 5', 'solve for x:<br />\n2x + 3 = 5', 7, 92, 1, 6, 36, '2019-09-01 23:29:59', '2019-09-01 23:29:59'),
(243, 3, 113, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q23', 'Five different books (A, B, C, D and E) are to be arranged on a shelf. Books C and D are to be arranged first and second starting from the right of the shelf. The number of different orders in which books A, B and E may be arranged is', 'Five different books (A, B, C, D and E) are to be arranged on a shelf. Books C and D are to be arranged first and second starting from the right of the shelf. The number of different orders in which books A, B and E may be arranged is', 7, 92, 2, 6, 48, '2019-09-01 23:29:59', '2019-09-01 23:29:59'),
(244, 3, 34, 'IT01- CCS102 - COMPUTER PROGRAMMING 1 - Q4', 'Which of the following operator returns the size of a data type in C#?', 'Which of the following operator returns the size of a data type in C#?', 7, 90, 1, 6, 22, '2019-09-01 23:29:59', '2019-09-01 23:29:59'),
(245, 3, 285, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q29', 'The period of 2 sin x cos x is', 'The period of 2 sin x cos x is', 7, 92, 1, 6, 35, '2019-09-01 23:29:59', '2019-09-01 23:29:59'),
(246, 3, 76, 'CCS101 - INTRODUCTION TO COMPUTING _ Q21', '_______ is a duplicate copy of data or other computer content for use in the event that the original version is destroyed.', '_______ is a duplicate copy of data or other computer content for use in the event that the original version is destroyed.', 7, 89, 2, 6, 13, '2019-09-01 23:29:59', '2019-09-01 23:29:59'),
(247, 3, 93, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q3', 'If 2x - 8 ≥ 2, then', 'If 2x - 8 ≥ 2, then', 7, 92, 1, 6, 39, '2019-09-01 23:29:59', '2019-09-01 23:29:59'),
(248, 3, 283, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q32', 'You have a TextBox control and a Help button that the user can press to get help on allowable values. You validate the data entered by the user in the TextBox control. If the user enters an invalid value, you set the focus back in the control using the Cancel property of the CancelEventArgs. A user reports that once he enters invalid data in the text box, he cannot click the Help button. What should you do to correct the problem?', 'You have a TextBox control and a Help button that the user can press to get help on allowable values. You validate the data entered by the user in the TextBox control. If the user enters an invalid value, you set the focus back in the control using the Cancel property of the CancelEventArgs. A user reports that once he enters invalid data in the text box, he cannot click the Help button. What should you do to correct the problem?', 7, 95, 3, 6, 67, '2019-09-01 23:29:59', '2019-09-01 23:29:59'),
(249, 3, 223, 'CC101 - INTRODUCTION TO COMPUTING - Q11', 'The sum of 11101 + 10111 equals ________.', 'The sum of 11101 + 10111 equals ________.', 7, 89, 2, 6, 10, '2019-09-01 23:29:59', '2019-09-01 23:29:59'),
(250, 3, 48, 'CCS102 - COMPUTER PROGRAMMING 1 Q18', 'What is JRE?', 'What is JRE?', 7, 90, 2, 6, 29, '2019-09-01 23:29:59', '2019-09-01 23:29:59'),
(251, 3, 160, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q20', 'The shaded area of figure is best described by\n\n[[#img32]]', 'The shaded area of figure is best described by<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/5iL0Nsol7VkygnPftlQm5guoA5NqiGISBGevRke8.jpeg\" width=\"300\" height=\"150\" />', 7, 96, 3, 6, 83, '2019-09-01 23:29:59', '2019-09-01 23:29:59'),
(252, 3, 42, 'CCS102 - COMPUTER PROGRAMMING 1 Q12', 'Which of the following is not a keyword in java?', 'Which of the following is not a keyword in java?', 7, 90, 1, 6, 18, '2019-09-01 23:29:59', '2019-09-01 23:29:59'),
(253, 3, 51, 'CCS102 - COMPUTER PROGRAMMING 1 Q21', 'What is the output of this program?\n\n[[#code18]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class main_class <br />\n    {<br />\n        public static void main(String args[])<br />\n        {<br />\n            int x = 9;<br />\n            if (x == 9) <br />\n            { <br />\n                int x = 8;<br />\n                System.out.println(x);<br />\n            }<br />\n        } <br />\n    }</code></pre>', 7, 90, 2, 6, 27, '2019-09-01 23:29:59', '2019-09-01 23:29:59'),
(254, 3, 215, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q15', 'Which is the latest mobile version of android?', 'Which is the latest mobile version of android?', 7, 125, 1, 6, 91, '2019-09-01 23:29:59', '2019-09-01 23:29:59'),
(255, 3, 162, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q22', 'If n(A)=10 , n(B)=30,n(C)=50 and if set A,B,C are pairwise disjoint then which of the following is correct?', 'If n(A)=10 , n(B)=30,n(C)=50 and if set A,B,C are pairwise disjoint then which of the following is correct?', 7, 96, 2, 6, 79, '2019-09-01 23:29:59', '2019-09-01 23:29:59'),
(256, 3, 148, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q8', 'What is the Cardinality of the Power set of the set {0, 1, 2}.', 'What is the Cardinality of the Power set of the set {0, 1, 2}.', 7, 96, 1, 6, 72, '2019-09-01 23:29:59', '2019-09-01 23:29:59'),
(257, 3, 87, 'CCS101 - INTRODUCTION TO COMPUTING - Q8', '____________ are the four general operations that are performed in each machine cycle.', '____________ are the four general operations that are performed in each machine cycle.', 7, 89, 2, 6, 14, '2019-09-01 23:29:59', '2019-09-01 23:29:59'),
(258, 3, 104, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q14', 'What is the result when you put the expression x<sup>2</sup> +10x+41 into vertex form by completing the square ?', 'What is the result when you put the expression x<sup>2</sup> +10x+41 into vertex form by completing the square ?', 7, 92, 3, 6, 51, '2019-09-01 23:29:59', '2019-09-01 23:29:59'),
(259, 3, 124, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q6', 'This data type stores the address of the value which means that they refer to a memory location.', 'This data type stores the address of the value which means that they refer to a memory location.', 7, 95, 1, 6, 52, '2019-09-01 23:29:59', '2019-09-01 23:29:59'),
(260, 3, 39, 'CCS102 - COMPUTER PROGRAMMING 1 Q9', 'What of the following is the default value of an instance variable?', 'What of the following is the default value of an instance variable?', 7, 90, 1, 6, 25, '2019-09-01 23:29:59', '2019-09-01 23:29:59'),
(261, 3, 137, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q19', 'Polymorphism occurs when the methods of the child class.', 'Polymorphism occurs when the methods of the child class.', 7, 95, 2, 6, 62, '2019-09-01 23:29:59', '2019-09-01 23:29:59'),
(262, 3, 50, 'CCS102 - COMPUTER PROGRAMMING Q20', 'What happens when thread\'s yield() method is called?', 'What happens when thread\'s yield() method is called?', 7, 90, 2, 6, 28, '2019-09-01 23:29:59', '2019-09-01 23:29:59'),
(263, 3, 126, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q8', 'A control used to show a list of strings which you can select.', 'A control used to show a list of strings which you can select.', 7, 95, 1, 6, 56, '2019-09-01 23:29:59', '2019-09-01 23:29:59'),
(264, 3, 244, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q20', 'To update contents of content provider using curser and commit you need to call _______________.', 'To update contents of content provider using curser and commit you need to call _______________.', 7, 125, 2, 6, 95, '2019-09-01 23:29:59', '2019-09-01 23:29:59'),
(265, 3, 97, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q7', 'The expression (3i - 2)(i + 1) - 7 can be simplified to which of the following expressions?', 'The expression (3i - 2)(i + 1) - 7 can be simplified to which of the following expressions?', 7, 92, 2, 6, 46, '2019-09-01 23:29:59', '2019-09-01 23:29:59'),
(266, 3, 33, 'IT01- CCS102 - COMPUTER PROGRAMMING 1 - Q3', 'Which of the following converts a type to a double type in C#?', 'Which of the following converts a type to a double type in C#?', 7, 90, 1, 6, 26, '2019-09-01 23:29:59', '2019-09-01 23:29:59'),
(267, 3, 156, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q16', 'If A has 4 elements B has 8 elements then the minimum and maximum number of elements in A U B are respectively', 'If A has 4 elements B has 8 elements then the minimum and maximum number of elements in A U B are respectively', 7, 96, 1, 6, 75, '2019-09-01 23:30:00', '2019-09-01 23:30:00'),
(268, 3, 138, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q20', 'A method_____an exception when that method detects that a problem has occured.', 'A method_____an exception when that method detects that a problem has occured.', 7, 95, 2, 6, 65, '2019-09-01 23:30:00', '2019-09-01 23:30:00'),
(269, 3, 220, 'Computer Hardware - Q2', 'An input device that reads printed text and graphics and transfers them to a computer in digital form.', 'An input device that reads printed text and graphics and transfers them to a computer in digital form.', 7, 89, 1, 6, 7, '2019-09-01 23:30:00', '2019-09-01 23:30:00'),
(270, 3, 58, 'CCS102 - COMPUTER PROGRAMMING 1 Q28', 'What is the output of this program?\n\n[[#code22]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class array_output <br />\n    {<br />\n        public static void main(String args[]) <br />\n        {<br />\n            int array_variable [] = new int[10];<br />\n	    for (int i = 0; i < 10; ++i) <br />\n            {<br />\n                array_variable[i] = i;<br />\n                System.out.print(array_variable[i] + \" \");<br />\n                i++;<br />\n            }<br />\n        } <br />\n    }</code></pre>', 7, 90, 3, 6, 33, '2019-09-01 23:30:00', '2019-09-01 23:30:00'),
(271, 3, 57, 'CCS102 - COMPUTER PROGRAMMING 1 Q27', 'Which of these is necessary to specify at time of array initialization?', 'Which of these is necessary to specify at time of array initialization?', 7, 90, 2, 6, 30, '2019-09-01 23:30:00', '2019-09-01 23:30:00'),
(272, 3, 149, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q9', 'The union of the sets {1, 2, 5} and {1, 2, 6} is the set _______________.', 'The union of the sets {1, 2, 5} and {1, 2, 6} is the set _______________.', 7, 96, 2, 6, 81, '2019-09-01 23:30:00', '2019-09-01 23:30:00'),
(273, 3, 140, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q22', 'A _______ is an identifier that denotes a storage location.', 'A _______ is an identifier that denotes a storage location.', 7, 95, 2, 6, 63, '2019-09-01 23:30:00', '2019-09-01 23:30:00'),
(274, 3, 52, 'CCS102 - COMPUTER PROGRAMMING 1 Q22', 'What is the output of this program?\n\n[[#code19]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class box <br />\n    {<br />\n        int width;<br />\n        int height;<br />\n        int length;<br />\n    } <br />\n    class mainclass <br />\n    {<br />\n        public static void main(String args[]) <br />\n        {        <br />\n             box obj = new box();<br />\n             obj.width = 10;<br />\n             obj.height = 2;<br />\n             obj.length = 10;<br />\n             int y = obj.width * obj.height * obj.length; <br />\n             System.out.print(y);<br />\n        } <br />\n    }</code></pre>', 7, 90, 3, 6, 32, '2019-09-01 23:30:00', '2019-09-01 23:30:00'),
(275, 3, 214, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q14', 'Android is based on which kernel?', 'Android is based on which kernel?', 7, 125, 1, 6, 89, '2019-09-01 23:30:00', '2019-09-01 23:30:00'),
(276, 3, 119, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q1', 'This is a repetition control stricture that allows you to efficiently write a loop that needs to execute a specific number of times.', 'This is a repetition control stricture that allows you to efficiently write a loop that needs to execute a specific number of times.', 7, 95, 1, 6, 57, '2019-09-01 23:30:00', '2019-09-01 23:30:00'),
(277, 3, 270, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q33', 'In the given AP series the term at position 11 would be\n5, 8, 11, 14, 17, 20………50.', 'In the given AP series the term at position 11 would be<br />\n5, 8, 11, 14, 17, 20………50.', 7, 96, 3, 6, 82, '2019-09-01 23:30:00', '2019-09-01 23:30:00'),
(278, 3, 252, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q28', 'What is bean class in android?', 'What is bean class in android?', 7, 125, 3, 6, 99, '2019-09-01 23:30:00', '2019-09-01 23:30:00'),
(279, 3, 131, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q13', 'A method of MessageBox class that allows you to call a message box for prompting user with messages and information.', 'A method of MessageBox class that allows you to call a message box for prompting user with messages and information.', 7, 95, 1, 6, 59, '2019-09-01 23:30:00', '2019-09-01 23:30:00'),
(280, 3, 136, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q18', 'Private Button print = new button();', 'Private Button print = new button();', 7, 95, 2, 6, 61, '2019-09-01 23:30:00', '2019-09-01 23:30:00'),
(281, 3, 275, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q24', 'How should you arrange catch blocks?', 'How should you arrange catch blocks?', 7, 95, 2, 6, 64, '2019-09-01 23:30:00', '2019-09-01 23:30:00'),
(282, 3, 132, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q14', 'C# treats the multiple catch statements like cases in a _____________ statement.', 'C# treats the multiple catch statements like cases in a _____________ statement.', 7, 95, 1, 6, 58, '2019-09-01 23:30:00', '2019-09-01 23:30:00'),
(283, 3, 77, 'CCS101 - INTRODUCTION TO COMPUTING - Q20', 'A programming error that occurs when running a program produces incorrect results.', 'A programming error that occurs when running a program produces incorrect results.', 7, 89, 1, 6, 9, '2019-09-01 23:30:00', '2019-09-01 23:30:00'),
(284, 3, 82, 'CCS101 - INTRODUCTION TO COMPUTING - Q15', '10111 is the two\'s complement representation of', '10111 is the two\'s complement representation of', 7, 89, 1, 6, 5, '2019-09-01 23:30:00', '2019-09-01 23:30:00'),
(285, 3, 212, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q12', 'Which company bought android?', 'Which company bought android?', 7, 125, 1, 6, 93, '2019-09-01 23:30:00', '2019-09-01 23:30:00'),
(286, 3, 243, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q19', 'Android provides a few standard themes, listed in ________.', 'Android provides a few standard themes, listed in ________.', 7, 125, 2, 6, 96, '2019-09-01 23:30:00', '2019-09-01 23:30:00'),
(287, 3, 145, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q5', 'What is the Cartesian product of A = {1, 2} and B = {a, b}?', 'What is the Cartesian product of A = {1, 2} and B = {a, b}?', 7, 96, 2, 6, 78, '2019-09-01 23:30:00', '2019-09-01 23:30:00'),
(288, 3, 92, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q2', 'Solve the inequality \n4x + 8 > 5x +9', 'Solve the inequality <br />\n4x + 8 > 5x +9', 7, 92, 1, 6, 37, '2019-09-01 23:30:00', '2019-09-01 23:30:00'),
(289, 3, 78, 'CCS101 - INTRODUCTION TO COMPUTING -  Q19', 'This coding system is designed to support international languages like Chinese and Japanese.', 'This coding system is designed to support international languages like Chinese and Japanese.', 7, 89, 3, 6, 17, '2019-09-01 23:30:00', '2019-09-01 23:30:00'),
(290, 3, 204, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q4', 'Android supports which features.', 'Android supports which features.', 7, 125, 1, 6, 92, '2019-09-01 23:30:00', '2019-09-01 23:30:00'),
(291, 3, 38, 'CCS102 - COMPUTER PROGRAMMING 1 - Q8', 'Which of the following is true about try block in C#?', 'Which of the following is true about try block in C#?', 7, 90, 1, 6, 19, '2019-09-01 23:30:00', '2019-09-01 23:30:00'),
(292, 3, 256, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q32', 'What is the difference between content values and cursor in android SQlite?', 'What is the difference between content values and cursor in android SQlite?', 7, 125, 3, 6, 98, '2019-09-01 23:30:00', '2019-09-01 23:30:00'),
(293, 3, 205, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q5', 'For ___________, code used by Android is not open source.', 'For ___________, code used by Android is not open source.', 7, 125, 1, 6, 90, '2019-09-01 23:30:00', '2019-09-01 23:30:00'),
(294, 3, 72, 'CCS101 - INTRODUCTION TO COMPUTING - Q25', 'What type of software is a screen saver?', 'What type of software is a screen saver?', 7, 89, 2, 6, 12, '2019-09-01 23:30:00', '2019-09-01 23:30:00'),
(295, 3, 31, 'Order of operation - Q1', 'What is the output of the following code?\n\n[[#code14]]', 'What is the output of the following code?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">double x = 2;<br />\ndouble y = 3;<br />\ndouble z = 5;<br />\n<br />\ndouble output = x + x * y + (x + 2 * z);<br />\n<br />\nSystem.out.println(output);</code></pre>', 7, 90, 1, 6, 20, '2019-09-01 23:30:00', '2019-09-01 23:30:00'),
(296, 3, 151, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q11', 'Two sets are called disjoint if there _____________ is the empty set.', 'Two sets are called disjoint if there _____________ is the empty set.', 7, 96, 1, 6, 73, '2019-09-01 23:30:00', '2019-09-01 23:30:00'),
(297, 3, 61, 'CCS102 - COMPUTER PROGRAMMING 1 Q31', 'Where is array stored in memory?', 'Where is array stored in memory?', 7, 90, 2, 6, 31, '2019-09-01 23:30:00', '2019-09-01 23:30:00'),
(298, 3, 79, 'CCS101 - INTRODUCTION TO COMPUTING -Q18', 'Which of the following is/are not part of the CPU?', 'Which of the following is/are not part of the CPU?', 7, 89, 3, 6, 16, '2019-09-01 23:30:00', '2019-09-01 23:30:00'),
(299, 3, 254, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q30', 'What is an HTTP client class in android?', 'What is an HTTP client class in android?', 7, 125, 3, 6, 100, '2019-09-01 23:30:00', '2019-09-01 23:30:00'),
(300, 3, 114, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q24', 'The mean of a data set is equal to 10 and its standard deviation is equal to 1. If we add 5 to each data value, then the mean and standard deviation become', 'The mean of a data set is equal to 10 and its standard deviation is equal to 1. If we add 5 to each data value, then the mean and standard deviation become', 7, 92, 2, 6, 45, '2019-09-01 23:30:00', '2019-09-01 23:30:00'),
(301, 4, 129, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q11', 'A control similar to an ordinary label having an underline and resembles a link on a web page.', 'A control similar to an ordinary label having an underline and resembles a link on a web page.', 7, 95, 1, 6, 54, '2019-09-01 23:44:16', '2019-09-01 23:44:16'),
(302, 4, 99, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q9', 'Evaluate the following:\n \nlog<sub>4</sub> 25', 'Evaluate the following:<br />\n <br />\nlog<sub>4</sub> 25', 7, 92, 1, 6, 41, '2019-09-01 23:44:16', '2019-09-01 23:44:16'),
(303, 4, 267, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q30', 'A floor function map a real number to :', 'A floor function map a real number to :', 7, 96, 3, 6, 84, '2019-09-01 23:44:16', '2019-09-01 23:44:16'),
(304, 4, 244, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q20', 'To update contents of content provider using curser and commit you need to call _______________.', 'To update contents of content provider using curser and commit you need to call _______________.', 7, 125, 2, 6, 95, '2019-09-01 23:44:16', '2019-09-01 23:44:16'),
(305, 4, 211, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q11', 'Web browser available in android based on', 'Web browser available in android based on', 7, 125, 1, 6, 85, '2019-09-01 23:44:16', '2019-09-01 23:44:16');
INSERT INTO `answer_sheet_test_questions` (`id`, `answer_sheet_id`, `test_question_id`, `title`, `body`, `body_html`, `student_outcome_id`, `course_id`, `difficulty_level_id`, `performance_criteria_id`, `pos_order`, `created_at`, `updated_at`) VALUES
(306, 4, 74, 'CCS101 - INTRODUCTION TO COMPUTING - Q23', 'An electronic tool that allows information to be input, processed, and output.', 'An electronic tool that allows information to be input, processed, and output.', 7, 89, 1, 6, 6, '2019-09-01 23:44:16', '2019-09-01 23:44:16'),
(307, 4, 219, 'Computer Hardware - Q3', 'A device that enables a computer to communicate over telephone lines.', 'A device that enables a computer to communicate over telephone lines.', 7, 89, 1, 6, 1, '2019-09-01 23:44:16', '2019-09-01 23:44:16'),
(308, 4, 260, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q23', 'In the given figure the if n(A)=20,n(U)=50,n(C)=10 and n(A∩B)=5 then n(B)=? \n\n[[#img34]]', 'In the given figure the if n(A)=20,n(U)=50,n(C)=10 and n(A∩B)=5 then n(B)=? <br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/23B9WIeQ00wE4pw7nsRG6le8KJWkZ1jI9HG7nYv3.jpeg\" width=\"300\" height=\"150\" />', 7, 96, 2, 6, 80, '2019-09-01 23:44:16', '2019-09-01 23:44:16'),
(309, 4, 108, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q18', 'The population of a country increased by an average of 2% per year from 2000 to 2003. If the population of this country was 2 000 000 on December 31, 2003, then the population of this country on January 1, 2000, to the nearest thousand would have been', 'The population of a country increased by an average of 2% per year from 2000 to 2003. If the population of this country was 2 000 000 on December 31, 2003, then the population of this country on January 1, 2000, to the nearest thousand would have been', 7, 92, 3, 6, 50, '2019-09-01 23:44:16', '2019-09-01 23:44:16'),
(310, 4, 155, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q15', 'Let the set A is {1, 2, 3} and B is {2, 3, 4}. Then number of elements in A U B is _____.', 'Let the set A is {1, 2, 3} and B is {2, 3, 4}. Then number of elements in A U B is _____.', 7, 96, 1, 6, 69, '2019-09-01 23:44:16', '2019-09-01 23:44:16'),
(311, 4, 121, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q3', 'These are additional operators used to return Boolean values.', 'These are additional operators used to return Boolean values.', 7, 95, 1, 6, 55, '2019-09-01 23:44:16', '2019-09-01 23:44:16'),
(312, 4, 76, 'CCS101 - INTRODUCTION TO COMPUTING _ Q21', '_______ is a duplicate copy of data or other computer content for use in the event that the original version is destroyed.', '_______ is a duplicate copy of data or other computer content for use in the event that the original version is destroyed.', 7, 89, 2, 6, 13, '2019-09-01 23:44:16', '2019-09-01 23:44:16'),
(313, 4, 202, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q2', 'What is android?', 'What is android?', 7, 125, 1, 6, 86, '2019-09-01 23:44:16', '2019-09-01 23:44:16'),
(314, 4, 39, 'CCS102 - COMPUTER PROGRAMMING 1 Q9', 'What of the following is the default value of an instance variable?', 'What of the following is the default value of an instance variable?', 7, 90, 1, 6, 25, '2019-09-01 23:44:16', '2019-09-01 23:44:16'),
(315, 4, 40, 'CCS102 - COMPUTER PROGRAMMING 1 Q10', 'Static binding uses which information for binding?', 'Static binding uses which information for binding?', 7, 90, 1, 6, 23, '2019-09-01 23:44:16', '2019-09-01 23:44:16'),
(316, 4, 283, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q32', 'You have a TextBox control and a Help button that the user can press to get help on allowable values. You validate the data entered by the user in the TextBox control. If the user enters an invalid value, you set the focus back in the control using the Cancel property of the CancelEventArgs. A user reports that once he enters invalid data in the text box, he cannot click the Help button. What should you do to correct the problem?', 'You have a TextBox control and a Help button that the user can press to get help on allowable values. You validate the data entered by the user in the TextBox control. If the user enters an invalid value, you set the focus back in the control using the Cancel property of the CancelEventArgs. A user reports that once he enters invalid data in the text box, he cannot click the Help button. What should you do to correct the problem?', 7, 95, 3, 6, 67, '2019-09-01 23:44:16', '2019-09-01 23:44:16'),
(317, 4, 289, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q33', 'A number of the form 213ab, where a and b are digits, has a reminder less than 10 when divided by 100. The sum of all the digits in the above number is equal to 13. Find the digit b.', 'A number of the form 213ab, where a and b are digits, has a reminder less than 10 when divided by 100. The sum of all the digits in the above number is equal to 13. Find the digit b.', 7, 92, 1, 6, 43, '2019-09-01 23:44:16', '2019-09-01 23:44:16'),
(318, 4, 142, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q2', 'The set O of odd positive integers less than 10 can be expressed by _____________.', 'The set O of odd positive integers less than 10 can be expressed by _____________.', 7, 96, 1, 6, 76, '2019-09-01 23:44:16', '2019-09-01 23:44:16'),
(319, 4, 137, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q19', 'Polymorphism occurs when the methods of the child class.', 'Polymorphism occurs when the methods of the child class.', 7, 95, 2, 6, 62, '2019-09-01 23:44:16', '2019-09-01 23:44:16'),
(320, 4, 87, 'CCS101 - INTRODUCTION TO COMPUTING - Q8', '____________ are the four general operations that are performed in each machine cycle.', '____________ are the four general operations that are performed in each machine cycle.', 7, 89, 2, 6, 14, '2019-09-01 23:44:16', '2019-09-01 23:44:16'),
(321, 4, 119, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q1', 'This is a repetition control stricture that allows you to efficiently write a loop that needs to execute a specific number of times.', 'This is a repetition control stricture that allows you to efficiently write a loop that needs to execute a specific number of times.', 7, 95, 1, 6, 57, '2019-09-01 23:44:17', '2019-09-01 23:44:17'),
(322, 4, 285, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q29', 'The period of 2 sin x cos x is', 'The period of 2 sin x cos x is', 7, 92, 1, 6, 35, '2019-09-01 23:44:17', '2019-09-01 23:44:17'),
(323, 4, 82, 'CCS101 - INTRODUCTION TO COMPUTING - Q15', '10111 is the two\'s complement representation of', '10111 is the two\'s complement representation of', 7, 89, 1, 6, 5, '2019-09-01 23:44:17', '2019-09-01 23:44:17'),
(324, 4, 61, 'CCS102 - COMPUTER PROGRAMMING 1 Q31', 'Where is array stored in memory?', 'Where is array stored in memory?', 7, 90, 2, 6, 31, '2019-09-01 23:44:17', '2019-09-01 23:44:17'),
(325, 4, 225, 'CCS101 - INTRODUCTION TO COMPUTING - Q7', 'Converting (1010111)<sub>2</sub> to base yields which of the following results?', 'Converting (1010111)<sub>2</sub> to base yields which of the following results?', 7, 89, 2, 6, 11, '2019-09-01 23:44:17', '2019-09-01 23:44:17'),
(326, 4, 42, 'CCS102 - COMPUTER PROGRAMMING 1 Q12', 'Which of the following is not a keyword in java?', 'Which of the following is not a keyword in java?', 7, 90, 1, 6, 18, '2019-09-01 23:44:17', '2019-09-01 23:44:17'),
(327, 4, 124, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q6', 'This data type stores the address of the value which means that they refer to a memory location.', 'This data type stores the address of the value which means that they refer to a memory location.', 7, 95, 1, 6, 52, '2019-09-01 23:44:17', '2019-09-01 23:44:17'),
(328, 4, 207, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q7', 'ABD stands for', 'ABD stands for', 7, 125, 1, 6, 88, '2019-09-01 23:44:17', '2019-09-01 23:44:17'),
(329, 4, 278, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q27', 'What will be the output of the following code?\n\n[[#code28]]', 'What will be the output of the following code?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">csharp</span></div><pre><code class=\"language-csharp\">try<br />\n{<br />\n  int num = 100;<br />\n  int den = 0;<br />\n  try<br />\n  {<br />\n    MessageBox.Show(\"Message1\");<br />\n    int res = num/den;<br />\n    MessageBox.Show(\"Message2\");<br />\n  }<br />\n  catch(ArithmeticException ae)<br />\n  {<br />\n    MessageBox.Show(\"Message3\");<br />\n  }<br />\n  MessageBox.Show(\"Message4\");<br />\n}</code></pre>', 7, 95, 3, 6, 68, '2019-09-01 23:44:17', '2019-09-01 23:44:17'),
(330, 4, 162, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q22', 'If n(A)=10 , n(B)=30,n(C)=50 and if set A,B,C are pairwise disjoint then which of the following is correct?', 'If n(A)=10 , n(B)=30,n(C)=50 and if set A,B,C are pairwise disjoint then which of the following is correct?', 7, 96, 2, 6, 79, '2019-09-01 23:44:17', '2019-09-01 23:44:17'),
(331, 4, 95, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q5', 'What is the square root of -144?', 'What is the square root of -144?', 7, 92, 1, 6, 38, '2019-09-01 23:44:17', '2019-09-01 23:44:17'),
(332, 4, 160, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q20', 'The shaded area of figure is best described by\n\n[[#img32]]', 'The shaded area of figure is best described by<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/5iL0Nsol7VkygnPftlQm5guoA5NqiGISBGevRke8.jpeg\" width=\"300\" height=\"150\" />', 7, 96, 3, 6, 83, '2019-09-01 23:44:17', '2019-09-01 23:44:17'),
(333, 4, 252, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q28', 'What is bean class in android?', 'What is bean class in android?', 7, 125, 3, 6, 99, '2019-09-01 23:44:17', '2019-09-01 23:44:17'),
(334, 4, 107, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q17', 'If Log <sub>4 </sub>(x) = 12, then log 2 (x / 4) is equal to', 'If Log <sub>4 </sub>(x) = 12, then log 2 (x / 4) is equal to', 7, 92, 1, 6, 40, '2019-09-01 23:44:17', '2019-09-01 23:44:17'),
(335, 4, 32, 'CCS102 - COMPUTER PROGRAMMING 1 - Q2', 'Which of the following is a reserved keyword in C#?', 'Which of the following is a reserved keyword in C#?', 7, 90, 1, 6, 21, '2019-09-01 23:44:17', '2019-09-01 23:44:17'),
(336, 4, 204, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q4', 'Android supports which features.', 'Android supports which features.', 7, 125, 1, 6, 92, '2019-09-01 23:44:17', '2019-09-01 23:44:17'),
(337, 4, 143, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q3', 'Power set of empty set has exactly _________ subset.', 'Power set of empty set has exactly _________ subset.', 7, 96, 1, 6, 77, '2019-09-01 23:44:17', '2019-09-01 23:44:17'),
(338, 4, 149, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q9', 'The union of the sets {1, 2, 5} and {1, 2, 6} is the set _______________.', 'The union of the sets {1, 2, 5} and {1, 2, 6} is the set _______________.', 7, 96, 2, 6, 81, '2019-09-01 23:44:17', '2019-09-01 23:44:17'),
(339, 4, 116, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q26', 'If f(x) is an odd function, then | f(x) | is', 'If f(x) is an odd function, then | f(x) | is', 7, 92, 2, 6, 44, '2019-09-01 23:44:17', '2019-09-01 23:44:17'),
(340, 4, 246, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q22', 'Which of  the following holds Java source code for the application?', 'Which of  the following holds Java source code for the application?', 7, 125, 2, 6, 94, '2019-09-01 23:44:17', '2019-09-01 23:44:17'),
(341, 4, 144, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q4', 'What is the cardinality of the set of odd positive integers less than 10?', 'What is the cardinality of the set of odd positive integers less than 10?', 7, 96, 1, 6, 71, '2019-09-01 23:44:17', '2019-09-01 23:44:17'),
(342, 4, 127, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q9', 'Commonly used  control to execute commansd when it is clicked.', 'Commonly used  control to execute commansd when it is clicked.', 7, 95, 1, 6, 60, '2019-09-01 23:44:17', '2019-09-01 23:44:17'),
(343, 4, 215, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q15', 'Which is the latest mobile version of android?', 'Which is the latest mobile version of android?', 7, 125, 1, 6, 91, '2019-09-01 23:44:17', '2019-09-01 23:44:17'),
(344, 4, 256, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q32', 'What is the difference between content values and cursor in android SQlite?', 'What is the difference between content values and cursor in android SQlite?', 7, 125, 3, 6, 98, '2019-09-01 23:44:17', '2019-09-01 23:44:17'),
(345, 4, 77, 'CCS101 - INTRODUCTION TO COMPUTING - Q20', 'A programming error that occurs when running a program produces incorrect results.', 'A programming error that occurs when running a program produces incorrect results.', 7, 89, 1, 6, 9, '2019-09-01 23:44:17', '2019-09-01 23:44:17'),
(346, 4, 104, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q14', 'What is the result when you put the expression x<sup>2</sup> +10x+41 into vertex form by completing the square ?', 'What is the result when you put the expression x<sup>2</sup> +10x+41 into vertex form by completing the square ?', 7, 92, 3, 6, 51, '2019-09-01 23:44:17', '2019-09-01 23:44:17'),
(347, 4, 126, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q8', 'A control used to show a list of strings which you can select.', 'A control used to show a list of strings which you can select.', 7, 95, 1, 6, 56, '2019-09-01 23:44:17', '2019-09-01 23:44:17'),
(348, 4, 51, 'CCS102 - COMPUTER PROGRAMMING 1 Q21', 'What is the output of this program?\n\n[[#code18]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class main_class <br />\n    {<br />\n        public static void main(String args[])<br />\n        {<br />\n            int x = 9;<br />\n            if (x == 9) <br />\n            { <br />\n                int x = 8;<br />\n                System.out.println(x);<br />\n            }<br />\n        } <br />\n    }</code></pre>', 7, 90, 2, 6, 27, '2019-09-01 23:44:17', '2019-09-01 23:44:17'),
(349, 4, 68, 'Describing two-dimensional motion with vectors', 'A golfer hits a golf ball upwards at an angle of 75°, degree with the horizontal. We can ignore air resistance.\n\n[[#img22]]\n\nWhich graph best describes the golf ball\'s vertical displacement over time?\n\nAssume the origin of the coordinate system to be the point on the ground where the ball was initially at rest.', 'A golfer hits a golf ball upwards at an angle of 75°, degree with the horizontal. We can ignore air resistance.<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/MYpfYGJo93eMWxPVag4ii0jWIwamFw8EKp4yFlbj.png\" width=\"300\" height=\"150\" /><br />\n<br />\nWhich graph best describes the golf ball\'s vertical displacement over time?<br />\n<br />\nAssume the origin of the coordinate system to be the point on the ground where the ball was initially at rest.', 7, 89, 1, 6, 3, '2019-09-01 23:44:17', '2019-09-01 23:44:17'),
(350, 4, 275, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q24', 'How should you arrange catch blocks?', 'How should you arrange catch blocks?', 7, 95, 2, 6, 64, '2019-09-01 23:44:17', '2019-09-01 23:44:17'),
(351, 4, 145, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q5', 'What is the Cartesian product of A = {1, 2} and B = {a, b}?', 'What is the Cartesian product of A = {1, 2} and B = {a, b}?', 7, 96, 2, 6, 78, '2019-09-01 23:44:17', '2019-09-01 23:44:17'),
(352, 4, 136, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q18', 'Private Button print = new button();', 'Private Button print = new button();', 7, 95, 2, 6, 61, '2019-09-01 23:44:17', '2019-09-01 23:44:17'),
(353, 4, 52, 'CCS102 - COMPUTER PROGRAMMING 1 Q22', 'What is the output of this program?\n\n[[#code19]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class box <br />\n    {<br />\n        int width;<br />\n        int height;<br />\n        int length;<br />\n    } <br />\n    class mainclass <br />\n    {<br />\n        public static void main(String args[]) <br />\n        {        <br />\n             box obj = new box();<br />\n             obj.width = 10;<br />\n             obj.height = 2;<br />\n             obj.length = 10;<br />\n             int y = obj.width * obj.height * obj.length; <br />\n             System.out.print(y);<br />\n        } <br />\n    }</code></pre>', 7, 90, 3, 6, 32, '2019-09-01 23:44:17', '2019-09-01 23:44:17'),
(354, 4, 203, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q3', 'Android doesn\'t  support which format?', 'Android doesn\'t  support which format?', 7, 125, 1, 6, 87, '2019-09-01 23:44:18', '2019-09-01 23:44:18'),
(355, 4, 38, 'CCS102 - COMPUTER PROGRAMMING 1 - Q8', 'Which of the following is true about try block in C#?', 'Which of the following is true about try block in C#?', 7, 90, 1, 6, 19, '2019-09-01 23:44:18', '2019-09-01 23:44:18'),
(356, 4, 59, 'CCS102 - COMPUTER PROGRAMMING 1 Q29', 'What is the output of this program?\n\n[[#code24]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class evaluate <br />\n    {<br />\n        public static void main(String args[]) <br />\n            {<br />\n	        int arr[] = new int[] {0 , 1, 2, 3, 4, 5, 6, 7, 8, 9};<br />\n	        int n = 6;<br />\n                n = arr[arr[n] / 2];<br />\n	        System.out.println(arr[n] / 2);<br />\n            } <br />\n    }</code></pre>', 7, 90, 3, 6, 34, '2019-09-01 23:44:18', '2019-09-01 23:44:18'),
(357, 4, 147, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q7', 'The set of positive integers is _____________.', 'The set of positive integers is _____________.', 7, 96, 1, 6, 70, '2019-09-01 23:44:18', '2019-09-01 23:44:18'),
(358, 4, 223, 'CC101 - INTRODUCTION TO COMPUTING - Q11', 'The sum of 11101 + 10111 equals ________.', 'The sum of 11101 + 10111 equals ________.', 7, 89, 2, 6, 10, '2019-09-01 23:44:18', '2019-09-01 23:44:18'),
(359, 4, 220, 'Computer Hardware - Q2', 'An input device that reads printed text and graphics and transfers them to a computer in digital form.', 'An input device that reads printed text and graphics and transfers them to a computer in digital form.', 7, 89, 1, 6, 7, '2019-09-01 23:44:18', '2019-09-01 23:44:18'),
(360, 4, 33, 'IT01- CCS102 - COMPUTER PROGRAMMING 1 - Q3', 'Which of the following converts a type to a double type in C#?', 'Which of the following converts a type to a double type in C#?', 7, 90, 1, 6, 26, '2019-09-01 23:44:18', '2019-09-01 23:44:18'),
(361, 4, 113, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q23', 'Five different books (A, B, C, D and E) are to be arranged on a shelf. Books C and D are to be arranged first and second starting from the right of the shelf. The number of different orders in which books A, B and E may be arranged is', 'Five different books (A, B, C, D and E) are to be arranged on a shelf. Books C and D are to be arranged first and second starting from the right of the shelf. The number of different orders in which books A, B and E may be arranged is', 7, 92, 2, 6, 48, '2019-09-01 23:44:18', '2019-09-01 23:44:18'),
(362, 4, 48, 'CCS102 - COMPUTER PROGRAMMING 1 Q18', 'What is JRE?', 'What is JRE?', 7, 90, 2, 6, 29, '2019-09-01 23:44:18', '2019-09-01 23:44:18'),
(363, 4, 57, 'CCS102 - COMPUTER PROGRAMMING 1 Q27', 'Which of these is necessary to specify at time of array initialization?', 'Which of these is necessary to specify at time of array initialization?', 7, 90, 2, 6, 30, '2019-09-01 23:44:18', '2019-09-01 23:44:18'),
(364, 4, 205, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q5', 'For ___________, code used by Android is not open source.', 'For ___________, code used by Android is not open source.', 7, 125, 1, 6, 90, '2019-09-01 23:44:18', '2019-09-01 23:44:18'),
(365, 4, 66, 'Binary to decimal conversion 1', 'Convert 10100011 from binary to decimal.', 'Convert 10100011 from binary to decimal.', 7, 89, 1, 6, 8, '2019-09-01 23:44:18', '2019-09-01 23:44:18'),
(366, 4, 140, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q22', 'A _______ is an identifier that denotes a storage location.', 'A _______ is an identifier that denotes a storage location.', 7, 95, 2, 6, 63, '2019-09-01 23:44:18', '2019-09-01 23:44:18'),
(367, 4, 114, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q24', 'The mean of a data set is equal to 10 and its standard deviation is equal to 1. If we add 5 to each data value, then the mean and standard deviation become', 'The mean of a data set is equal to 10 and its standard deviation is equal to 1. If we add 5 to each data value, then the mean and standard deviation become', 7, 92, 2, 6, 45, '2019-09-01 23:44:18', '2019-09-01 23:44:18'),
(368, 4, 78, 'CCS101 - INTRODUCTION TO COMPUTING -  Q19', 'This coding system is designed to support international languages like Chinese and Japanese.', 'This coding system is designed to support international languages like Chinese and Japanese.', 7, 89, 3, 6, 17, '2019-09-01 23:44:18', '2019-09-01 23:44:18'),
(369, 4, 254, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q30', 'What is an HTTP client class in android?', 'What is an HTTP client class in android?', 7, 125, 3, 6, 100, '2019-09-01 23:44:18', '2019-09-01 23:44:18'),
(370, 4, 79, 'CCS101 - INTRODUCTION TO COMPUTING -Q18', 'Which of the following is/are not part of the CPU?', 'Which of the following is/are not part of the CPU?', 7, 89, 3, 6, 16, '2019-09-01 23:44:18', '2019-09-01 23:44:18'),
(371, 4, 148, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q8', 'What is the Cardinality of the Power set of the set {0, 1, 2}.', 'What is the Cardinality of the Power set of the set {0, 1, 2}.', 7, 96, 1, 6, 72, '2019-09-01 23:44:18', '2019-09-01 23:44:18'),
(372, 4, 111, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q21', 'For x greater than or equal to zero and less than or equal to 2 π, sin x and cos x are both decreasing on the intervals', 'For x greater than or equal to zero and less than or equal to 2 π, sin x and cos x are both decreasing on the intervals', 7, 92, 2, 6, 47, '2019-09-01 23:44:18', '2019-09-01 23:44:18'),
(373, 4, 34, 'IT01- CCS102 - COMPUTER PROGRAMMING 1 - Q4', 'Which of the following operator returns the size of a data type in C#?', 'Which of the following operator returns the size of a data type in C#?', 7, 90, 1, 6, 22, '2019-09-01 23:44:18', '2019-09-01 23:44:18'),
(374, 4, 138, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q20', 'A method_____an exception when that method detects that a problem has occured.', 'A method_____an exception when that method detects that a problem has occured.', 7, 95, 2, 6, 65, '2019-09-01 23:44:18', '2019-09-01 23:44:18'),
(375, 4, 92, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q2', 'Solve the inequality \n4x + 8 > 5x +9', 'Solve the inequality <br />\n4x + 8 > 5x +9', 7, 92, 1, 6, 37, '2019-09-01 23:44:18', '2019-09-01 23:44:18'),
(376, 4, 93, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q3', 'If 2x - 8 ≥ 2, then', 'If 2x - 8 ≥ 2, then', 7, 92, 1, 6, 39, '2019-09-01 23:44:18', '2019-09-01 23:44:18'),
(377, 4, 1, 'Solving for basic equation - Q1', 'solve for x:\n2x + 3 = 5', 'solve for x:<br />\n2x + 3 = 5', 7, 92, 1, 6, 36, '2019-09-01 23:44:18', '2019-09-01 23:44:18'),
(378, 4, 41, 'CCS102 - COMPUTER PROGRAMMING 1 Q11', 'What is correct syntax for main method of a java class?', 'What is correct syntax for main method of a java class?', 7, 90, 1, 6, 24, '2019-09-01 23:44:18', '2019-09-01 23:44:18'),
(379, 4, 132, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q14', 'C# treats the multiple catch statements like cases in a _____________ statement.', 'C# treats the multiple catch statements like cases in a _____________ statement.', 7, 95, 1, 6, 58, '2019-09-01 23:44:18', '2019-09-01 23:44:18'),
(380, 4, 150, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q10', 'The intersection of the sets {1, 2, 5} and {1, 2, 6} is the set _____________.', 'The intersection of the sets {1, 2, 5} and {1, 2, 6} is the set _____________.', 7, 96, 1, 6, 74, '2019-09-01 23:44:18', '2019-09-01 23:44:18'),
(381, 4, 212, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q12', 'Which company bought android?', 'Which company bought android?', 7, 125, 1, 6, 93, '2019-09-01 23:44:18', '2019-09-01 23:44:18'),
(382, 4, 70, 'Projectile motion 2', 'An adventurous cliff jumper runs horizontally off a cliff. We can ignore air resistance.\n\n[[#img27]]\n\nWhich diagram best describes the horizontal velocity vectors and trajectory during the person’s fall?\n\nAssume the origin of the coordinate system to be the cliff edge.\n\nA red dot represents a vector of zero magnitude.', 'An adventurous cliff jumper runs horizontally off a cliff. We can ignore air resistance.<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/PgCOEtvEENxNaqgGLMWLrysCTt8GwyXUqH8p2sz7.png\" width=\"200\" height=\"200\" /><br />\n<br />\nWhich diagram best describes the horizontal velocity vectors and trajectory during the person’s fall?<br />\n<br />\nAssume the origin of the coordinate system to be the cliff edge.<br />\n<br />\nA red dot represents a vector of zero magnitude.', 7, 89, 1, 6, 4, '2019-09-01 23:44:18', '2019-09-01 23:44:18'),
(383, 4, 72, 'CCS101 - INTRODUCTION TO COMPUTING - Q25', 'What type of software is a screen saver?', 'What type of software is a screen saver?', 7, 89, 2, 6, 12, '2019-09-01 23:44:18', '2019-09-01 23:44:18'),
(384, 4, 31, 'Order of operation - Q1', 'What is the output of the following code?\n\n[[#code14]]', 'What is the output of the following code?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">double x = 2;<br />\ndouble y = 3;<br />\ndouble z = 5;<br />\n<br />\ndouble output = x + x * y + (x + 2 * z);<br />\n<br />\nSystem.out.println(output);</code></pre>', 7, 90, 1, 6, 20, '2019-09-01 23:44:18', '2019-09-01 23:44:18'),
(385, 4, 243, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q19', 'Android provides a few standard themes, listed in ________.', 'Android provides a few standard themes, listed in ________.', 7, 125, 2, 6, 96, '2019-09-01 23:44:18', '2019-09-01 23:44:18'),
(386, 4, 58, 'CCS102 - COMPUTER PROGRAMMING 1 Q28', 'What is the output of this program?\n\n[[#code22]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class array_output <br />\n    {<br />\n        public static void main(String args[]) <br />\n        {<br />\n            int array_variable [] = new int[10];<br />\n	    for (int i = 0; i < 10; ++i) <br />\n            {<br />\n                array_variable[i] = i;<br />\n                System.out.print(array_variable[i] + \" \");<br />\n                i++;<br />\n            }<br />\n        } <br />\n    }</code></pre>', 7, 90, 3, 6, 33, '2019-09-01 23:44:18', '2019-09-01 23:44:18'),
(387, 4, 50, 'CCS102 - COMPUTER PROGRAMMING Q20', 'What happens when thread\'s yield() method is called?', 'What happens when thread\'s yield() method is called?', 7, 90, 2, 6, 28, '2019-09-01 23:44:18', '2019-09-01 23:44:18'),
(388, 4, 277, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q26', 'Which of the following will result from compiling this code, assuming that all other code for your form works properly?\n\n[[#code27]]', 'Which of the following will result from compiling this code, assuming that all other code for your form works properly?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">csharp</span></div><pre><code class=\"language-csharp\">try<br />\n{<br />\n  //Write code to allocate some resources<br />\n}<br />\nfinally<br />\n{<br />\n  //Write code to Dispose all allocated resources<br />\n}</code></pre>', 7, 95, 3, 6, 66, '2019-09-01 23:44:18', '2019-09-01 23:44:18'),
(389, 4, 112, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q22', 'A school committee consists of 2 teachers and 4 students. The number of different committees that can be formed from 5 teachers and 10 students is', 'A school committee consists of 2 teachers and 4 students. The number of different committees that can be formed from 5 teachers and 10 students is', 7, 92, 1, 6, 42, '2019-09-01 23:44:18', '2019-09-01 23:44:18'),
(390, 4, 90, 'CCS101 - INTRODUCTION TO COMPUTING - Q4', 'A letter, digit, or special character is represented by a code in a ___.', 'A letter, digit, or special character is represented by a code in a ___.', 7, 89, 3, 6, 15, '2019-09-01 23:44:18', '2019-09-01 23:44:18'),
(391, 4, 156, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q16', 'If A has 4 elements B has 8 elements then the minimum and maximum number of elements in A U B are respectively', 'If A has 4 elements B has 8 elements then the minimum and maximum number of elements in A U B are respectively', 7, 96, 1, 6, 75, '2019-09-01 23:44:18', '2019-09-01 23:44:18'),
(392, 4, 214, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q14', 'Android is based on which kernel?', 'Android is based on which kernel?', 7, 125, 1, 6, 89, '2019-09-01 23:44:19', '2019-09-01 23:44:19'),
(393, 4, 97, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q7', 'The expression (3i - 2)(i + 1) - 7 can be simplified to which of the following expressions?', 'The expression (3i - 2)(i + 1) - 7 can be simplified to which of the following expressions?', 7, 92, 2, 6, 46, '2019-09-01 23:44:19', '2019-09-01 23:44:19'),
(394, 4, 270, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q33', 'In the given AP series the term at position 11 would be\n5, 8, 11, 14, 17, 20………50.', 'In the given AP series the term at position 11 would be<br />\n5, 8, 11, 14, 17, 20………50.', 7, 96, 3, 6, 82, '2019-09-01 23:44:19', '2019-09-01 23:44:19'),
(395, 4, 131, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q13', 'A method of MessageBox class that allows you to call a message box for prompting user with messages and information.', 'A method of MessageBox class that allows you to call a message box for prompting user with messages and information.', 7, 95, 1, 6, 59, '2019-09-01 23:44:19', '2019-09-01 23:44:19'),
(396, 4, 151, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q11', 'Two sets are called disjoint if there _____________ is the empty set.', 'Two sets are called disjoint if there _____________ is the empty set.', 7, 96, 1, 6, 73, '2019-09-01 23:44:19', '2019-09-01 23:44:19'),
(397, 4, 89, 'CCS101 - INTRODUCTION TO COMPUTING - Q5', 'A memory management technique that uses hard drive space as additional RAM.', 'A memory management technique that uses hard drive space as additional RAM.', 7, 89, 1, 6, 2, '2019-09-01 23:44:19', '2019-09-01 23:44:19'),
(398, 4, 286, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q30', 'The probability that an electronic device produced by a company does not function properly is equal to 0.1. If 10 devices are bought, then the probability, to the nearest thousandth, that 7 devices function properly is', 'The probability that an electronic device produced by a company does not function properly is equal to 0.1. If 10 devices are bought, then the probability, to the nearest thousandth, that 7 devices function properly is', 7, 92, 3, 6, 49, '2019-09-01 23:44:19', '2019-09-01 23:44:19'),
(399, 4, 122, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q4', 'These operators take two operands, such as arithmetic operators (+,-,*,/).', 'These operators take two operands, such as arithmetic operators (+,-,*,/).', 7, 95, 1, 6, 53, '2019-09-01 23:44:19', '2019-09-01 23:44:19'),
(400, 4, 248, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q24', 'What is the use of content provider in android?', 'What is the use of content provider in android?', 7, 125, 2, 6, 97, '2019-09-01 23:44:19', '2019-09-01 23:44:19'),
(401, 5, 78, 'CCS101 - INTRODUCTION TO COMPUTING -  Q19', 'This coding system is designed to support international languages like Chinese and Japanese.', 'This coding system is designed to support international languages like Chinese and Japanese.', 7, 89, 3, 6, 17, '2019-09-02 02:20:02', '2019-09-02 02:20:02'),
(402, 5, 202, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q2', 'What is android?', 'What is android?', 7, 125, 1, 6, 86, '2019-09-02 02:20:02', '2019-09-02 02:20:02'),
(403, 5, 252, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q28', 'What is bean class in android?', 'What is bean class in android?', 7, 125, 3, 6, 99, '2019-09-02 02:20:02', '2019-09-02 02:20:02'),
(404, 5, 39, 'CCS102 - COMPUTER PROGRAMMING 1 Q9', 'What of the following is the default value of an instance variable?', 'What of the following is the default value of an instance variable?', 7, 90, 1, 6, 25, '2019-09-02 02:20:02', '2019-09-02 02:20:02'),
(405, 5, 82, 'CCS101 - INTRODUCTION TO COMPUTING - Q15', '10111 is the two\'s complement representation of', '10111 is the two\'s complement representation of', 7, 89, 1, 6, 5, '2019-09-02 02:20:02', '2019-09-02 02:20:02'),
(406, 5, 77, 'CCS101 - INTRODUCTION TO COMPUTING - Q20', 'A programming error that occurs when running a program produces incorrect results.', 'A programming error that occurs when running a program produces incorrect results.', 7, 89, 1, 6, 9, '2019-09-02 02:20:02', '2019-09-02 02:20:02'),
(407, 5, 87, 'CCS101 - INTRODUCTION TO COMPUTING - Q8', '____________ are the four general operations that are performed in each machine cycle.', '____________ are the four general operations that are performed in each machine cycle.', 7, 89, 2, 6, 14, '2019-09-02 02:20:02', '2019-09-02 02:20:02'),
(408, 5, 119, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q1', 'This is a repetition control stricture that allows you to efficiently write a loop that needs to execute a specific number of times.', 'This is a repetition control stricture that allows you to efficiently write a loop that needs to execute a specific number of times.', 7, 95, 1, 6, 57, '2019-09-02 02:20:03', '2019-09-02 02:20:03'),
(409, 5, 40, 'CCS102 - COMPUTER PROGRAMMING 1 Q10', 'Static binding uses which information for binding?', 'Static binding uses which information for binding?', 7, 90, 1, 6, 23, '2019-09-02 02:20:03', '2019-09-02 02:20:03'),
(410, 5, 66, 'Binary to decimal conversion 1', 'Convert 10100011 from binary to decimal.', 'Convert 10100011 from binary to decimal.', 7, 89, 1, 6, 8, '2019-09-02 02:20:03', '2019-09-02 02:20:03'),
(411, 5, 137, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q19', 'Polymorphism occurs when the methods of the child class.', 'Polymorphism occurs when the methods of the child class.', 7, 95, 2, 6, 62, '2019-09-02 02:20:03', '2019-09-02 02:20:03'),
(412, 5, 114, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q24', 'The mean of a data set is equal to 10 and its standard deviation is equal to 1. If we add 5 to each data value, then the mean and standard deviation become', 'The mean of a data set is equal to 10 and its standard deviation is equal to 1. If we add 5 to each data value, then the mean and standard deviation become', 7, 92, 2, 6, 45, '2019-09-02 02:20:03', '2019-09-02 02:20:03'),
(413, 5, 116, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q26', 'If f(x) is an odd function, then | f(x) | is', 'If f(x) is an odd function, then | f(x) | is', 7, 92, 2, 6, 44, '2019-09-02 02:20:03', '2019-09-02 02:20:03'),
(414, 5, 113, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q23', 'Five different books (A, B, C, D and E) are to be arranged on a shelf. Books C and D are to be arranged first and second starting from the right of the shelf. The number of different orders in which books A, B and E may be arranged is', 'Five different books (A, B, C, D and E) are to be arranged on a shelf. Books C and D are to be arranged first and second starting from the right of the shelf. The number of different orders in which books A, B and E may be arranged is', 7, 92, 2, 6, 48, '2019-09-02 02:20:03', '2019-09-02 02:20:03'),
(415, 5, 143, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q3', 'Power set of empty set has exactly _________ subset.', 'Power set of empty set has exactly _________ subset.', 7, 96, 1, 6, 77, '2019-09-02 02:20:03', '2019-09-02 02:20:03'),
(416, 5, 286, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q30', 'The probability that an electronic device produced by a company does not function properly is equal to 0.1. If 10 devices are bought, then the probability, to the nearest thousandth, that 7 devices function properly is', 'The probability that an electronic device produced by a company does not function properly is equal to 0.1. If 10 devices are bought, then the probability, to the nearest thousandth, that 7 devices function properly is', 7, 92, 3, 6, 49, '2019-09-02 02:20:03', '2019-09-02 02:20:03'),
(417, 5, 38, 'CCS102 - COMPUTER PROGRAMMING 1 - Q8', 'Which of the following is true about try block in C#?', 'Which of the following is true about try block in C#?', 7, 90, 1, 6, 19, '2019-09-02 02:20:03', '2019-09-02 02:20:03'),
(418, 5, 131, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q13', 'A method of MessageBox class that allows you to call a message box for prompting user with messages and information.', 'A method of MessageBox class that allows you to call a message box for prompting user with messages and information.', 7, 95, 1, 6, 59, '2019-09-02 02:20:03', '2019-09-02 02:20:03'),
(419, 5, 214, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q14', 'Android is based on which kernel?', 'Android is based on which kernel?', 7, 125, 1, 6, 89, '2019-09-02 02:20:03', '2019-09-02 02:20:03'),
(420, 5, 48, 'CCS102 - COMPUTER PROGRAMMING 1 Q18', 'What is JRE?', 'What is JRE?', 7, 90, 2, 6, 29, '2019-09-02 02:20:03', '2019-09-02 02:20:03'),
(421, 5, 243, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q19', 'Android provides a few standard themes, listed in ________.', 'Android provides a few standard themes, listed in ________.', 7, 125, 2, 6, 96, '2019-09-02 02:20:03', '2019-09-02 02:20:03'),
(422, 5, 95, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q5', 'What is the square root of -144?', 'What is the square root of -144?', 7, 92, 1, 6, 38, '2019-09-02 02:20:03', '2019-09-02 02:20:03'),
(423, 5, 42, 'CCS102 - COMPUTER PROGRAMMING 1 Q12', 'Which of the following is not a keyword in java?', 'Which of the following is not a keyword in java?', 7, 90, 1, 6, 18, '2019-09-02 02:20:03', '2019-09-02 02:20:03'),
(424, 5, 111, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q21', 'For x greater than or equal to zero and less than or equal to 2 π, sin x and cos x are both decreasing on the intervals', 'For x greater than or equal to zero and less than or equal to 2 π, sin x and cos x are both decreasing on the intervals', 7, 92, 2, 6, 47, '2019-09-02 02:20:03', '2019-09-02 02:20:03'),
(425, 5, 219, 'Computer Hardware - Q3', 'A device that enables a computer to communicate over telephone lines.', 'A device that enables a computer to communicate over telephone lines.', 7, 89, 1, 6, 1, '2019-09-02 02:20:03', '2019-09-02 02:20:03'),
(426, 5, 225, 'CCS101 - INTRODUCTION TO COMPUTING - Q7', 'Converting (1010111)<sub>2</sub> to base yields which of the following results?', 'Converting (1010111)<sub>2</sub> to base yields which of the following results?', 7, 89, 2, 6, 11, '2019-09-02 02:20:03', '2019-09-02 02:20:03'),
(427, 5, 41, 'CCS102 - COMPUTER PROGRAMMING 1 Q11', 'What is correct syntax for main method of a java class?', 'What is correct syntax for main method of a java class?', 7, 90, 1, 6, 24, '2019-09-02 02:20:03', '2019-09-02 02:20:03'),
(428, 5, 31, 'Order of operation - Q1', 'What is the output of the following code?\n\n[[#code14]]', 'What is the output of the following code?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">double x = 2;<br />\ndouble y = 3;<br />\ndouble z = 5;<br />\n<br />\ndouble output = x + x * y + (x + 2 * z);<br />\n<br />\nSystem.out.println(output);</code></pre>', 7, 90, 1, 6, 20, '2019-09-02 02:20:03', '2019-09-02 02:20:03'),
(429, 5, 97, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q7', 'The expression (3i - 2)(i + 1) - 7 can be simplified to which of the following expressions?', 'The expression (3i - 2)(i + 1) - 7 can be simplified to which of the following expressions?', 7, 92, 2, 6, 46, '2019-09-02 02:20:03', '2019-09-02 02:20:03'),
(430, 5, 99, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q9', 'Evaluate the following:\n \nlog<sub>4</sub> 25', 'Evaluate the following:<br />\n <br />\nlog<sub>4</sub> 25', 7, 92, 1, 6, 41, '2019-09-02 02:20:03', '2019-09-02 02:20:03'),
(431, 5, 156, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q16', 'If A has 4 elements B has 8 elements then the minimum and maximum number of elements in A U B are respectively', 'If A has 4 elements B has 8 elements then the minimum and maximum number of elements in A U B are respectively', 7, 96, 1, 6, 75, '2019-09-02 02:20:03', '2019-09-02 02:20:03'),
(432, 5, 50, 'CCS102 - COMPUTER PROGRAMMING Q20', 'What happens when thread\'s yield() method is called?', 'What happens when thread\'s yield() method is called?', 7, 90, 2, 6, 28, '2019-09-02 02:20:03', '2019-09-02 02:20:03'),
(433, 5, 285, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q29', 'The period of 2 sin x cos x is', 'The period of 2 sin x cos x is', 7, 92, 1, 6, 35, '2019-09-02 02:20:03', '2019-09-02 02:20:03'),
(434, 5, 33, 'IT01- CCS102 - COMPUTER PROGRAMMING 1 - Q3', 'Which of the following converts a type to a double type in C#?', 'Which of the following converts a type to a double type in C#?', 7, 90, 1, 6, 26, '2019-09-02 02:20:03', '2019-09-02 02:20:03'),
(435, 5, 108, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q18', 'The population of a country increased by an average of 2% per year from 2000 to 2003. If the population of this country was 2 000 000 on December 31, 2003, then the population of this country on January 1, 2000, to the nearest thousand would have been', 'The population of a country increased by an average of 2% per year from 2000 to 2003. If the population of this country was 2 000 000 on December 31, 2003, then the population of this country on January 1, 2000, to the nearest thousand would have been', 7, 92, 3, 6, 50, '2019-09-02 02:20:03', '2019-09-02 02:20:03'),
(436, 5, 142, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q2', 'The set O of odd positive integers less than 10 can be expressed by _____________.', 'The set O of odd positive integers less than 10 can be expressed by _____________.', 7, 96, 1, 6, 76, '2019-09-02 02:20:03', '2019-09-02 02:20:03'),
(437, 5, 144, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q4', 'What is the cardinality of the set of odd positive integers less than 10?', 'What is the cardinality of the set of odd positive integers less than 10?', 7, 96, 1, 6, 71, '2019-09-02 02:20:03', '2019-09-02 02:20:03'),
(438, 5, 52, 'CCS102 - COMPUTER PROGRAMMING 1 Q22', 'What is the output of this program?\n\n[[#code19]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class box <br />\n    {<br />\n        int width;<br />\n        int height;<br />\n        int length;<br />\n    } <br />\n    class mainclass <br />\n    {<br />\n        public static void main(String args[]) <br />\n        {        <br />\n             box obj = new box();<br />\n             obj.width = 10;<br />\n             obj.height = 2;<br />\n             obj.length = 10;<br />\n             int y = obj.width * obj.height * obj.length; <br />\n             System.out.print(y);<br />\n        } <br />\n    }</code></pre>', 7, 90, 3, 6, 32, '2019-09-02 02:20:03', '2019-09-02 02:20:03'),
(439, 5, 207, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q7', 'ABD stands for', 'ABD stands for', 7, 125, 1, 6, 88, '2019-09-02 02:20:03', '2019-09-02 02:20:03'),
(440, 5, 254, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q30', 'What is an HTTP client class in android?', 'What is an HTTP client class in android?', 7, 125, 3, 6, 100, '2019-09-02 02:20:03', '2019-09-02 02:20:03'),
(441, 5, 246, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q22', 'Which of  the following holds Java source code for the application?', 'Which of  the following holds Java source code for the application?', 7, 125, 2, 6, 94, '2019-09-02 02:20:03', '2019-09-02 02:20:03'),
(442, 5, 147, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q7', 'The set of positive integers is _____________.', 'The set of positive integers is _____________.', 7, 96, 1, 6, 70, '2019-09-02 02:20:03', '2019-09-02 02:20:03'),
(443, 5, 162, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q22', 'If n(A)=10 , n(B)=30,n(C)=50 and if set A,B,C are pairwise disjoint then which of the following is correct?', 'If n(A)=10 , n(B)=30,n(C)=50 and if set A,B,C are pairwise disjoint then which of the following is correct?', 7, 96, 2, 6, 79, '2019-09-02 02:20:03', '2019-09-02 02:20:03'),
(444, 5, 278, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q27', 'What will be the output of the following code?\n\n[[#code28]]', 'What will be the output of the following code?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">csharp</span></div><pre><code class=\"language-csharp\">try<br />\n{<br />\n  int num = 100;<br />\n  int den = 0;<br />\n  try<br />\n  {<br />\n    MessageBox.Show(\"Message1\");<br />\n    int res = num/den;<br />\n    MessageBox.Show(\"Message2\");<br />\n  }<br />\n  catch(ArithmeticException ae)<br />\n  {<br />\n    MessageBox.Show(\"Message3\");<br />\n  }<br />\n  MessageBox.Show(\"Message4\");<br />\n}</code></pre>', 7, 95, 3, 6, 68, '2019-09-02 02:20:03', '2019-09-02 02:20:03'),
(445, 5, 92, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q2', 'Solve the inequality \n4x + 8 > 5x +9', 'Solve the inequality <br />\n4x + 8 > 5x +9', 7, 92, 1, 6, 37, '2019-09-02 02:20:03', '2019-09-02 02:20:03'),
(446, 5, 129, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q11', 'A control similar to an ordinary label having an underline and resembles a link on a web page.', 'A control similar to an ordinary label having an underline and resembles a link on a web page.', 7, 95, 1, 6, 54, '2019-09-02 02:20:03', '2019-09-02 02:20:03'),
(447, 5, 248, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q24', 'What is the use of content provider in android?', 'What is the use of content provider in android?', 7, 125, 2, 6, 97, '2019-09-02 02:20:03', '2019-09-02 02:20:03'),
(448, 5, 138, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q20', 'A method_____an exception when that method detects that a problem has occured.', 'A method_____an exception when that method detects that a problem has occured.', 7, 95, 2, 6, 65, '2019-09-02 02:20:03', '2019-09-02 02:20:03'),
(449, 5, 244, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q20', 'To update contents of content provider using curser and commit you need to call _______________.', 'To update contents of content provider using curser and commit you need to call _______________.', 7, 125, 2, 6, 95, '2019-09-02 02:20:03', '2019-09-02 02:20:03'),
(450, 5, 149, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q9', 'The union of the sets {1, 2, 5} and {1, 2, 6} is the set _______________.', 'The union of the sets {1, 2, 5} and {1, 2, 6} is the set _______________.', 7, 96, 2, 6, 81, '2019-09-02 02:20:03', '2019-09-02 02:20:03'),
(451, 5, 74, 'CCS101 - INTRODUCTION TO COMPUTING - Q23', 'An electronic tool that allows information to be input, processed, and output.', 'An electronic tool that allows information to be input, processed, and output.', 7, 89, 1, 6, 6, '2019-09-02 02:20:03', '2019-09-02 02:20:03'),
(452, 5, 204, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q4', 'Android supports which features.', 'Android supports which features.', 7, 125, 1, 6, 92, '2019-09-02 02:20:03', '2019-09-02 02:20:03'),
(453, 5, 220, 'Computer Hardware - Q2', 'An input device that reads printed text and graphics and transfers them to a computer in digital form.', 'An input device that reads printed text and graphics and transfers them to a computer in digital form.', 7, 89, 1, 6, 7, '2019-09-02 02:20:03', '2019-09-02 02:20:03'),
(454, 5, 275, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q24', 'How should you arrange catch blocks?', 'How should you arrange catch blocks?', 7, 95, 2, 6, 64, '2019-09-02 02:20:03', '2019-09-02 02:20:03'),
(455, 5, 79, 'CCS101 - INTRODUCTION TO COMPUTING -Q18', 'Which of the following is/are not part of the CPU?', 'Which of the following is/are not part of the CPU?', 7, 89, 3, 6, 16, '2019-09-02 02:20:03', '2019-09-02 02:20:03'),
(456, 5, 70, 'Projectile motion 2', 'An adventurous cliff jumper runs horizontally off a cliff. We can ignore air resistance.\n\n[[#img27]]\n\nWhich diagram best describes the horizontal velocity vectors and trajectory during the person’s fall?\n\nAssume the origin of the coordinate system to be the cliff edge.\n\nA red dot represents a vector of zero magnitude.', 'An adventurous cliff jumper runs horizontally off a cliff. We can ignore air resistance.<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/PgCOEtvEENxNaqgGLMWLrysCTt8GwyXUqH8p2sz7.png\" width=\"200\" height=\"200\" /><br />\n<br />\nWhich diagram best describes the horizontal velocity vectors and trajectory during the person’s fall?<br />\n<br />\nAssume the origin of the coordinate system to be the cliff edge.<br />\n<br />\nA red dot represents a vector of zero magnitude.', 7, 89, 1, 6, 4, '2019-09-02 02:20:03', '2019-09-02 02:20:03'),
(457, 5, 260, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q23', 'In the given figure the if n(A)=20,n(U)=50,n(C)=10 and n(A∩B)=5 then n(B)=? \n\n[[#img34]]', 'In the given figure the if n(A)=20,n(U)=50,n(C)=10 and n(A∩B)=5 then n(B)=? <br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/23B9WIeQ00wE4pw7nsRG6le8KJWkZ1jI9HG7nYv3.jpeg\" width=\"300\" height=\"150\" />', 7, 96, 2, 6, 80, '2019-09-02 02:20:03', '2019-09-02 02:20:03'),
(458, 5, 145, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q5', 'What is the Cartesian product of A = {1, 2} and B = {a, b}?', 'What is the Cartesian product of A = {1, 2} and B = {a, b}?', 7, 96, 2, 6, 78, '2019-09-02 02:20:03', '2019-09-02 02:20:03');
INSERT INTO `answer_sheet_test_questions` (`id`, `answer_sheet_id`, `test_question_id`, `title`, `body`, `body_html`, `student_outcome_id`, `course_id`, `difficulty_level_id`, `performance_criteria_id`, `pos_order`, `created_at`, `updated_at`) VALUES
(459, 5, 212, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q12', 'Which company bought android?', 'Which company bought android?', 7, 125, 1, 6, 93, '2019-09-02 02:20:03', '2019-09-02 02:20:03'),
(460, 5, 104, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q14', 'What is the result when you put the expression x<sup>2</sup> +10x+41 into vertex form by completing the square ?', 'What is the result when you put the expression x<sup>2</sup> +10x+41 into vertex form by completing the square ?', 7, 92, 3, 6, 51, '2019-09-02 02:20:04', '2019-09-02 02:20:04'),
(461, 5, 205, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q5', 'For ___________, code used by Android is not open source.', 'For ___________, code used by Android is not open source.', 7, 125, 1, 6, 90, '2019-09-02 02:20:04', '2019-09-02 02:20:04'),
(462, 5, 93, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q3', 'If 2x - 8 ≥ 2, then', 'If 2x - 8 ≥ 2, then', 7, 92, 1, 6, 39, '2019-09-02 02:20:04', '2019-09-02 02:20:04'),
(463, 5, 107, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q17', 'If Log <sub>4 </sub>(x) = 12, then log 2 (x / 4) is equal to', 'If Log <sub>4 </sub>(x) = 12, then log 2 (x / 4) is equal to', 7, 92, 1, 6, 40, '2019-09-02 02:20:04', '2019-09-02 02:20:04'),
(464, 5, 267, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q30', 'A floor function map a real number to :', 'A floor function map a real number to :', 7, 96, 3, 6, 84, '2019-09-02 02:20:04', '2019-09-02 02:20:04'),
(465, 5, 215, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q15', 'Which is the latest mobile version of android?', 'Which is the latest mobile version of android?', 7, 125, 1, 6, 91, '2019-09-02 02:20:04', '2019-09-02 02:20:04'),
(466, 5, 203, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q3', 'Android doesn\'t  support which format?', 'Android doesn\'t  support which format?', 7, 125, 1, 6, 87, '2019-09-02 02:20:04', '2019-09-02 02:20:04'),
(467, 5, 132, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q14', 'C# treats the multiple catch statements like cases in a _____________ statement.', 'C# treats the multiple catch statements like cases in a _____________ statement.', 7, 95, 1, 6, 58, '2019-09-02 02:20:04', '2019-09-02 02:20:04'),
(468, 5, 72, 'CCS101 - INTRODUCTION TO COMPUTING - Q25', 'What type of software is a screen saver?', 'What type of software is a screen saver?', 7, 89, 2, 6, 12, '2019-09-02 02:20:04', '2019-09-02 02:20:04'),
(469, 5, 1, 'Solving for basic equation - Q1', 'solve for x:\n2x + 3 = 5', 'solve for x:<br />\n2x + 3 = 5', 7, 92, 1, 6, 36, '2019-09-02 02:20:04', '2019-09-02 02:20:04'),
(470, 5, 89, 'CCS101 - INTRODUCTION TO COMPUTING - Q5', 'A memory management technique that uses hard drive space as additional RAM.', 'A memory management technique that uses hard drive space as additional RAM.', 7, 89, 1, 6, 2, '2019-09-02 02:20:04', '2019-09-02 02:20:04'),
(471, 5, 59, 'CCS102 - COMPUTER PROGRAMMING 1 Q29', 'What is the output of this program?\n\n[[#code24]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class evaluate <br />\n    {<br />\n        public static void main(String args[]) <br />\n            {<br />\n	        int arr[] = new int[] {0 , 1, 2, 3, 4, 5, 6, 7, 8, 9};<br />\n	        int n = 6;<br />\n                n = arr[arr[n] / 2];<br />\n	        System.out.println(arr[n] / 2);<br />\n            } <br />\n    }</code></pre>', 7, 90, 3, 6, 34, '2019-09-02 02:20:04', '2019-09-02 02:20:04'),
(472, 5, 150, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q10', 'The intersection of the sets {1, 2, 5} and {1, 2, 6} is the set _____________.', 'The intersection of the sets {1, 2, 5} and {1, 2, 6} is the set _____________.', 7, 96, 1, 6, 74, '2019-09-02 02:20:04', '2019-09-02 02:20:04'),
(473, 5, 34, 'IT01- CCS102 - COMPUTER PROGRAMMING 1 - Q4', 'Which of the following operator returns the size of a data type in C#?', 'Which of the following operator returns the size of a data type in C#?', 7, 90, 1, 6, 22, '2019-09-02 02:20:04', '2019-09-02 02:20:04'),
(474, 5, 112, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q22', 'A school committee consists of 2 teachers and 4 students. The number of different committees that can be formed from 5 teachers and 10 students is', 'A school committee consists of 2 teachers and 4 students. The number of different committees that can be formed from 5 teachers and 10 students is', 7, 92, 1, 6, 42, '2019-09-02 02:20:04', '2019-09-02 02:20:04'),
(475, 5, 140, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q22', 'A _______ is an identifier that denotes a storage location.', 'A _______ is an identifier that denotes a storage location.', 7, 95, 2, 6, 63, '2019-09-02 02:20:04', '2019-09-02 02:20:04'),
(476, 5, 211, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q11', 'Web browser available in android based on', 'Web browser available in android based on', 7, 125, 1, 6, 85, '2019-09-02 02:20:04', '2019-09-02 02:20:04'),
(477, 5, 283, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q32', 'You have a TextBox control and a Help button that the user can press to get help on allowable values. You validate the data entered by the user in the TextBox control. If the user enters an invalid value, you set the focus back in the control using the Cancel property of the CancelEventArgs. A user reports that once he enters invalid data in the text box, he cannot click the Help button. What should you do to correct the problem?', 'You have a TextBox control and a Help button that the user can press to get help on allowable values. You validate the data entered by the user in the TextBox control. If the user enters an invalid value, you set the focus back in the control using the Cancel property of the CancelEventArgs. A user reports that once he enters invalid data in the text box, he cannot click the Help button. What should you do to correct the problem?', 7, 95, 3, 6, 67, '2019-09-02 02:20:04', '2019-09-02 02:20:04'),
(478, 5, 61, 'CCS102 - COMPUTER PROGRAMMING 1 Q31', 'Where is array stored in memory?', 'Where is array stored in memory?', 7, 90, 2, 6, 31, '2019-09-02 02:20:04', '2019-09-02 02:20:04'),
(479, 5, 58, 'CCS102 - COMPUTER PROGRAMMING 1 Q28', 'What is the output of this program?\n\n[[#code22]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class array_output <br />\n    {<br />\n        public static void main(String args[]) <br />\n        {<br />\n            int array_variable [] = new int[10];<br />\n	    for (int i = 0; i < 10; ++i) <br />\n            {<br />\n                array_variable[i] = i;<br />\n                System.out.print(array_variable[i] + \" \");<br />\n                i++;<br />\n            }<br />\n        } <br />\n    }</code></pre>', 7, 90, 3, 6, 33, '2019-09-02 02:20:04', '2019-09-02 02:20:04'),
(480, 5, 148, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q8', 'What is the Cardinality of the Power set of the set {0, 1, 2}.', 'What is the Cardinality of the Power set of the set {0, 1, 2}.', 7, 96, 1, 6, 72, '2019-09-02 02:20:04', '2019-09-02 02:20:04'),
(481, 5, 151, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q11', 'Two sets are called disjoint if there _____________ is the empty set.', 'Two sets are called disjoint if there _____________ is the empty set.', 7, 96, 1, 6, 73, '2019-09-02 02:20:04', '2019-09-02 02:20:04'),
(482, 5, 76, 'CCS101 - INTRODUCTION TO COMPUTING _ Q21', '_______ is a duplicate copy of data or other computer content for use in the event that the original version is destroyed.', '_______ is a duplicate copy of data or other computer content for use in the event that the original version is destroyed.', 7, 89, 2, 6, 13, '2019-09-02 02:20:04', '2019-09-02 02:20:04'),
(483, 5, 160, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q20', 'The shaded area of figure is best described by\n\n[[#img32]]', 'The shaded area of figure is best described by<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/5iL0Nsol7VkygnPftlQm5guoA5NqiGISBGevRke8.jpeg\" width=\"300\" height=\"150\" />', 7, 96, 3, 6, 83, '2019-09-02 02:20:04', '2019-09-02 02:20:04'),
(484, 5, 277, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q26', 'Which of the following will result from compiling this code, assuming that all other code for your form works properly?\n\n[[#code27]]', 'Which of the following will result from compiling this code, assuming that all other code for your form works properly?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">csharp</span></div><pre><code class=\"language-csharp\">try<br />\n{<br />\n  //Write code to allocate some resources<br />\n}<br />\nfinally<br />\n{<br />\n  //Write code to Dispose all allocated resources<br />\n}</code></pre>', 7, 95, 3, 6, 66, '2019-09-02 02:20:04', '2019-09-02 02:20:04'),
(485, 5, 122, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q4', 'These operators take two operands, such as arithmetic operators (+,-,*,/).', 'These operators take two operands, such as arithmetic operators (+,-,*,/).', 7, 95, 1, 6, 53, '2019-09-02 02:20:04', '2019-09-02 02:20:04'),
(486, 5, 223, 'CC101 - INTRODUCTION TO COMPUTING - Q11', 'The sum of 11101 + 10111 equals ________.', 'The sum of 11101 + 10111 equals ________.', 7, 89, 2, 6, 10, '2019-09-02 02:20:04', '2019-09-02 02:20:04'),
(487, 5, 57, 'CCS102 - COMPUTER PROGRAMMING 1 Q27', 'Which of these is necessary to specify at time of array initialization?', 'Which of these is necessary to specify at time of array initialization?', 7, 90, 2, 6, 30, '2019-09-02 02:20:04', '2019-09-02 02:20:04'),
(488, 5, 270, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q33', 'In the given AP series the term at position 11 would be\n5, 8, 11, 14, 17, 20………50.', 'In the given AP series the term at position 11 would be<br />\n5, 8, 11, 14, 17, 20………50.', 7, 96, 3, 6, 82, '2019-09-02 02:20:04', '2019-09-02 02:20:04'),
(489, 5, 121, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q3', 'These are additional operators used to return Boolean values.', 'These are additional operators used to return Boolean values.', 7, 95, 1, 6, 55, '2019-09-02 02:20:04', '2019-09-02 02:20:04'),
(490, 5, 289, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q33', 'A number of the form 213ab, where a and b are digits, has a reminder less than 10 when divided by 100. The sum of all the digits in the above number is equal to 13. Find the digit b.', 'A number of the form 213ab, where a and b are digits, has a reminder less than 10 when divided by 100. The sum of all the digits in the above number is equal to 13. Find the digit b.', 7, 92, 1, 6, 43, '2019-09-02 02:20:04', '2019-09-02 02:20:04'),
(491, 5, 256, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q32', 'What is the difference between content values and cursor in android SQlite?', 'What is the difference between content values and cursor in android SQlite?', 7, 125, 3, 6, 98, '2019-09-02 02:20:05', '2019-09-02 02:20:05'),
(492, 5, 127, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q9', 'Commonly used  control to execute commansd when it is clicked.', 'Commonly used  control to execute commansd when it is clicked.', 7, 95, 1, 6, 60, '2019-09-02 02:20:05', '2019-09-02 02:20:05'),
(493, 5, 51, 'CCS102 - COMPUTER PROGRAMMING 1 Q21', 'What is the output of this program?\n\n[[#code18]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class main_class <br />\n    {<br />\n        public static void main(String args[])<br />\n        {<br />\n            int x = 9;<br />\n            if (x == 9) <br />\n            { <br />\n                int x = 8;<br />\n                System.out.println(x);<br />\n            }<br />\n        } <br />\n    }</code></pre>', 7, 90, 2, 6, 27, '2019-09-02 02:20:05', '2019-09-02 02:20:05'),
(494, 5, 32, 'CCS102 - COMPUTER PROGRAMMING 1 - Q2', 'Which of the following is a reserved keyword in C#?', 'Which of the following is a reserved keyword in C#?', 7, 90, 1, 6, 21, '2019-09-02 02:20:05', '2019-09-02 02:20:05'),
(495, 5, 126, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q8', 'A control used to show a list of strings which you can select.', 'A control used to show a list of strings which you can select.', 7, 95, 1, 6, 56, '2019-09-02 02:20:05', '2019-09-02 02:20:05'),
(496, 5, 68, 'Describing two-dimensional motion with vectors', 'A golfer hits a golf ball upwards at an angle of 75°, degree with the horizontal. We can ignore air resistance.\n\n[[#img22]]\n\nWhich graph best describes the golf ball\'s vertical displacement over time?\n\nAssume the origin of the coordinate system to be the point on the ground where the ball was initially at rest.', 'A golfer hits a golf ball upwards at an angle of 75°, degree with the horizontal. We can ignore air resistance.<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/MYpfYGJo93eMWxPVag4ii0jWIwamFw8EKp4yFlbj.png\" width=\"300\" height=\"150\" /><br />\n<br />\nWhich graph best describes the golf ball\'s vertical displacement over time?<br />\n<br />\nAssume the origin of the coordinate system to be the point on the ground where the ball was initially at rest.', 7, 89, 1, 6, 3, '2019-09-02 02:20:05', '2019-09-02 02:20:05'),
(497, 5, 124, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q6', 'This data type stores the address of the value which means that they refer to a memory location.', 'This data type stores the address of the value which means that they refer to a memory location.', 7, 95, 1, 6, 52, '2019-09-02 02:20:05', '2019-09-02 02:20:05'),
(498, 5, 136, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q18', 'Private Button print = new button();', 'Private Button print = new button();', 7, 95, 2, 6, 61, '2019-09-02 02:20:05', '2019-09-02 02:20:05'),
(499, 5, 90, 'CCS101 - INTRODUCTION TO COMPUTING - Q4', 'A letter, digit, or special character is represented by a code in a ___.', 'A letter, digit, or special character is represented by a code in a ___.', 7, 89, 3, 6, 15, '2019-09-02 02:20:05', '2019-09-02 02:20:05'),
(500, 5, 155, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q15', 'Let the set A is {1, 2, 3} and B is {2, 3, 4}. Then number of elements in A U B is _____.', 'Let the set A is {1, 2, 3} and B is {2, 3, 4}. Then number of elements in A U B is _____.', 7, 96, 1, 6, 69, '2019-09-02 02:20:05', '2019-09-02 02:20:05'),
(501, 6, 113, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q23', 'Five different books (A, B, C, D and E) are to be arranged on a shelf. Books C and D are to be arranged first and second starting from the right of the shelf. The number of different orders in which books A, B and E may be arranged is', 'Five different books (A, B, C, D and E) are to be arranged on a shelf. Books C and D are to be arranged first and second starting from the right of the shelf. The number of different orders in which books A, B and E may be arranged is', 7, 92, 2, 6, 48, '2019-09-02 02:28:58', '2019-09-02 02:28:58'),
(502, 6, 79, 'CCS101 - INTRODUCTION TO COMPUTING -Q18', 'Which of the following is/are not part of the CPU?', 'Which of the following is/are not part of the CPU?', 7, 89, 3, 6, 16, '2019-09-02 02:28:59', '2019-09-02 02:28:59'),
(503, 6, 246, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q22', 'Which of  the following holds Java source code for the application?', 'Which of  the following holds Java source code for the application?', 7, 125, 2, 6, 94, '2019-09-02 02:28:59', '2019-09-02 02:28:59'),
(504, 6, 220, 'Computer Hardware - Q2', 'An input device that reads printed text and graphics and transfers them to a computer in digital form.', 'An input device that reads printed text and graphics and transfers them to a computer in digital form.', 7, 89, 1, 6, 7, '2019-09-02 02:28:59', '2019-09-02 02:28:59'),
(505, 6, 99, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q9', 'Evaluate the following:\n \nlog<sub>4</sub> 25', 'Evaluate the following:<br />\n <br />\nlog<sub>4</sub> 25', 7, 92, 1, 6, 41, '2019-09-02 02:28:59', '2019-09-02 02:28:59'),
(506, 6, 50, 'CCS102 - COMPUTER PROGRAMMING Q20', 'What happens when thread\'s yield() method is called?', 'What happens when thread\'s yield() method is called?', 7, 90, 2, 6, 28, '2019-09-02 02:28:59', '2019-09-02 02:28:59'),
(507, 6, 225, 'CCS101 - INTRODUCTION TO COMPUTING - Q7', 'Converting (1010111)<sub>2</sub> to base yields which of the following results?', 'Converting (1010111)<sub>2</sub> to base yields which of the following results?', 7, 89, 2, 6, 11, '2019-09-02 02:28:59', '2019-09-02 02:28:59'),
(508, 6, 215, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q15', 'Which is the latest mobile version of android?', 'Which is the latest mobile version of android?', 7, 125, 1, 6, 91, '2019-09-02 02:28:59', '2019-09-02 02:28:59'),
(509, 6, 151, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q11', 'Two sets are called disjoint if there _____________ is the empty set.', 'Two sets are called disjoint if there _____________ is the empty set.', 7, 96, 1, 6, 73, '2019-09-02 02:28:59', '2019-09-02 02:28:59'),
(510, 6, 61, 'CCS102 - COMPUTER PROGRAMMING 1 Q31', 'Where is array stored in memory?', 'Where is array stored in memory?', 7, 90, 2, 6, 31, '2019-09-02 02:28:59', '2019-09-02 02:28:59'),
(511, 6, 77, 'CCS101 - INTRODUCTION TO COMPUTING - Q20', 'A programming error that occurs when running a program produces incorrect results.', 'A programming error that occurs when running a program produces incorrect results.', 7, 89, 1, 6, 9, '2019-09-02 02:28:59', '2019-09-02 02:28:59'),
(512, 6, 140, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q22', 'A _______ is an identifier that denotes a storage location.', 'A _______ is an identifier that denotes a storage location.', 7, 95, 2, 6, 63, '2019-09-02 02:28:59', '2019-09-02 02:28:59'),
(513, 6, 150, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q10', 'The intersection of the sets {1, 2, 5} and {1, 2, 6} is the set _____________.', 'The intersection of the sets {1, 2, 5} and {1, 2, 6} is the set _____________.', 7, 96, 1, 6, 74, '2019-09-02 02:28:59', '2019-09-02 02:28:59'),
(514, 6, 256, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q32', 'What is the difference between content values and cursor in android SQlite?', 'What is the difference between content values and cursor in android SQlite?', 7, 125, 3, 6, 98, '2019-09-02 02:28:59', '2019-09-02 02:28:59'),
(515, 6, 214, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q14', 'Android is based on which kernel?', 'Android is based on which kernel?', 7, 125, 1, 6, 89, '2019-09-02 02:28:59', '2019-09-02 02:28:59'),
(516, 6, 1, 'Solving for basic equation - Q1', 'solve for x:\n2x + 3 = 5', 'solve for x:<br />\n2x + 3 = 5', 7, 92, 1, 6, 36, '2019-09-02 02:28:59', '2019-09-02 02:28:59'),
(517, 6, 119, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q1', 'This is a repetition control stricture that allows you to efficiently write a loop that needs to execute a specific number of times.', 'This is a repetition control stricture that allows you to efficiently write a loop that needs to execute a specific number of times.', 7, 95, 1, 6, 57, '2019-09-02 02:28:59', '2019-09-02 02:28:59'),
(518, 6, 248, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q24', 'What is the use of content provider in android?', 'What is the use of content provider in android?', 7, 125, 2, 6, 97, '2019-09-02 02:28:59', '2019-09-02 02:28:59'),
(519, 6, 31, 'Order of operation - Q1', 'What is the output of the following code?\n\n[[#code14]]', 'What is the output of the following code?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">double x = 2;<br />\ndouble y = 3;<br />\ndouble z = 5;<br />\n<br />\ndouble output = x + x * y + (x + 2 * z);<br />\n<br />\nSystem.out.println(output);</code></pre>', 7, 90, 1, 6, 20, '2019-09-02 02:28:59', '2019-09-02 02:28:59'),
(520, 6, 52, 'CCS102 - COMPUTER PROGRAMMING 1 Q22', 'What is the output of this program?\n\n[[#code19]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class box <br />\n    {<br />\n        int width;<br />\n        int height;<br />\n        int length;<br />\n    } <br />\n    class mainclass <br />\n    {<br />\n        public static void main(String args[]) <br />\n        {        <br />\n             box obj = new box();<br />\n             obj.width = 10;<br />\n             obj.height = 2;<br />\n             obj.length = 10;<br />\n             int y = obj.width * obj.height * obj.length; <br />\n             System.out.print(y);<br />\n        } <br />\n    }</code></pre>', 7, 90, 3, 6, 32, '2019-09-02 02:28:59', '2019-09-02 02:28:59'),
(521, 6, 114, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q24', 'The mean of a data set is equal to 10 and its standard deviation is equal to 1. If we add 5 to each data value, then the mean and standard deviation become', 'The mean of a data set is equal to 10 and its standard deviation is equal to 1. If we add 5 to each data value, then the mean and standard deviation become', 7, 92, 2, 6, 45, '2019-09-02 02:28:59', '2019-09-02 02:28:59'),
(522, 6, 97, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q7', 'The expression (3i - 2)(i + 1) - 7 can be simplified to which of the following expressions?', 'The expression (3i - 2)(i + 1) - 7 can be simplified to which of the following expressions?', 7, 92, 2, 6, 46, '2019-09-02 02:28:59', '2019-09-02 02:28:59'),
(523, 6, 66, 'Binary to decimal conversion 1', 'Convert 10100011 from binary to decimal.', 'Convert 10100011 from binary to decimal.', 7, 89, 1, 6, 8, '2019-09-02 02:28:59', '2019-09-02 02:28:59'),
(524, 6, 252, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q28', 'What is bean class in android?', 'What is bean class in android?', 7, 125, 3, 6, 99, '2019-09-02 02:28:59', '2019-09-02 02:28:59'),
(525, 6, 286, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q30', 'The probability that an electronic device produced by a company does not function properly is equal to 0.1. If 10 devices are bought, then the probability, to the nearest thousandth, that 7 devices function properly is', 'The probability that an electronic device produced by a company does not function properly is equal to 0.1. If 10 devices are bought, then the probability, to the nearest thousandth, that 7 devices function properly is', 7, 92, 3, 6, 49, '2019-09-02 02:28:59', '2019-09-02 02:28:59'),
(526, 6, 87, 'CCS101 - INTRODUCTION TO COMPUTING - Q8', '____________ are the four general operations that are performed in each machine cycle.', '____________ are the four general operations that are performed in each machine cycle.', 7, 89, 2, 6, 14, '2019-09-02 02:28:59', '2019-09-02 02:28:59'),
(527, 6, 122, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q4', 'These operators take two operands, such as arithmetic operators (+,-,*,/).', 'These operators take two operands, such as arithmetic operators (+,-,*,/).', 7, 95, 1, 6, 53, '2019-09-02 02:28:59', '2019-09-02 02:28:59'),
(528, 6, 78, 'CCS101 - INTRODUCTION TO COMPUTING -  Q19', 'This coding system is designed to support international languages like Chinese and Japanese.', 'This coding system is designed to support international languages like Chinese and Japanese.', 7, 89, 3, 6, 17, '2019-09-02 02:29:00', '2019-09-02 02:29:00'),
(529, 6, 144, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q4', 'What is the cardinality of the set of odd positive integers less than 10?', 'What is the cardinality of the set of odd positive integers less than 10?', 7, 96, 1, 6, 71, '2019-09-02 02:29:00', '2019-09-02 02:29:00'),
(530, 6, 243, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q19', 'Android provides a few standard themes, listed in ________.', 'Android provides a few standard themes, listed in ________.', 7, 125, 2, 6, 96, '2019-09-02 02:29:00', '2019-09-02 02:29:00'),
(531, 6, 283, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q32', 'You have a TextBox control and a Help button that the user can press to get help on allowable values. You validate the data entered by the user in the TextBox control. If the user enters an invalid value, you set the focus back in the control using the Cancel property of the CancelEventArgs. A user reports that once he enters invalid data in the text box, he cannot click the Help button. What should you do to correct the problem?', 'You have a TextBox control and a Help button that the user can press to get help on allowable values. You validate the data entered by the user in the TextBox control. If the user enters an invalid value, you set the focus back in the control using the Cancel property of the CancelEventArgs. A user reports that once he enters invalid data in the text box, he cannot click the Help button. What should you do to correct the problem?', 7, 95, 3, 6, 67, '2019-09-02 02:29:00', '2019-09-02 02:29:00'),
(532, 6, 149, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q9', 'The union of the sets {1, 2, 5} and {1, 2, 6} is the set _______________.', 'The union of the sets {1, 2, 5} and {1, 2, 6} is the set _______________.', 7, 96, 2, 6, 81, '2019-09-02 02:29:00', '2019-09-02 02:29:00'),
(533, 6, 205, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q5', 'For ___________, code used by Android is not open source.', 'For ___________, code used by Android is not open source.', 7, 125, 1, 6, 90, '2019-09-02 02:29:00', '2019-09-02 02:29:00'),
(534, 6, 116, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q26', 'If f(x) is an odd function, then | f(x) | is', 'If f(x) is an odd function, then | f(x) | is', 7, 92, 2, 6, 44, '2019-09-02 02:29:00', '2019-09-02 02:29:00'),
(535, 6, 260, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q23', 'In the given figure the if n(A)=20,n(U)=50,n(C)=10 and n(A∩B)=5 then n(B)=? \n\n[[#img34]]', 'In the given figure the if n(A)=20,n(U)=50,n(C)=10 and n(A∩B)=5 then n(B)=? <br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/23B9WIeQ00wE4pw7nsRG6le8KJWkZ1jI9HG7nYv3.jpeg\" width=\"300\" height=\"150\" />', 7, 96, 2, 6, 80, '2019-09-02 02:29:00', '2019-09-02 02:29:00'),
(536, 6, 92, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q2', 'Solve the inequality \n4x + 8 > 5x +9', 'Solve the inequality <br />\n4x + 8 > 5x +9', 7, 92, 1, 6, 37, '2019-09-02 02:29:00', '2019-09-02 02:29:00'),
(537, 6, 95, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q5', 'What is the square root of -144?', 'What is the square root of -144?', 7, 92, 1, 6, 38, '2019-09-02 02:29:00', '2019-09-02 02:29:00'),
(538, 6, 156, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q16', 'If A has 4 elements B has 8 elements then the minimum and maximum number of elements in A U B are respectively', 'If A has 4 elements B has 8 elements then the minimum and maximum number of elements in A U B are respectively', 7, 96, 1, 6, 75, '2019-09-02 02:29:00', '2019-09-02 02:29:00'),
(539, 6, 70, 'Projectile motion 2', 'An adventurous cliff jumper runs horizontally off a cliff. We can ignore air resistance.\n\n[[#img27]]\n\nWhich diagram best describes the horizontal velocity vectors and trajectory during the person’s fall?\n\nAssume the origin of the coordinate system to be the cliff edge.\n\nA red dot represents a vector of zero magnitude.', 'An adventurous cliff jumper runs horizontally off a cliff. We can ignore air resistance.<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/PgCOEtvEENxNaqgGLMWLrysCTt8GwyXUqH8p2sz7.png\" width=\"200\" height=\"200\" /><br />\n<br />\nWhich diagram best describes the horizontal velocity vectors and trajectory during the person’s fall?<br />\n<br />\nAssume the origin of the coordinate system to be the cliff edge.<br />\n<br />\nA red dot represents a vector of zero magnitude.', 7, 89, 1, 6, 4, '2019-09-02 02:29:00', '2019-09-02 02:29:00'),
(540, 6, 40, 'CCS102 - COMPUTER PROGRAMMING 1 Q10', 'Static binding uses which information for binding?', 'Static binding uses which information for binding?', 7, 90, 1, 6, 23, '2019-09-02 02:29:00', '2019-09-02 02:29:00'),
(541, 6, 244, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q20', 'To update contents of content provider using curser and commit you need to call _______________.', 'To update contents of content provider using curser and commit you need to call _______________.', 7, 125, 2, 6, 95, '2019-09-02 02:29:00', '2019-09-02 02:29:00'),
(542, 6, 132, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q14', 'C# treats the multiple catch statements like cases in a _____________ statement.', 'C# treats the multiple catch statements like cases in a _____________ statement.', 7, 95, 1, 6, 58, '2019-09-02 02:29:00', '2019-09-02 02:29:00'),
(543, 6, 138, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q20', 'A method_____an exception when that method detects that a problem has occured.', 'A method_____an exception when that method detects that a problem has occured.', 7, 95, 2, 6, 65, '2019-09-02 02:29:00', '2019-09-02 02:29:00'),
(544, 6, 108, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q18', 'The population of a country increased by an average of 2% per year from 2000 to 2003. If the population of this country was 2 000 000 on December 31, 2003, then the population of this country on January 1, 2000, to the nearest thousand would have been', 'The population of a country increased by an average of 2% per year from 2000 to 2003. If the population of this country was 2 000 000 on December 31, 2003, then the population of this country on January 1, 2000, to the nearest thousand would have been', 7, 92, 3, 6, 50, '2019-09-02 02:29:00', '2019-09-02 02:29:00'),
(545, 6, 42, 'CCS102 - COMPUTER PROGRAMMING 1 Q12', 'Which of the following is not a keyword in java?', 'Which of the following is not a keyword in java?', 7, 90, 1, 6, 18, '2019-09-02 02:29:00', '2019-09-02 02:29:00'),
(546, 6, 270, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q33', 'In the given AP series the term at position 11 would be\n5, 8, 11, 14, 17, 20………50.', 'In the given AP series the term at position 11 would be<br />\n5, 8, 11, 14, 17, 20………50.', 7, 96, 3, 6, 82, '2019-09-02 02:29:00', '2019-09-02 02:29:00'),
(547, 6, 212, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q12', 'Which company bought android?', 'Which company bought android?', 7, 125, 1, 6, 93, '2019-09-02 02:29:00', '2019-09-02 02:29:00'),
(548, 6, 207, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q7', 'ABD stands for', 'ABD stands for', 7, 125, 1, 6, 88, '2019-09-02 02:29:00', '2019-09-02 02:29:00'),
(549, 6, 111, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q21', 'For x greater than or equal to zero and less than or equal to 2 π, sin x and cos x are both decreasing on the intervals', 'For x greater than or equal to zero and less than or equal to 2 π, sin x and cos x are both decreasing on the intervals', 7, 92, 2, 6, 47, '2019-09-02 02:29:00', '2019-09-02 02:29:00'),
(550, 6, 285, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q29', 'The period of 2 sin x cos x is', 'The period of 2 sin x cos x is', 7, 92, 1, 6, 35, '2019-09-02 02:29:00', '2019-09-02 02:29:00'),
(551, 6, 277, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q26', 'Which of the following will result from compiling this code, assuming that all other code for your form works properly?\n\n[[#code27]]', 'Which of the following will result from compiling this code, assuming that all other code for your form works properly?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">csharp</span></div><pre><code class=\"language-csharp\">try<br />\n{<br />\n  //Write code to allocate some resources<br />\n}<br />\nfinally<br />\n{<br />\n  //Write code to Dispose all allocated resources<br />\n}</code></pre>', 7, 95, 3, 6, 66, '2019-09-02 02:29:00', '2019-09-02 02:29:00'),
(552, 6, 90, 'CCS101 - INTRODUCTION TO COMPUTING - Q4', 'A letter, digit, or special character is represented by a code in a ___.', 'A letter, digit, or special character is represented by a code in a ___.', 7, 89, 3, 6, 15, '2019-09-02 02:29:00', '2019-09-02 02:29:00'),
(553, 6, 204, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q4', 'Android supports which features.', 'Android supports which features.', 7, 125, 1, 6, 92, '2019-09-02 02:29:00', '2019-09-02 02:29:00'),
(554, 6, 137, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q19', 'Polymorphism occurs when the methods of the child class.', 'Polymorphism occurs when the methods of the child class.', 7, 95, 2, 6, 62, '2019-09-02 02:29:00', '2019-09-02 02:29:00'),
(555, 6, 202, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q2', 'What is android?', 'What is android?', 7, 125, 1, 6, 86, '2019-09-02 02:29:00', '2019-09-02 02:29:00'),
(556, 6, 147, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q7', 'The set of positive integers is _____________.', 'The set of positive integers is _____________.', 7, 96, 1, 6, 70, '2019-09-02 02:29:00', '2019-09-02 02:29:00'),
(557, 6, 107, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q17', 'If Log <sub>4 </sub>(x) = 12, then log 2 (x / 4) is equal to', 'If Log <sub>4 </sub>(x) = 12, then log 2 (x / 4) is equal to', 7, 92, 1, 6, 40, '2019-09-02 02:29:00', '2019-09-02 02:29:00'),
(558, 6, 39, 'CCS102 - COMPUTER PROGRAMMING 1 Q9', 'What of the following is the default value of an instance variable?', 'What of the following is the default value of an instance variable?', 7, 90, 1, 6, 25, '2019-09-02 02:29:00', '2019-09-02 02:29:00'),
(559, 6, 112, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q22', 'A school committee consists of 2 teachers and 4 students. The number of different committees that can be formed from 5 teachers and 10 students is', 'A school committee consists of 2 teachers and 4 students. The number of different committees that can be formed from 5 teachers and 10 students is', 7, 92, 1, 6, 42, '2019-09-02 02:29:00', '2019-09-02 02:29:00'),
(560, 6, 48, 'CCS102 - COMPUTER PROGRAMMING 1 Q18', 'What is JRE?', 'What is JRE?', 7, 90, 2, 6, 29, '2019-09-02 02:29:00', '2019-09-02 02:29:00'),
(561, 6, 51, 'CCS102 - COMPUTER PROGRAMMING 1 Q21', 'What is the output of this program?\n\n[[#code18]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class main_class <br />\n    {<br />\n        public static void main(String args[])<br />\n        {<br />\n            int x = 9;<br />\n            if (x == 9) <br />\n            { <br />\n                int x = 8;<br />\n                System.out.println(x);<br />\n            }<br />\n        } <br />\n    }</code></pre>', 7, 90, 2, 6, 27, '2019-09-02 02:29:00', '2019-09-02 02:29:00'),
(562, 6, 104, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q14', 'What is the result when you put the expression x<sup>2</sup> +10x+41 into vertex form by completing the square ?', 'What is the result when you put the expression x<sup>2</sup> +10x+41 into vertex form by completing the square ?', 7, 92, 3, 6, 51, '2019-09-02 02:29:00', '2019-09-02 02:29:00'),
(563, 6, 143, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q3', 'Power set of empty set has exactly _________ subset.', 'Power set of empty set has exactly _________ subset.', 7, 96, 1, 6, 77, '2019-09-02 02:29:01', '2019-09-02 02:29:01'),
(564, 6, 127, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q9', 'Commonly used  control to execute commansd when it is clicked.', 'Commonly used  control to execute commansd when it is clicked.', 7, 95, 1, 6, 60, '2019-09-02 02:29:01', '2019-09-02 02:29:01'),
(565, 6, 33, 'IT01- CCS102 - COMPUTER PROGRAMMING 1 - Q3', 'Which of the following converts a type to a double type in C#?', 'Which of the following converts a type to a double type in C#?', 7, 90, 1, 6, 26, '2019-09-02 02:29:01', '2019-09-02 02:29:01'),
(566, 6, 211, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q11', 'Web browser available in android based on', 'Web browser available in android based on', 7, 125, 1, 6, 85, '2019-09-02 02:29:01', '2019-09-02 02:29:01'),
(567, 6, 74, 'CCS101 - INTRODUCTION TO COMPUTING - Q23', 'An electronic tool that allows information to be input, processed, and output.', 'An electronic tool that allows information to be input, processed, and output.', 7, 89, 1, 6, 6, '2019-09-02 02:29:01', '2019-09-02 02:29:01'),
(568, 6, 160, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q20', 'The shaded area of figure is best described by\n\n[[#img32]]', 'The shaded area of figure is best described by<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/5iL0Nsol7VkygnPftlQm5guoA5NqiGISBGevRke8.jpeg\" width=\"300\" height=\"150\" />', 7, 96, 3, 6, 83, '2019-09-02 02:29:01', '2019-09-02 02:29:01'),
(569, 6, 121, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q3', 'These are additional operators used to return Boolean values.', 'These are additional operators used to return Boolean values.', 7, 95, 1, 6, 55, '2019-09-02 02:29:01', '2019-09-02 02:29:01'),
(570, 6, 38, 'CCS102 - COMPUTER PROGRAMMING 1 - Q8', 'Which of the following is true about try block in C#?', 'Which of the following is true about try block in C#?', 7, 90, 1, 6, 19, '2019-09-02 02:29:01', '2019-09-02 02:29:01'),
(571, 6, 57, 'CCS102 - COMPUTER PROGRAMMING 1 Q27', 'Which of these is necessary to specify at time of array initialization?', 'Which of these is necessary to specify at time of array initialization?', 7, 90, 2, 6, 30, '2019-09-02 02:29:01', '2019-09-02 02:29:01'),
(572, 6, 41, 'CCS102 - COMPUTER PROGRAMMING 1 Q11', 'What is correct syntax for main method of a java class?', 'What is correct syntax for main method of a java class?', 7, 90, 1, 6, 24, '2019-09-02 02:29:01', '2019-09-02 02:29:01'),
(573, 6, 142, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q2', 'The set O of odd positive integers less than 10 can be expressed by _____________.', 'The set O of odd positive integers less than 10 can be expressed by _____________.', 7, 96, 1, 6, 76, '2019-09-02 02:29:01', '2019-09-02 02:29:01'),
(574, 6, 82, 'CCS101 - INTRODUCTION TO COMPUTING - Q15', '10111 is the two\'s complement representation of', '10111 is the two\'s complement representation of', 7, 89, 1, 6, 5, '2019-09-02 02:29:01', '2019-09-02 02:29:01'),
(575, 6, 148, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q8', 'What is the Cardinality of the Power set of the set {0, 1, 2}.', 'What is the Cardinality of the Power set of the set {0, 1, 2}.', 7, 96, 1, 6, 72, '2019-09-02 02:29:01', '2019-09-02 02:29:01'),
(576, 6, 68, 'Describing two-dimensional motion with vectors', 'A golfer hits a golf ball upwards at an angle of 75°, degree with the horizontal. We can ignore air resistance.\n\n[[#img22]]\n\nWhich graph best describes the golf ball\'s vertical displacement over time?\n\nAssume the origin of the coordinate system to be the point on the ground where the ball was initially at rest.', 'A golfer hits a golf ball upwards at an angle of 75°, degree with the horizontal. We can ignore air resistance.<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/MYpfYGJo93eMWxPVag4ii0jWIwamFw8EKp4yFlbj.png\" width=\"300\" height=\"150\" /><br />\n<br />\nWhich graph best describes the golf ball\'s vertical displacement over time?<br />\n<br />\nAssume the origin of the coordinate system to be the point on the ground where the ball was initially at rest.', 7, 89, 1, 6, 3, '2019-09-02 02:29:01', '2019-09-02 02:29:01'),
(577, 6, 131, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q13', 'A method of MessageBox class that allows you to call a message box for prompting user with messages and information.', 'A method of MessageBox class that allows you to call a message box for prompting user with messages and information.', 7, 95, 1, 6, 59, '2019-09-02 02:29:01', '2019-09-02 02:29:01'),
(578, 6, 34, 'IT01- CCS102 - COMPUTER PROGRAMMING 1 - Q4', 'Which of the following operator returns the size of a data type in C#?', 'Which of the following operator returns the size of a data type in C#?', 7, 90, 1, 6, 22, '2019-09-02 02:29:01', '2019-09-02 02:29:01'),
(579, 6, 289, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q33', 'A number of the form 213ab, where a and b are digits, has a reminder less than 10 when divided by 100. The sum of all the digits in the above number is equal to 13. Find the digit b.', 'A number of the form 213ab, where a and b are digits, has a reminder less than 10 when divided by 100. The sum of all the digits in the above number is equal to 13. Find the digit b.', 7, 92, 1, 6, 43, '2019-09-02 02:29:01', '2019-09-02 02:29:01'),
(580, 6, 162, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q22', 'If n(A)=10 , n(B)=30,n(C)=50 and if set A,B,C are pairwise disjoint then which of the following is correct?', 'If n(A)=10 , n(B)=30,n(C)=50 and if set A,B,C are pairwise disjoint then which of the following is correct?', 7, 96, 2, 6, 79, '2019-09-02 02:29:01', '2019-09-02 02:29:01'),
(581, 6, 72, 'CCS101 - INTRODUCTION TO COMPUTING - Q25', 'What type of software is a screen saver?', 'What type of software is a screen saver?', 7, 89, 2, 6, 12, '2019-09-02 02:29:01', '2019-09-02 02:29:01'),
(582, 6, 203, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q3', 'Android doesn\'t  support which format?', 'Android doesn\'t  support which format?', 7, 125, 1, 6, 87, '2019-09-02 02:29:01', '2019-09-02 02:29:01'),
(583, 6, 124, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q6', 'This data type stores the address of the value which means that they refer to a memory location.', 'This data type stores the address of the value which means that they refer to a memory location.', 7, 95, 1, 6, 52, '2019-09-02 02:29:01', '2019-09-02 02:29:01'),
(584, 6, 59, 'CCS102 - COMPUTER PROGRAMMING 1 Q29', 'What is the output of this program?\n\n[[#code24]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class evaluate <br />\n    {<br />\n        public static void main(String args[]) <br />\n            {<br />\n	        int arr[] = new int[] {0 , 1, 2, 3, 4, 5, 6, 7, 8, 9};<br />\n	        int n = 6;<br />\n                n = arr[arr[n] / 2];<br />\n	        System.out.println(arr[n] / 2);<br />\n            } <br />\n    }</code></pre>', 7, 90, 3, 6, 34, '2019-09-02 02:29:01', '2019-09-02 02:29:01'),
(585, 6, 254, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q30', 'What is an HTTP client class in android?', 'What is an HTTP client class in android?', 7, 125, 3, 6, 100, '2019-09-02 02:29:01', '2019-09-02 02:29:01'),
(586, 6, 126, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q8', 'A control used to show a list of strings which you can select.', 'A control used to show a list of strings which you can select.', 7, 95, 1, 6, 56, '2019-09-02 02:29:01', '2019-09-02 02:29:01'),
(587, 6, 219, 'Computer Hardware - Q3', 'A device that enables a computer to communicate over telephone lines.', 'A device that enables a computer to communicate over telephone lines.', 7, 89, 1, 6, 1, '2019-09-02 02:29:01', '2019-09-02 02:29:01'),
(588, 6, 89, 'CCS101 - INTRODUCTION TO COMPUTING - Q5', 'A memory management technique that uses hard drive space as additional RAM.', 'A memory management technique that uses hard drive space as additional RAM.', 7, 89, 1, 6, 2, '2019-09-02 02:29:01', '2019-09-02 02:29:01'),
(589, 6, 223, 'CC101 - INTRODUCTION TO COMPUTING - Q11', 'The sum of 11101 + 10111 equals ________.', 'The sum of 11101 + 10111 equals ________.', 7, 89, 2, 6, 10, '2019-09-02 02:29:01', '2019-09-02 02:29:01'),
(590, 6, 155, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q15', 'Let the set A is {1, 2, 3} and B is {2, 3, 4}. Then number of elements in A U B is _____.', 'Let the set A is {1, 2, 3} and B is {2, 3, 4}. Then number of elements in A U B is _____.', 7, 96, 1, 6, 69, '2019-09-02 02:29:01', '2019-09-02 02:29:01'),
(591, 6, 32, 'CCS102 - COMPUTER PROGRAMMING 1 - Q2', 'Which of the following is a reserved keyword in C#?', 'Which of the following is a reserved keyword in C#?', 7, 90, 1, 6, 21, '2019-09-02 02:29:01', '2019-09-02 02:29:01'),
(592, 6, 129, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q11', 'A control similar to an ordinary label having an underline and resembles a link on a web page.', 'A control similar to an ordinary label having an underline and resembles a link on a web page.', 7, 95, 1, 6, 54, '2019-09-02 02:29:01', '2019-09-02 02:29:01'),
(593, 6, 136, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q18', 'Private Button print = new button();', 'Private Button print = new button();', 7, 95, 2, 6, 61, '2019-09-02 02:29:01', '2019-09-02 02:29:01'),
(594, 6, 58, 'CCS102 - COMPUTER PROGRAMMING 1 Q28', 'What is the output of this program?\n\n[[#code22]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class array_output <br />\n    {<br />\n        public static void main(String args[]) <br />\n        {<br />\n            int array_variable [] = new int[10];<br />\n	    for (int i = 0; i < 10; ++i) <br />\n            {<br />\n                array_variable[i] = i;<br />\n                System.out.print(array_variable[i] + \" \");<br />\n                i++;<br />\n            }<br />\n        } <br />\n    }</code></pre>', 7, 90, 3, 6, 33, '2019-09-02 02:29:01', '2019-09-02 02:29:01'),
(595, 6, 267, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q30', 'A floor function map a real number to :', 'A floor function map a real number to :', 7, 96, 3, 6, 84, '2019-09-02 02:29:01', '2019-09-02 02:29:01'),
(596, 6, 76, 'CCS101 - INTRODUCTION TO COMPUTING _ Q21', '_______ is a duplicate copy of data or other computer content for use in the event that the original version is destroyed.', '_______ is a duplicate copy of data or other computer content for use in the event that the original version is destroyed.', 7, 89, 2, 6, 13, '2019-09-02 02:29:01', '2019-09-02 02:29:01'),
(597, 6, 145, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q5', 'What is the Cartesian product of A = {1, 2} and B = {a, b}?', 'What is the Cartesian product of A = {1, 2} and B = {a, b}?', 7, 96, 2, 6, 78, '2019-09-02 02:29:01', '2019-09-02 02:29:01'),
(598, 6, 278, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q27', 'What will be the output of the following code?\n\n[[#code28]]', 'What will be the output of the following code?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">csharp</span></div><pre><code class=\"language-csharp\">try<br />\n{<br />\n  int num = 100;<br />\n  int den = 0;<br />\n  try<br />\n  {<br />\n    MessageBox.Show(\"Message1\");<br />\n    int res = num/den;<br />\n    MessageBox.Show(\"Message2\");<br />\n  }<br />\n  catch(ArithmeticException ae)<br />\n  {<br />\n    MessageBox.Show(\"Message3\");<br />\n  }<br />\n  MessageBox.Show(\"Message4\");<br />\n}</code></pre>', 7, 95, 3, 6, 68, '2019-09-02 02:29:01', '2019-09-02 02:29:01'),
(599, 6, 275, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q24', 'How should you arrange catch blocks?', 'How should you arrange catch blocks?', 7, 95, 2, 6, 64, '2019-09-02 02:29:01', '2019-09-02 02:29:01'),
(600, 6, 93, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q3', 'If 2x - 8 ≥ 2, then', 'If 2x - 8 ≥ 2, then', 7, 92, 1, 6, 39, '2019-09-02 02:29:01', '2019-09-02 02:29:01'),
(601, 7, 243, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q19', 'Android provides a few standard themes, listed in ________.', 'Android provides a few standard themes, listed in ________.', 7, 125, 2, 6, 96, '2019-09-02 02:34:27', '2019-09-02 02:34:27'),
(602, 7, 68, 'Describing two-dimensional motion with vectors', 'A golfer hits a golf ball upwards at an angle of 75°, degree with the horizontal. We can ignore air resistance.\n\n[[#img22]]\n\nWhich graph best describes the golf ball\'s vertical displacement over time?\n\nAssume the origin of the coordinate system to be the point on the ground where the ball was initially at rest.', 'A golfer hits a golf ball upwards at an angle of 75°, degree with the horizontal. We can ignore air resistance.<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/MYpfYGJo93eMWxPVag4ii0jWIwamFw8EKp4yFlbj.png\" width=\"300\" height=\"150\" /><br />\n<br />\nWhich graph best describes the golf ball\'s vertical displacement over time?<br />\n<br />\nAssume the origin of the coordinate system to be the point on the ground where the ball was initially at rest.', 7, 89, 1, 6, 3, '2019-09-02 02:34:27', '2019-09-02 02:34:27'),
(603, 7, 244, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q20', 'To update contents of content provider using curser and commit you need to call _______________.', 'To update contents of content provider using curser and commit you need to call _______________.', 7, 125, 2, 6, 95, '2019-09-02 02:34:27', '2019-09-02 02:34:27'),
(604, 7, 90, 'CCS101 - INTRODUCTION TO COMPUTING - Q4', 'A letter, digit, or special character is represented by a code in a ___.', 'A letter, digit, or special character is represented by a code in a ___.', 7, 89, 3, 6, 15, '2019-09-02 02:34:27', '2019-09-02 02:34:27'),
(605, 7, 89, 'CCS101 - INTRODUCTION TO COMPUTING - Q5', 'A memory management technique that uses hard drive space as additional RAM.', 'A memory management technique that uses hard drive space as additional RAM.', 7, 89, 1, 6, 2, '2019-09-02 02:34:27', '2019-09-02 02:34:27'),
(606, 7, 138, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q20', 'A method_____an exception when that method detects that a problem has occured.', 'A method_____an exception when that method detects that a problem has occured.', 7, 95, 2, 6, 65, '2019-09-02 02:34:27', '2019-09-02 02:34:27'),
(607, 7, 252, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q28', 'What is bean class in android?', 'What is bean class in android?', 7, 125, 3, 6, 99, '2019-09-02 02:34:27', '2019-09-02 02:34:27');
INSERT INTO `answer_sheet_test_questions` (`id`, `answer_sheet_id`, `test_question_id`, `title`, `body`, `body_html`, `student_outcome_id`, `course_id`, `difficulty_level_id`, `performance_criteria_id`, `pos_order`, `created_at`, `updated_at`) VALUES
(608, 7, 246, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q22', 'Which of  the following holds Java source code for the application?', 'Which of  the following holds Java source code for the application?', 7, 125, 2, 6, 94, '2019-09-02 02:34:27', '2019-09-02 02:34:27'),
(609, 7, 126, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q8', 'A control used to show a list of strings which you can select.', 'A control used to show a list of strings which you can select.', 7, 95, 1, 6, 56, '2019-09-02 02:34:27', '2019-09-02 02:34:27'),
(610, 7, 72, 'CCS101 - INTRODUCTION TO COMPUTING - Q25', 'What type of software is a screen saver?', 'What type of software is a screen saver?', 7, 89, 2, 6, 12, '2019-09-02 02:34:27', '2019-09-02 02:34:27'),
(611, 7, 202, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q2', 'What is android?', 'What is android?', 7, 125, 1, 6, 86, '2019-09-02 02:34:27', '2019-09-02 02:34:27'),
(612, 7, 214, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q14', 'Android is based on which kernel?', 'Android is based on which kernel?', 7, 125, 1, 6, 89, '2019-09-02 02:34:27', '2019-09-02 02:34:27'),
(613, 7, 220, 'Computer Hardware - Q2', 'An input device that reads printed text and graphics and transfers them to a computer in digital form.', 'An input device that reads printed text and graphics and transfers them to a computer in digital form.', 7, 89, 1, 6, 7, '2019-09-02 02:34:27', '2019-09-02 02:34:27'),
(614, 7, 212, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q12', 'Which company bought android?', 'Which company bought android?', 7, 125, 1, 6, 93, '2019-09-02 02:34:27', '2019-09-02 02:34:27'),
(615, 7, 275, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q24', 'How should you arrange catch blocks?', 'How should you arrange catch blocks?', 7, 95, 2, 6, 64, '2019-09-02 02:34:27', '2019-09-02 02:34:27'),
(616, 7, 51, 'CCS102 - COMPUTER PROGRAMMING 1 Q21', 'What is the output of this program?\n\n[[#code18]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class main_class <br />\n    {<br />\n        public static void main(String args[])<br />\n        {<br />\n            int x = 9;<br />\n            if (x == 9) <br />\n            { <br />\n                int x = 8;<br />\n                System.out.println(x);<br />\n            }<br />\n        } <br />\n    }</code></pre>', 7, 90, 2, 6, 27, '2019-09-02 02:34:27', '2019-09-02 02:34:27'),
(617, 7, 48, 'CCS102 - COMPUTER PROGRAMMING 1 Q18', 'What is JRE?', 'What is JRE?', 7, 90, 2, 6, 29, '2019-09-02 02:34:27', '2019-09-02 02:34:27'),
(618, 7, 223, 'CC101 - INTRODUCTION TO COMPUTING - Q11', 'The sum of 11101 + 10111 equals ________.', 'The sum of 11101 + 10111 equals ________.', 7, 89, 2, 6, 10, '2019-09-02 02:34:27', '2019-09-02 02:34:27'),
(619, 7, 270, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q33', 'In the given AP series the term at position 11 would be\n5, 8, 11, 14, 17, 20………50.', 'In the given AP series the term at position 11 would be<br />\n5, 8, 11, 14, 17, 20………50.', 7, 96, 3, 6, 82, '2019-09-02 02:34:27', '2019-09-02 02:34:27'),
(620, 7, 149, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q9', 'The union of the sets {1, 2, 5} and {1, 2, 6} is the set _______________.', 'The union of the sets {1, 2, 5} and {1, 2, 6} is the set _______________.', 7, 96, 2, 6, 81, '2019-09-02 02:34:27', '2019-09-02 02:34:27'),
(621, 7, 124, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q6', 'This data type stores the address of the value which means that they refer to a memory location.', 'This data type stores the address of the value which means that they refer to a memory location.', 7, 95, 1, 6, 52, '2019-09-02 02:34:27', '2019-09-02 02:34:27'),
(622, 7, 203, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q3', 'Android doesn\'t  support which format?', 'Android doesn\'t  support which format?', 7, 125, 1, 6, 87, '2019-09-02 02:34:27', '2019-09-02 02:34:27'),
(623, 7, 41, 'CCS102 - COMPUTER PROGRAMMING 1 Q11', 'What is correct syntax for main method of a java class?', 'What is correct syntax for main method of a java class?', 7, 90, 1, 6, 24, '2019-09-02 02:34:28', '2019-09-02 02:34:28'),
(624, 7, 79, 'CCS101 - INTRODUCTION TO COMPUTING -Q18', 'Which of the following is/are not part of the CPU?', 'Which of the following is/are not part of the CPU?', 7, 89, 3, 6, 16, '2019-09-02 02:34:28', '2019-09-02 02:34:28'),
(625, 7, 142, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q2', 'The set O of odd positive integers less than 10 can be expressed by _____________.', 'The set O of odd positive integers less than 10 can be expressed by _____________.', 7, 96, 1, 6, 76, '2019-09-02 02:34:28', '2019-09-02 02:34:28'),
(626, 7, 74, 'CCS101 - INTRODUCTION TO COMPUTING - Q23', 'An electronic tool that allows information to be input, processed, and output.', 'An electronic tool that allows information to be input, processed, and output.', 7, 89, 1, 6, 6, '2019-09-02 02:34:28', '2019-09-02 02:34:28'),
(627, 7, 289, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q33', 'A number of the form 213ab, where a and b are digits, has a reminder less than 10 when divided by 100. The sum of all the digits in the above number is equal to 13. Find the digit b.', 'A number of the form 213ab, where a and b are digits, has a reminder less than 10 when divided by 100. The sum of all the digits in the above number is equal to 13. Find the digit b.', 7, 92, 1, 6, 43, '2019-09-02 02:34:28', '2019-09-02 02:34:28'),
(628, 7, 285, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q29', 'The period of 2 sin x cos x is', 'The period of 2 sin x cos x is', 7, 92, 1, 6, 35, '2019-09-02 02:34:28', '2019-09-02 02:34:28'),
(629, 7, 140, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q22', 'A _______ is an identifier that denotes a storage location.', 'A _______ is an identifier that denotes a storage location.', 7, 95, 2, 6, 63, '2019-09-02 02:34:28', '2019-09-02 02:34:28'),
(630, 7, 131, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q13', 'A method of MessageBox class that allows you to call a message box for prompting user with messages and information.', 'A method of MessageBox class that allows you to call a message box for prompting user with messages and information.', 7, 95, 1, 6, 59, '2019-09-02 02:34:28', '2019-09-02 02:34:28'),
(631, 7, 119, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q1', 'This is a repetition control stricture that allows you to efficiently write a loop that needs to execute a specific number of times.', 'This is a repetition control stricture that allows you to efficiently write a loop that needs to execute a specific number of times.', 7, 95, 1, 6, 57, '2019-09-02 02:34:28', '2019-09-02 02:34:28'),
(632, 7, 113, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q23', 'Five different books (A, B, C, D and E) are to be arranged on a shelf. Books C and D are to be arranged first and second starting from the right of the shelf. The number of different orders in which books A, B and E may be arranged is', 'Five different books (A, B, C, D and E) are to be arranged on a shelf. Books C and D are to be arranged first and second starting from the right of the shelf. The number of different orders in which books A, B and E may be arranged is', 7, 92, 2, 6, 48, '2019-09-02 02:34:28', '2019-09-02 02:34:28'),
(633, 7, 39, 'CCS102 - COMPUTER PROGRAMMING 1 Q9', 'What of the following is the default value of an instance variable?', 'What of the following is the default value of an instance variable?', 7, 90, 1, 6, 25, '2019-09-02 02:34:28', '2019-09-02 02:34:28'),
(634, 7, 286, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q30', 'The probability that an electronic device produced by a company does not function properly is equal to 0.1. If 10 devices are bought, then the probability, to the nearest thousandth, that 7 devices function properly is', 'The probability that an electronic device produced by a company does not function properly is equal to 0.1. If 10 devices are bought, then the probability, to the nearest thousandth, that 7 devices function properly is', 7, 92, 3, 6, 49, '2019-09-02 02:34:28', '2019-09-02 02:34:28'),
(635, 7, 160, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q20', 'The shaded area of figure is best described by\n\n[[#img32]]', 'The shaded area of figure is best described by<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/5iL0Nsol7VkygnPftlQm5guoA5NqiGISBGevRke8.jpeg\" width=\"300\" height=\"150\" />', 7, 96, 3, 6, 83, '2019-09-02 02:34:28', '2019-09-02 02:34:28'),
(636, 7, 114, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q24', 'The mean of a data set is equal to 10 and its standard deviation is equal to 1. If we add 5 to each data value, then the mean and standard deviation become', 'The mean of a data set is equal to 10 and its standard deviation is equal to 1. If we add 5 to each data value, then the mean and standard deviation become', 7, 92, 2, 6, 45, '2019-09-02 02:34:28', '2019-09-02 02:34:28'),
(637, 7, 50, 'CCS102 - COMPUTER PROGRAMMING Q20', 'What happens when thread\'s yield() method is called?', 'What happens when thread\'s yield() method is called?', 7, 90, 2, 6, 28, '2019-09-02 02:34:28', '2019-09-02 02:34:28'),
(638, 7, 215, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q15', 'Which is the latest mobile version of android?', 'Which is the latest mobile version of android?', 7, 125, 1, 6, 91, '2019-09-02 02:34:28', '2019-09-02 02:34:28'),
(639, 7, 61, 'CCS102 - COMPUTER PROGRAMMING 1 Q31', 'Where is array stored in memory?', 'Where is array stored in memory?', 7, 90, 2, 6, 31, '2019-09-02 02:34:28', '2019-09-02 02:34:28'),
(640, 7, 278, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q27', 'What will be the output of the following code?\n\n[[#code28]]', 'What will be the output of the following code?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">csharp</span></div><pre><code class=\"language-csharp\">try<br />\n{<br />\n  int num = 100;<br />\n  int den = 0;<br />\n  try<br />\n  {<br />\n    MessageBox.Show(\"Message1\");<br />\n    int res = num/den;<br />\n    MessageBox.Show(\"Message2\");<br />\n  }<br />\n  catch(ArithmeticException ae)<br />\n  {<br />\n    MessageBox.Show(\"Message3\");<br />\n  }<br />\n  MessageBox.Show(\"Message4\");<br />\n}</code></pre>', 7, 95, 3, 6, 68, '2019-09-02 02:34:28', '2019-09-02 02:34:28'),
(641, 7, 162, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q22', 'If n(A)=10 , n(B)=30,n(C)=50 and if set A,B,C are pairwise disjoint then which of the following is correct?', 'If n(A)=10 , n(B)=30,n(C)=50 and if set A,B,C are pairwise disjoint then which of the following is correct?', 7, 96, 2, 6, 79, '2019-09-02 02:34:28', '2019-09-02 02:34:28'),
(642, 7, 87, 'CCS101 - INTRODUCTION TO COMPUTING - Q8', '____________ are the four general operations that are performed in each machine cycle.', '____________ are the four general operations that are performed in each machine cycle.', 7, 89, 2, 6, 14, '2019-09-02 02:34:28', '2019-09-02 02:34:28'),
(643, 7, 52, 'CCS102 - COMPUTER PROGRAMMING 1 Q22', 'What is the output of this program?\n\n[[#code19]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class box <br />\n    {<br />\n        int width;<br />\n        int height;<br />\n        int length;<br />\n    } <br />\n    class mainclass <br />\n    {<br />\n        public static void main(String args[]) <br />\n        {        <br />\n             box obj = new box();<br />\n             obj.width = 10;<br />\n             obj.height = 2;<br />\n             obj.length = 10;<br />\n             int y = obj.width * obj.height * obj.length; <br />\n             System.out.print(y);<br />\n        } <br />\n    }</code></pre>', 7, 90, 3, 6, 32, '2019-09-02 02:34:28', '2019-09-02 02:34:28'),
(644, 7, 59, 'CCS102 - COMPUTER PROGRAMMING 1 Q29', 'What is the output of this program?\n\n[[#code24]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class evaluate <br />\n    {<br />\n        public static void main(String args[]) <br />\n            {<br />\n	        int arr[] = new int[] {0 , 1, 2, 3, 4, 5, 6, 7, 8, 9};<br />\n	        int n = 6;<br />\n                n = arr[arr[n] / 2];<br />\n	        System.out.println(arr[n] / 2);<br />\n            } <br />\n    }</code></pre>', 7, 90, 3, 6, 34, '2019-09-02 02:34:28', '2019-09-02 02:34:28'),
(645, 7, 155, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q15', 'Let the set A is {1, 2, 3} and B is {2, 3, 4}. Then number of elements in A U B is _____.', 'Let the set A is {1, 2, 3} and B is {2, 3, 4}. Then number of elements in A U B is _____.', 7, 96, 1, 6, 69, '2019-09-02 02:34:28', '2019-09-02 02:34:28'),
(646, 7, 77, 'CCS101 - INTRODUCTION TO COMPUTING - Q20', 'A programming error that occurs when running a program produces incorrect results.', 'A programming error that occurs when running a program produces incorrect results.', 7, 89, 1, 6, 9, '2019-09-02 02:34:28', '2019-09-02 02:34:28'),
(647, 7, 92, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q2', 'Solve the inequality \n4x + 8 > 5x +9', 'Solve the inequality <br />\n4x + 8 > 5x +9', 7, 92, 1, 6, 37, '2019-09-02 02:34:28', '2019-09-02 02:34:28'),
(648, 7, 283, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q32', 'You have a TextBox control and a Help button that the user can press to get help on allowable values. You validate the data entered by the user in the TextBox control. If the user enters an invalid value, you set the focus back in the control using the Cancel property of the CancelEventArgs. A user reports that once he enters invalid data in the text box, he cannot click the Help button. What should you do to correct the problem?', 'You have a TextBox control and a Help button that the user can press to get help on allowable values. You validate the data entered by the user in the TextBox control. If the user enters an invalid value, you set the focus back in the control using the Cancel property of the CancelEventArgs. A user reports that once he enters invalid data in the text box, he cannot click the Help button. What should you do to correct the problem?', 7, 95, 3, 6, 67, '2019-09-02 02:34:28', '2019-09-02 02:34:28'),
(649, 7, 219, 'Computer Hardware - Q3', 'A device that enables a computer to communicate over telephone lines.', 'A device that enables a computer to communicate over telephone lines.', 7, 89, 1, 6, 1, '2019-09-02 02:34:28', '2019-09-02 02:34:28'),
(650, 7, 225, 'CCS101 - INTRODUCTION TO COMPUTING - Q7', 'Converting (1010111)<sub>2</sub> to base yields which of the following results?', 'Converting (1010111)<sub>2</sub> to base yields which of the following results?', 7, 89, 2, 6, 11, '2019-09-02 02:34:28', '2019-09-02 02:34:28'),
(651, 7, 207, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q7', 'ABD stands for', 'ABD stands for', 7, 125, 1, 6, 88, '2019-09-02 02:34:28', '2019-09-02 02:34:28'),
(652, 7, 150, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q10', 'The intersection of the sets {1, 2, 5} and {1, 2, 6} is the set _____________.', 'The intersection of the sets {1, 2, 5} and {1, 2, 6} is the set _____________.', 7, 96, 1, 6, 74, '2019-09-02 02:34:28', '2019-09-02 02:34:28'),
(653, 7, 38, 'CCS102 - COMPUTER PROGRAMMING 1 - Q8', 'Which of the following is true about try block in C#?', 'Which of the following is true about try block in C#?', 7, 90, 1, 6, 19, '2019-09-02 02:34:28', '2019-09-02 02:34:28'),
(654, 7, 144, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q4', 'What is the cardinality of the set of odd positive integers less than 10?', 'What is the cardinality of the set of odd positive integers less than 10?', 7, 96, 1, 6, 71, '2019-09-02 02:34:29', '2019-09-02 02:34:29'),
(655, 7, 108, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q18', 'The population of a country increased by an average of 2% per year from 2000 to 2003. If the population of this country was 2 000 000 on December 31, 2003, then the population of this country on January 1, 2000, to the nearest thousand would have been', 'The population of a country increased by an average of 2% per year from 2000 to 2003. If the population of this country was 2 000 000 on December 31, 2003, then the population of this country on January 1, 2000, to the nearest thousand would have been', 7, 92, 3, 6, 50, '2019-09-02 02:34:29', '2019-09-02 02:34:29'),
(656, 7, 256, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q32', 'What is the difference between content values and cursor in android SQlite?', 'What is the difference between content values and cursor in android SQlite?', 7, 125, 3, 6, 98, '2019-09-02 02:34:29', '2019-09-02 02:34:29'),
(657, 7, 99, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q9', 'Evaluate the following:\n \nlog<sub>4</sub> 25', 'Evaluate the following:<br />\n <br />\nlog<sub>4</sub> 25', 7, 92, 1, 6, 41, '2019-09-02 02:34:29', '2019-09-02 02:34:29'),
(658, 7, 97, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q7', 'The expression (3i - 2)(i + 1) - 7 can be simplified to which of the following expressions?', 'The expression (3i - 2)(i + 1) - 7 can be simplified to which of the following expressions?', 7, 92, 2, 6, 46, '2019-09-02 02:34:29', '2019-09-02 02:34:29'),
(659, 7, 95, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q5', 'What is the square root of -144?', 'What is the square root of -144?', 7, 92, 1, 6, 38, '2019-09-02 02:34:29', '2019-09-02 02:34:29'),
(660, 7, 82, 'CCS101 - INTRODUCTION TO COMPUTING - Q15', '10111 is the two\'s complement representation of', '10111 is the two\'s complement representation of', 7, 89, 1, 6, 5, '2019-09-02 02:34:29', '2019-09-02 02:34:29'),
(661, 7, 137, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q19', 'Polymorphism occurs when the methods of the child class.', 'Polymorphism occurs when the methods of the child class.', 7, 95, 2, 6, 62, '2019-09-02 02:34:29', '2019-09-02 02:34:29'),
(662, 7, 151, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q11', 'Two sets are called disjoint if there _____________ is the empty set.', 'Two sets are called disjoint if there _____________ is the empty set.', 7, 96, 1, 6, 73, '2019-09-02 02:34:29', '2019-09-02 02:34:29'),
(663, 7, 254, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q30', 'What is an HTTP client class in android?', 'What is an HTTP client class in android?', 7, 125, 3, 6, 100, '2019-09-02 02:34:29', '2019-09-02 02:34:29'),
(664, 7, 143, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q3', 'Power set of empty set has exactly _________ subset.', 'Power set of empty set has exactly _________ subset.', 7, 96, 1, 6, 77, '2019-09-02 02:34:29', '2019-09-02 02:34:29'),
(665, 7, 145, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q5', 'What is the Cartesian product of A = {1, 2} and B = {a, b}?', 'What is the Cartesian product of A = {1, 2} and B = {a, b}?', 7, 96, 2, 6, 78, '2019-09-02 02:34:29', '2019-09-02 02:34:29'),
(666, 7, 78, 'CCS101 - INTRODUCTION TO COMPUTING -  Q19', 'This coding system is designed to support international languages like Chinese and Japanese.', 'This coding system is designed to support international languages like Chinese and Japanese.', 7, 89, 3, 6, 17, '2019-09-02 02:34:29', '2019-09-02 02:34:29'),
(667, 7, 34, 'IT01- CCS102 - COMPUTER PROGRAMMING 1 - Q4', 'Which of the following operator returns the size of a data type in C#?', 'Which of the following operator returns the size of a data type in C#?', 7, 90, 1, 6, 22, '2019-09-02 02:34:29', '2019-09-02 02:34:29'),
(668, 7, 127, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q9', 'Commonly used  control to execute commansd when it is clicked.', 'Commonly used  control to execute commansd when it is clicked.', 7, 95, 1, 6, 60, '2019-09-02 02:34:29', '2019-09-02 02:34:29'),
(669, 7, 121, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q3', 'These are additional operators used to return Boolean values.', 'These are additional operators used to return Boolean values.', 7, 95, 1, 6, 55, '2019-09-02 02:34:29', '2019-09-02 02:34:29'),
(670, 7, 93, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q3', 'If 2x - 8 ≥ 2, then', 'If 2x - 8 ≥ 2, then', 7, 92, 1, 6, 39, '2019-09-02 02:34:29', '2019-09-02 02:34:29'),
(671, 7, 57, 'CCS102 - COMPUTER PROGRAMMING 1 Q27', 'Which of these is necessary to specify at time of array initialization?', 'Which of these is necessary to specify at time of array initialization?', 7, 90, 2, 6, 30, '2019-09-02 02:34:29', '2019-09-02 02:34:29'),
(672, 7, 156, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q16', 'If A has 4 elements B has 8 elements then the minimum and maximum number of elements in A U B are respectively', 'If A has 4 elements B has 8 elements then the minimum and maximum number of elements in A U B are respectively', 7, 96, 1, 6, 75, '2019-09-02 02:34:29', '2019-09-02 02:34:29'),
(673, 7, 132, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q14', 'C# treats the multiple catch statements like cases in a _____________ statement.', 'C# treats the multiple catch statements like cases in a _____________ statement.', 7, 95, 1, 6, 58, '2019-09-02 02:34:29', '2019-09-02 02:34:29'),
(674, 7, 211, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q11', 'Web browser available in android based on', 'Web browser available in android based on', 7, 125, 1, 6, 85, '2019-09-02 02:34:29', '2019-09-02 02:34:29'),
(675, 7, 33, 'IT01- CCS102 - COMPUTER PROGRAMMING 1 - Q3', 'Which of the following converts a type to a double type in C#?', 'Which of the following converts a type to a double type in C#?', 7, 90, 1, 6, 26, '2019-09-02 02:34:29', '2019-09-02 02:34:29'),
(676, 7, 1, 'Solving for basic equation - Q1', 'solve for x:\n2x + 3 = 5', 'solve for x:<br />\n2x + 3 = 5', 7, 92, 1, 6, 36, '2019-09-02 02:34:29', '2019-09-02 02:34:29'),
(677, 7, 204, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q4', 'Android supports which features.', 'Android supports which features.', 7, 125, 1, 6, 92, '2019-09-02 02:34:29', '2019-09-02 02:34:29'),
(678, 7, 148, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q8', 'What is the Cardinality of the Power set of the set {0, 1, 2}.', 'What is the Cardinality of the Power set of the set {0, 1, 2}.', 7, 96, 1, 6, 72, '2019-09-02 02:34:29', '2019-09-02 02:34:29'),
(679, 7, 260, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q23', 'In the given figure the if n(A)=20,n(U)=50,n(C)=10 and n(A∩B)=5 then n(B)=? \n\n[[#img34]]', 'In the given figure the if n(A)=20,n(U)=50,n(C)=10 and n(A∩B)=5 then n(B)=? <br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/23B9WIeQ00wE4pw7nsRG6le8KJWkZ1jI9HG7nYv3.jpeg\" width=\"300\" height=\"150\" />', 7, 96, 2, 6, 80, '2019-09-02 02:34:29', '2019-09-02 02:34:29'),
(680, 7, 40, 'CCS102 - COMPUTER PROGRAMMING 1 Q10', 'Static binding uses which information for binding?', 'Static binding uses which information for binding?', 7, 90, 1, 6, 23, '2019-09-02 02:34:29', '2019-09-02 02:34:29'),
(681, 7, 122, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q4', 'These operators take two operands, such as arithmetic operators (+,-,*,/).', 'These operators take two operands, such as arithmetic operators (+,-,*,/).', 7, 95, 1, 6, 53, '2019-09-02 02:34:29', '2019-09-02 02:34:29'),
(682, 7, 129, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q11', 'A control similar to an ordinary label having an underline and resembles a link on a web page.', 'A control similar to an ordinary label having an underline and resembles a link on a web page.', 7, 95, 1, 6, 54, '2019-09-02 02:34:29', '2019-09-02 02:34:29'),
(683, 7, 32, 'CCS102 - COMPUTER PROGRAMMING 1 - Q2', 'Which of the following is a reserved keyword in C#?', 'Which of the following is a reserved keyword in C#?', 7, 90, 1, 6, 21, '2019-09-02 02:34:29', '2019-09-02 02:34:29'),
(684, 7, 31, 'Order of operation - Q1', 'What is the output of the following code?\n\n[[#code14]]', 'What is the output of the following code?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">double x = 2;<br />\ndouble y = 3;<br />\ndouble z = 5;<br />\n<br />\ndouble output = x + x * y + (x + 2 * z);<br />\n<br />\nSystem.out.println(output);</code></pre>', 7, 90, 1, 6, 20, '2019-09-02 02:34:29', '2019-09-02 02:34:29'),
(685, 7, 58, 'CCS102 - COMPUTER PROGRAMMING 1 Q28', 'What is the output of this program?\n\n[[#code22]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class array_output <br />\n    {<br />\n        public static void main(String args[]) <br />\n        {<br />\n            int array_variable [] = new int[10];<br />\n	    for (int i = 0; i < 10; ++i) <br />\n            {<br />\n                array_variable[i] = i;<br />\n                System.out.print(array_variable[i] + \" \");<br />\n                i++;<br />\n            }<br />\n        } <br />\n    }</code></pre>', 7, 90, 3, 6, 33, '2019-09-02 02:34:29', '2019-09-02 02:34:29'),
(686, 7, 267, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q30', 'A floor function map a real number to :', 'A floor function map a real number to :', 7, 96, 3, 6, 84, '2019-09-02 02:34:29', '2019-09-02 02:34:29'),
(687, 7, 42, 'CCS102 - COMPUTER PROGRAMMING 1 Q12', 'Which of the following is not a keyword in java?', 'Which of the following is not a keyword in java?', 7, 90, 1, 6, 18, '2019-09-02 02:34:29', '2019-09-02 02:34:29'),
(688, 7, 205, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q5', 'For ___________, code used by Android is not open source.', 'For ___________, code used by Android is not open source.', 7, 125, 1, 6, 90, '2019-09-02 02:34:29', '2019-09-02 02:34:29'),
(689, 7, 248, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q24', 'What is the use of content provider in android?', 'What is the use of content provider in android?', 7, 125, 2, 6, 97, '2019-09-02 02:34:29', '2019-09-02 02:34:29'),
(690, 7, 277, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q26', 'Which of the following will result from compiling this code, assuming that all other code for your form works properly?\n\n[[#code27]]', 'Which of the following will result from compiling this code, assuming that all other code for your form works properly?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">csharp</span></div><pre><code class=\"language-csharp\">try<br />\n{<br />\n  //Write code to allocate some resources<br />\n}<br />\nfinally<br />\n{<br />\n  //Write code to Dispose all allocated resources<br />\n}</code></pre>', 7, 95, 3, 6, 66, '2019-09-02 02:34:30', '2019-09-02 02:34:30'),
(691, 7, 76, 'CCS101 - INTRODUCTION TO COMPUTING _ Q21', '_______ is a duplicate copy of data or other computer content for use in the event that the original version is destroyed.', '_______ is a duplicate copy of data or other computer content for use in the event that the original version is destroyed.', 7, 89, 2, 6, 13, '2019-09-02 02:34:30', '2019-09-02 02:34:30'),
(692, 7, 70, 'Projectile motion 2', 'An adventurous cliff jumper runs horizontally off a cliff. We can ignore air resistance.\n\n[[#img27]]\n\nWhich diagram best describes the horizontal velocity vectors and trajectory during the person’s fall?\n\nAssume the origin of the coordinate system to be the cliff edge.\n\nA red dot represents a vector of zero magnitude.', 'An adventurous cliff jumper runs horizontally off a cliff. We can ignore air resistance.<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/PgCOEtvEENxNaqgGLMWLrysCTt8GwyXUqH8p2sz7.png\" width=\"200\" height=\"200\" /><br />\n<br />\nWhich diagram best describes the horizontal velocity vectors and trajectory during the person’s fall?<br />\n<br />\nAssume the origin of the coordinate system to be the cliff edge.<br />\n<br />\nA red dot represents a vector of zero magnitude.', 7, 89, 1, 6, 4, '2019-09-02 02:34:30', '2019-09-02 02:34:30'),
(693, 7, 66, 'Binary to decimal conversion 1', 'Convert 10100011 from binary to decimal.', 'Convert 10100011 from binary to decimal.', 7, 89, 1, 6, 8, '2019-09-02 02:34:30', '2019-09-02 02:34:30'),
(694, 7, 147, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q7', 'The set of positive integers is _____________.', 'The set of positive integers is _____________.', 7, 96, 1, 6, 70, '2019-09-02 02:34:30', '2019-09-02 02:34:30'),
(695, 7, 136, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q18', 'Private Button print = new button();', 'Private Button print = new button();', 7, 95, 2, 6, 61, '2019-09-02 02:34:30', '2019-09-02 02:34:30'),
(696, 7, 104, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q14', 'What is the result when you put the expression x<sup>2</sup> +10x+41 into vertex form by completing the square ?', 'What is the result when you put the expression x<sup>2</sup> +10x+41 into vertex form by completing the square ?', 7, 92, 3, 6, 51, '2019-09-02 02:34:30', '2019-09-02 02:34:30'),
(697, 7, 107, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q17', 'If Log <sub>4 </sub>(x) = 12, then log 2 (x / 4) is equal to', 'If Log <sub>4 </sub>(x) = 12, then log 2 (x / 4) is equal to', 7, 92, 1, 6, 40, '2019-09-02 02:34:30', '2019-09-02 02:34:30'),
(698, 7, 116, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q26', 'If f(x) is an odd function, then | f(x) | is', 'If f(x) is an odd function, then | f(x) | is', 7, 92, 2, 6, 44, '2019-09-02 02:34:30', '2019-09-02 02:34:30'),
(699, 7, 112, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q22', 'A school committee consists of 2 teachers and 4 students. The number of different committees that can be formed from 5 teachers and 10 students is', 'A school committee consists of 2 teachers and 4 students. The number of different committees that can be formed from 5 teachers and 10 students is', 7, 92, 1, 6, 42, '2019-09-02 02:34:30', '2019-09-02 02:34:30'),
(700, 7, 111, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q21', 'For x greater than or equal to zero and less than or equal to 2 π, sin x and cos x are both decreasing on the intervals', 'For x greater than or equal to zero and less than or equal to 2 π, sin x and cos x are both decreasing on the intervals', 7, 92, 2, 6, 47, '2019-09-02 02:34:30', '2019-09-02 02:34:30'),
(701, 8, 202, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q2', 'What is android?', 'What is android?', 7, 125, 1, 6, 86, '2019-09-02 02:40:58', '2019-09-02 02:40:58'),
(702, 8, 108, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q18', 'The population of a country increased by an average of 2% per year from 2000 to 2003. If the population of this country was 2 000 000 on December 31, 2003, then the population of this country on January 1, 2000, to the nearest thousand would have been', 'The population of a country increased by an average of 2% per year from 2000 to 2003. If the population of this country was 2 000 000 on December 31, 2003, then the population of this country on January 1, 2000, to the nearest thousand would have been', 7, 92, 3, 6, 50, '2019-09-02 02:40:58', '2019-09-02 02:40:58'),
(703, 8, 42, 'CCS102 - COMPUTER PROGRAMMING 1 Q12', 'Which of the following is not a keyword in java?', 'Which of the following is not a keyword in java?', 7, 90, 1, 6, 18, '2019-09-02 02:40:58', '2019-09-02 02:40:58'),
(704, 8, 104, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q14', 'What is the result when you put the expression x<sup>2</sup> +10x+41 into vertex form by completing the square ?', 'What is the result when you put the expression x<sup>2</sup> +10x+41 into vertex form by completing the square ?', 7, 92, 3, 6, 51, '2019-09-02 02:40:58', '2019-09-02 02:40:58'),
(705, 8, 57, 'CCS102 - COMPUTER PROGRAMMING 1 Q27', 'Which of these is necessary to specify at time of array initialization?', 'Which of these is necessary to specify at time of array initialization?', 7, 90, 2, 6, 30, '2019-09-02 02:40:58', '2019-09-02 02:40:58'),
(706, 8, 124, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q6', 'This data type stores the address of the value which means that they refer to a memory location.', 'This data type stores the address of the value which means that they refer to a memory location.', 7, 95, 1, 6, 52, '2019-09-02 02:40:58', '2019-09-02 02:40:58'),
(707, 8, 32, 'CCS102 - COMPUTER PROGRAMMING 1 - Q2', 'Which of the following is a reserved keyword in C#?', 'Which of the following is a reserved keyword in C#?', 7, 90, 1, 6, 21, '2019-09-02 02:40:58', '2019-09-02 02:40:58'),
(708, 8, 145, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q5', 'What is the Cartesian product of A = {1, 2} and B = {a, b}?', 'What is the Cartesian product of A = {1, 2} and B = {a, b}?', 7, 96, 2, 6, 78, '2019-09-02 02:40:59', '2019-09-02 02:40:59'),
(709, 8, 267, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q30', 'A floor function map a real number to :', 'A floor function map a real number to :', 7, 96, 3, 6, 84, '2019-09-02 02:40:59', '2019-09-02 02:40:59'),
(710, 8, 277, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q26', 'Which of the following will result from compiling this code, assuming that all other code for your form works properly?\n\n[[#code27]]', 'Which of the following will result from compiling this code, assuming that all other code for your form works properly?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">csharp</span></div><pre><code class=\"language-csharp\">try<br />\n{<br />\n  //Write code to allocate some resources<br />\n}<br />\nfinally<br />\n{<br />\n  //Write code to Dispose all allocated resources<br />\n}</code></pre>', 7, 95, 3, 6, 66, '2019-09-02 02:40:59', '2019-09-02 02:40:59'),
(711, 8, 142, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q2', 'The set O of odd positive integers less than 10 can be expressed by _____________.', 'The set O of odd positive integers less than 10 can be expressed by _____________.', 7, 96, 1, 6, 76, '2019-09-02 02:40:59', '2019-09-02 02:40:59'),
(712, 8, 243, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q19', 'Android provides a few standard themes, listed in ________.', 'Android provides a few standard themes, listed in ________.', 7, 125, 2, 6, 96, '2019-09-02 02:40:59', '2019-09-02 02:40:59'),
(713, 8, 38, 'CCS102 - COMPUTER PROGRAMMING 1 - Q8', 'Which of the following is true about try block in C#?', 'Which of the following is true about try block in C#?', 7, 90, 1, 6, 19, '2019-09-02 02:40:59', '2019-09-02 02:40:59'),
(714, 8, 219, 'Computer Hardware - Q3', 'A device that enables a computer to communicate over telephone lines.', 'A device that enables a computer to communicate over telephone lines.', 7, 89, 1, 6, 1, '2019-09-02 02:40:59', '2019-09-02 02:40:59'),
(715, 8, 34, 'IT01- CCS102 - COMPUTER PROGRAMMING 1 - Q4', 'Which of the following operator returns the size of a data type in C#?', 'Which of the following operator returns the size of a data type in C#?', 7, 90, 1, 6, 22, '2019-09-02 02:40:59', '2019-09-02 02:40:59'),
(716, 8, 90, 'CCS101 - INTRODUCTION TO COMPUTING - Q4', 'A letter, digit, or special character is represented by a code in a ___.', 'A letter, digit, or special character is represented by a code in a ___.', 7, 89, 3, 6, 15, '2019-09-02 02:40:59', '2019-09-02 02:40:59'),
(717, 8, 87, 'CCS101 - INTRODUCTION TO COMPUTING - Q8', '____________ are the four general operations that are performed in each machine cycle.', '____________ are the four general operations that are performed in each machine cycle.', 7, 89, 2, 6, 14, '2019-09-02 02:40:59', '2019-09-02 02:40:59'),
(718, 8, 283, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q32', 'You have a TextBox control and a Help button that the user can press to get help on allowable values. You validate the data entered by the user in the TextBox control. If the user enters an invalid value, you set the focus back in the control using the Cancel property of the CancelEventArgs. A user reports that once he enters invalid data in the text box, he cannot click the Help button. What should you do to correct the problem?', 'You have a TextBox control and a Help button that the user can press to get help on allowable values. You validate the data entered by the user in the TextBox control. If the user enters an invalid value, you set the focus back in the control using the Cancel property of the CancelEventArgs. A user reports that once he enters invalid data in the text box, he cannot click the Help button. What should you do to correct the problem?', 7, 95, 3, 6, 67, '2019-09-02 02:40:59', '2019-09-02 02:40:59'),
(719, 8, 122, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q4', 'These operators take two operands, such as arithmetic operators (+,-,*,/).', 'These operators take two operands, such as arithmetic operators (+,-,*,/).', 7, 95, 1, 6, 53, '2019-09-02 02:40:59', '2019-09-02 02:40:59'),
(720, 8, 285, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q29', 'The period of 2 sin x cos x is', 'The period of 2 sin x cos x is', 7, 92, 1, 6, 35, '2019-09-02 02:40:59', '2019-09-02 02:40:59'),
(721, 8, 121, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q3', 'These are additional operators used to return Boolean values.', 'These are additional operators used to return Boolean values.', 7, 95, 1, 6, 55, '2019-09-02 02:40:59', '2019-09-02 02:40:59'),
(722, 8, 113, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q23', 'Five different books (A, B, C, D and E) are to be arranged on a shelf. Books C and D are to be arranged first and second starting from the right of the shelf. The number of different orders in which books A, B and E may be arranged is', 'Five different books (A, B, C, D and E) are to be arranged on a shelf. Books C and D are to be arranged first and second starting from the right of the shelf. The number of different orders in which books A, B and E may be arranged is', 7, 92, 2, 6, 48, '2019-09-02 02:40:59', '2019-09-02 02:40:59'),
(723, 8, 140, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q22', 'A _______ is an identifier that denotes a storage location.', 'A _______ is an identifier that denotes a storage location.', 7, 95, 2, 6, 63, '2019-09-02 02:40:59', '2019-09-02 02:40:59'),
(724, 8, 79, 'CCS101 - INTRODUCTION TO COMPUTING -Q18', 'Which of the following is/are not part of the CPU?', 'Which of the following is/are not part of the CPU?', 7, 89, 3, 6, 16, '2019-09-02 02:40:59', '2019-09-02 02:40:59'),
(725, 8, 162, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q22', 'If n(A)=10 , n(B)=30,n(C)=50 and if set A,B,C are pairwise disjoint then which of the following is correct?', 'If n(A)=10 , n(B)=30,n(C)=50 and if set A,B,C are pairwise disjoint then which of the following is correct?', 7, 96, 2, 6, 79, '2019-09-02 02:40:59', '2019-09-02 02:40:59'),
(726, 8, 212, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q12', 'Which company bought android?', 'Which company bought android?', 7, 125, 1, 6, 93, '2019-09-02 02:40:59', '2019-09-02 02:40:59'),
(727, 8, 260, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q23', 'In the given figure the if n(A)=20,n(U)=50,n(C)=10 and n(A∩B)=5 then n(B)=? \n\n[[#img34]]', 'In the given figure the if n(A)=20,n(U)=50,n(C)=10 and n(A∩B)=5 then n(B)=? <br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/23B9WIeQ00wE4pw7nsRG6le8KJWkZ1jI9HG7nYv3.jpeg\" width=\"300\" height=\"150\" />', 7, 96, 2, 6, 80, '2019-09-02 02:40:59', '2019-09-02 02:40:59'),
(728, 8, 127, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q9', 'Commonly used  control to execute commansd when it is clicked.', 'Commonly used  control to execute commansd when it is clicked.', 7, 95, 1, 6, 60, '2019-09-02 02:40:59', '2019-09-02 02:40:59'),
(729, 8, 99, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q9', 'Evaluate the following:\n \nlog<sub>4</sub> 25', 'Evaluate the following:<br />\n <br />\nlog<sub>4</sub> 25', 7, 92, 1, 6, 41, '2019-09-02 02:40:59', '2019-09-02 02:40:59'),
(730, 8, 95, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q5', 'What is the square root of -144?', 'What is the square root of -144?', 7, 92, 1, 6, 38, '2019-09-02 02:40:59', '2019-09-02 02:40:59'),
(731, 8, 286, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q30', 'The probability that an electronic device produced by a company does not function properly is equal to 0.1. If 10 devices are bought, then the probability, to the nearest thousandth, that 7 devices function properly is', 'The probability that an electronic device produced by a company does not function properly is equal to 0.1. If 10 devices are bought, then the probability, to the nearest thousandth, that 7 devices function properly is', 7, 92, 3, 6, 49, '2019-09-02 02:40:59', '2019-09-02 02:40:59'),
(732, 8, 131, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q13', 'A method of MessageBox class that allows you to call a message box for prompting user with messages and information.', 'A method of MessageBox class that allows you to call a message box for prompting user with messages and information.', 7, 95, 1, 6, 59, '2019-09-02 02:40:59', '2019-09-02 02:40:59'),
(733, 8, 270, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q33', 'In the given AP series the term at position 11 would be\n5, 8, 11, 14, 17, 20………50.', 'In the given AP series the term at position 11 would be<br />\n5, 8, 11, 14, 17, 20………50.', 7, 96, 3, 6, 82, '2019-09-02 02:40:59', '2019-09-02 02:40:59'),
(734, 8, 138, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q20', 'A method_____an exception when that method detects that a problem has occured.', 'A method_____an exception when that method detects that a problem has occured.', 7, 95, 2, 6, 65, '2019-09-02 02:40:59', '2019-09-02 02:40:59'),
(735, 8, 248, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q24', 'What is the use of content provider in android?', 'What is the use of content provider in android?', 7, 125, 2, 6, 97, '2019-09-02 02:40:59', '2019-09-02 02:40:59'),
(736, 8, 289, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q33', 'A number of the form 213ab, where a and b are digits, has a reminder less than 10 when divided by 100. The sum of all the digits in the above number is equal to 13. Find the digit b.', 'A number of the form 213ab, where a and b are digits, has a reminder less than 10 when divided by 100. The sum of all the digits in the above number is equal to 13. Find the digit b.', 7, 92, 1, 6, 43, '2019-09-02 02:40:59', '2019-09-02 02:40:59'),
(737, 8, 244, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q20', 'To update contents of content provider using curser and commit you need to call _______________.', 'To update contents of content provider using curser and commit you need to call _______________.', 7, 125, 2, 6, 95, '2019-09-02 02:40:59', '2019-09-02 02:40:59'),
(738, 8, 89, 'CCS101 - INTRODUCTION TO COMPUTING - Q5', 'A memory management technique that uses hard drive space as additional RAM.', 'A memory management technique that uses hard drive space as additional RAM.', 7, 89, 1, 6, 2, '2019-09-02 02:40:59', '2019-09-02 02:40:59'),
(739, 8, 82, 'CCS101 - INTRODUCTION TO COMPUTING - Q15', '10111 is the two\'s complement representation of', '10111 is the two\'s complement representation of', 7, 89, 1, 6, 5, '2019-09-02 02:40:59', '2019-09-02 02:40:59'),
(740, 8, 33, 'IT01- CCS102 - COMPUTER PROGRAMMING 1 - Q3', 'Which of the following converts a type to a double type in C#?', 'Which of the following converts a type to a double type in C#?', 7, 90, 1, 6, 26, '2019-09-02 02:40:59', '2019-09-02 02:40:59'),
(741, 8, 52, 'CCS102 - COMPUTER PROGRAMMING 1 Q22', 'What is the output of this program?\n\n[[#code19]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class box <br />\n    {<br />\n        int width;<br />\n        int height;<br />\n        int length;<br />\n    } <br />\n    class mainclass <br />\n    {<br />\n        public static void main(String args[]) <br />\n        {        <br />\n             box obj = new box();<br />\n             obj.width = 10;<br />\n             obj.height = 2;<br />\n             obj.length = 10;<br />\n             int y = obj.width * obj.height * obj.length; <br />\n             System.out.print(y);<br />\n        } <br />\n    }</code></pre>', 7, 90, 3, 6, 32, '2019-09-02 02:40:59', '2019-09-02 02:40:59'),
(742, 8, 112, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q22', 'A school committee consists of 2 teachers and 4 students. The number of different committees that can be formed from 5 teachers and 10 students is', 'A school committee consists of 2 teachers and 4 students. The number of different committees that can be formed from 5 teachers and 10 students is', 7, 92, 1, 6, 42, '2019-09-02 02:41:00', '2019-09-02 02:41:00'),
(743, 8, 223, 'CC101 - INTRODUCTION TO COMPUTING - Q11', 'The sum of 11101 + 10111 equals ________.', 'The sum of 11101 + 10111 equals ________.', 7, 89, 2, 6, 10, '2019-09-02 02:41:00', '2019-09-02 02:41:00'),
(744, 8, 215, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q15', 'Which is the latest mobile version of android?', 'Which is the latest mobile version of android?', 7, 125, 1, 6, 91, '2019-09-02 02:41:00', '2019-09-02 02:41:00'),
(745, 8, 39, 'CCS102 - COMPUTER PROGRAMMING 1 Q9', 'What of the following is the default value of an instance variable?', 'What of the following is the default value of an instance variable?', 7, 90, 1, 6, 25, '2019-09-02 02:41:00', '2019-09-02 02:41:00'),
(746, 8, 136, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q18', 'Private Button print = new button();', 'Private Button print = new button();', 7, 95, 2, 6, 61, '2019-09-02 02:41:00', '2019-09-02 02:41:00'),
(747, 8, 220, 'Computer Hardware - Q2', 'An input device that reads printed text and graphics and transfers them to a computer in digital form.', 'An input device that reads printed text and graphics and transfers them to a computer in digital form.', 7, 89, 1, 6, 7, '2019-09-02 02:41:00', '2019-09-02 02:41:00'),
(748, 8, 59, 'CCS102 - COMPUTER PROGRAMMING 1 Q29', 'What is the output of this program?\n\n[[#code24]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class evaluate <br />\n    {<br />\n        public static void main(String args[]) <br />\n            {<br />\n	        int arr[] = new int[] {0 , 1, 2, 3, 4, 5, 6, 7, 8, 9};<br />\n	        int n = 6;<br />\n                n = arr[arr[n] / 2];<br />\n	        System.out.println(arr[n] / 2);<br />\n            } <br />\n    }</code></pre>', 7, 90, 3, 6, 34, '2019-09-02 02:41:00', '2019-09-02 02:41:00'),
(749, 8, 61, 'CCS102 - COMPUTER PROGRAMMING 1 Q31', 'Where is array stored in memory?', 'Where is array stored in memory?', 7, 90, 2, 6, 31, '2019-09-02 02:41:00', '2019-09-02 02:41:00'),
(750, 8, 97, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q7', 'The expression (3i - 2)(i + 1) - 7 can be simplified to which of the following expressions?', 'The expression (3i - 2)(i + 1) - 7 can be simplified to which of the following expressions?', 7, 92, 2, 6, 46, '2019-09-02 02:41:00', '2019-09-02 02:41:00'),
(751, 8, 1, 'Solving for basic equation - Q1', 'solve for x:\n2x + 3 = 5', 'solve for x:<br />\n2x + 3 = 5', 7, 92, 1, 6, 36, '2019-09-02 02:41:00', '2019-09-02 02:41:00'),
(752, 8, 203, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q3', 'Android doesn\'t  support which format?', 'Android doesn\'t  support which format?', 7, 125, 1, 6, 87, '2019-09-02 02:41:00', '2019-09-02 02:41:00'),
(753, 8, 214, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q14', 'Android is based on which kernel?', 'Android is based on which kernel?', 7, 125, 1, 6, 89, '2019-09-02 02:41:00', '2019-09-02 02:41:00'),
(754, 8, 137, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q19', 'Polymorphism occurs when the methods of the child class.', 'Polymorphism occurs when the methods of the child class.', 7, 95, 2, 6, 62, '2019-09-02 02:41:00', '2019-09-02 02:41:00'),
(755, 8, 70, 'Projectile motion 2', 'An adventurous cliff jumper runs horizontally off a cliff. We can ignore air resistance.\n\n[[#img27]]\n\nWhich diagram best describes the horizontal velocity vectors and trajectory during the person’s fall?\n\nAssume the origin of the coordinate system to be the cliff edge.\n\nA red dot represents a vector of zero magnitude.', 'An adventurous cliff jumper runs horizontally off a cliff. We can ignore air resistance.<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/PgCOEtvEENxNaqgGLMWLrysCTt8GwyXUqH8p2sz7.png\" width=\"200\" height=\"200\" /><br />\n<br />\nWhich diagram best describes the horizontal velocity vectors and trajectory during the person’s fall?<br />\n<br />\nAssume the origin of the coordinate system to be the cliff edge.<br />\n<br />\nA red dot represents a vector of zero magnitude.', 7, 89, 1, 6, 4, '2019-09-02 02:41:00', '2019-09-02 02:41:00'),
(756, 8, 48, 'CCS102 - COMPUTER PROGRAMMING 1 Q18', 'What is JRE?', 'What is JRE?', 7, 90, 2, 6, 29, '2019-09-02 02:41:00', '2019-09-02 02:41:00'),
(757, 8, 74, 'CCS101 - INTRODUCTION TO COMPUTING - Q23', 'An electronic tool that allows information to be input, processed, and output.', 'An electronic tool that allows information to be input, processed, and output.', 7, 89, 1, 6, 6, '2019-09-02 02:41:00', '2019-09-02 02:41:00'),
(758, 8, 256, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q32', 'What is the difference between content values and cursor in android SQlite?', 'What is the difference between content values and cursor in android SQlite?', 7, 125, 3, 6, 98, '2019-09-02 02:41:00', '2019-09-02 02:41:00'),
(759, 8, 50, 'CCS102 - COMPUTER PROGRAMMING Q20', 'What happens when thread\'s yield() method is called?', 'What happens when thread\'s yield() method is called?', 7, 90, 2, 6, 28, '2019-09-02 02:41:00', '2019-09-02 02:41:00');
INSERT INTO `answer_sheet_test_questions` (`id`, `answer_sheet_id`, `test_question_id`, `title`, `body`, `body_html`, `student_outcome_id`, `course_id`, `difficulty_level_id`, `performance_criteria_id`, `pos_order`, `created_at`, `updated_at`) VALUES
(760, 8, 77, 'CCS101 - INTRODUCTION TO COMPUTING - Q20', 'A programming error that occurs when running a program produces incorrect results.', 'A programming error that occurs when running a program produces incorrect results.', 7, 89, 1, 6, 9, '2019-09-02 02:41:00', '2019-09-02 02:41:00'),
(761, 8, 116, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q26', 'If f(x) is an odd function, then | f(x) | is', 'If f(x) is an odd function, then | f(x) | is', 7, 92, 2, 6, 44, '2019-09-02 02:41:00', '2019-09-02 02:41:00'),
(762, 8, 207, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q7', 'ABD stands for', 'ABD stands for', 7, 125, 1, 6, 88, '2019-09-02 02:41:00', '2019-09-02 02:41:00'),
(763, 8, 40, 'CCS102 - COMPUTER PROGRAMMING 1 Q10', 'Static binding uses which information for binding?', 'Static binding uses which information for binding?', 7, 90, 1, 6, 23, '2019-09-02 02:41:00', '2019-09-02 02:41:00'),
(764, 8, 275, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q24', 'How should you arrange catch blocks?', 'How should you arrange catch blocks?', 7, 95, 2, 6, 64, '2019-09-02 02:41:00', '2019-09-02 02:41:00'),
(765, 8, 148, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q8', 'What is the Cardinality of the Power set of the set {0, 1, 2}.', 'What is the Cardinality of the Power set of the set {0, 1, 2}.', 7, 96, 1, 6, 72, '2019-09-02 02:41:00', '2019-09-02 02:41:00'),
(766, 8, 225, 'CCS101 - INTRODUCTION TO COMPUTING - Q7', 'Converting (1010111)<sub>2</sub> to base yields which of the following results?', 'Converting (1010111)<sub>2</sub> to base yields which of the following results?', 7, 89, 2, 6, 11, '2019-09-02 02:41:00', '2019-09-02 02:41:00'),
(767, 8, 278, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q27', 'What will be the output of the following code?\n\n[[#code28]]', 'What will be the output of the following code?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">csharp</span></div><pre><code class=\"language-csharp\">try<br />\n{<br />\n  int num = 100;<br />\n  int den = 0;<br />\n  try<br />\n  {<br />\n    MessageBox.Show(\"Message1\");<br />\n    int res = num/den;<br />\n    MessageBox.Show(\"Message2\");<br />\n  }<br />\n  catch(ArithmeticException ae)<br />\n  {<br />\n    MessageBox.Show(\"Message3\");<br />\n  }<br />\n  MessageBox.Show(\"Message4\");<br />\n}</code></pre>', 7, 95, 3, 6, 68, '2019-09-02 02:41:00', '2019-09-02 02:41:00'),
(768, 8, 149, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q9', 'The union of the sets {1, 2, 5} and {1, 2, 6} is the set _______________.', 'The union of the sets {1, 2, 5} and {1, 2, 6} is the set _______________.', 7, 96, 2, 6, 81, '2019-09-02 02:41:00', '2019-09-02 02:41:00'),
(769, 8, 143, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q3', 'Power set of empty set has exactly _________ subset.', 'Power set of empty set has exactly _________ subset.', 7, 96, 1, 6, 77, '2019-09-02 02:41:00', '2019-09-02 02:41:00'),
(770, 8, 246, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q22', 'Which of  the following holds Java source code for the application?', 'Which of  the following holds Java source code for the application?', 7, 125, 2, 6, 94, '2019-09-02 02:41:00', '2019-09-02 02:41:00'),
(771, 8, 41, 'CCS102 - COMPUTER PROGRAMMING 1 Q11', 'What is correct syntax for main method of a java class?', 'What is correct syntax for main method of a java class?', 7, 90, 1, 6, 24, '2019-09-02 02:41:00', '2019-09-02 02:41:00'),
(772, 8, 31, 'Order of operation - Q1', 'What is the output of the following code?\n\n[[#code14]]', 'What is the output of the following code?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">double x = 2;<br />\ndouble y = 3;<br />\ndouble z = 5;<br />\n<br />\ndouble output = x + x * y + (x + 2 * z);<br />\n<br />\nSystem.out.println(output);</code></pre>', 7, 90, 1, 6, 20, '2019-09-02 02:41:00', '2019-09-02 02:41:00'),
(773, 8, 252, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q28', 'What is bean class in android?', 'What is bean class in android?', 7, 125, 3, 6, 99, '2019-09-02 02:41:00', '2019-09-02 02:41:00'),
(774, 8, 107, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q17', 'If Log <sub>4 </sub>(x) = 12, then log 2 (x / 4) is equal to', 'If Log <sub>4 </sub>(x) = 12, then log 2 (x / 4) is equal to', 7, 92, 1, 6, 40, '2019-09-02 02:41:00', '2019-09-02 02:41:00'),
(775, 8, 93, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q3', 'If 2x - 8 ≥ 2, then', 'If 2x - 8 ≥ 2, then', 7, 92, 1, 6, 39, '2019-09-02 02:41:00', '2019-09-02 02:41:00'),
(776, 8, 151, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q11', 'Two sets are called disjoint if there _____________ is the empty set.', 'Two sets are called disjoint if there _____________ is the empty set.', 7, 96, 1, 6, 73, '2019-09-02 02:41:00', '2019-09-02 02:41:00'),
(777, 8, 129, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q11', 'A control similar to an ordinary label having an underline and resembles a link on a web page.', 'A control similar to an ordinary label having an underline and resembles a link on a web page.', 7, 95, 1, 6, 54, '2019-09-02 02:41:00', '2019-09-02 02:41:00'),
(778, 8, 155, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q15', 'Let the set A is {1, 2, 3} and B is {2, 3, 4}. Then number of elements in A U B is _____.', 'Let the set A is {1, 2, 3} and B is {2, 3, 4}. Then number of elements in A U B is _____.', 7, 96, 1, 6, 69, '2019-09-02 02:41:00', '2019-09-02 02:41:00'),
(779, 8, 72, 'CCS101 - INTRODUCTION TO COMPUTING - Q25', 'What type of software is a screen saver?', 'What type of software is a screen saver?', 7, 89, 2, 6, 12, '2019-09-02 02:41:01', '2019-09-02 02:41:01'),
(780, 8, 68, 'Describing two-dimensional motion with vectors', 'A golfer hits a golf ball upwards at an angle of 75°, degree with the horizontal. We can ignore air resistance.\n\n[[#img22]]\n\nWhich graph best describes the golf ball\'s vertical displacement over time?\n\nAssume the origin of the coordinate system to be the point on the ground where the ball was initially at rest.', 'A golfer hits a golf ball upwards at an angle of 75°, degree with the horizontal. We can ignore air resistance.<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/MYpfYGJo93eMWxPVag4ii0jWIwamFw8EKp4yFlbj.png\" width=\"300\" height=\"150\" /><br />\n<br />\nWhich graph best describes the golf ball\'s vertical displacement over time?<br />\n<br />\nAssume the origin of the coordinate system to be the point on the ground where the ball was initially at rest.', 7, 89, 1, 6, 3, '2019-09-02 02:41:01', '2019-09-02 02:41:01'),
(781, 8, 58, 'CCS102 - COMPUTER PROGRAMMING 1 Q28', 'What is the output of this program?\n\n[[#code22]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class array_output <br />\n    {<br />\n        public static void main(String args[]) <br />\n        {<br />\n            int array_variable [] = new int[10];<br />\n	    for (int i = 0; i < 10; ++i) <br />\n            {<br />\n                array_variable[i] = i;<br />\n                System.out.print(array_variable[i] + \" \");<br />\n                i++;<br />\n            }<br />\n        } <br />\n    }</code></pre>', 7, 90, 3, 6, 33, '2019-09-02 02:41:01', '2019-09-02 02:41:01'),
(782, 8, 51, 'CCS102 - COMPUTER PROGRAMMING 1 Q21', 'What is the output of this program?\n\n[[#code18]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class main_class <br />\n    {<br />\n        public static void main(String args[])<br />\n        {<br />\n            int x = 9;<br />\n            if (x == 9) <br />\n            { <br />\n                int x = 8;<br />\n                System.out.println(x);<br />\n            }<br />\n        } <br />\n    }</code></pre>', 7, 90, 2, 6, 27, '2019-09-02 02:41:01', '2019-09-02 02:41:01'),
(783, 8, 254, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q30', 'What is an HTTP client class in android?', 'What is an HTTP client class in android?', 7, 125, 3, 6, 100, '2019-09-02 02:41:01', '2019-09-02 02:41:01'),
(784, 8, 147, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q7', 'The set of positive integers is _____________.', 'The set of positive integers is _____________.', 7, 96, 1, 6, 70, '2019-09-02 02:41:01', '2019-09-02 02:41:01'),
(785, 8, 144, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q4', 'What is the cardinality of the set of odd positive integers less than 10?', 'What is the cardinality of the set of odd positive integers less than 10?', 7, 96, 1, 6, 71, '2019-09-02 02:41:01', '2019-09-02 02:41:01'),
(786, 8, 205, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q5', 'For ___________, code used by Android is not open source.', 'For ___________, code used by Android is not open source.', 7, 125, 1, 6, 90, '2019-09-02 02:41:01', '2019-09-02 02:41:01'),
(787, 8, 66, 'Binary to decimal conversion 1', 'Convert 10100011 from binary to decimal.', 'Convert 10100011 from binary to decimal.', 7, 89, 1, 6, 8, '2019-09-02 02:41:01', '2019-09-02 02:41:01'),
(788, 8, 132, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q14', 'C# treats the multiple catch statements like cases in a _____________ statement.', 'C# treats the multiple catch statements like cases in a _____________ statement.', 7, 95, 1, 6, 58, '2019-09-02 02:41:01', '2019-09-02 02:41:01'),
(789, 8, 160, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q20', 'The shaded area of figure is best described by\n\n[[#img32]]', 'The shaded area of figure is best described by<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/5iL0Nsol7VkygnPftlQm5guoA5NqiGISBGevRke8.jpeg\" width=\"300\" height=\"150\" />', 7, 96, 3, 6, 83, '2019-09-02 02:41:01', '2019-09-02 02:41:01'),
(790, 8, 150, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q10', 'The intersection of the sets {1, 2, 5} and {1, 2, 6} is the set _____________.', 'The intersection of the sets {1, 2, 5} and {1, 2, 6} is the set _____________.', 7, 96, 1, 6, 74, '2019-09-02 02:41:01', '2019-09-02 02:41:01'),
(791, 8, 211, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q11', 'Web browser available in android based on', 'Web browser available in android based on', 7, 125, 1, 6, 85, '2019-09-02 02:41:01', '2019-09-02 02:41:01'),
(792, 8, 114, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q24', 'The mean of a data set is equal to 10 and its standard deviation is equal to 1. If we add 5 to each data value, then the mean and standard deviation become', 'The mean of a data set is equal to 10 and its standard deviation is equal to 1. If we add 5 to each data value, then the mean and standard deviation become', 7, 92, 2, 6, 45, '2019-09-02 02:41:01', '2019-09-02 02:41:01'),
(793, 8, 76, 'CCS101 - INTRODUCTION TO COMPUTING _ Q21', '_______ is a duplicate copy of data or other computer content for use in the event that the original version is destroyed.', '_______ is a duplicate copy of data or other computer content for use in the event that the original version is destroyed.', 7, 89, 2, 6, 13, '2019-09-02 02:41:01', '2019-09-02 02:41:01'),
(794, 8, 156, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q16', 'If A has 4 elements B has 8 elements then the minimum and maximum number of elements in A U B are respectively', 'If A has 4 elements B has 8 elements then the minimum and maximum number of elements in A U B are respectively', 7, 96, 1, 6, 75, '2019-09-02 02:41:01', '2019-09-02 02:41:01'),
(795, 8, 119, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q1', 'This is a repetition control stricture that allows you to efficiently write a loop that needs to execute a specific number of times.', 'This is a repetition control stricture that allows you to efficiently write a loop that needs to execute a specific number of times.', 7, 95, 1, 6, 57, '2019-09-02 02:41:01', '2019-09-02 02:41:01'),
(796, 8, 126, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q8', 'A control used to show a list of strings which you can select.', 'A control used to show a list of strings which you can select.', 7, 95, 1, 6, 56, '2019-09-02 02:41:01', '2019-09-02 02:41:01'),
(797, 8, 204, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q4', 'Android supports which features.', 'Android supports which features.', 7, 125, 1, 6, 92, '2019-09-02 02:41:01', '2019-09-02 02:41:01'),
(798, 8, 111, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q21', 'For x greater than or equal to zero and less than or equal to 2 π, sin x and cos x are both decreasing on the intervals', 'For x greater than or equal to zero and less than or equal to 2 π, sin x and cos x are both decreasing on the intervals', 7, 92, 2, 6, 47, '2019-09-02 02:41:01', '2019-09-02 02:41:01'),
(799, 8, 78, 'CCS101 - INTRODUCTION TO COMPUTING -  Q19', 'This coding system is designed to support international languages like Chinese and Japanese.', 'This coding system is designed to support international languages like Chinese and Japanese.', 7, 89, 3, 6, 17, '2019-09-02 02:41:01', '2019-09-02 02:41:01'),
(800, 8, 92, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q2', 'Solve the inequality \n4x + 8 > 5x +9', 'Solve the inequality <br />\n4x + 8 > 5x +9', 7, 92, 1, 6, 37, '2019-09-02 02:41:01', '2019-09-02 02:41:01'),
(801, 9, 204, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q4', 'Android supports which features.', 'Android supports which features.', 7, 125, 1, 6, 92, '2019-09-02 02:50:23', '2019-09-02 02:50:23'),
(802, 9, 99, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q9', 'Evaluate the following:\n \nlog<sub>4</sub> 25', 'Evaluate the following:<br />\n <br />\nlog<sub>4</sub> 25', 7, 92, 1, 6, 41, '2019-09-02 02:50:23', '2019-09-02 02:50:23'),
(803, 9, 246, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q22', 'Which of  the following holds Java source code for the application?', 'Which of  the following holds Java source code for the application?', 7, 125, 2, 6, 94, '2019-09-02 02:50:23', '2019-09-02 02:50:23'),
(804, 9, 33, 'IT01- CCS102 - COMPUTER PROGRAMMING 1 - Q3', 'Which of the following converts a type to a double type in C#?', 'Which of the following converts a type to a double type in C#?', 7, 90, 1, 6, 26, '2019-09-02 02:50:24', '2019-09-02 02:50:24'),
(805, 9, 112, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q22', 'A school committee consists of 2 teachers and 4 students. The number of different committees that can be formed from 5 teachers and 10 students is', 'A school committee consists of 2 teachers and 4 students. The number of different committees that can be formed from 5 teachers and 10 students is', 7, 92, 1, 6, 42, '2019-09-02 02:50:24', '2019-09-02 02:50:24'),
(806, 9, 76, 'CCS101 - INTRODUCTION TO COMPUTING _ Q21', '_______ is a duplicate copy of data or other computer content for use in the event that the original version is destroyed.', '_______ is a duplicate copy of data or other computer content for use in the event that the original version is destroyed.', 7, 89, 2, 6, 13, '2019-09-02 02:50:24', '2019-09-02 02:50:24'),
(807, 9, 114, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q24', 'The mean of a data set is equal to 10 and its standard deviation is equal to 1. If we add 5 to each data value, then the mean and standard deviation become', 'The mean of a data set is equal to 10 and its standard deviation is equal to 1. If we add 5 to each data value, then the mean and standard deviation become', 7, 92, 2, 6, 45, '2019-09-02 02:50:24', '2019-09-02 02:50:24'),
(808, 9, 254, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q30', 'What is an HTTP client class in android?', 'What is an HTTP client class in android?', 7, 125, 3, 6, 100, '2019-09-02 02:50:24', '2019-09-02 02:50:24'),
(809, 9, 1, 'Solving for basic equation - Q1', 'solve for x:\n2x + 3 = 5', 'solve for x:<br />\n2x + 3 = 5', 7, 92, 1, 6, 36, '2019-09-02 02:50:24', '2019-09-02 02:50:24'),
(810, 9, 72, 'CCS101 - INTRODUCTION TO COMPUTING - Q25', 'What type of software is a screen saver?', 'What type of software is a screen saver?', 7, 89, 2, 6, 12, '2019-09-02 02:50:24', '2019-09-02 02:50:24'),
(811, 9, 104, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q14', 'What is the result when you put the expression x<sup>2</sup> +10x+41 into vertex form by completing the square ?', 'What is the result when you put the expression x<sup>2</sup> +10x+41 into vertex form by completing the square ?', 7, 92, 3, 6, 51, '2019-09-02 02:50:24', '2019-09-02 02:50:24'),
(812, 9, 87, 'CCS101 - INTRODUCTION TO COMPUTING - Q8', '____________ are the four general operations that are performed in each machine cycle.', '____________ are the four general operations that are performed in each machine cycle.', 7, 89, 2, 6, 14, '2019-09-02 02:50:24', '2019-09-02 02:50:24'),
(813, 9, 119, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q1', 'This is a repetition control stricture that allows you to efficiently write a loop that needs to execute a specific number of times.', 'This is a repetition control stricture that allows you to efficiently write a loop that needs to execute a specific number of times.', 7, 95, 1, 6, 57, '2019-09-02 02:50:24', '2019-09-02 02:50:24'),
(814, 9, 40, 'CCS102 - COMPUTER PROGRAMMING 1 Q10', 'Static binding uses which information for binding?', 'Static binding uses which information for binding?', 7, 90, 1, 6, 23, '2019-09-02 02:50:24', '2019-09-02 02:50:24'),
(815, 9, 162, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q22', 'If n(A)=10 , n(B)=30,n(C)=50 and if set A,B,C are pairwise disjoint then which of the following is correct?', 'If n(A)=10 , n(B)=30,n(C)=50 and if set A,B,C are pairwise disjoint then which of the following is correct?', 7, 96, 2, 6, 79, '2019-09-02 02:50:24', '2019-09-02 02:50:24'),
(816, 9, 285, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q29', 'The period of 2 sin x cos x is', 'The period of 2 sin x cos x is', 7, 92, 1, 6, 35, '2019-09-02 02:50:24', '2019-09-02 02:50:24'),
(817, 9, 136, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q18', 'Private Button print = new button();', 'Private Button print = new button();', 7, 95, 2, 6, 61, '2019-09-02 02:50:24', '2019-09-02 02:50:24'),
(818, 9, 212, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q12', 'Which company bought android?', 'Which company bought android?', 7, 125, 1, 6, 93, '2019-09-02 02:50:24', '2019-09-02 02:50:24'),
(819, 9, 74, 'CCS101 - INTRODUCTION TO COMPUTING - Q23', 'An electronic tool that allows information to be input, processed, and output.', 'An electronic tool that allows information to be input, processed, and output.', 7, 89, 1, 6, 6, '2019-09-02 02:50:24', '2019-09-02 02:50:24'),
(820, 9, 256, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q32', 'What is the difference between content values and cursor in android SQlite?', 'What is the difference between content values and cursor in android SQlite?', 7, 125, 3, 6, 98, '2019-09-02 02:50:24', '2019-09-02 02:50:24'),
(821, 9, 151, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q11', 'Two sets are called disjoint if there _____________ is the empty set.', 'Two sets are called disjoint if there _____________ is the empty set.', 7, 96, 1, 6, 73, '2019-09-02 02:50:24', '2019-09-02 02:50:24'),
(822, 9, 289, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q33', 'A number of the form 213ab, where a and b are digits, has a reminder less than 10 when divided by 100. The sum of all the digits in the above number is equal to 13. Find the digit b.', 'A number of the form 213ab, where a and b are digits, has a reminder less than 10 when divided by 100. The sum of all the digits in the above number is equal to 13. Find the digit b.', 7, 92, 1, 6, 43, '2019-09-02 02:50:24', '2019-09-02 02:50:24'),
(823, 9, 243, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q19', 'Android provides a few standard themes, listed in ________.', 'Android provides a few standard themes, listed in ________.', 7, 125, 2, 6, 96, '2019-09-02 02:50:24', '2019-09-02 02:50:24'),
(824, 9, 150, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q10', 'The intersection of the sets {1, 2, 5} and {1, 2, 6} is the set _____________.', 'The intersection of the sets {1, 2, 5} and {1, 2, 6} is the set _____________.', 7, 96, 1, 6, 74, '2019-09-02 02:50:24', '2019-09-02 02:50:24'),
(825, 9, 70, 'Projectile motion 2', 'An adventurous cliff jumper runs horizontally off a cliff. We can ignore air resistance.\n\n[[#img27]]\n\nWhich diagram best describes the horizontal velocity vectors and trajectory during the person’s fall?\n\nAssume the origin of the coordinate system to be the cliff edge.\n\nA red dot represents a vector of zero magnitude.', 'An adventurous cliff jumper runs horizontally off a cliff. We can ignore air resistance.<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/PgCOEtvEENxNaqgGLMWLrysCTt8GwyXUqH8p2sz7.png\" width=\"200\" height=\"200\" /><br />\n<br />\nWhich diagram best describes the horizontal velocity vectors and trajectory during the person’s fall?<br />\n<br />\nAssume the origin of the coordinate system to be the cliff edge.<br />\n<br />\nA red dot represents a vector of zero magnitude.', 7, 89, 1, 6, 4, '2019-09-02 02:50:24', '2019-09-02 02:50:24'),
(826, 9, 160, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q20', 'The shaded area of figure is best described by\n\n[[#img32]]', 'The shaded area of figure is best described by<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/5iL0Nsol7VkygnPftlQm5guoA5NqiGISBGevRke8.jpeg\" width=\"300\" height=\"150\" />', 7, 96, 3, 6, 83, '2019-09-02 02:50:24', '2019-09-02 02:50:24'),
(827, 9, 89, 'CCS101 - INTRODUCTION TO COMPUTING - Q5', 'A memory management technique that uses hard drive space as additional RAM.', 'A memory management technique that uses hard drive space as additional RAM.', 7, 89, 1, 6, 2, '2019-09-02 02:50:24', '2019-09-02 02:50:24'),
(828, 9, 143, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q3', 'Power set of empty set has exactly _________ subset.', 'Power set of empty set has exactly _________ subset.', 7, 96, 1, 6, 77, '2019-09-02 02:50:25', '2019-09-02 02:50:25'),
(829, 9, 48, 'CCS102 - COMPUTER PROGRAMMING 1 Q18', 'What is JRE?', 'What is JRE?', 7, 90, 2, 6, 29, '2019-09-02 02:50:25', '2019-09-02 02:50:25'),
(830, 9, 270, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q33', 'In the given AP series the term at position 11 would be\n5, 8, 11, 14, 17, 20………50.', 'In the given AP series the term at position 11 would be<br />\n5, 8, 11, 14, 17, 20………50.', 7, 96, 3, 6, 82, '2019-09-02 02:50:25', '2019-09-02 02:50:25'),
(831, 9, 223, 'CC101 - INTRODUCTION TO COMPUTING - Q11', 'The sum of 11101 + 10111 equals ________.', 'The sum of 11101 + 10111 equals ________.', 7, 89, 2, 6, 10, '2019-09-02 02:50:25', '2019-09-02 02:50:25'),
(832, 9, 131, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q13', 'A method of MessageBox class that allows you to call a message box for prompting user with messages and information.', 'A method of MessageBox class that allows you to call a message box for prompting user with messages and information.', 7, 95, 1, 6, 59, '2019-09-02 02:50:25', '2019-09-02 02:50:25'),
(833, 9, 107, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q17', 'If Log <sub>4 </sub>(x) = 12, then log 2 (x / 4) is equal to', 'If Log <sub>4 </sub>(x) = 12, then log 2 (x / 4) is equal to', 7, 92, 1, 6, 40, '2019-09-02 02:50:25', '2019-09-02 02:50:25'),
(834, 9, 267, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q30', 'A floor function map a real number to :', 'A floor function map a real number to :', 7, 96, 3, 6, 84, '2019-09-02 02:50:25', '2019-09-02 02:50:25'),
(835, 9, 155, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q15', 'Let the set A is {1, 2, 3} and B is {2, 3, 4}. Then number of elements in A U B is _____.', 'Let the set A is {1, 2, 3} and B is {2, 3, 4}. Then number of elements in A U B is _____.', 7, 96, 1, 6, 69, '2019-09-02 02:50:25', '2019-09-02 02:50:25'),
(836, 9, 286, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q30', 'The probability that an electronic device produced by a company does not function properly is equal to 0.1. If 10 devices are bought, then the probability, to the nearest thousandth, that 7 devices function properly is', 'The probability that an electronic device produced by a company does not function properly is equal to 0.1. If 10 devices are bought, then the probability, to the nearest thousandth, that 7 devices function properly is', 7, 92, 3, 6, 49, '2019-09-02 02:50:25', '2019-09-02 02:50:25'),
(837, 9, 90, 'CCS101 - INTRODUCTION TO COMPUTING - Q4', 'A letter, digit, or special character is represented by a code in a ___.', 'A letter, digit, or special character is represented by a code in a ___.', 7, 89, 3, 6, 15, '2019-09-02 02:50:25', '2019-09-02 02:50:25'),
(838, 9, 113, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q23', 'Five different books (A, B, C, D and E) are to be arranged on a shelf. Books C and D are to be arranged first and second starting from the right of the shelf. The number of different orders in which books A, B and E may be arranged is', 'Five different books (A, B, C, D and E) are to be arranged on a shelf. Books C and D are to be arranged first and second starting from the right of the shelf. The number of different orders in which books A, B and E may be arranged is', 7, 92, 2, 6, 48, '2019-09-02 02:50:25', '2019-09-02 02:50:25'),
(839, 9, 38, 'CCS102 - COMPUTER PROGRAMMING 1 - Q8', 'Which of the following is true about try block in C#?', 'Which of the following is true about try block in C#?', 7, 90, 1, 6, 19, '2019-09-02 02:50:25', '2019-09-02 02:50:25'),
(840, 9, 147, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q7', 'The set of positive integers is _____________.', 'The set of positive integers is _____________.', 7, 96, 1, 6, 70, '2019-09-02 02:50:25', '2019-09-02 02:50:25'),
(841, 9, 51, 'CCS102 - COMPUTER PROGRAMMING 1 Q21', 'What is the output of this program?\n\n[[#code18]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class main_class <br />\n    {<br />\n        public static void main(String args[])<br />\n        {<br />\n            int x = 9;<br />\n            if (x == 9) <br />\n            { <br />\n                int x = 8;<br />\n                System.out.println(x);<br />\n            }<br />\n        } <br />\n    }</code></pre>', 7, 90, 2, 6, 27, '2019-09-02 02:50:25', '2019-09-02 02:50:25'),
(842, 9, 79, 'CCS101 - INTRODUCTION TO COMPUTING -Q18', 'Which of the following is/are not part of the CPU?', 'Which of the following is/are not part of the CPU?', 7, 89, 3, 6, 16, '2019-09-02 02:50:25', '2019-09-02 02:50:25'),
(843, 9, 278, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q27', 'What will be the output of the following code?\n\n[[#code28]]', 'What will be the output of the following code?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">csharp</span></div><pre><code class=\"language-csharp\">try<br />\n{<br />\n  int num = 100;<br />\n  int den = 0;<br />\n  try<br />\n  {<br />\n    MessageBox.Show(\"Message1\");<br />\n    int res = num/den;<br />\n    MessageBox.Show(\"Message2\");<br />\n  }<br />\n  catch(ArithmeticException ae)<br />\n  {<br />\n    MessageBox.Show(\"Message3\");<br />\n  }<br />\n  MessageBox.Show(\"Message4\");<br />\n}</code></pre>', 7, 95, 3, 6, 68, '2019-09-02 02:50:25', '2019-09-02 02:50:25'),
(844, 9, 127, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q9', 'Commonly used  control to execute commansd when it is clicked.', 'Commonly used  control to execute commansd when it is clicked.', 7, 95, 1, 6, 60, '2019-09-02 02:50:25', '2019-09-02 02:50:25'),
(845, 9, 202, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q2', 'What is android?', 'What is android?', 7, 125, 1, 6, 86, '2019-09-02 02:50:25', '2019-09-02 02:50:25'),
(846, 9, 244, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q20', 'To update contents of content provider using curser and commit you need to call _______________.', 'To update contents of content provider using curser and commit you need to call _______________.', 7, 125, 2, 6, 95, '2019-09-02 02:50:25', '2019-09-02 02:50:25'),
(847, 9, 207, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q7', 'ABD stands for', 'ABD stands for', 7, 125, 1, 6, 88, '2019-09-02 02:50:25', '2019-09-02 02:50:25'),
(848, 9, 149, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q9', 'The union of the sets {1, 2, 5} and {1, 2, 6} is the set _______________.', 'The union of the sets {1, 2, 5} and {1, 2, 6} is the set _______________.', 7, 96, 2, 6, 81, '2019-09-02 02:50:25', '2019-09-02 02:50:25'),
(849, 9, 95, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q5', 'What is the square root of -144?', 'What is the square root of -144?', 7, 92, 1, 6, 38, '2019-09-02 02:50:25', '2019-09-02 02:50:25'),
(850, 9, 61, 'CCS102 - COMPUTER PROGRAMMING 1 Q31', 'Where is array stored in memory?', 'Where is array stored in memory?', 7, 90, 2, 6, 31, '2019-09-02 02:50:25', '2019-09-02 02:50:25'),
(851, 9, 156, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q16', 'If A has 4 elements B has 8 elements then the minimum and maximum number of elements in A U B are respectively', 'If A has 4 elements B has 8 elements then the minimum and maximum number of elements in A U B are respectively', 7, 96, 1, 6, 75, '2019-09-02 02:50:25', '2019-09-02 02:50:25'),
(852, 9, 219, 'Computer Hardware - Q3', 'A device that enables a computer to communicate over telephone lines.', 'A device that enables a computer to communicate over telephone lines.', 7, 89, 1, 6, 1, '2019-09-02 02:50:25', '2019-09-02 02:50:25'),
(853, 9, 93, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q3', 'If 2x - 8 ≥ 2, then', 'If 2x - 8 ≥ 2, then', 7, 92, 1, 6, 39, '2019-09-02 02:50:25', '2019-09-02 02:50:25'),
(854, 9, 203, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q3', 'Android doesn\'t  support which format?', 'Android doesn\'t  support which format?', 7, 125, 1, 6, 87, '2019-09-02 02:50:25', '2019-09-02 02:50:25'),
(855, 9, 32, 'CCS102 - COMPUTER PROGRAMMING 1 - Q2', 'Which of the following is a reserved keyword in C#?', 'Which of the following is a reserved keyword in C#?', 7, 90, 1, 6, 21, '2019-09-02 02:50:25', '2019-09-02 02:50:25'),
(856, 9, 59, 'CCS102 - COMPUTER PROGRAMMING 1 Q29', 'What is the output of this program?\n\n[[#code24]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class evaluate <br />\n    {<br />\n        public static void main(String args[]) <br />\n            {<br />\n	        int arr[] = new int[] {0 , 1, 2, 3, 4, 5, 6, 7, 8, 9};<br />\n	        int n = 6;<br />\n                n = arr[arr[n] / 2];<br />\n	        System.out.println(arr[n] / 2);<br />\n            } <br />\n    }</code></pre>', 7, 90, 3, 6, 34, '2019-09-02 02:50:25', '2019-09-02 02:50:25'),
(857, 9, 214, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q14', 'Android is based on which kernel?', 'Android is based on which kernel?', 7, 125, 1, 6, 89, '2019-09-02 02:50:25', '2019-09-02 02:50:25'),
(858, 9, 58, 'CCS102 - COMPUTER PROGRAMMING 1 Q28', 'What is the output of this program?\n\n[[#code22]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class array_output <br />\n    {<br />\n        public static void main(String args[]) <br />\n        {<br />\n            int array_variable [] = new int[10];<br />\n	    for (int i = 0; i < 10; ++i) <br />\n            {<br />\n                array_variable[i] = i;<br />\n                System.out.print(array_variable[i] + \" \");<br />\n                i++;<br />\n            }<br />\n        } <br />\n    }</code></pre>', 7, 90, 3, 6, 33, '2019-09-02 02:50:25', '2019-09-02 02:50:25'),
(859, 9, 215, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q15', 'Which is the latest mobile version of android?', 'Which is the latest mobile version of android?', 7, 125, 1, 6, 91, '2019-09-02 02:50:25', '2019-09-02 02:50:25'),
(860, 9, 138, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q20', 'A method_____an exception when that method detects that a problem has occured.', 'A method_____an exception when that method detects that a problem has occured.', 7, 95, 2, 6, 65, '2019-09-02 02:50:25', '2019-09-02 02:50:25'),
(861, 9, 148, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q8', 'What is the Cardinality of the Power set of the set {0, 1, 2}.', 'What is the Cardinality of the Power set of the set {0, 1, 2}.', 7, 96, 1, 6, 72, '2019-09-02 02:50:26', '2019-09-02 02:50:26'),
(862, 9, 145, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q5', 'What is the Cartesian product of A = {1, 2} and B = {a, b}?', 'What is the Cartesian product of A = {1, 2} and B = {a, b}?', 7, 96, 2, 6, 78, '2019-09-02 02:50:26', '2019-09-02 02:50:26'),
(863, 9, 97, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q7', 'The expression (3i - 2)(i + 1) - 7 can be simplified to which of the following expressions?', 'The expression (3i - 2)(i + 1) - 7 can be simplified to which of the following expressions?', 7, 92, 2, 6, 46, '2019-09-02 02:50:26', '2019-09-02 02:50:26'),
(864, 9, 126, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q8', 'A control used to show a list of strings which you can select.', 'A control used to show a list of strings which you can select.', 7, 95, 1, 6, 56, '2019-09-02 02:50:26', '2019-09-02 02:50:26'),
(865, 9, 108, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q18', 'The population of a country increased by an average of 2% per year from 2000 to 2003. If the population of this country was 2 000 000 on December 31, 2003, then the population of this country on January 1, 2000, to the nearest thousand would have been', 'The population of a country increased by an average of 2% per year from 2000 to 2003. If the population of this country was 2 000 000 on December 31, 2003, then the population of this country on January 1, 2000, to the nearest thousand would have been', 7, 92, 3, 6, 50, '2019-09-02 02:50:26', '2019-09-02 02:50:26'),
(866, 9, 42, 'CCS102 - COMPUTER PROGRAMMING 1 Q12', 'Which of the following is not a keyword in java?', 'Which of the following is not a keyword in java?', 7, 90, 1, 6, 18, '2019-09-02 02:50:26', '2019-09-02 02:50:26'),
(867, 9, 124, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q6', 'This data type stores the address of the value which means that they refer to a memory location.', 'This data type stores the address of the value which means that they refer to a memory location.', 7, 95, 1, 6, 52, '2019-09-02 02:50:26', '2019-09-02 02:50:26'),
(868, 9, 137, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q19', 'Polymorphism occurs when the methods of the child class.', 'Polymorphism occurs when the methods of the child class.', 7, 95, 2, 6, 62, '2019-09-02 02:50:26', '2019-09-02 02:50:26'),
(869, 9, 121, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q3', 'These are additional operators used to return Boolean values.', 'These are additional operators used to return Boolean values.', 7, 95, 1, 6, 55, '2019-09-02 02:50:26', '2019-09-02 02:50:26'),
(870, 9, 205, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q5', 'For ___________, code used by Android is not open source.', 'For ___________, code used by Android is not open source.', 7, 125, 1, 6, 90, '2019-09-02 02:50:26', '2019-09-02 02:50:26'),
(871, 9, 220, 'Computer Hardware - Q2', 'An input device that reads printed text and graphics and transfers them to a computer in digital form.', 'An input device that reads printed text and graphics and transfers them to a computer in digital form.', 7, 89, 1, 6, 7, '2019-09-02 02:50:26', '2019-09-02 02:50:26'),
(872, 9, 132, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q14', 'C# treats the multiple catch statements like cases in a _____________ statement.', 'C# treats the multiple catch statements like cases in a _____________ statement.', 7, 95, 1, 6, 58, '2019-09-02 02:50:26', '2019-09-02 02:50:26'),
(873, 9, 252, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q28', 'What is bean class in android?', 'What is bean class in android?', 7, 125, 3, 6, 99, '2019-09-02 02:50:26', '2019-09-02 02:50:26'),
(874, 9, 140, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q22', 'A _______ is an identifier that denotes a storage location.', 'A _______ is an identifier that denotes a storage location.', 7, 95, 2, 6, 63, '2019-09-02 02:50:26', '2019-09-02 02:50:26'),
(875, 9, 277, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q26', 'Which of the following will result from compiling this code, assuming that all other code for your form works properly?\n\n[[#code27]]', 'Which of the following will result from compiling this code, assuming that all other code for your form works properly?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">csharp</span></div><pre><code class=\"language-csharp\">try<br />\n{<br />\n  //Write code to allocate some resources<br />\n}<br />\nfinally<br />\n{<br />\n  //Write code to Dispose all allocated resources<br />\n}</code></pre>', 7, 95, 3, 6, 66, '2019-09-02 02:50:26', '2019-09-02 02:50:26'),
(876, 9, 275, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q24', 'How should you arrange catch blocks?', 'How should you arrange catch blocks?', 7, 95, 2, 6, 64, '2019-09-02 02:50:26', '2019-09-02 02:50:26'),
(877, 9, 248, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q24', 'What is the use of content provider in android?', 'What is the use of content provider in android?', 7, 125, 2, 6, 97, '2019-09-02 02:50:26', '2019-09-02 02:50:26'),
(878, 9, 82, 'CCS101 - INTRODUCTION TO COMPUTING - Q15', '10111 is the two\'s complement representation of', '10111 is the two\'s complement representation of', 7, 89, 1, 6, 5, '2019-09-02 02:50:26', '2019-09-02 02:50:26'),
(879, 9, 66, 'Binary to decimal conversion 1', 'Convert 10100011 from binary to decimal.', 'Convert 10100011 from binary to decimal.', 7, 89, 1, 6, 8, '2019-09-02 02:50:26', '2019-09-02 02:50:26'),
(880, 9, 225, 'CCS101 - INTRODUCTION TO COMPUTING - Q7', 'Converting (1010111)<sub>2</sub> to base yields which of the following results?', 'Converting (1010111)<sub>2</sub> to base yields which of the following results?', 7, 89, 2, 6, 11, '2019-09-02 02:50:26', '2019-09-02 02:50:26'),
(881, 9, 52, 'CCS102 - COMPUTER PROGRAMMING 1 Q22', 'What is the output of this program?\n\n[[#code19]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class box <br />\n    {<br />\n        int width;<br />\n        int height;<br />\n        int length;<br />\n    } <br />\n    class mainclass <br />\n    {<br />\n        public static void main(String args[]) <br />\n        {        <br />\n             box obj = new box();<br />\n             obj.width = 10;<br />\n             obj.height = 2;<br />\n             obj.length = 10;<br />\n             int y = obj.width * obj.height * obj.length; <br />\n             System.out.print(y);<br />\n        } <br />\n    }</code></pre>', 7, 90, 3, 6, 32, '2019-09-02 02:50:26', '2019-09-02 02:50:26'),
(882, 9, 68, 'Describing two-dimensional motion with vectors', 'A golfer hits a golf ball upwards at an angle of 75°, degree with the horizontal. We can ignore air resistance.\n\n[[#img22]]\n\nWhich graph best describes the golf ball\'s vertical displacement over time?\n\nAssume the origin of the coordinate system to be the point on the ground where the ball was initially at rest.', 'A golfer hits a golf ball upwards at an angle of 75°, degree with the horizontal. We can ignore air resistance.<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/MYpfYGJo93eMWxPVag4ii0jWIwamFw8EKp4yFlbj.png\" width=\"300\" height=\"150\" /><br />\n<br />\nWhich graph best describes the golf ball\'s vertical displacement over time?<br />\n<br />\nAssume the origin of the coordinate system to be the point on the ground where the ball was initially at rest.', 7, 89, 1, 6, 3, '2019-09-02 02:50:26', '2019-09-02 02:50:26'),
(883, 9, 111, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q21', 'For x greater than or equal to zero and less than or equal to 2 π, sin x and cos x are both decreasing on the intervals', 'For x greater than or equal to zero and less than or equal to 2 π, sin x and cos x are both decreasing on the intervals', 7, 92, 2, 6, 47, '2019-09-02 02:50:26', '2019-09-02 02:50:26'),
(884, 9, 41, 'CCS102 - COMPUTER PROGRAMMING 1 Q11', 'What is correct syntax for main method of a java class?', 'What is correct syntax for main method of a java class?', 7, 90, 1, 6, 24, '2019-09-02 02:50:26', '2019-09-02 02:50:26'),
(885, 9, 211, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q11', 'Web browser available in android based on', 'Web browser available in android based on', 7, 125, 1, 6, 85, '2019-09-02 02:50:26', '2019-09-02 02:50:26'),
(886, 9, 57, 'CCS102 - COMPUTER PROGRAMMING 1 Q27', 'Which of these is necessary to specify at time of array initialization?', 'Which of these is necessary to specify at time of array initialization?', 7, 90, 2, 6, 30, '2019-09-02 02:50:26', '2019-09-02 02:50:26'),
(887, 9, 50, 'CCS102 - COMPUTER PROGRAMMING Q20', 'What happens when thread\'s yield() method is called?', 'What happens when thread\'s yield() method is called?', 7, 90, 2, 6, 28, '2019-09-02 02:50:26', '2019-09-02 02:50:26'),
(888, 9, 129, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q11', 'A control similar to an ordinary label having an underline and resembles a link on a web page.', 'A control similar to an ordinary label having an underline and resembles a link on a web page.', 7, 95, 1, 6, 54, '2019-09-02 02:50:26', '2019-09-02 02:50:26'),
(889, 9, 39, 'CCS102 - COMPUTER PROGRAMMING 1 Q9', 'What of the following is the default value of an instance variable?', 'What of the following is the default value of an instance variable?', 7, 90, 1, 6, 25, '2019-09-02 02:50:26', '2019-09-02 02:50:26'),
(890, 9, 283, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q32', 'You have a TextBox control and a Help button that the user can press to get help on allowable values. You validate the data entered by the user in the TextBox control. If the user enters an invalid value, you set the focus back in the control using the Cancel property of the CancelEventArgs. A user reports that once he enters invalid data in the text box, he cannot click the Help button. What should you do to correct the problem?', 'You have a TextBox control and a Help button that the user can press to get help on allowable values. You validate the data entered by the user in the TextBox control. If the user enters an invalid value, you set the focus back in the control using the Cancel property of the CancelEventArgs. A user reports that once he enters invalid data in the text box, he cannot click the Help button. What should you do to correct the problem?', 7, 95, 3, 6, 67, '2019-09-02 02:50:26', '2019-09-02 02:50:26'),
(891, 9, 31, 'Order of operation - Q1', 'What is the output of the following code?\n\n[[#code14]]', 'What is the output of the following code?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">double x = 2;<br />\ndouble y = 3;<br />\ndouble z = 5;<br />\n<br />\ndouble output = x + x * y + (x + 2 * z);<br />\n<br />\nSystem.out.println(output);</code></pre>', 7, 90, 1, 6, 20, '2019-09-02 02:50:26', '2019-09-02 02:50:26'),
(892, 9, 77, 'CCS101 - INTRODUCTION TO COMPUTING - Q20', 'A programming error that occurs when running a program produces incorrect results.', 'A programming error that occurs when running a program produces incorrect results.', 7, 89, 1, 6, 9, '2019-09-02 02:50:26', '2019-09-02 02:50:26'),
(893, 9, 116, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q26', 'If f(x) is an odd function, then | f(x) | is', 'If f(x) is an odd function, then | f(x) | is', 7, 92, 2, 6, 44, '2019-09-02 02:50:26', '2019-09-02 02:50:26'),
(894, 9, 92, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q2', 'Solve the inequality \n4x + 8 > 5x +9', 'Solve the inequality <br />\n4x + 8 > 5x +9', 7, 92, 1, 6, 37, '2019-09-02 02:50:26', '2019-09-02 02:50:26'),
(895, 9, 144, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q4', 'What is the cardinality of the set of odd positive integers less than 10?', 'What is the cardinality of the set of odd positive integers less than 10?', 7, 96, 1, 6, 71, '2019-09-02 02:50:27', '2019-09-02 02:50:27'),
(896, 9, 34, 'IT01- CCS102 - COMPUTER PROGRAMMING 1 - Q4', 'Which of the following operator returns the size of a data type in C#?', 'Which of the following operator returns the size of a data type in C#?', 7, 90, 1, 6, 22, '2019-09-02 02:50:27', '2019-09-02 02:50:27'),
(897, 9, 78, 'CCS101 - INTRODUCTION TO COMPUTING -  Q19', 'This coding system is designed to support international languages like Chinese and Japanese.', 'This coding system is designed to support international languages like Chinese and Japanese.', 7, 89, 3, 6, 17, '2019-09-02 02:50:27', '2019-09-02 02:50:27'),
(898, 9, 122, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q4', 'These operators take two operands, such as arithmetic operators (+,-,*,/).', 'These operators take two operands, such as arithmetic operators (+,-,*,/).', 7, 95, 1, 6, 53, '2019-09-02 02:50:27', '2019-09-02 02:50:27'),
(899, 9, 142, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q2', 'The set O of odd positive integers less than 10 can be expressed by _____________.', 'The set O of odd positive integers less than 10 can be expressed by _____________.', 7, 96, 1, 6, 76, '2019-09-02 02:50:27', '2019-09-02 02:50:27'),
(900, 9, 260, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q23', 'In the given figure the if n(A)=20,n(U)=50,n(C)=10 and n(A∩B)=5 then n(B)=? \n\n[[#img34]]', 'In the given figure the if n(A)=20,n(U)=50,n(C)=10 and n(A∩B)=5 then n(B)=? <br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/23B9WIeQ00wE4pw7nsRG6le8KJWkZ1jI9HG7nYv3.jpeg\" width=\"300\" height=\"150\" />', 7, 96, 2, 6, 80, '2019-09-02 02:50:27', '2019-09-02 02:50:27'),
(901, 10, 34, 'IT01- CCS102 - COMPUTER PROGRAMMING 1 - Q4', 'Which of the following operator returns the size of a data type in C#?', 'Which of the following operator returns the size of a data type in C#?', 7, 90, 1, 6, 22, '2019-09-02 02:58:10', '2019-09-02 02:58:10'),
(902, 10, 203, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q3', 'Android doesn\'t  support which format?', 'Android doesn\'t  support which format?', 7, 125, 1, 6, 87, '2019-09-02 02:58:10', '2019-09-02 02:58:10'),
(903, 10, 160, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q20', 'The shaded area of figure is best described by\n\n[[#img32]]', 'The shaded area of figure is best described by<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/5iL0Nsol7VkygnPftlQm5guoA5NqiGISBGevRke8.jpeg\" width=\"300\" height=\"150\" />', 7, 96, 3, 6, 83, '2019-09-02 02:58:10', '2019-09-02 02:58:10'),
(904, 10, 79, 'CCS101 - INTRODUCTION TO COMPUTING -Q18', 'Which of the following is/are not part of the CPU?', 'Which of the following is/are not part of the CPU?', 7, 89, 3, 6, 16, '2019-09-02 02:58:10', '2019-09-02 02:58:10'),
(905, 10, 151, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q11', 'Two sets are called disjoint if there _____________ is the empty set.', 'Two sets are called disjoint if there _____________ is the empty set.', 7, 96, 1, 6, 73, '2019-09-02 02:58:10', '2019-09-02 02:58:10'),
(906, 10, 1, 'Solving for basic equation - Q1', 'solve for x:\n2x + 3 = 5', 'solve for x:<br />\n2x + 3 = 5', 7, 92, 1, 6, 36, '2019-09-02 02:58:10', '2019-09-02 02:58:10'),
(907, 10, 286, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q30', 'The probability that an electronic device produced by a company does not function properly is equal to 0.1. If 10 devices are bought, then the probability, to the nearest thousandth, that 7 devices function properly is', 'The probability that an electronic device produced by a company does not function properly is equal to 0.1. If 10 devices are bought, then the probability, to the nearest thousandth, that 7 devices function properly is', 7, 92, 3, 6, 49, '2019-09-02 02:58:10', '2019-09-02 02:58:10'),
(908, 10, 252, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q28', 'What is bean class in android?', 'What is bean class in android?', 7, 125, 3, 6, 99, '2019-09-02 02:58:10', '2019-09-02 02:58:10'),
(909, 10, 205, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q5', 'For ___________, code used by Android is not open source.', 'For ___________, code used by Android is not open source.', 7, 125, 1, 6, 90, '2019-09-02 02:58:11', '2019-09-02 02:58:11'),
(910, 10, 48, 'CCS102 - COMPUTER PROGRAMMING 1 Q18', 'What is JRE?', 'What is JRE?', 7, 90, 2, 6, 29, '2019-09-02 02:58:11', '2019-09-02 02:58:11'),
(911, 10, 97, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q7', 'The expression (3i - 2)(i + 1) - 7 can be simplified to which of the following expressions?', 'The expression (3i - 2)(i + 1) - 7 can be simplified to which of the following expressions?', 7, 92, 2, 6, 46, '2019-09-02 02:58:11', '2019-09-02 02:58:11'),
(912, 10, 82, 'CCS101 - INTRODUCTION TO COMPUTING - Q15', '10111 is the two\'s complement representation of', '10111 is the two\'s complement representation of', 7, 89, 1, 6, 5, '2019-09-02 02:58:11', '2019-09-02 02:58:11'),
(913, 10, 121, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q3', 'These are additional operators used to return Boolean values.', 'These are additional operators used to return Boolean values.', 7, 95, 1, 6, 55, '2019-09-02 02:58:11', '2019-09-02 02:58:11'),
(914, 10, 93, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q3', 'If 2x - 8 ≥ 2, then', 'If 2x - 8 ≥ 2, then', 7, 92, 1, 6, 39, '2019-09-02 02:58:11', '2019-09-02 02:58:11');
INSERT INTO `answer_sheet_test_questions` (`id`, `answer_sheet_id`, `test_question_id`, `title`, `body`, `body_html`, `student_outcome_id`, `course_id`, `difficulty_level_id`, `performance_criteria_id`, `pos_order`, `created_at`, `updated_at`) VALUES
(915, 10, 95, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q5', 'What is the square root of -144?', 'What is the square root of -144?', 7, 92, 1, 6, 38, '2019-09-02 02:58:11', '2019-09-02 02:58:11'),
(916, 10, 113, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q23', 'Five different books (A, B, C, D and E) are to be arranged on a shelf. Books C and D are to be arranged first and second starting from the right of the shelf. The number of different orders in which books A, B and E may be arranged is', 'Five different books (A, B, C, D and E) are to be arranged on a shelf. Books C and D are to be arranged first and second starting from the right of the shelf. The number of different orders in which books A, B and E may be arranged is', 7, 92, 2, 6, 48, '2019-09-02 02:58:11', '2019-09-02 02:58:11'),
(917, 10, 147, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q7', 'The set of positive integers is _____________.', 'The set of positive integers is _____________.', 7, 96, 1, 6, 70, '2019-09-02 02:58:11', '2019-09-02 02:58:11'),
(918, 10, 144, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q4', 'What is the cardinality of the set of odd positive integers less than 10?', 'What is the cardinality of the set of odd positive integers less than 10?', 7, 96, 1, 6, 71, '2019-09-02 02:58:11', '2019-09-02 02:58:11'),
(919, 10, 42, 'CCS102 - COMPUTER PROGRAMMING 1 Q12', 'Which of the following is not a keyword in java?', 'Which of the following is not a keyword in java?', 7, 90, 1, 6, 18, '2019-09-02 02:58:11', '2019-09-02 02:58:11'),
(920, 10, 244, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q20', 'To update contents of content provider using curser and commit you need to call _______________.', 'To update contents of content provider using curser and commit you need to call _______________.', 7, 125, 2, 6, 95, '2019-09-02 02:58:11', '2019-09-02 02:58:11'),
(921, 10, 260, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q23', 'In the given figure the if n(A)=20,n(U)=50,n(C)=10 and n(A∩B)=5 then n(B)=? \n\n[[#img34]]', 'In the given figure the if n(A)=20,n(U)=50,n(C)=10 and n(A∩B)=5 then n(B)=? <br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/23B9WIeQ00wE4pw7nsRG6le8KJWkZ1jI9HG7nYv3.jpeg\" width=\"300\" height=\"150\" />', 7, 96, 2, 6, 80, '2019-09-02 02:58:11', '2019-09-02 02:58:11'),
(922, 10, 104, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q14', 'What is the result when you put the expression x<sup>2</sup> +10x+41 into vertex form by completing the square ?', 'What is the result when you put the expression x<sup>2</sup> +10x+41 into vertex form by completing the square ?', 7, 92, 3, 6, 51, '2019-09-02 02:58:11', '2019-09-02 02:58:11'),
(923, 10, 267, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q30', 'A floor function map a real number to :', 'A floor function map a real number to :', 7, 96, 3, 6, 84, '2019-09-02 02:58:11', '2019-09-02 02:58:11'),
(924, 10, 225, 'CCS101 - INTRODUCTION TO COMPUTING - Q7', 'Converting (1010111)<sub>2</sub> to base yields which of the following results?', 'Converting (1010111)<sub>2</sub> to base yields which of the following results?', 7, 89, 2, 6, 11, '2019-09-02 02:58:11', '2019-09-02 02:58:11'),
(925, 10, 155, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q15', 'Let the set A is {1, 2, 3} and B is {2, 3, 4}. Then number of elements in A U B is _____.', 'Let the set A is {1, 2, 3} and B is {2, 3, 4}. Then number of elements in A U B is _____.', 7, 96, 1, 6, 69, '2019-09-02 02:58:11', '2019-09-02 02:58:11'),
(926, 10, 38, 'CCS102 - COMPUTER PROGRAMMING 1 - Q8', 'Which of the following is true about try block in C#?', 'Which of the following is true about try block in C#?', 7, 90, 1, 6, 19, '2019-09-02 02:58:11', '2019-09-02 02:58:11'),
(927, 10, 277, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q26', 'Which of the following will result from compiling this code, assuming that all other code for your form works properly?\n\n[[#code27]]', 'Which of the following will result from compiling this code, assuming that all other code for your form works properly?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">csharp</span></div><pre><code class=\"language-csharp\">try<br />\n{<br />\n  //Write code to allocate some resources<br />\n}<br />\nfinally<br />\n{<br />\n  //Write code to Dispose all allocated resources<br />\n}</code></pre>', 7, 95, 3, 6, 66, '2019-09-02 02:58:11', '2019-09-02 02:58:11'),
(928, 10, 289, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q33', 'A number of the form 213ab, where a and b are digits, has a reminder less than 10 when divided by 100. The sum of all the digits in the above number is equal to 13. Find the digit b.', 'A number of the form 213ab, where a and b are digits, has a reminder less than 10 when divided by 100. The sum of all the digits in the above number is equal to 13. Find the digit b.', 7, 92, 1, 6, 43, '2019-09-02 02:58:11', '2019-09-02 02:58:11'),
(929, 10, 126, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q8', 'A control used to show a list of strings which you can select.', 'A control used to show a list of strings which you can select.', 7, 95, 1, 6, 56, '2019-09-02 02:58:11', '2019-09-02 02:58:11'),
(930, 10, 107, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q17', 'If Log <sub>4 </sub>(x) = 12, then log 2 (x / 4) is equal to', 'If Log <sub>4 </sub>(x) = 12, then log 2 (x / 4) is equal to', 7, 92, 1, 6, 40, '2019-09-02 02:58:11', '2019-09-02 02:58:11'),
(931, 10, 243, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q19', 'Android provides a few standard themes, listed in ________.', 'Android provides a few standard themes, listed in ________.', 7, 125, 2, 6, 96, '2019-09-02 02:58:11', '2019-09-02 02:58:11'),
(932, 10, 87, 'CCS101 - INTRODUCTION TO COMPUTING - Q8', '____________ are the four general operations that are performed in each machine cycle.', '____________ are the four general operations that are performed in each machine cycle.', 7, 89, 2, 6, 14, '2019-09-02 02:58:11', '2019-09-02 02:58:11'),
(933, 10, 278, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q27', 'What will be the output of the following code?\n\n[[#code28]]', 'What will be the output of the following code?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">csharp</span></div><pre><code class=\"language-csharp\">try<br />\n{<br />\n  int num = 100;<br />\n  int den = 0;<br />\n  try<br />\n  {<br />\n    MessageBox.Show(\"Message1\");<br />\n    int res = num/den;<br />\n    MessageBox.Show(\"Message2\");<br />\n  }<br />\n  catch(ArithmeticException ae)<br />\n  {<br />\n    MessageBox.Show(\"Message3\");<br />\n  }<br />\n  MessageBox.Show(\"Message4\");<br />\n}</code></pre>', 7, 95, 3, 6, 68, '2019-09-02 02:58:11', '2019-09-02 02:58:11'),
(934, 10, 61, 'CCS102 - COMPUTER PROGRAMMING 1 Q31', 'Where is array stored in memory?', 'Where is array stored in memory?', 7, 90, 2, 6, 31, '2019-09-02 02:58:11', '2019-09-02 02:58:11'),
(935, 10, 124, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q6', 'This data type stores the address of the value which means that they refer to a memory location.', 'This data type stores the address of the value which means that they refer to a memory location.', 7, 95, 1, 6, 52, '2019-09-02 02:58:12', '2019-09-02 02:58:12'),
(936, 10, 148, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q8', 'What is the Cardinality of the Power set of the set {0, 1, 2}.', 'What is the Cardinality of the Power set of the set {0, 1, 2}.', 7, 96, 1, 6, 72, '2019-09-02 02:58:12', '2019-09-02 02:58:12'),
(937, 10, 149, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q9', 'The union of the sets {1, 2, 5} and {1, 2, 6} is the set _______________.', 'The union of the sets {1, 2, 5} and {1, 2, 6} is the set _______________.', 7, 96, 2, 6, 81, '2019-09-02 02:58:12', '2019-09-02 02:58:12'),
(938, 10, 40, 'CCS102 - COMPUTER PROGRAMMING 1 Q10', 'Static binding uses which information for binding?', 'Static binding uses which information for binding?', 7, 90, 1, 6, 23, '2019-09-02 02:58:12', '2019-09-02 02:58:12'),
(939, 10, 89, 'CCS101 - INTRODUCTION TO COMPUTING - Q5', 'A memory management technique that uses hard drive space as additional RAM.', 'A memory management technique that uses hard drive space as additional RAM.', 7, 89, 1, 6, 2, '2019-09-02 02:58:12', '2019-09-02 02:58:12'),
(940, 10, 59, 'CCS102 - COMPUTER PROGRAMMING 1 Q29', 'What is the output of this program?\n\n[[#code24]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class evaluate <br />\n    {<br />\n        public static void main(String args[]) <br />\n            {<br />\n	        int arr[] = new int[] {0 , 1, 2, 3, 4, 5, 6, 7, 8, 9};<br />\n	        int n = 6;<br />\n                n = arr[arr[n] / 2];<br />\n	        System.out.println(arr[n] / 2);<br />\n            } <br />\n    }</code></pre>', 7, 90, 3, 6, 34, '2019-09-02 02:58:12', '2019-09-02 02:58:12'),
(941, 10, 74, 'CCS101 - INTRODUCTION TO COMPUTING - Q23', 'An electronic tool that allows information to be input, processed, and output.', 'An electronic tool that allows information to be input, processed, and output.', 7, 89, 1, 6, 6, '2019-09-02 02:58:12', '2019-09-02 02:58:12'),
(942, 10, 150, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q10', 'The intersection of the sets {1, 2, 5} and {1, 2, 6} is the set _____________.', 'The intersection of the sets {1, 2, 5} and {1, 2, 6} is the set _____________.', 7, 96, 1, 6, 74, '2019-09-02 02:58:12', '2019-09-02 02:58:12'),
(943, 10, 51, 'CCS102 - COMPUTER PROGRAMMING 1 Q21', 'What is the output of this program?\n\n[[#code18]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class main_class <br />\n    {<br />\n        public static void main(String args[])<br />\n        {<br />\n            int x = 9;<br />\n            if (x == 9) <br />\n            { <br />\n                int x = 8;<br />\n                System.out.println(x);<br />\n            }<br />\n        } <br />\n    }</code></pre>', 7, 90, 2, 6, 27, '2019-09-02 02:58:12', '2019-09-02 02:58:12'),
(944, 10, 212, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q12', 'Which company bought android?', 'Which company bought android?', 7, 125, 1, 6, 93, '2019-09-02 02:58:12', '2019-09-02 02:58:12'),
(945, 10, 220, 'Computer Hardware - Q2', 'An input device that reads printed text and graphics and transfers them to a computer in digital form.', 'An input device that reads printed text and graphics and transfers them to a computer in digital form.', 7, 89, 1, 6, 7, '2019-09-02 02:58:12', '2019-09-02 02:58:12'),
(946, 10, 131, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q13', 'A method of MessageBox class that allows you to call a message box for prompting user with messages and information.', 'A method of MessageBox class that allows you to call a message box for prompting user with messages and information.', 7, 95, 1, 6, 59, '2019-09-02 02:58:12', '2019-09-02 02:58:12'),
(947, 10, 283, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q32', 'You have a TextBox control and a Help button that the user can press to get help on allowable values. You validate the data entered by the user in the TextBox control. If the user enters an invalid value, you set the focus back in the control using the Cancel property of the CancelEventArgs. A user reports that once he enters invalid data in the text box, he cannot click the Help button. What should you do to correct the problem?', 'You have a TextBox control and a Help button that the user can press to get help on allowable values. You validate the data entered by the user in the TextBox control. If the user enters an invalid value, you set the focus back in the control using the Cancel property of the CancelEventArgs. A user reports that once he enters invalid data in the text box, he cannot click the Help button. What should you do to correct the problem?', 7, 95, 3, 6, 67, '2019-09-02 02:58:12', '2019-09-02 02:58:12'),
(948, 10, 127, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q9', 'Commonly used  control to execute commansd when it is clicked.', 'Commonly used  control to execute commansd when it is clicked.', 7, 95, 1, 6, 60, '2019-09-02 02:58:12', '2019-09-02 02:58:12'),
(949, 10, 223, 'CC101 - INTRODUCTION TO COMPUTING - Q11', 'The sum of 11101 + 10111 equals ________.', 'The sum of 11101 + 10111 equals ________.', 7, 89, 2, 6, 10, '2019-09-02 02:58:12', '2019-09-02 02:58:12'),
(950, 10, 39, 'CCS102 - COMPUTER PROGRAMMING 1 Q9', 'What of the following is the default value of an instance variable?', 'What of the following is the default value of an instance variable?', 7, 90, 1, 6, 25, '2019-09-02 02:58:12', '2019-09-02 02:58:12'),
(951, 10, 41, 'CCS102 - COMPUTER PROGRAMMING 1 Q11', 'What is correct syntax for main method of a java class?', 'What is correct syntax for main method of a java class?', 7, 90, 1, 6, 24, '2019-09-02 02:58:12', '2019-09-02 02:58:12'),
(952, 10, 145, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q5', 'What is the Cartesian product of A = {1, 2} and B = {a, b}?', 'What is the Cartesian product of A = {1, 2} and B = {a, b}?', 7, 96, 2, 6, 78, '2019-09-02 02:58:12', '2019-09-02 02:58:12'),
(953, 10, 275, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q24', 'How should you arrange catch blocks?', 'How should you arrange catch blocks?', 7, 95, 2, 6, 64, '2019-09-02 02:58:12', '2019-09-02 02:58:12'),
(954, 10, 57, 'CCS102 - COMPUTER PROGRAMMING 1 Q27', 'Which of these is necessary to specify at time of array initialization?', 'Which of these is necessary to specify at time of array initialization?', 7, 90, 2, 6, 30, '2019-09-02 02:58:12', '2019-09-02 02:58:12'),
(955, 10, 162, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q22', 'If n(A)=10 , n(B)=30,n(C)=50 and if set A,B,C are pairwise disjoint then which of the following is correct?', 'If n(A)=10 , n(B)=30,n(C)=50 and if set A,B,C are pairwise disjoint then which of the following is correct?', 7, 96, 2, 6, 79, '2019-09-02 02:58:12', '2019-09-02 02:58:12'),
(956, 10, 114, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q24', 'The mean of a data set is equal to 10 and its standard deviation is equal to 1. If we add 5 to each data value, then the mean and standard deviation become', 'The mean of a data set is equal to 10 and its standard deviation is equal to 1. If we add 5 to each data value, then the mean and standard deviation become', 7, 92, 2, 6, 45, '2019-09-02 02:58:12', '2019-09-02 02:58:12'),
(957, 10, 256, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q32', 'What is the difference between content values and cursor in android SQlite?', 'What is the difference between content values and cursor in android SQlite?', 7, 125, 3, 6, 98, '2019-09-02 02:58:12', '2019-09-02 02:58:12'),
(958, 10, 68, 'Describing two-dimensional motion with vectors', 'A golfer hits a golf ball upwards at an angle of 75°, degree with the horizontal. We can ignore air resistance.\n\n[[#img22]]\n\nWhich graph best describes the golf ball\'s vertical displacement over time?\n\nAssume the origin of the coordinate system to be the point on the ground where the ball was initially at rest.', 'A golfer hits a golf ball upwards at an angle of 75°, degree with the horizontal. We can ignore air resistance.<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/MYpfYGJo93eMWxPVag4ii0jWIwamFw8EKp4yFlbj.png\" width=\"300\" height=\"150\" /><br />\n<br />\nWhich graph best describes the golf ball\'s vertical displacement over time?<br />\n<br />\nAssume the origin of the coordinate system to be the point on the ground where the ball was initially at rest.', 7, 89, 1, 6, 3, '2019-09-02 02:58:12', '2019-09-02 02:58:12'),
(959, 10, 137, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q19', 'Polymorphism occurs when the methods of the child class.', 'Polymorphism occurs when the methods of the child class.', 7, 95, 2, 6, 62, '2019-09-02 02:58:12', '2019-09-02 02:58:12'),
(960, 10, 156, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q16', 'If A has 4 elements B has 8 elements then the minimum and maximum number of elements in A U B are respectively', 'If A has 4 elements B has 8 elements then the minimum and maximum number of elements in A U B are respectively', 7, 96, 1, 6, 75, '2019-09-02 02:58:12', '2019-09-02 02:58:12'),
(961, 10, 32, 'CCS102 - COMPUTER PROGRAMMING 1 - Q2', 'Which of the following is a reserved keyword in C#?', 'Which of the following is a reserved keyword in C#?', 7, 90, 1, 6, 21, '2019-09-02 02:58:12', '2019-09-02 02:58:12'),
(962, 10, 58, 'CCS102 - COMPUTER PROGRAMMING 1 Q28', 'What is the output of this program?\n\n[[#code22]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class array_output <br />\n    {<br />\n        public static void main(String args[]) <br />\n        {<br />\n            int array_variable [] = new int[10];<br />\n	    for (int i = 0; i < 10; ++i) <br />\n            {<br />\n                array_variable[i] = i;<br />\n                System.out.print(array_variable[i] + \" \");<br />\n                i++;<br />\n            }<br />\n        } <br />\n    }</code></pre>', 7, 90, 3, 6, 33, '2019-09-02 02:58:12', '2019-09-02 02:58:12'),
(963, 10, 143, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q3', 'Power set of empty set has exactly _________ subset.', 'Power set of empty set has exactly _________ subset.', 7, 96, 1, 6, 77, '2019-09-02 02:58:12', '2019-09-02 02:58:12'),
(964, 10, 50, 'CCS102 - COMPUTER PROGRAMMING Q20', 'What happens when thread\'s yield() method is called?', 'What happens when thread\'s yield() method is called?', 7, 90, 2, 6, 28, '2019-09-02 02:58:12', '2019-09-02 02:58:12'),
(965, 10, 31, 'Order of operation - Q1', 'What is the output of the following code?\n\n[[#code14]]', 'What is the output of the following code?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">double x = 2;<br />\ndouble y = 3;<br />\ndouble z = 5;<br />\n<br />\ndouble output = x + x * y + (x + 2 * z);<br />\n<br />\nSystem.out.println(output);</code></pre>', 7, 90, 1, 6, 20, '2019-09-02 02:58:13', '2019-09-02 02:58:13'),
(966, 10, 204, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q4', 'Android supports which features.', 'Android supports which features.', 7, 125, 1, 6, 92, '2019-09-02 02:58:13', '2019-09-02 02:58:13'),
(967, 10, 219, 'Computer Hardware - Q3', 'A device that enables a computer to communicate over telephone lines.', 'A device that enables a computer to communicate over telephone lines.', 7, 89, 1, 6, 1, '2019-09-02 02:58:13', '2019-09-02 02:58:13'),
(968, 10, 72, 'CCS101 - INTRODUCTION TO COMPUTING - Q25', 'What type of software is a screen saver?', 'What type of software is a screen saver?', 7, 89, 2, 6, 12, '2019-09-02 02:58:13', '2019-09-02 02:58:13'),
(969, 10, 202, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q2', 'What is android?', 'What is android?', 7, 125, 1, 6, 86, '2019-09-02 02:58:13', '2019-09-02 02:58:13'),
(970, 10, 33, 'IT01- CCS102 - COMPUTER PROGRAMMING 1 - Q3', 'Which of the following converts a type to a double type in C#?', 'Which of the following converts a type to a double type in C#?', 7, 90, 1, 6, 26, '2019-09-02 02:58:13', '2019-09-02 02:58:13'),
(971, 10, 254, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q30', 'What is an HTTP client class in android?', 'What is an HTTP client class in android?', 7, 125, 3, 6, 100, '2019-09-02 02:58:13', '2019-09-02 02:58:13'),
(972, 10, 70, 'Projectile motion 2', 'An adventurous cliff jumper runs horizontally off a cliff. We can ignore air resistance.\n\n[[#img27]]\n\nWhich diagram best describes the horizontal velocity vectors and trajectory during the person’s fall?\n\nAssume the origin of the coordinate system to be the cliff edge.\n\nA red dot represents a vector of zero magnitude.', 'An adventurous cliff jumper runs horizontally off a cliff. We can ignore air resistance.<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/PgCOEtvEENxNaqgGLMWLrysCTt8GwyXUqH8p2sz7.png\" width=\"200\" height=\"200\" /><br />\n<br />\nWhich diagram best describes the horizontal velocity vectors and trajectory during the person’s fall?<br />\n<br />\nAssume the origin of the coordinate system to be the cliff edge.<br />\n<br />\nA red dot represents a vector of zero magnitude.', 7, 89, 1, 6, 4, '2019-09-02 02:58:13', '2019-09-02 02:58:13'),
(973, 10, 90, 'CCS101 - INTRODUCTION TO COMPUTING - Q4', 'A letter, digit, or special character is represented by a code in a ___.', 'A letter, digit, or special character is represented by a code in a ___.', 7, 89, 3, 6, 15, '2019-09-02 02:58:13', '2019-09-02 02:58:13'),
(974, 10, 129, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q11', 'A control similar to an ordinary label having an underline and resembles a link on a web page.', 'A control similar to an ordinary label having an underline and resembles a link on a web page.', 7, 95, 1, 6, 54, '2019-09-02 02:58:13', '2019-09-02 02:58:13'),
(975, 10, 214, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q14', 'Android is based on which kernel?', 'Android is based on which kernel?', 7, 125, 1, 6, 89, '2019-09-02 02:58:13', '2019-09-02 02:58:13'),
(976, 10, 285, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q29', 'The period of 2 sin x cos x is', 'The period of 2 sin x cos x is', 7, 92, 1, 6, 35, '2019-09-02 02:58:13', '2019-09-02 02:58:13'),
(977, 10, 112, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q22', 'A school committee consists of 2 teachers and 4 students. The number of different committees that can be formed from 5 teachers and 10 students is', 'A school committee consists of 2 teachers and 4 students. The number of different committees that can be formed from 5 teachers and 10 students is', 7, 92, 1, 6, 42, '2019-09-02 02:58:13', '2019-09-02 02:58:13'),
(978, 10, 66, 'Binary to decimal conversion 1', 'Convert 10100011 from binary to decimal.', 'Convert 10100011 from binary to decimal.', 7, 89, 1, 6, 8, '2019-09-02 02:58:13', '2019-09-02 02:58:13'),
(979, 10, 140, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q22', 'A _______ is an identifier that denotes a storage location.', 'A _______ is an identifier that denotes a storage location.', 7, 95, 2, 6, 63, '2019-09-02 02:58:13', '2019-09-02 02:58:13'),
(980, 10, 132, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q14', 'C# treats the multiple catch statements like cases in a _____________ statement.', 'C# treats the multiple catch statements like cases in a _____________ statement.', 7, 95, 1, 6, 58, '2019-09-02 02:58:13', '2019-09-02 02:58:13'),
(981, 10, 78, 'CCS101 - INTRODUCTION TO COMPUTING -  Q19', 'This coding system is designed to support international languages like Chinese and Japanese.', 'This coding system is designed to support international languages like Chinese and Japanese.', 7, 89, 3, 6, 17, '2019-09-02 02:58:13', '2019-09-02 02:58:13'),
(982, 10, 246, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q22', 'Which of  the following holds Java source code for the application?', 'Which of  the following holds Java source code for the application?', 7, 125, 2, 6, 94, '2019-09-02 02:58:13', '2019-09-02 02:58:13'),
(983, 10, 211, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q11', 'Web browser available in android based on', 'Web browser available in android based on', 7, 125, 1, 6, 85, '2019-09-02 02:58:13', '2019-09-02 02:58:13'),
(984, 10, 116, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q26', 'If f(x) is an odd function, then | f(x) | is', 'If f(x) is an odd function, then | f(x) | is', 7, 92, 2, 6, 44, '2019-09-02 02:58:13', '2019-09-02 02:58:13'),
(985, 10, 92, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q2', 'Solve the inequality \n4x + 8 > 5x +9', 'Solve the inequality <br />\n4x + 8 > 5x +9', 7, 92, 1, 6, 37, '2019-09-02 02:58:13', '2019-09-02 02:58:13'),
(986, 10, 76, 'CCS101 - INTRODUCTION TO COMPUTING _ Q21', '_______ is a duplicate copy of data or other computer content for use in the event that the original version is destroyed.', '_______ is a duplicate copy of data or other computer content for use in the event that the original version is destroyed.', 7, 89, 2, 6, 13, '2019-09-02 02:58:13', '2019-09-02 02:58:13'),
(987, 10, 248, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q24', 'What is the use of content provider in android?', 'What is the use of content provider in android?', 7, 125, 2, 6, 97, '2019-09-02 02:58:13', '2019-09-02 02:58:13'),
(988, 10, 142, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q2', 'The set O of odd positive integers less than 10 can be expressed by _____________.', 'The set O of odd positive integers less than 10 can be expressed by _____________.', 7, 96, 1, 6, 76, '2019-09-02 02:58:13', '2019-09-02 02:58:13'),
(989, 10, 108, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q18', 'The population of a country increased by an average of 2% per year from 2000 to 2003. If the population of this country was 2 000 000 on December 31, 2003, then the population of this country on January 1, 2000, to the nearest thousand would have been', 'The population of a country increased by an average of 2% per year from 2000 to 2003. If the population of this country was 2 000 000 on December 31, 2003, then the population of this country on January 1, 2000, to the nearest thousand would have been', 7, 92, 3, 6, 50, '2019-09-02 02:58:13', '2019-09-02 02:58:13'),
(990, 10, 52, 'CCS102 - COMPUTER PROGRAMMING 1 Q22', 'What is the output of this program?\n\n[[#code19]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class box <br />\n    {<br />\n        int width;<br />\n        int height;<br />\n        int length;<br />\n    } <br />\n    class mainclass <br />\n    {<br />\n        public static void main(String args[]) <br />\n        {        <br />\n             box obj = new box();<br />\n             obj.width = 10;<br />\n             obj.height = 2;<br />\n             obj.length = 10;<br />\n             int y = obj.width * obj.height * obj.length; <br />\n             System.out.print(y);<br />\n        } <br />\n    }</code></pre>', 7, 90, 3, 6, 32, '2019-09-02 02:58:13', '2019-09-02 02:58:13'),
(991, 10, 111, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q21', 'For x greater than or equal to zero and less than or equal to 2 π, sin x and cos x are both decreasing on the intervals', 'For x greater than or equal to zero and less than or equal to 2 π, sin x and cos x are both decreasing on the intervals', 7, 92, 2, 6, 47, '2019-09-02 02:58:13', '2019-09-02 02:58:13'),
(992, 10, 119, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q1', 'This is a repetition control stricture that allows you to efficiently write a loop that needs to execute a specific number of times.', 'This is a repetition control stricture that allows you to efficiently write a loop that needs to execute a specific number of times.', 7, 95, 1, 6, 57, '2019-09-02 02:58:13', '2019-09-02 02:58:13'),
(993, 10, 99, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q9', 'Evaluate the following:\n \nlog<sub>4</sub> 25', 'Evaluate the following:<br />\n <br />\nlog<sub>4</sub> 25', 7, 92, 1, 6, 41, '2019-09-02 02:58:13', '2019-09-02 02:58:13'),
(994, 10, 122, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q4', 'These operators take two operands, such as arithmetic operators (+,-,*,/).', 'These operators take two operands, such as arithmetic operators (+,-,*,/).', 7, 95, 1, 6, 53, '2019-09-02 02:58:13', '2019-09-02 02:58:13'),
(995, 10, 138, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q20', 'A method_____an exception when that method detects that a problem has occured.', 'A method_____an exception when that method detects that a problem has occured.', 7, 95, 2, 6, 65, '2019-09-02 02:58:13', '2019-09-02 02:58:13'),
(996, 10, 136, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q18', 'Private Button print = new button();', 'Private Button print = new button();', 7, 95, 2, 6, 61, '2019-09-02 02:58:14', '2019-09-02 02:58:14'),
(997, 10, 77, 'CCS101 - INTRODUCTION TO COMPUTING - Q20', 'A programming error that occurs when running a program produces incorrect results.', 'A programming error that occurs when running a program produces incorrect results.', 7, 89, 1, 6, 9, '2019-09-02 02:58:14', '2019-09-02 02:58:14'),
(998, 10, 207, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q7', 'ABD stands for', 'ABD stands for', 7, 125, 1, 6, 88, '2019-09-02 02:58:14', '2019-09-02 02:58:14'),
(999, 10, 215, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q15', 'Which is the latest mobile version of android?', 'Which is the latest mobile version of android?', 7, 125, 1, 6, 91, '2019-09-02 02:58:14', '2019-09-02 02:58:14'),
(1000, 10, 270, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q33', 'In the given AP series the term at position 11 would be\n5, 8, 11, 14, 17, 20………50.', 'In the given AP series the term at position 11 would be<br />\n5, 8, 11, 14, 17, 20………50.', 7, 96, 3, 6, 82, '2019-09-02 02:58:14', '2019-09-02 02:58:14'),
(1001, 11, 108, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q18', 'The population of a country increased by an average of 2% per year from 2000 to 2003. If the population of this country was 2 000 000 on December 31, 2003, then the population of this country on January 1, 2000, to the nearest thousand would have been', 'The population of a country increased by an average of 2% per year from 2000 to 2003. If the population of this country was 2 000 000 on December 31, 2003, then the population of this country on January 1, 2000, to the nearest thousand would have been', 7, 92, 3, 6, 50, '2019-09-02 03:11:31', '2019-09-02 03:11:31'),
(1002, 11, 87, 'CCS101 - INTRODUCTION TO COMPUTING - Q8', '____________ are the four general operations that are performed in each machine cycle.', '____________ are the four general operations that are performed in each machine cycle.', 7, 89, 2, 6, 14, '2019-09-02 03:11:32', '2019-09-02 03:11:32'),
(1003, 11, 150, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q10', 'The intersection of the sets {1, 2, 5} and {1, 2, 6} is the set _____________.', 'The intersection of the sets {1, 2, 5} and {1, 2, 6} is the set _____________.', 7, 96, 1, 6, 74, '2019-09-02 03:11:32', '2019-09-02 03:11:32'),
(1004, 11, 156, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q16', 'If A has 4 elements B has 8 elements then the minimum and maximum number of elements in A U B are respectively', 'If A has 4 elements B has 8 elements then the minimum and maximum number of elements in A U B are respectively', 7, 96, 1, 6, 75, '2019-09-02 03:11:32', '2019-09-02 03:11:32'),
(1005, 11, 59, 'CCS102 - COMPUTER PROGRAMMING 1 Q29', 'What is the output of this program?\n\n[[#code24]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class evaluate <br />\n    {<br />\n        public static void main(String args[]) <br />\n            {<br />\n	        int arr[] = new int[] {0 , 1, 2, 3, 4, 5, 6, 7, 8, 9};<br />\n	        int n = 6;<br />\n                n = arr[arr[n] / 2];<br />\n	        System.out.println(arr[n] / 2);<br />\n            } <br />\n    }</code></pre>', 7, 90, 3, 6, 34, '2019-09-02 03:11:32', '2019-09-02 03:11:32'),
(1006, 11, 124, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q6', 'This data type stores the address of the value which means that they refer to a memory location.', 'This data type stores the address of the value which means that they refer to a memory location.', 7, 95, 1, 6, 52, '2019-09-02 03:11:32', '2019-09-02 03:11:32'),
(1007, 11, 127, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q9', 'Commonly used  control to execute commansd when it is clicked.', 'Commonly used  control to execute commansd when it is clicked.', 7, 95, 1, 6, 60, '2019-09-02 03:11:32', '2019-09-02 03:11:32'),
(1008, 11, 142, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q2', 'The set O of odd positive integers less than 10 can be expressed by _____________.', 'The set O of odd positive integers less than 10 can be expressed by _____________.', 7, 96, 1, 6, 76, '2019-09-02 03:11:32', '2019-09-02 03:11:32'),
(1009, 11, 286, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q30', 'The probability that an electronic device produced by a company does not function properly is equal to 0.1. If 10 devices are bought, then the probability, to the nearest thousandth, that 7 devices function properly is', 'The probability that an electronic device produced by a company does not function properly is equal to 0.1. If 10 devices are bought, then the probability, to the nearest thousandth, that 7 devices function properly is', 7, 92, 3, 6, 49, '2019-09-02 03:11:32', '2019-09-02 03:11:32'),
(1010, 11, 79, 'CCS101 - INTRODUCTION TO COMPUTING -Q18', 'Which of the following is/are not part of the CPU?', 'Which of the following is/are not part of the CPU?', 7, 89, 3, 6, 16, '2019-09-02 03:11:32', '2019-09-02 03:11:32'),
(1011, 11, 113, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q23', 'Five different books (A, B, C, D and E) are to be arranged on a shelf. Books C and D are to be arranged first and second starting from the right of the shelf. The number of different orders in which books A, B and E may be arranged is', 'Five different books (A, B, C, D and E) are to be arranged on a shelf. Books C and D are to be arranged first and second starting from the right of the shelf. The number of different orders in which books A, B and E may be arranged is', 7, 92, 2, 6, 48, '2019-09-02 03:11:32', '2019-09-02 03:11:32'),
(1012, 11, 89, 'CCS101 - INTRODUCTION TO COMPUTING - Q5', 'A memory management technique that uses hard drive space as additional RAM.', 'A memory management technique that uses hard drive space as additional RAM.', 7, 89, 1, 6, 2, '2019-09-02 03:11:32', '2019-09-02 03:11:32'),
(1013, 11, 68, 'Describing two-dimensional motion with vectors', 'A golfer hits a golf ball upwards at an angle of 75°, degree with the horizontal. We can ignore air resistance.\n\n[[#img22]]\n\nWhich graph best describes the golf ball\'s vertical displacement over time?\n\nAssume the origin of the coordinate system to be the point on the ground where the ball was initially at rest.', 'A golfer hits a golf ball upwards at an angle of 75°, degree with the horizontal. We can ignore air resistance.<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/MYpfYGJo93eMWxPVag4ii0jWIwamFw8EKp4yFlbj.png\" width=\"300\" height=\"150\" /><br />\n<br />\nWhich graph best describes the golf ball\'s vertical displacement over time?<br />\n<br />\nAssume the origin of the coordinate system to be the point on the ground where the ball was initially at rest.', 7, 89, 1, 6, 3, '2019-09-02 03:11:32', '2019-09-02 03:11:32'),
(1014, 11, 270, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q33', 'In the given AP series the term at position 11 would be\n5, 8, 11, 14, 17, 20………50.', 'In the given AP series the term at position 11 would be<br />\n5, 8, 11, 14, 17, 20………50.', 7, 96, 3, 6, 82, '2019-09-02 03:11:32', '2019-09-02 03:11:32'),
(1015, 11, 34, 'IT01- CCS102 - COMPUTER PROGRAMMING 1 - Q4', 'Which of the following operator returns the size of a data type in C#?', 'Which of the following operator returns the size of a data type in C#?', 7, 90, 1, 6, 22, '2019-09-02 03:11:32', '2019-09-02 03:11:32'),
(1016, 11, 76, 'CCS101 - INTRODUCTION TO COMPUTING _ Q21', '_______ is a duplicate copy of data or other computer content for use in the event that the original version is destroyed.', '_______ is a duplicate copy of data or other computer content for use in the event that the original version is destroyed.', 7, 89, 2, 6, 13, '2019-09-02 03:11:32', '2019-09-02 03:11:32'),
(1017, 11, 145, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q5', 'What is the Cartesian product of A = {1, 2} and B = {a, b}?', 'What is the Cartesian product of A = {1, 2} and B = {a, b}?', 7, 96, 2, 6, 78, '2019-09-02 03:11:32', '2019-09-02 03:11:32'),
(1018, 11, 219, 'Computer Hardware - Q3', 'A device that enables a computer to communicate over telephone lines.', 'A device that enables a computer to communicate over telephone lines.', 7, 89, 1, 6, 1, '2019-09-02 03:11:32', '2019-09-02 03:11:32'),
(1019, 11, 267, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q30', 'A floor function map a real number to :', 'A floor function map a real number to :', 7, 96, 3, 6, 84, '2019-09-02 03:11:32', '2019-09-02 03:11:32'),
(1020, 11, 144, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q4', 'What is the cardinality of the set of odd positive integers less than 10?', 'What is the cardinality of the set of odd positive integers less than 10?', 7, 96, 1, 6, 71, '2019-09-02 03:11:32', '2019-09-02 03:11:32'),
(1021, 11, 260, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q23', 'In the given figure the if n(A)=20,n(U)=50,n(C)=10 and n(A∩B)=5 then n(B)=? \n\n[[#img34]]', 'In the given figure the if n(A)=20,n(U)=50,n(C)=10 and n(A∩B)=5 then n(B)=? <br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/23B9WIeQ00wE4pw7nsRG6le8KJWkZ1jI9HG7nYv3.jpeg\" width=\"300\" height=\"150\" />', 7, 96, 2, 6, 80, '2019-09-02 03:11:32', '2019-09-02 03:11:32'),
(1022, 11, 70, 'Projectile motion 2', 'An adventurous cliff jumper runs horizontally off a cliff. We can ignore air resistance.\n\n[[#img27]]\n\nWhich diagram best describes the horizontal velocity vectors and trajectory during the person’s fall?\n\nAssume the origin of the coordinate system to be the cliff edge.\n\nA red dot represents a vector of zero magnitude.', 'An adventurous cliff jumper runs horizontally off a cliff. We can ignore air resistance.<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/PgCOEtvEENxNaqgGLMWLrysCTt8GwyXUqH8p2sz7.png\" width=\"200\" height=\"200\" /><br />\n<br />\nWhich diagram best describes the horizontal velocity vectors and trajectory during the person’s fall?<br />\n<br />\nAssume the origin of the coordinate system to be the cliff edge.<br />\n<br />\nA red dot represents a vector of zero magnitude.', 7, 89, 1, 6, 4, '2019-09-02 03:11:32', '2019-09-02 03:11:32'),
(1023, 11, 277, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q26', 'Which of the following will result from compiling this code, assuming that all other code for your form works properly?\n\n[[#code27]]', 'Which of the following will result from compiling this code, assuming that all other code for your form works properly?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">csharp</span></div><pre><code class=\"language-csharp\">try<br />\n{<br />\n  //Write code to allocate some resources<br />\n}<br />\nfinally<br />\n{<br />\n  //Write code to Dispose all allocated resources<br />\n}</code></pre>', 7, 95, 3, 6, 66, '2019-09-02 03:11:32', '2019-09-02 03:11:32'),
(1024, 11, 246, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q22', 'Which of  the following holds Java source code for the application?', 'Which of  the following holds Java source code for the application?', 7, 125, 2, 6, 94, '2019-09-02 03:11:32', '2019-09-02 03:11:32'),
(1025, 11, 143, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q3', 'Power set of empty set has exactly _________ subset.', 'Power set of empty set has exactly _________ subset.', 7, 96, 1, 6, 77, '2019-09-02 03:11:32', '2019-09-02 03:11:32'),
(1026, 11, 289, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q33', 'A number of the form 213ab, where a and b are digits, has a reminder less than 10 when divided by 100. The sum of all the digits in the above number is equal to 13. Find the digit b.', 'A number of the form 213ab, where a and b are digits, has a reminder less than 10 when divided by 100. The sum of all the digits in the above number is equal to 13. Find the digit b.', 7, 92, 1, 6, 43, '2019-09-02 03:11:32', '2019-09-02 03:11:32'),
(1027, 11, 132, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q14', 'C# treats the multiple catch statements like cases in a _____________ statement.', 'C# treats the multiple catch statements like cases in a _____________ statement.', 7, 95, 1, 6, 58, '2019-09-02 03:11:32', '2019-09-02 03:11:32'),
(1028, 11, 203, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q3', 'Android doesn\'t  support which format?', 'Android doesn\'t  support which format?', 7, 125, 1, 6, 87, '2019-09-02 03:11:32', '2019-09-02 03:11:32'),
(1029, 11, 41, 'CCS102 - COMPUTER PROGRAMMING 1 Q11', 'What is correct syntax for main method of a java class?', 'What is correct syntax for main method of a java class?', 7, 90, 1, 6, 24, '2019-09-02 03:11:33', '2019-09-02 03:11:33'),
(1030, 11, 140, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q22', 'A _______ is an identifier that denotes a storage location.', 'A _______ is an identifier that denotes a storage location.', 7, 95, 2, 6, 63, '2019-09-02 03:11:33', '2019-09-02 03:11:33'),
(1031, 11, 61, 'CCS102 - COMPUTER PROGRAMMING 1 Q31', 'Where is array stored in memory?', 'Where is array stored in memory?', 7, 90, 2, 6, 31, '2019-09-02 03:11:33', '2019-09-02 03:11:33'),
(1032, 11, 40, 'CCS102 - COMPUTER PROGRAMMING 1 Q10', 'Static binding uses which information for binding?', 'Static binding uses which information for binding?', 7, 90, 1, 6, 23, '2019-09-02 03:11:33', '2019-09-02 03:11:33'),
(1033, 11, 149, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q9', 'The union of the sets {1, 2, 5} and {1, 2, 6} is the set _______________.', 'The union of the sets {1, 2, 5} and {1, 2, 6} is the set _______________.', 7, 96, 2, 6, 81, '2019-09-02 03:11:33', '2019-09-02 03:11:33'),
(1034, 11, 95, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q5', 'What is the square root of -144?', 'What is the square root of -144?', 7, 92, 1, 6, 38, '2019-09-02 03:11:33', '2019-09-02 03:11:33'),
(1035, 11, 33, 'IT01- CCS102 - COMPUTER PROGRAMMING 1 - Q3', 'Which of the following converts a type to a double type in C#?', 'Which of the following converts a type to a double type in C#?', 7, 90, 1, 6, 26, '2019-09-02 03:11:33', '2019-09-02 03:11:33'),
(1036, 11, 93, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q3', 'If 2x - 8 ≥ 2, then', 'If 2x - 8 ≥ 2, then', 7, 92, 1, 6, 39, '2019-09-02 03:11:33', '2019-09-02 03:11:33'),
(1037, 11, 58, 'CCS102 - COMPUTER PROGRAMMING 1 Q28', 'What is the output of this program?\n\n[[#code22]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class array_output <br />\n    {<br />\n        public static void main(String args[]) <br />\n        {<br />\n            int array_variable [] = new int[10];<br />\n	    for (int i = 0; i < 10; ++i) <br />\n            {<br />\n                array_variable[i] = i;<br />\n                System.out.print(array_variable[i] + \" \");<br />\n                i++;<br />\n            }<br />\n        } <br />\n    }</code></pre>', 7, 90, 3, 6, 33, '2019-09-02 03:11:33', '2019-09-02 03:11:33'),
(1038, 11, 211, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q11', 'Web browser available in android based on', 'Web browser available in android based on', 7, 125, 1, 6, 85, '2019-09-02 03:11:33', '2019-09-02 03:11:33'),
(1039, 11, 66, 'Binary to decimal conversion 1', 'Convert 10100011 from binary to decimal.', 'Convert 10100011 from binary to decimal.', 7, 89, 1, 6, 8, '2019-09-02 03:11:33', '2019-09-02 03:11:33'),
(1040, 11, 74, 'CCS101 - INTRODUCTION TO COMPUTING - Q23', 'An electronic tool that allows information to be input, processed, and output.', 'An electronic tool that allows information to be input, processed, and output.', 7, 89, 1, 6, 6, '2019-09-02 03:11:33', '2019-09-02 03:11:33'),
(1041, 11, 252, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q28', 'What is bean class in android?', 'What is bean class in android?', 7, 125, 3, 6, 99, '2019-09-02 03:11:33', '2019-09-02 03:11:33'),
(1042, 11, 39, 'CCS102 - COMPUTER PROGRAMMING 1 Q9', 'What of the following is the default value of an instance variable?', 'What of the following is the default value of an instance variable?', 7, 90, 1, 6, 25, '2019-09-02 03:11:33', '2019-09-02 03:11:33'),
(1043, 11, 204, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q4', 'Android supports which features.', 'Android supports which features.', 7, 125, 1, 6, 92, '2019-09-02 03:11:33', '2019-09-02 03:11:33'),
(1044, 11, 225, 'CCS101 - INTRODUCTION TO COMPUTING - Q7', 'Converting (1010111)<sub>2</sub> to base yields which of the following results?', 'Converting (1010111)<sub>2</sub> to base yields which of the following results?', 7, 89, 2, 6, 11, '2019-09-02 03:11:33', '2019-09-02 03:11:33'),
(1045, 11, 97, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q7', 'The expression (3i - 2)(i + 1) - 7 can be simplified to which of the following expressions?', 'The expression (3i - 2)(i + 1) - 7 can be simplified to which of the following expressions?', 7, 92, 2, 6, 46, '2019-09-02 03:11:33', '2019-09-02 03:11:33'),
(1046, 11, 99, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q9', 'Evaluate the following:\n \nlog<sub>4</sub> 25', 'Evaluate the following:<br />\n <br />\nlog<sub>4</sub> 25', 7, 92, 1, 6, 41, '2019-09-02 03:11:33', '2019-09-02 03:11:33'),
(1047, 11, 223, 'CC101 - INTRODUCTION TO COMPUTING - Q11', 'The sum of 11101 + 10111 equals ________.', 'The sum of 11101 + 10111 equals ________.', 7, 89, 2, 6, 10, '2019-09-02 03:11:33', '2019-09-02 03:11:33'),
(1048, 11, 148, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q8', 'What is the Cardinality of the Power set of the set {0, 1, 2}.', 'What is the Cardinality of the Power set of the set {0, 1, 2}.', 7, 96, 1, 6, 72, '2019-09-02 03:11:33', '2019-09-02 03:11:33'),
(1049, 11, 92, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q2', 'Solve the inequality \n4x + 8 > 5x +9', 'Solve the inequality <br />\n4x + 8 > 5x +9', 7, 92, 1, 6, 37, '2019-09-02 03:11:33', '2019-09-02 03:11:33'),
(1050, 11, 248, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q24', 'What is the use of content provider in android?', 'What is the use of content provider in android?', 7, 125, 2, 6, 97, '2019-09-02 03:11:33', '2019-09-02 03:11:33'),
(1051, 11, 205, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q5', 'For ___________, code used by Android is not open source.', 'For ___________, code used by Android is not open source.', 7, 125, 1, 6, 90, '2019-09-02 03:11:33', '2019-09-02 03:11:33'),
(1052, 11, 111, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q21', 'For x greater than or equal to zero and less than or equal to 2 π, sin x and cos x are both decreasing on the intervals', 'For x greater than or equal to zero and less than or equal to 2 π, sin x and cos x are both decreasing on the intervals', 7, 92, 2, 6, 47, '2019-09-02 03:11:33', '2019-09-02 03:11:33'),
(1053, 11, 202, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q2', 'What is android?', 'What is android?', 7, 125, 1, 6, 86, '2019-09-02 03:11:33', '2019-09-02 03:11:33'),
(1054, 11, 160, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q20', 'The shaded area of figure is best described by\n\n[[#img32]]', 'The shaded area of figure is best described by<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/5iL0Nsol7VkygnPftlQm5guoA5NqiGISBGevRke8.jpeg\" width=\"300\" height=\"150\" />', 7, 96, 3, 6, 83, '2019-09-02 03:11:33', '2019-09-02 03:11:33'),
(1055, 11, 48, 'CCS102 - COMPUTER PROGRAMMING 1 Q18', 'What is JRE?', 'What is JRE?', 7, 90, 2, 6, 29, '2019-09-02 03:11:33', '2019-09-02 03:11:33'),
(1056, 11, 283, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q32', 'You have a TextBox control and a Help button that the user can press to get help on allowable values. You validate the data entered by the user in the TextBox control. If the user enters an invalid value, you set the focus back in the control using the Cancel property of the CancelEventArgs. A user reports that once he enters invalid data in the text box, he cannot click the Help button. What should you do to correct the problem?', 'You have a TextBox control and a Help button that the user can press to get help on allowable values. You validate the data entered by the user in the TextBox control. If the user enters an invalid value, you set the focus back in the control using the Cancel property of the CancelEventArgs. A user reports that once he enters invalid data in the text box, he cannot click the Help button. What should you do to correct the problem?', 7, 95, 3, 6, 67, '2019-09-02 03:11:33', '2019-09-02 03:11:33'),
(1057, 11, 212, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q12', 'Which company bought android?', 'Which company bought android?', 7, 125, 1, 6, 93, '2019-09-02 03:11:33', '2019-09-02 03:11:33'),
(1058, 11, 254, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q30', 'What is an HTTP client class in android?', 'What is an HTTP client class in android?', 7, 125, 3, 6, 100, '2019-09-02 03:11:33', '2019-09-02 03:11:33'),
(1059, 11, 112, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q22', 'A school committee consists of 2 teachers and 4 students. The number of different committees that can be formed from 5 teachers and 10 students is', 'A school committee consists of 2 teachers and 4 students. The number of different committees that can be formed from 5 teachers and 10 students is', 7, 92, 1, 6, 42, '2019-09-02 03:11:33', '2019-09-02 03:11:33'),
(1060, 11, 147, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q7', 'The set of positive integers is _____________.', 'The set of positive integers is _____________.', 7, 96, 1, 6, 70, '2019-09-02 03:11:33', '2019-09-02 03:11:33');
INSERT INTO `answer_sheet_test_questions` (`id`, `answer_sheet_id`, `test_question_id`, `title`, `body`, `body_html`, `student_outcome_id`, `course_id`, `difficulty_level_id`, `performance_criteria_id`, `pos_order`, `created_at`, `updated_at`) VALUES
(1061, 11, 136, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q18', 'Private Button print = new button();', 'Private Button print = new button();', 7, 95, 2, 6, 61, '2019-09-02 03:11:33', '2019-09-02 03:11:33'),
(1062, 11, 131, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q13', 'A method of MessageBox class that allows you to call a message box for prompting user with messages and information.', 'A method of MessageBox class that allows you to call a message box for prompting user with messages and information.', 7, 95, 1, 6, 59, '2019-09-02 03:11:33', '2019-09-02 03:11:33'),
(1063, 11, 256, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q32', 'What is the difference between content values and cursor in android SQlite?', 'What is the difference between content values and cursor in android SQlite?', 7, 125, 3, 6, 98, '2019-09-02 03:11:33', '2019-09-02 03:11:33'),
(1064, 11, 215, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q15', 'Which is the latest mobile version of android?', 'Which is the latest mobile version of android?', 7, 125, 1, 6, 91, '2019-09-02 03:11:33', '2019-09-02 03:11:33'),
(1065, 11, 137, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q19', 'Polymorphism occurs when the methods of the child class.', 'Polymorphism occurs when the methods of the child class.', 7, 95, 2, 6, 62, '2019-09-02 03:11:33', '2019-09-02 03:11:33'),
(1066, 11, 78, 'CCS101 - INTRODUCTION TO COMPUTING -  Q19', 'This coding system is designed to support international languages like Chinese and Japanese.', 'This coding system is designed to support international languages like Chinese and Japanese.', 7, 89, 3, 6, 17, '2019-09-02 03:11:33', '2019-09-02 03:11:33'),
(1067, 11, 31, 'Order of operation - Q1', 'What is the output of the following code?\n\n[[#code14]]', 'What is the output of the following code?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">double x = 2;<br />\ndouble y = 3;<br />\ndouble z = 5;<br />\n<br />\ndouble output = x + x * y + (x + 2 * z);<br />\n<br />\nSystem.out.println(output);</code></pre>', 7, 90, 1, 6, 20, '2019-09-02 03:11:33', '2019-09-02 03:11:33'),
(1068, 11, 119, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q1', 'This is a repetition control stricture that allows you to efficiently write a loop that needs to execute a specific number of times.', 'This is a repetition control stricture that allows you to efficiently write a loop that needs to execute a specific number of times.', 7, 95, 1, 6, 57, '2019-09-02 03:11:33', '2019-09-02 03:11:33'),
(1069, 11, 51, 'CCS102 - COMPUTER PROGRAMMING 1 Q21', 'What is the output of this program?\n\n[[#code18]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class main_class <br />\n    {<br />\n        public static void main(String args[])<br />\n        {<br />\n            int x = 9;<br />\n            if (x == 9) <br />\n            { <br />\n                int x = 8;<br />\n                System.out.println(x);<br />\n            }<br />\n        } <br />\n    }</code></pre>', 7, 90, 2, 6, 27, '2019-09-02 03:11:34', '2019-09-02 03:11:34'),
(1070, 11, 90, 'CCS101 - INTRODUCTION TO COMPUTING - Q4', 'A letter, digit, or special character is represented by a code in a ___.', 'A letter, digit, or special character is represented by a code in a ___.', 7, 89, 3, 6, 15, '2019-09-02 03:11:34', '2019-09-02 03:11:34'),
(1071, 11, 214, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q14', 'Android is based on which kernel?', 'Android is based on which kernel?', 7, 125, 1, 6, 89, '2019-09-02 03:11:34', '2019-09-02 03:11:34'),
(1072, 11, 121, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q3', 'These are additional operators used to return Boolean values.', 'These are additional operators used to return Boolean values.', 7, 95, 1, 6, 55, '2019-09-02 03:11:34', '2019-09-02 03:11:34'),
(1073, 11, 1, 'Solving for basic equation - Q1', 'solve for x:\n2x + 3 = 5', 'solve for x:<br />\n2x + 3 = 5', 7, 92, 1, 6, 36, '2019-09-02 03:11:34', '2019-09-02 03:11:34'),
(1074, 11, 52, 'CCS102 - COMPUTER PROGRAMMING 1 Q22', 'What is the output of this program?\n\n[[#code19]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class box <br />\n    {<br />\n        int width;<br />\n        int height;<br />\n        int length;<br />\n    } <br />\n    class mainclass <br />\n    {<br />\n        public static void main(String args[]) <br />\n        {        <br />\n             box obj = new box();<br />\n             obj.width = 10;<br />\n             obj.height = 2;<br />\n             obj.length = 10;<br />\n             int y = obj.width * obj.height * obj.length; <br />\n             System.out.print(y);<br />\n        } <br />\n    }</code></pre>', 7, 90, 3, 6, 32, '2019-09-02 03:11:34', '2019-09-02 03:11:34'),
(1075, 11, 151, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q11', 'Two sets are called disjoint if there _____________ is the empty set.', 'Two sets are called disjoint if there _____________ is the empty set.', 7, 96, 1, 6, 73, '2019-09-02 03:11:34', '2019-09-02 03:11:34'),
(1076, 11, 42, 'CCS102 - COMPUTER PROGRAMMING 1 Q12', 'Which of the following is not a keyword in java?', 'Which of the following is not a keyword in java?', 7, 90, 1, 6, 18, '2019-09-02 03:11:34', '2019-09-02 03:11:34'),
(1077, 11, 38, 'CCS102 - COMPUTER PROGRAMMING 1 - Q8', 'Which of the following is true about try block in C#?', 'Which of the following is true about try block in C#?', 7, 90, 1, 6, 19, '2019-09-02 03:11:34', '2019-09-02 03:11:34'),
(1078, 11, 244, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q20', 'To update contents of content provider using curser and commit you need to call _______________.', 'To update contents of content provider using curser and commit you need to call _______________.', 7, 125, 2, 6, 95, '2019-09-02 03:11:34', '2019-09-02 03:11:34'),
(1079, 11, 116, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q26', 'If f(x) is an odd function, then | f(x) | is', 'If f(x) is an odd function, then | f(x) | is', 7, 92, 2, 6, 44, '2019-09-02 03:11:34', '2019-09-02 03:11:34'),
(1080, 11, 220, 'Computer Hardware - Q2', 'An input device that reads printed text and graphics and transfers them to a computer in digital form.', 'An input device that reads printed text and graphics and transfers them to a computer in digital form.', 7, 89, 1, 6, 7, '2019-09-02 03:11:34', '2019-09-02 03:11:34'),
(1081, 11, 275, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q24', 'How should you arrange catch blocks?', 'How should you arrange catch blocks?', 7, 95, 2, 6, 64, '2019-09-02 03:11:34', '2019-09-02 03:11:34'),
(1082, 11, 122, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q4', 'These operators take two operands, such as arithmetic operators (+,-,*,/).', 'These operators take two operands, such as arithmetic operators (+,-,*,/).', 7, 95, 1, 6, 53, '2019-09-02 03:11:34', '2019-09-02 03:11:34'),
(1083, 11, 32, 'CCS102 - COMPUTER PROGRAMMING 1 - Q2', 'Which of the following is a reserved keyword in C#?', 'Which of the following is a reserved keyword in C#?', 7, 90, 1, 6, 21, '2019-09-02 03:11:34', '2019-09-02 03:11:34'),
(1084, 11, 129, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q11', 'A control similar to an ordinary label having an underline and resembles a link on a web page.', 'A control similar to an ordinary label having an underline and resembles a link on a web page.', 7, 95, 1, 6, 54, '2019-09-02 03:11:34', '2019-09-02 03:11:34'),
(1085, 11, 104, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q14', 'What is the result when you put the expression x<sup>2</sup> +10x+41 into vertex form by completing the square ?', 'What is the result when you put the expression x<sup>2</sup> +10x+41 into vertex form by completing the square ?', 7, 92, 3, 6, 51, '2019-09-02 03:11:34', '2019-09-02 03:11:34'),
(1086, 11, 82, 'CCS101 - INTRODUCTION TO COMPUTING - Q15', '10111 is the two\'s complement representation of', '10111 is the two\'s complement representation of', 7, 89, 1, 6, 5, '2019-09-02 03:11:34', '2019-09-02 03:11:34'),
(1087, 11, 155, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q15', 'Let the set A is {1, 2, 3} and B is {2, 3, 4}. Then number of elements in A U B is _____.', 'Let the set A is {1, 2, 3} and B is {2, 3, 4}. Then number of elements in A U B is _____.', 7, 96, 1, 6, 69, '2019-09-02 03:11:34', '2019-09-02 03:11:34'),
(1088, 11, 50, 'CCS102 - COMPUTER PROGRAMMING Q20', 'What happens when thread\'s yield() method is called?', 'What happens when thread\'s yield() method is called?', 7, 90, 2, 6, 28, '2019-09-02 03:11:34', '2019-09-02 03:11:34'),
(1089, 11, 278, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q27', 'What will be the output of the following code?\n\n[[#code28]]', 'What will be the output of the following code?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">csharp</span></div><pre><code class=\"language-csharp\">try<br />\n{<br />\n  int num = 100;<br />\n  int den = 0;<br />\n  try<br />\n  {<br />\n    MessageBox.Show(\"Message1\");<br />\n    int res = num/den;<br />\n    MessageBox.Show(\"Message2\");<br />\n  }<br />\n  catch(ArithmeticException ae)<br />\n  {<br />\n    MessageBox.Show(\"Message3\");<br />\n  }<br />\n  MessageBox.Show(\"Message4\");<br />\n}</code></pre>', 7, 95, 3, 6, 68, '2019-09-02 03:11:34', '2019-09-02 03:11:34'),
(1090, 11, 207, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q7', 'ABD stands for', 'ABD stands for', 7, 125, 1, 6, 88, '2019-09-02 03:11:34', '2019-09-02 03:11:34'),
(1091, 11, 72, 'CCS101 - INTRODUCTION TO COMPUTING - Q25', 'What type of software is a screen saver?', 'What type of software is a screen saver?', 7, 89, 2, 6, 12, '2019-09-02 03:11:34', '2019-09-02 03:11:34'),
(1092, 11, 138, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q20', 'A method_____an exception when that method detects that a problem has occured.', 'A method_____an exception when that method detects that a problem has occured.', 7, 95, 2, 6, 65, '2019-09-02 03:11:34', '2019-09-02 03:11:34'),
(1093, 11, 126, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q8', 'A control used to show a list of strings which you can select.', 'A control used to show a list of strings which you can select.', 7, 95, 1, 6, 56, '2019-09-02 03:11:34', '2019-09-02 03:11:34'),
(1094, 11, 162, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q22', 'If n(A)=10 , n(B)=30,n(C)=50 and if set A,B,C are pairwise disjoint then which of the following is correct?', 'If n(A)=10 , n(B)=30,n(C)=50 and if set A,B,C are pairwise disjoint then which of the following is correct?', 7, 96, 2, 6, 79, '2019-09-02 03:11:34', '2019-09-02 03:11:34'),
(1095, 11, 107, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q17', 'If Log <sub>4 </sub>(x) = 12, then log 2 (x / 4) is equal to', 'If Log <sub>4 </sub>(x) = 12, then log 2 (x / 4) is equal to', 7, 92, 1, 6, 40, '2019-09-02 03:11:34', '2019-09-02 03:11:34'),
(1096, 11, 114, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q24', 'The mean of a data set is equal to 10 and its standard deviation is equal to 1. If we add 5 to each data value, then the mean and standard deviation become', 'The mean of a data set is equal to 10 and its standard deviation is equal to 1. If we add 5 to each data value, then the mean and standard deviation become', 7, 92, 2, 6, 45, '2019-09-02 03:11:34', '2019-09-02 03:11:34'),
(1097, 11, 243, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q19', 'Android provides a few standard themes, listed in ________.', 'Android provides a few standard themes, listed in ________.', 7, 125, 2, 6, 96, '2019-09-02 03:11:34', '2019-09-02 03:11:34'),
(1098, 11, 285, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q29', 'The period of 2 sin x cos x is', 'The period of 2 sin x cos x is', 7, 92, 1, 6, 35, '2019-09-02 03:11:34', '2019-09-02 03:11:34'),
(1099, 11, 77, 'CCS101 - INTRODUCTION TO COMPUTING - Q20', 'A programming error that occurs when running a program produces incorrect results.', 'A programming error that occurs when running a program produces incorrect results.', 7, 89, 1, 6, 9, '2019-09-02 03:11:34', '2019-09-02 03:11:34'),
(1100, 11, 57, 'CCS102 - COMPUTER PROGRAMMING 1 Q27', 'Which of these is necessary to specify at time of array initialization?', 'Which of these is necessary to specify at time of array initialization?', 7, 90, 2, 6, 30, '2019-09-02 03:11:34', '2019-09-02 03:11:34'),
(1101, 12, 107, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q17', 'If Log <sub>4 </sub>(x) = 12, then log 2 (x / 4) is equal to', 'If Log <sub>4 </sub>(x) = 12, then log 2 (x / 4) is equal to', 7, 92, 1, 6, 40, '2019-09-02 03:21:03', '2019-09-02 03:21:03'),
(1102, 12, 283, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q32', 'You have a TextBox control and a Help button that the user can press to get help on allowable values. You validate the data entered by the user in the TextBox control. If the user enters an invalid value, you set the focus back in the control using the Cancel property of the CancelEventArgs. A user reports that once he enters invalid data in the text box, he cannot click the Help button. What should you do to correct the problem?', 'You have a TextBox control and a Help button that the user can press to get help on allowable values. You validate the data entered by the user in the TextBox control. If the user enters an invalid value, you set the focus back in the control using the Cancel property of the CancelEventArgs. A user reports that once he enters invalid data in the text box, he cannot click the Help button. What should you do to correct the problem?', 7, 95, 3, 6, 67, '2019-09-02 03:21:03', '2019-09-02 03:21:03'),
(1103, 12, 260, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q23', 'In the given figure the if n(A)=20,n(U)=50,n(C)=10 and n(A∩B)=5 then n(B)=? \n\n[[#img34]]', 'In the given figure the if n(A)=20,n(U)=50,n(C)=10 and n(A∩B)=5 then n(B)=? <br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/23B9WIeQ00wE4pw7nsRG6le8KJWkZ1jI9HG7nYv3.jpeg\" width=\"300\" height=\"150\" />', 7, 96, 2, 6, 80, '2019-09-02 03:21:03', '2019-09-02 03:21:03'),
(1104, 12, 285, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q29', 'The period of 2 sin x cos x is', 'The period of 2 sin x cos x is', 7, 92, 1, 6, 35, '2019-09-02 03:21:03', '2019-09-02 03:21:03'),
(1105, 12, 132, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q14', 'C# treats the multiple catch statements like cases in a _____________ statement.', 'C# treats the multiple catch statements like cases in a _____________ statement.', 7, 95, 1, 6, 58, '2019-09-02 03:21:03', '2019-09-02 03:21:03'),
(1106, 12, 286, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q30', 'The probability that an electronic device produced by a company does not function properly is equal to 0.1. If 10 devices are bought, then the probability, to the nearest thousandth, that 7 devices function properly is', 'The probability that an electronic device produced by a company does not function properly is equal to 0.1. If 10 devices are bought, then the probability, to the nearest thousandth, that 7 devices function properly is', 7, 92, 3, 6, 49, '2019-09-02 03:21:03', '2019-09-02 03:21:03'),
(1107, 12, 41, 'CCS102 - COMPUTER PROGRAMMING 1 Q11', 'What is correct syntax for main method of a java class?', 'What is correct syntax for main method of a java class?', 7, 90, 1, 6, 24, '2019-09-02 03:21:03', '2019-09-02 03:21:03'),
(1108, 12, 68, 'Describing two-dimensional motion with vectors', 'A golfer hits a golf ball upwards at an angle of 75°, degree with the horizontal. We can ignore air resistance.\n\n[[#img22]]\n\nWhich graph best describes the golf ball\'s vertical displacement over time?\n\nAssume the origin of the coordinate system to be the point on the ground where the ball was initially at rest.', 'A golfer hits a golf ball upwards at an angle of 75°, degree with the horizontal. We can ignore air resistance.<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/MYpfYGJo93eMWxPVag4ii0jWIwamFw8EKp4yFlbj.png\" width=\"300\" height=\"150\" /><br />\n<br />\nWhich graph best describes the golf ball\'s vertical displacement over time?<br />\n<br />\nAssume the origin of the coordinate system to be the point on the ground where the ball was initially at rest.', 7, 89, 1, 6, 3, '2019-09-02 03:21:03', '2019-09-02 03:21:03'),
(1109, 12, 32, 'CCS102 - COMPUTER PROGRAMMING 1 - Q2', 'Which of the following is a reserved keyword in C#?', 'Which of the following is a reserved keyword in C#?', 7, 90, 1, 6, 21, '2019-09-02 03:21:03', '2019-09-02 03:21:03'),
(1110, 12, 162, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q22', 'If n(A)=10 , n(B)=30,n(C)=50 and if set A,B,C are pairwise disjoint then which of the following is correct?', 'If n(A)=10 , n(B)=30,n(C)=50 and if set A,B,C are pairwise disjoint then which of the following is correct?', 7, 96, 2, 6, 79, '2019-09-02 03:21:03', '2019-09-02 03:21:03'),
(1111, 12, 211, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q11', 'Web browser available in android based on', 'Web browser available in android based on', 7, 125, 1, 6, 85, '2019-09-02 03:21:03', '2019-09-02 03:21:03'),
(1112, 12, 254, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q30', 'What is an HTTP client class in android?', 'What is an HTTP client class in android?', 7, 125, 3, 6, 100, '2019-09-02 03:21:04', '2019-09-02 03:21:04'),
(1113, 12, 99, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q9', 'Evaluate the following:\n \nlog<sub>4</sub> 25', 'Evaluate the following:<br />\n <br />\nlog<sub>4</sub> 25', 7, 92, 1, 6, 41, '2019-09-02 03:21:04', '2019-09-02 03:21:04'),
(1114, 12, 151, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q11', 'Two sets are called disjoint if there _____________ is the empty set.', 'Two sets are called disjoint if there _____________ is the empty set.', 7, 96, 1, 6, 73, '2019-09-02 03:21:04', '2019-09-02 03:21:04'),
(1115, 12, 145, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q5', 'What is the Cartesian product of A = {1, 2} and B = {a, b}?', 'What is the Cartesian product of A = {1, 2} and B = {a, b}?', 7, 96, 2, 6, 78, '2019-09-02 03:21:04', '2019-09-02 03:21:04'),
(1116, 12, 256, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q32', 'What is the difference between content values and cursor in android SQlite?', 'What is the difference between content values and cursor in android SQlite?', 7, 125, 3, 6, 98, '2019-09-02 03:21:04', '2019-09-02 03:21:04'),
(1117, 12, 155, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q15', 'Let the set A is {1, 2, 3} and B is {2, 3, 4}. Then number of elements in A U B is _____.', 'Let the set A is {1, 2, 3} and B is {2, 3, 4}. Then number of elements in A U B is _____.', 7, 96, 1, 6, 69, '2019-09-02 03:21:04', '2019-09-02 03:21:04'),
(1118, 12, 127, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q9', 'Commonly used  control to execute commansd when it is clicked.', 'Commonly used  control to execute commansd when it is clicked.', 7, 95, 1, 6, 60, '2019-09-02 03:21:04', '2019-09-02 03:21:04'),
(1119, 12, 248, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q24', 'What is the use of content provider in android?', 'What is the use of content provider in android?', 7, 125, 2, 6, 97, '2019-09-02 03:21:04', '2019-09-02 03:21:04'),
(1120, 12, 225, 'CCS101 - INTRODUCTION TO COMPUTING - Q7', 'Converting (1010111)<sub>2</sub> to base yields which of the following results?', 'Converting (1010111)<sub>2</sub> to base yields which of the following results?', 7, 89, 2, 6, 11, '2019-09-02 03:21:04', '2019-09-02 03:21:04'),
(1121, 12, 124, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q6', 'This data type stores the address of the value which means that they refer to a memory location.', 'This data type stores the address of the value which means that they refer to a memory location.', 7, 95, 1, 6, 52, '2019-09-02 03:21:04', '2019-09-02 03:21:04'),
(1122, 12, 138, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q20', 'A method_____an exception when that method detects that a problem has occured.', 'A method_____an exception when that method detects that a problem has occured.', 7, 95, 2, 6, 65, '2019-09-02 03:21:04', '2019-09-02 03:21:04'),
(1123, 12, 278, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q27', 'What will be the output of the following code?\n\n[[#code28]]', 'What will be the output of the following code?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">csharp</span></div><pre><code class=\"language-csharp\">try<br />\n{<br />\n  int num = 100;<br />\n  int den = 0;<br />\n  try<br />\n  {<br />\n    MessageBox.Show(\"Message1\");<br />\n    int res = num/den;<br />\n    MessageBox.Show(\"Message2\");<br />\n  }<br />\n  catch(ArithmeticException ae)<br />\n  {<br />\n    MessageBox.Show(\"Message3\");<br />\n  }<br />\n  MessageBox.Show(\"Message4\");<br />\n}</code></pre>', 7, 95, 3, 6, 68, '2019-09-02 03:21:04', '2019-09-02 03:21:04'),
(1124, 12, 97, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q7', 'The expression (3i - 2)(i + 1) - 7 can be simplified to which of the following expressions?', 'The expression (3i - 2)(i + 1) - 7 can be simplified to which of the following expressions?', 7, 92, 2, 6, 46, '2019-09-02 03:21:04', '2019-09-02 03:21:04'),
(1125, 12, 61, 'CCS102 - COMPUTER PROGRAMMING 1 Q31', 'Where is array stored in memory?', 'Where is array stored in memory?', 7, 90, 2, 6, 31, '2019-09-02 03:21:04', '2019-09-02 03:21:04'),
(1126, 12, 111, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q21', 'For x greater than or equal to zero and less than or equal to 2 π, sin x and cos x are both decreasing on the intervals', 'For x greater than or equal to zero and less than or equal to 2 π, sin x and cos x are both decreasing on the intervals', 7, 92, 2, 6, 47, '2019-09-02 03:21:04', '2019-09-02 03:21:04'),
(1127, 12, 246, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q22', 'Which of  the following holds Java source code for the application?', 'Which of  the following holds Java source code for the application?', 7, 125, 2, 6, 94, '2019-09-02 03:21:04', '2019-09-02 03:21:04'),
(1128, 12, 59, 'CCS102 - COMPUTER PROGRAMMING 1 Q29', 'What is the output of this program?\n\n[[#code24]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class evaluate <br />\n    {<br />\n        public static void main(String args[]) <br />\n            {<br />\n	        int arr[] = new int[] {0 , 1, 2, 3, 4, 5, 6, 7, 8, 9};<br />\n	        int n = 6;<br />\n                n = arr[arr[n] / 2];<br />\n	        System.out.println(arr[n] / 2);<br />\n            } <br />\n    }</code></pre>', 7, 90, 3, 6, 34, '2019-09-02 03:21:04', '2019-09-02 03:21:04'),
(1129, 12, 147, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q7', 'The set of positive integers is _____________.', 'The set of positive integers is _____________.', 7, 96, 1, 6, 70, '2019-09-02 03:21:04', '2019-09-02 03:21:04'),
(1130, 12, 243, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q19', 'Android provides a few standard themes, listed in ________.', 'Android provides a few standard themes, listed in ________.', 7, 125, 2, 6, 96, '2019-09-02 03:21:04', '2019-09-02 03:21:04'),
(1131, 12, 1, 'Solving for basic equation - Q1', 'solve for x:\n2x + 3 = 5', 'solve for x:<br />\n2x + 3 = 5', 7, 92, 1, 6, 36, '2019-09-02 03:21:04', '2019-09-02 03:21:04'),
(1132, 12, 78, 'CCS101 - INTRODUCTION TO COMPUTING -  Q19', 'This coding system is designed to support international languages like Chinese and Japanese.', 'This coding system is designed to support international languages like Chinese and Japanese.', 7, 89, 3, 6, 17, '2019-09-02 03:21:04', '2019-09-02 03:21:04'),
(1133, 12, 212, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q12', 'Which company bought android?', 'Which company bought android?', 7, 125, 1, 6, 93, '2019-09-02 03:21:04', '2019-09-02 03:21:04'),
(1134, 12, 148, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q8', 'What is the Cardinality of the Power set of the set {0, 1, 2}.', 'What is the Cardinality of the Power set of the set {0, 1, 2}.', 7, 96, 1, 6, 72, '2019-09-02 03:21:04', '2019-09-02 03:21:04'),
(1135, 12, 267, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q30', 'A floor function map a real number to :', 'A floor function map a real number to :', 7, 96, 3, 6, 84, '2019-09-02 03:21:04', '2019-09-02 03:21:04'),
(1136, 12, 48, 'CCS102 - COMPUTER PROGRAMMING 1 Q18', 'What is JRE?', 'What is JRE?', 7, 90, 2, 6, 29, '2019-09-02 03:21:04', '2019-09-02 03:21:04'),
(1137, 12, 252, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q28', 'What is bean class in android?', 'What is bean class in android?', 7, 125, 3, 6, 99, '2019-09-02 03:21:04', '2019-09-02 03:21:04'),
(1138, 12, 31, 'Order of operation - Q1', 'What is the output of the following code?\n\n[[#code14]]', 'What is the output of the following code?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">double x = 2;<br />\ndouble y = 3;<br />\ndouble z = 5;<br />\n<br />\ndouble output = x + x * y + (x + 2 * z);<br />\n<br />\nSystem.out.println(output);</code></pre>', 7, 90, 1, 6, 20, '2019-09-02 03:21:04', '2019-09-02 03:21:04'),
(1139, 12, 66, 'Binary to decimal conversion 1', 'Convert 10100011 from binary to decimal.', 'Convert 10100011 from binary to decimal.', 7, 89, 1, 6, 8, '2019-09-02 03:21:04', '2019-09-02 03:21:04'),
(1140, 12, 42, 'CCS102 - COMPUTER PROGRAMMING 1 Q12', 'Which of the following is not a keyword in java?', 'Which of the following is not a keyword in java?', 7, 90, 1, 6, 18, '2019-09-02 03:21:04', '2019-09-02 03:21:04'),
(1141, 12, 95, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q5', 'What is the square root of -144?', 'What is the square root of -144?', 7, 92, 1, 6, 38, '2019-09-02 03:21:04', '2019-09-02 03:21:04'),
(1142, 12, 244, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q20', 'To update contents of content provider using curser and commit you need to call _______________.', 'To update contents of content provider using curser and commit you need to call _______________.', 7, 125, 2, 6, 95, '2019-09-02 03:21:04', '2019-09-02 03:21:04'),
(1143, 12, 275, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q24', 'How should you arrange catch blocks?', 'How should you arrange catch blocks?', 7, 95, 2, 6, 64, '2019-09-02 03:21:04', '2019-09-02 03:21:04'),
(1144, 12, 34, 'IT01- CCS102 - COMPUTER PROGRAMMING 1 - Q4', 'Which of the following operator returns the size of a data type in C#?', 'Which of the following operator returns the size of a data type in C#?', 7, 90, 1, 6, 22, '2019-09-02 03:21:04', '2019-09-02 03:21:04'),
(1145, 12, 156, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q16', 'If A has 4 elements B has 8 elements then the minimum and maximum number of elements in A U B are respectively', 'If A has 4 elements B has 8 elements then the minimum and maximum number of elements in A U B are respectively', 7, 96, 1, 6, 75, '2019-09-02 03:21:04', '2019-09-02 03:21:04'),
(1146, 12, 87, 'CCS101 - INTRODUCTION TO COMPUTING - Q8', '____________ are the four general operations that are performed in each machine cycle.', '____________ are the four general operations that are performed in each machine cycle.', 7, 89, 2, 6, 14, '2019-09-02 03:21:04', '2019-09-02 03:21:04'),
(1147, 12, 74, 'CCS101 - INTRODUCTION TO COMPUTING - Q23', 'An electronic tool that allows information to be input, processed, and output.', 'An electronic tool that allows information to be input, processed, and output.', 7, 89, 1, 6, 6, '2019-09-02 03:21:04', '2019-09-02 03:21:04'),
(1148, 12, 57, 'CCS102 - COMPUTER PROGRAMMING 1 Q27', 'Which of these is necessary to specify at time of array initialization?', 'Which of these is necessary to specify at time of array initialization?', 7, 90, 2, 6, 30, '2019-09-02 03:21:04', '2019-09-02 03:21:04'),
(1149, 12, 76, 'CCS101 - INTRODUCTION TO COMPUTING _ Q21', '_______ is a duplicate copy of data or other computer content for use in the event that the original version is destroyed.', '_______ is a duplicate copy of data or other computer content for use in the event that the original version is destroyed.', 7, 89, 2, 6, 13, '2019-09-02 03:21:05', '2019-09-02 03:21:05'),
(1150, 12, 131, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q13', 'A method of MessageBox class that allows you to call a message box for prompting user with messages and information.', 'A method of MessageBox class that allows you to call a message box for prompting user with messages and information.', 7, 95, 1, 6, 59, '2019-09-02 03:21:05', '2019-09-02 03:21:05'),
(1151, 12, 92, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q2', 'Solve the inequality \n4x + 8 > 5x +9', 'Solve the inequality <br />\n4x + 8 > 5x +9', 7, 92, 1, 6, 37, '2019-09-02 03:21:05', '2019-09-02 03:21:05'),
(1152, 12, 51, 'CCS102 - COMPUTER PROGRAMMING 1 Q21', 'What is the output of this program?\n\n[[#code18]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class main_class <br />\n    {<br />\n        public static void main(String args[])<br />\n        {<br />\n            int x = 9;<br />\n            if (x == 9) <br />\n            { <br />\n                int x = 8;<br />\n                System.out.println(x);<br />\n            }<br />\n        } <br />\n    }</code></pre>', 7, 90, 2, 6, 27, '2019-09-02 03:21:05', '2019-09-02 03:21:05'),
(1153, 12, 160, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q20', 'The shaded area of figure is best described by\n\n[[#img32]]', 'The shaded area of figure is best described by<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/5iL0Nsol7VkygnPftlQm5guoA5NqiGISBGevRke8.jpeg\" width=\"300\" height=\"150\" />', 7, 96, 3, 6, 83, '2019-09-02 03:21:05', '2019-09-02 03:21:05'),
(1154, 12, 215, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q15', 'Which is the latest mobile version of android?', 'Which is the latest mobile version of android?', 7, 125, 1, 6, 91, '2019-09-02 03:21:05', '2019-09-02 03:21:05'),
(1155, 12, 33, 'IT01- CCS102 - COMPUTER PROGRAMMING 1 - Q3', 'Which of the following converts a type to a double type in C#?', 'Which of the following converts a type to a double type in C#?', 7, 90, 1, 6, 26, '2019-09-02 03:21:05', '2019-09-02 03:21:05'),
(1156, 12, 113, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q23', 'Five different books (A, B, C, D and E) are to be arranged on a shelf. Books C and D are to be arranged first and second starting from the right of the shelf. The number of different orders in which books A, B and E may be arranged is', 'Five different books (A, B, C, D and E) are to be arranged on a shelf. Books C and D are to be arranged first and second starting from the right of the shelf. The number of different orders in which books A, B and E may be arranged is', 7, 92, 2, 6, 48, '2019-09-02 03:21:05', '2019-09-02 03:21:05'),
(1157, 12, 207, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q7', 'ABD stands for', 'ABD stands for', 7, 125, 1, 6, 88, '2019-09-02 03:21:05', '2019-09-02 03:21:05'),
(1158, 12, 108, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q18', 'The population of a country increased by an average of 2% per year from 2000 to 2003. If the population of this country was 2 000 000 on December 31, 2003, then the population of this country on January 1, 2000, to the nearest thousand would have been', 'The population of a country increased by an average of 2% per year from 2000 to 2003. If the population of this country was 2 000 000 on December 31, 2003, then the population of this country on January 1, 2000, to the nearest thousand would have been', 7, 92, 3, 6, 50, '2019-09-02 03:21:05', '2019-09-02 03:21:05'),
(1159, 12, 202, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q2', 'What is android?', 'What is android?', 7, 125, 1, 6, 86, '2019-09-02 03:21:05', '2019-09-02 03:21:05'),
(1160, 12, 72, 'CCS101 - INTRODUCTION TO COMPUTING - Q25', 'What type of software is a screen saver?', 'What type of software is a screen saver?', 7, 89, 2, 6, 12, '2019-09-02 03:21:05', '2019-09-02 03:21:05'),
(1161, 12, 205, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q5', 'For ___________, code used by Android is not open source.', 'For ___________, code used by Android is not open source.', 7, 125, 1, 6, 90, '2019-09-02 03:21:05', '2019-09-02 03:21:05'),
(1162, 12, 93, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q3', 'If 2x - 8 ≥ 2, then', 'If 2x - 8 ≥ 2, then', 7, 92, 1, 6, 39, '2019-09-02 03:21:05', '2019-09-02 03:21:05'),
(1163, 12, 114, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q24', 'The mean of a data set is equal to 10 and its standard deviation is equal to 1. If we add 5 to each data value, then the mean and standard deviation become', 'The mean of a data set is equal to 10 and its standard deviation is equal to 1. If we add 5 to each data value, then the mean and standard deviation become', 7, 92, 2, 6, 45, '2019-09-02 03:21:05', '2019-09-02 03:21:05'),
(1164, 12, 112, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q22', 'A school committee consists of 2 teachers and 4 students. The number of different committees that can be formed from 5 teachers and 10 students is', 'A school committee consists of 2 teachers and 4 students. The number of different committees that can be formed from 5 teachers and 10 students is', 7, 92, 1, 6, 42, '2019-09-02 03:21:05', '2019-09-02 03:21:05'),
(1165, 12, 203, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q3', 'Android doesn\'t  support which format?', 'Android doesn\'t  support which format?', 7, 125, 1, 6, 87, '2019-09-02 03:21:05', '2019-09-02 03:21:05'),
(1166, 12, 136, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q18', 'Private Button print = new button();', 'Private Button print = new button();', 7, 95, 2, 6, 61, '2019-09-02 03:21:05', '2019-09-02 03:21:05'),
(1167, 12, 116, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q26', 'If f(x) is an odd function, then | f(x) | is', 'If f(x) is an odd function, then | f(x) | is', 7, 92, 2, 6, 44, '2019-09-02 03:21:05', '2019-09-02 03:21:05'),
(1168, 12, 122, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q4', 'These operators take two operands, such as arithmetic operators (+,-,*,/).', 'These operators take two operands, such as arithmetic operators (+,-,*,/).', 7, 95, 1, 6, 53, '2019-09-02 03:21:05', '2019-09-02 03:21:05'),
(1169, 12, 79, 'CCS101 - INTRODUCTION TO COMPUTING -Q18', 'Which of the following is/are not part of the CPU?', 'Which of the following is/are not part of the CPU?', 7, 89, 3, 6, 16, '2019-09-02 03:21:05', '2019-09-02 03:21:05'),
(1170, 12, 39, 'CCS102 - COMPUTER PROGRAMMING 1 Q9', 'What of the following is the default value of an instance variable?', 'What of the following is the default value of an instance variable?', 7, 90, 1, 6, 25, '2019-09-02 03:21:05', '2019-09-02 03:21:05'),
(1171, 12, 50, 'CCS102 - COMPUTER PROGRAMMING Q20', 'What happens when thread\'s yield() method is called?', 'What happens when thread\'s yield() method is called?', 7, 90, 2, 6, 28, '2019-09-02 03:21:05', '2019-09-02 03:21:05'),
(1172, 12, 121, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q3', 'These are additional operators used to return Boolean values.', 'These are additional operators used to return Boolean values.', 7, 95, 1, 6, 55, '2019-09-02 03:21:05', '2019-09-02 03:21:05'),
(1173, 12, 270, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q33', 'In the given AP series the term at position 11 would be\n5, 8, 11, 14, 17, 20………50.', 'In the given AP series the term at position 11 would be<br />\n5, 8, 11, 14, 17, 20………50.', 7, 96, 3, 6, 82, '2019-09-02 03:21:05', '2019-09-02 03:21:05'),
(1174, 12, 149, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q9', 'The union of the sets {1, 2, 5} and {1, 2, 6} is the set _______________.', 'The union of the sets {1, 2, 5} and {1, 2, 6} is the set _______________.', 7, 96, 2, 6, 81, '2019-09-02 03:21:05', '2019-09-02 03:21:05'),
(1175, 12, 82, 'CCS101 - INTRODUCTION TO COMPUTING - Q15', '10111 is the two\'s complement representation of', '10111 is the two\'s complement representation of', 7, 89, 1, 6, 5, '2019-09-02 03:21:05', '2019-09-02 03:21:05'),
(1176, 12, 150, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q10', 'The intersection of the sets {1, 2, 5} and {1, 2, 6} is the set _____________.', 'The intersection of the sets {1, 2, 5} and {1, 2, 6} is the set _____________.', 7, 96, 1, 6, 74, '2019-09-02 03:21:05', '2019-09-02 03:21:05'),
(1177, 12, 219, 'Computer Hardware - Q3', 'A device that enables a computer to communicate over telephone lines.', 'A device that enables a computer to communicate over telephone lines.', 7, 89, 1, 6, 1, '2019-09-02 03:21:05', '2019-09-02 03:21:05'),
(1178, 12, 204, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q4', 'Android supports which features.', 'Android supports which features.', 7, 125, 1, 6, 92, '2019-09-02 03:21:05', '2019-09-02 03:21:05'),
(1179, 12, 104, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q14', 'What is the result when you put the expression x<sup>2</sup> +10x+41 into vertex form by completing the square ?', 'What is the result when you put the expression x<sup>2</sup> +10x+41 into vertex form by completing the square ?', 7, 92, 3, 6, 51, '2019-09-02 03:21:05', '2019-09-02 03:21:05'),
(1180, 12, 58, 'CCS102 - COMPUTER PROGRAMMING 1 Q28', 'What is the output of this program?\n\n[[#code22]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class array_output <br />\n    {<br />\n        public static void main(String args[]) <br />\n        {<br />\n            int array_variable [] = new int[10];<br />\n	    for (int i = 0; i < 10; ++i) <br />\n            {<br />\n                array_variable[i] = i;<br />\n                System.out.print(array_variable[i] + \" \");<br />\n                i++;<br />\n            }<br />\n        } <br />\n    }</code></pre>', 7, 90, 3, 6, 33, '2019-09-02 03:21:05', '2019-09-02 03:21:05'),
(1181, 12, 137, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q19', 'Polymorphism occurs when the methods of the child class.', 'Polymorphism occurs when the methods of the child class.', 7, 95, 2, 6, 62, '2019-09-02 03:21:05', '2019-09-02 03:21:05'),
(1182, 12, 70, 'Projectile motion 2', 'An adventurous cliff jumper runs horizontally off a cliff. We can ignore air resistance.\n\n[[#img27]]\n\nWhich diagram best describes the horizontal velocity vectors and trajectory during the person’s fall?\n\nAssume the origin of the coordinate system to be the cliff edge.\n\nA red dot represents a vector of zero magnitude.', 'An adventurous cliff jumper runs horizontally off a cliff. We can ignore air resistance.<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/PgCOEtvEENxNaqgGLMWLrysCTt8GwyXUqH8p2sz7.png\" width=\"200\" height=\"200\" /><br />\n<br />\nWhich diagram best describes the horizontal velocity vectors and trajectory during the person’s fall?<br />\n<br />\nAssume the origin of the coordinate system to be the cliff edge.<br />\n<br />\nA red dot represents a vector of zero magnitude.', 7, 89, 1, 6, 4, '2019-09-02 03:21:05', '2019-09-02 03:21:05'),
(1183, 12, 90, 'CCS101 - INTRODUCTION TO COMPUTING - Q4', 'A letter, digit, or special character is represented by a code in a ___.', 'A letter, digit, or special character is represented by a code in a ___.', 7, 89, 3, 6, 15, '2019-09-02 03:21:05', '2019-09-02 03:21:05'),
(1184, 12, 223, 'CC101 - INTRODUCTION TO COMPUTING - Q11', 'The sum of 11101 + 10111 equals ________.', 'The sum of 11101 + 10111 equals ________.', 7, 89, 2, 6, 10, '2019-09-02 03:21:06', '2019-09-02 03:21:06'),
(1185, 12, 126, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q8', 'A control used to show a list of strings which you can select.', 'A control used to show a list of strings which you can select.', 7, 95, 1, 6, 56, '2019-09-02 03:21:06', '2019-09-02 03:21:06'),
(1186, 12, 144, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q4', 'What is the cardinality of the set of odd positive integers less than 10?', 'What is the cardinality of the set of odd positive integers less than 10?', 7, 96, 1, 6, 71, '2019-09-02 03:21:06', '2019-09-02 03:21:06'),
(1187, 12, 142, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q2', 'The set O of odd positive integers less than 10 can be expressed by _____________.', 'The set O of odd positive integers less than 10 can be expressed by _____________.', 7, 96, 1, 6, 76, '2019-09-02 03:21:06', '2019-09-02 03:21:06'),
(1188, 12, 40, 'CCS102 - COMPUTER PROGRAMMING 1 Q10', 'Static binding uses which information for binding?', 'Static binding uses which information for binding?', 7, 90, 1, 6, 23, '2019-09-02 03:21:06', '2019-09-02 03:21:06'),
(1189, 12, 214, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q14', 'Android is based on which kernel?', 'Android is based on which kernel?', 7, 125, 1, 6, 89, '2019-09-02 03:21:06', '2019-09-02 03:21:06'),
(1190, 12, 89, 'CCS101 - INTRODUCTION TO COMPUTING - Q5', 'A memory management technique that uses hard drive space as additional RAM.', 'A memory management technique that uses hard drive space as additional RAM.', 7, 89, 1, 6, 2, '2019-09-02 03:21:06', '2019-09-02 03:21:06'),
(1191, 12, 38, 'CCS102 - COMPUTER PROGRAMMING 1 - Q8', 'Which of the following is true about try block in C#?', 'Which of the following is true about try block in C#?', 7, 90, 1, 6, 19, '2019-09-02 03:21:06', '2019-09-02 03:21:06'),
(1192, 12, 119, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q1', 'This is a repetition control stricture that allows you to efficiently write a loop that needs to execute a specific number of times.', 'This is a repetition control stricture that allows you to efficiently write a loop that needs to execute a specific number of times.', 7, 95, 1, 6, 57, '2019-09-02 03:21:06', '2019-09-02 03:21:06'),
(1193, 12, 52, 'CCS102 - COMPUTER PROGRAMMING 1 Q22', 'What is the output of this program?\n\n[[#code19]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class box <br />\n    {<br />\n        int width;<br />\n        int height;<br />\n        int length;<br />\n    } <br />\n    class mainclass <br />\n    {<br />\n        public static void main(String args[]) <br />\n        {        <br />\n             box obj = new box();<br />\n             obj.width = 10;<br />\n             obj.height = 2;<br />\n             obj.length = 10;<br />\n             int y = obj.width * obj.height * obj.length; <br />\n             System.out.print(y);<br />\n        } <br />\n    }</code></pre>', 7, 90, 3, 6, 32, '2019-09-02 03:21:06', '2019-09-02 03:21:06'),
(1194, 12, 289, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q33', 'A number of the form 213ab, where a and b are digits, has a reminder less than 10 when divided by 100. The sum of all the digits in the above number is equal to 13. Find the digit b.', 'A number of the form 213ab, where a and b are digits, has a reminder less than 10 when divided by 100. The sum of all the digits in the above number is equal to 13. Find the digit b.', 7, 92, 1, 6, 43, '2019-09-02 03:21:06', '2019-09-02 03:21:06'),
(1195, 12, 220, 'Computer Hardware - Q2', 'An input device that reads printed text and graphics and transfers them to a computer in digital form.', 'An input device that reads printed text and graphics and transfers them to a computer in digital form.', 7, 89, 1, 6, 7, '2019-09-02 03:21:06', '2019-09-02 03:21:06'),
(1196, 12, 143, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q3', 'Power set of empty set has exactly _________ subset.', 'Power set of empty set has exactly _________ subset.', 7, 96, 1, 6, 77, '2019-09-02 03:21:06', '2019-09-02 03:21:06'),
(1197, 12, 277, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q26', 'Which of the following will result from compiling this code, assuming that all other code for your form works properly?\n\n[[#code27]]', 'Which of the following will result from compiling this code, assuming that all other code for your form works properly?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">csharp</span></div><pre><code class=\"language-csharp\">try<br />\n{<br />\n  //Write code to allocate some resources<br />\n}<br />\nfinally<br />\n{<br />\n  //Write code to Dispose all allocated resources<br />\n}</code></pre>', 7, 95, 3, 6, 66, '2019-09-02 03:21:06', '2019-09-02 03:21:06'),
(1198, 12, 140, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q22', 'A _______ is an identifier that denotes a storage location.', 'A _______ is an identifier that denotes a storage location.', 7, 95, 2, 6, 63, '2019-09-02 03:21:06', '2019-09-02 03:21:06'),
(1199, 12, 77, 'CCS101 - INTRODUCTION TO COMPUTING - Q20', 'A programming error that occurs when running a program produces incorrect results.', 'A programming error that occurs when running a program produces incorrect results.', 7, 89, 1, 6, 9, '2019-09-02 03:21:06', '2019-09-02 03:21:06'),
(1200, 12, 129, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q11', 'A control similar to an ordinary label having an underline and resembles a link on a web page.', 'A control similar to an ordinary label having an underline and resembles a link on a web page.', 7, 95, 1, 6, 54, '2019-09-02 03:21:06', '2019-09-02 03:21:06'),
(1201, 13, 59, 'CCS102 - COMPUTER PROGRAMMING 1 Q29', 'What is the output of this program?\n\n[[#code24]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class evaluate <br />\n    {<br />\n        public static void main(String args[]) <br />\n            {<br />\n	        int arr[] = new int[] {0 , 1, 2, 3, 4, 5, 6, 7, 8, 9};<br />\n	        int n = 6;<br />\n                n = arr[arr[n] / 2];<br />\n	        System.out.println(arr[n] / 2);<br />\n            } <br />\n    }</code></pre>', 7, 90, 3, 6, 34, '2019-09-02 03:27:35', '2019-09-02 03:27:35'),
(1202, 13, 148, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q8', 'What is the Cardinality of the Power set of the set {0, 1, 2}.', 'What is the Cardinality of the Power set of the set {0, 1, 2}.', 7, 96, 1, 6, 72, '2019-09-02 03:27:35', '2019-09-02 03:27:35'),
(1203, 13, 277, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q26', 'Which of the following will result from compiling this code, assuming that all other code for your form works properly?\n\n[[#code27]]', 'Which of the following will result from compiling this code, assuming that all other code for your form works properly?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">csharp</span></div><pre><code class=\"language-csharp\">try<br />\n{<br />\n  //Write code to allocate some resources<br />\n}<br />\nfinally<br />\n{<br />\n  //Write code to Dispose all allocated resources<br />\n}</code></pre>', 7, 95, 3, 6, 66, '2019-09-02 03:27:36', '2019-09-02 03:27:36'),
(1204, 13, 283, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q32', 'You have a TextBox control and a Help button that the user can press to get help on allowable values. You validate the data entered by the user in the TextBox control. If the user enters an invalid value, you set the focus back in the control using the Cancel property of the CancelEventArgs. A user reports that once he enters invalid data in the text box, he cannot click the Help button. What should you do to correct the problem?', 'You have a TextBox control and a Help button that the user can press to get help on allowable values. You validate the data entered by the user in the TextBox control. If the user enters an invalid value, you set the focus back in the control using the Cancel property of the CancelEventArgs. A user reports that once he enters invalid data in the text box, he cannot click the Help button. What should you do to correct the problem?', 7, 95, 3, 6, 67, '2019-09-02 03:27:36', '2019-09-02 03:27:36'),
(1205, 13, 147, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q7', 'The set of positive integers is _____________.', 'The set of positive integers is _____________.', 7, 96, 1, 6, 70, '2019-09-02 03:27:36', '2019-09-02 03:27:36'),
(1206, 13, 40, 'CCS102 - COMPUTER PROGRAMMING 1 Q10', 'Static binding uses which information for binding?', 'Static binding uses which information for binding?', 7, 90, 1, 6, 23, '2019-09-02 03:27:36', '2019-09-02 03:27:36'),
(1207, 13, 77, 'CCS101 - INTRODUCTION TO COMPUTING - Q20', 'A programming error that occurs when running a program produces incorrect results.', 'A programming error that occurs when running a program produces incorrect results.', 7, 89, 1, 6, 9, '2019-09-02 03:27:36', '2019-09-02 03:27:36'),
(1208, 13, 137, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q19', 'Polymorphism occurs when the methods of the child class.', 'Polymorphism occurs when the methods of the child class.', 7, 95, 2, 6, 62, '2019-09-02 03:27:36', '2019-09-02 03:27:36');
INSERT INTO `answer_sheet_test_questions` (`id`, `answer_sheet_id`, `test_question_id`, `title`, `body`, `body_html`, `student_outcome_id`, `course_id`, `difficulty_level_id`, `performance_criteria_id`, `pos_order`, `created_at`, `updated_at`) VALUES
(1209, 13, 278, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q27', 'What will be the output of the following code?\n\n[[#code28]]', 'What will be the output of the following code?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">csharp</span></div><pre><code class=\"language-csharp\">try<br />\n{<br />\n  int num = 100;<br />\n  int den = 0;<br />\n  try<br />\n  {<br />\n    MessageBox.Show(\"Message1\");<br />\n    int res = num/den;<br />\n    MessageBox.Show(\"Message2\");<br />\n  }<br />\n  catch(ArithmeticException ae)<br />\n  {<br />\n    MessageBox.Show(\"Message3\");<br />\n  }<br />\n  MessageBox.Show(\"Message4\");<br />\n}</code></pre>', 7, 95, 3, 6, 68, '2019-09-02 03:27:36', '2019-09-02 03:27:36'),
(1210, 13, 97, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q7', 'The expression (3i - 2)(i + 1) - 7 can be simplified to which of the following expressions?', 'The expression (3i - 2)(i + 1) - 7 can be simplified to which of the following expressions?', 7, 92, 2, 6, 46, '2019-09-02 03:27:36', '2019-09-02 03:27:36'),
(1211, 13, 132, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q14', 'C# treats the multiple catch statements like cases in a _____________ statement.', 'C# treats the multiple catch statements like cases in a _____________ statement.', 7, 95, 1, 6, 58, '2019-09-02 03:27:36', '2019-09-02 03:27:36'),
(1212, 13, 127, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q9', 'Commonly used  control to execute commansd when it is clicked.', 'Commonly used  control to execute commansd when it is clicked.', 7, 95, 1, 6, 60, '2019-09-02 03:27:36', '2019-09-02 03:27:36'),
(1213, 13, 145, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q5', 'What is the Cartesian product of A = {1, 2} and B = {a, b}?', 'What is the Cartesian product of A = {1, 2} and B = {a, b}?', 7, 96, 2, 6, 78, '2019-09-02 03:27:36', '2019-09-02 03:27:36'),
(1214, 13, 160, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q20', 'The shaded area of figure is best described by\n\n[[#img32]]', 'The shaded area of figure is best described by<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/5iL0Nsol7VkygnPftlQm5guoA5NqiGISBGevRke8.jpeg\" width=\"300\" height=\"150\" />', 7, 96, 3, 6, 83, '2019-09-02 03:27:36', '2019-09-02 03:27:36'),
(1215, 13, 275, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q24', 'How should you arrange catch blocks?', 'How should you arrange catch blocks?', 7, 95, 2, 6, 64, '2019-09-02 03:27:36', '2019-09-02 03:27:36'),
(1216, 13, 70, 'Projectile motion 2', 'An adventurous cliff jumper runs horizontally off a cliff. We can ignore air resistance.\n\n[[#img27]]\n\nWhich diagram best describes the horizontal velocity vectors and trajectory during the person’s fall?\n\nAssume the origin of the coordinate system to be the cliff edge.\n\nA red dot represents a vector of zero magnitude.', 'An adventurous cliff jumper runs horizontally off a cliff. We can ignore air resistance.<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/PgCOEtvEENxNaqgGLMWLrysCTt8GwyXUqH8p2sz7.png\" width=\"200\" height=\"200\" /><br />\n<br />\nWhich diagram best describes the horizontal velocity vectors and trajectory during the person’s fall?<br />\n<br />\nAssume the origin of the coordinate system to be the cliff edge.<br />\n<br />\nA red dot represents a vector of zero magnitude.', 7, 89, 1, 6, 4, '2019-09-02 03:27:36', '2019-09-02 03:27:36'),
(1217, 13, 42, 'CCS102 - COMPUTER PROGRAMMING 1 Q12', 'Which of the following is not a keyword in java?', 'Which of the following is not a keyword in java?', 7, 90, 1, 6, 18, '2019-09-02 03:27:36', '2019-09-02 03:27:36'),
(1218, 13, 126, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q8', 'A control used to show a list of strings which you can select.', 'A control used to show a list of strings which you can select.', 7, 95, 1, 6, 56, '2019-09-02 03:27:36', '2019-09-02 03:27:36'),
(1219, 13, 89, 'CCS101 - INTRODUCTION TO COMPUTING - Q5', 'A memory management technique that uses hard drive space as additional RAM.', 'A memory management technique that uses hard drive space as additional RAM.', 7, 89, 1, 6, 2, '2019-09-02 03:27:36', '2019-09-02 03:27:36'),
(1220, 13, 122, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q4', 'These operators take two operands, such as arithmetic operators (+,-,*,/).', 'These operators take two operands, such as arithmetic operators (+,-,*,/).', 7, 95, 1, 6, 53, '2019-09-02 03:27:36', '2019-09-02 03:27:36'),
(1221, 13, 74, 'CCS101 - INTRODUCTION TO COMPUTING - Q23', 'An electronic tool that allows information to be input, processed, and output.', 'An electronic tool that allows information to be input, processed, and output.', 7, 89, 1, 6, 6, '2019-09-02 03:27:36', '2019-09-02 03:27:36'),
(1222, 13, 207, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q7', 'ABD stands for', 'ABD stands for', 7, 125, 1, 6, 88, '2019-09-02 03:27:36', '2019-09-02 03:27:36'),
(1223, 13, 114, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q24', 'The mean of a data set is equal to 10 and its standard deviation is equal to 1. If we add 5 to each data value, then the mean and standard deviation become', 'The mean of a data set is equal to 10 and its standard deviation is equal to 1. If we add 5 to each data value, then the mean and standard deviation become', 7, 92, 2, 6, 45, '2019-09-02 03:27:36', '2019-09-02 03:27:36'),
(1224, 13, 214, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q14', 'Android is based on which kernel?', 'Android is based on which kernel?', 7, 125, 1, 6, 89, '2019-09-02 03:27:36', '2019-09-02 03:27:36'),
(1225, 13, 76, 'CCS101 - INTRODUCTION TO COMPUTING _ Q21', '_______ is a duplicate copy of data or other computer content for use in the event that the original version is destroyed.', '_______ is a duplicate copy of data or other computer content for use in the event that the original version is destroyed.', 7, 89, 2, 6, 13, '2019-09-02 03:27:36', '2019-09-02 03:27:36'),
(1226, 13, 155, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q15', 'Let the set A is {1, 2, 3} and B is {2, 3, 4}. Then number of elements in A U B is _____.', 'Let the set A is {1, 2, 3} and B is {2, 3, 4}. Then number of elements in A U B is _____.', 7, 96, 1, 6, 69, '2019-09-02 03:27:36', '2019-09-02 03:27:36'),
(1227, 13, 58, 'CCS102 - COMPUTER PROGRAMMING 1 Q28', 'What is the output of this program?\n\n[[#code22]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class array_output <br />\n    {<br />\n        public static void main(String args[]) <br />\n        {<br />\n            int array_variable [] = new int[10];<br />\n	    for (int i = 0; i < 10; ++i) <br />\n            {<br />\n                array_variable[i] = i;<br />\n                System.out.print(array_variable[i] + \" \");<br />\n                i++;<br />\n            }<br />\n        } <br />\n    }</code></pre>', 7, 90, 3, 6, 33, '2019-09-02 03:27:36', '2019-09-02 03:27:36'),
(1228, 13, 142, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q2', 'The set O of odd positive integers less than 10 can be expressed by _____________.', 'The set O of odd positive integers less than 10 can be expressed by _____________.', 7, 96, 1, 6, 76, '2019-09-02 03:27:36', '2019-09-02 03:27:36'),
(1229, 13, 285, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q29', 'The period of 2 sin x cos x is', 'The period of 2 sin x cos x is', 7, 92, 1, 6, 35, '2019-09-02 03:27:36', '2019-09-02 03:27:36'),
(1230, 13, 1, 'Solving for basic equation - Q1', 'solve for x:\n2x + 3 = 5', 'solve for x:<br />\n2x + 3 = 5', 7, 92, 1, 6, 36, '2019-09-02 03:27:36', '2019-09-02 03:27:36'),
(1231, 13, 66, 'Binary to decimal conversion 1', 'Convert 10100011 from binary to decimal.', 'Convert 10100011 from binary to decimal.', 7, 89, 1, 6, 8, '2019-09-02 03:27:36', '2019-09-02 03:27:36'),
(1232, 13, 252, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q28', 'What is bean class in android?', 'What is bean class in android?', 7, 125, 3, 6, 99, '2019-09-02 03:27:37', '2019-09-02 03:27:37'),
(1233, 13, 87, 'CCS101 - INTRODUCTION TO COMPUTING - Q8', '____________ are the four general operations that are performed in each machine cycle.', '____________ are the four general operations that are performed in each machine cycle.', 7, 89, 2, 6, 14, '2019-09-02 03:27:37', '2019-09-02 03:27:37'),
(1234, 13, 116, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q26', 'If f(x) is an odd function, then | f(x) | is', 'If f(x) is an odd function, then | f(x) | is', 7, 92, 2, 6, 44, '2019-09-02 03:27:37', '2019-09-02 03:27:37'),
(1235, 13, 243, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q19', 'Android provides a few standard themes, listed in ________.', 'Android provides a few standard themes, listed in ________.', 7, 125, 2, 6, 96, '2019-09-02 03:27:37', '2019-09-02 03:27:37'),
(1236, 13, 68, 'Describing two-dimensional motion with vectors', 'A golfer hits a golf ball upwards at an angle of 75°, degree with the horizontal. We can ignore air resistance.\n\n[[#img22]]\n\nWhich graph best describes the golf ball\'s vertical displacement over time?\n\nAssume the origin of the coordinate system to be the point on the ground where the ball was initially at rest.', 'A golfer hits a golf ball upwards at an angle of 75°, degree with the horizontal. We can ignore air resistance.<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/MYpfYGJo93eMWxPVag4ii0jWIwamFw8EKp4yFlbj.png\" width=\"300\" height=\"150\" /><br />\n<br />\nWhich graph best describes the golf ball\'s vertical displacement over time?<br />\n<br />\nAssume the origin of the coordinate system to be the point on the ground where the ball was initially at rest.', 7, 89, 1, 6, 3, '2019-09-02 03:27:37', '2019-09-02 03:27:37'),
(1237, 13, 286, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q30', 'The probability that an electronic device produced by a company does not function properly is equal to 0.1. If 10 devices are bought, then the probability, to the nearest thousandth, that 7 devices function properly is', 'The probability that an electronic device produced by a company does not function properly is equal to 0.1. If 10 devices are bought, then the probability, to the nearest thousandth, that 7 devices function properly is', 7, 92, 3, 6, 49, '2019-09-02 03:27:37', '2019-09-02 03:27:37'),
(1238, 13, 248, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q24', 'What is the use of content provider in android?', 'What is the use of content provider in android?', 7, 125, 2, 6, 97, '2019-09-02 03:27:37', '2019-09-02 03:27:37'),
(1239, 13, 48, 'CCS102 - COMPUTER PROGRAMMING 1 Q18', 'What is JRE?', 'What is JRE?', 7, 90, 2, 6, 29, '2019-09-02 03:27:37', '2019-09-02 03:27:37'),
(1240, 13, 52, 'CCS102 - COMPUTER PROGRAMMING 1 Q22', 'What is the output of this program?\n\n[[#code19]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class box <br />\n    {<br />\n        int width;<br />\n        int height;<br />\n        int length;<br />\n    } <br />\n    class mainclass <br />\n    {<br />\n        public static void main(String args[]) <br />\n        {        <br />\n             box obj = new box();<br />\n             obj.width = 10;<br />\n             obj.height = 2;<br />\n             obj.length = 10;<br />\n             int y = obj.width * obj.height * obj.length; <br />\n             System.out.print(y);<br />\n        } <br />\n    }</code></pre>', 7, 90, 3, 6, 32, '2019-09-02 03:27:37', '2019-09-02 03:27:37'),
(1241, 13, 144, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q4', 'What is the cardinality of the set of odd positive integers less than 10?', 'What is the cardinality of the set of odd positive integers less than 10?', 7, 96, 1, 6, 71, '2019-09-02 03:27:37', '2019-09-02 03:27:37'),
(1242, 13, 223, 'CC101 - INTRODUCTION TO COMPUTING - Q11', 'The sum of 11101 + 10111 equals ________.', 'The sum of 11101 + 10111 equals ________.', 7, 89, 2, 6, 10, '2019-09-02 03:27:37', '2019-09-02 03:27:37'),
(1243, 13, 121, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q3', 'These are additional operators used to return Boolean values.', 'These are additional operators used to return Boolean values.', 7, 95, 1, 6, 55, '2019-09-02 03:27:37', '2019-09-02 03:27:37'),
(1244, 13, 289, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q33', 'A number of the form 213ab, where a and b are digits, has a reminder less than 10 when divided by 100. The sum of all the digits in the above number is equal to 13. Find the digit b.', 'A number of the form 213ab, where a and b are digits, has a reminder less than 10 when divided by 100. The sum of all the digits in the above number is equal to 13. Find the digit b.', 7, 92, 1, 6, 43, '2019-09-02 03:27:37', '2019-09-02 03:27:37'),
(1245, 13, 156, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q16', 'If A has 4 elements B has 8 elements then the minimum and maximum number of elements in A U B are respectively', 'If A has 4 elements B has 8 elements then the minimum and maximum number of elements in A U B are respectively', 7, 96, 1, 6, 75, '2019-09-02 03:27:37', '2019-09-02 03:27:37'),
(1246, 13, 33, 'IT01- CCS102 - COMPUTER PROGRAMMING 1 - Q3', 'Which of the following converts a type to a double type in C#?', 'Which of the following converts a type to a double type in C#?', 7, 90, 1, 6, 26, '2019-09-02 03:27:37', '2019-09-02 03:27:37'),
(1247, 13, 205, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q5', 'For ___________, code used by Android is not open source.', 'For ___________, code used by Android is not open source.', 7, 125, 1, 6, 90, '2019-09-02 03:27:37', '2019-09-02 03:27:37'),
(1248, 13, 219, 'Computer Hardware - Q3', 'A device that enables a computer to communicate over telephone lines.', 'A device that enables a computer to communicate over telephone lines.', 7, 89, 1, 6, 1, '2019-09-02 03:27:37', '2019-09-02 03:27:37'),
(1249, 13, 119, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q1', 'This is a repetition control stricture that allows you to efficiently write a loop that needs to execute a specific number of times.', 'This is a repetition control stricture that allows you to efficiently write a loop that needs to execute a specific number of times.', 7, 95, 1, 6, 57, '2019-09-02 03:27:37', '2019-09-02 03:27:37'),
(1250, 13, 260, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q23', 'In the given figure the if n(A)=20,n(U)=50,n(C)=10 and n(A∩B)=5 then n(B)=? \n\n[[#img34]]', 'In the given figure the if n(A)=20,n(U)=50,n(C)=10 and n(A∩B)=5 then n(B)=? <br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/23B9WIeQ00wE4pw7nsRG6le8KJWkZ1jI9HG7nYv3.jpeg\" width=\"300\" height=\"150\" />', 7, 96, 2, 6, 80, '2019-09-02 03:27:37', '2019-09-02 03:27:37'),
(1251, 13, 92, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q2', 'Solve the inequality \n4x + 8 > 5x +9', 'Solve the inequality <br />\n4x + 8 > 5x +9', 7, 92, 1, 6, 37, '2019-09-02 03:27:37', '2019-09-02 03:27:37'),
(1252, 13, 108, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q18', 'The population of a country increased by an average of 2% per year from 2000 to 2003. If the population of this country was 2 000 000 on December 31, 2003, then the population of this country on January 1, 2000, to the nearest thousand would have been', 'The population of a country increased by an average of 2% per year from 2000 to 2003. If the population of this country was 2 000 000 on December 31, 2003, then the population of this country on January 1, 2000, to the nearest thousand would have been', 7, 92, 3, 6, 50, '2019-09-02 03:27:37', '2019-09-02 03:27:37'),
(1253, 13, 57, 'CCS102 - COMPUTER PROGRAMMING 1 Q27', 'Which of these is necessary to specify at time of array initialization?', 'Which of these is necessary to specify at time of array initialization?', 7, 90, 2, 6, 30, '2019-09-02 03:27:37', '2019-09-02 03:27:37'),
(1254, 13, 162, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q22', 'If n(A)=10 , n(B)=30,n(C)=50 and if set A,B,C are pairwise disjoint then which of the following is correct?', 'If n(A)=10 , n(B)=30,n(C)=50 and if set A,B,C are pairwise disjoint then which of the following is correct?', 7, 96, 2, 6, 79, '2019-09-02 03:27:37', '2019-09-02 03:27:37'),
(1255, 13, 203, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q3', 'Android doesn\'t  support which format?', 'Android doesn\'t  support which format?', 7, 125, 1, 6, 87, '2019-09-02 03:27:37', '2019-09-02 03:27:37'),
(1256, 13, 41, 'CCS102 - COMPUTER PROGRAMMING 1 Q11', 'What is correct syntax for main method of a java class?', 'What is correct syntax for main method of a java class?', 7, 90, 1, 6, 24, '2019-09-02 03:27:37', '2019-09-02 03:27:37'),
(1257, 13, 61, 'CCS102 - COMPUTER PROGRAMMING 1 Q31', 'Where is array stored in memory?', 'Where is array stored in memory?', 7, 90, 2, 6, 31, '2019-09-02 03:27:37', '2019-09-02 03:27:37'),
(1258, 13, 112, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q22', 'A school committee consists of 2 teachers and 4 students. The number of different committees that can be formed from 5 teachers and 10 students is', 'A school committee consists of 2 teachers and 4 students. The number of different committees that can be formed from 5 teachers and 10 students is', 7, 92, 1, 6, 42, '2019-09-02 03:27:37', '2019-09-02 03:27:37'),
(1259, 13, 124, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q6', 'This data type stores the address of the value which means that they refer to a memory location.', 'This data type stores the address of the value which means that they refer to a memory location.', 7, 95, 1, 6, 52, '2019-09-02 03:27:37', '2019-09-02 03:27:37'),
(1260, 13, 72, 'CCS101 - INTRODUCTION TO COMPUTING - Q25', 'What type of software is a screen saver?', 'What type of software is a screen saver?', 7, 89, 2, 6, 12, '2019-09-02 03:27:37', '2019-09-02 03:27:37'),
(1261, 13, 204, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q4', 'Android supports which features.', 'Android supports which features.', 7, 125, 1, 6, 92, '2019-09-02 03:27:37', '2019-09-02 03:27:37'),
(1262, 13, 104, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q14', 'What is the result when you put the expression x<sup>2</sup> +10x+41 into vertex form by completing the square ?', 'What is the result when you put the expression x<sup>2</sup> +10x+41 into vertex form by completing the square ?', 7, 92, 3, 6, 51, '2019-09-02 03:27:37', '2019-09-02 03:27:37'),
(1263, 13, 140, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q22', 'A _______ is an identifier that denotes a storage location.', 'A _______ is an identifier that denotes a storage location.', 7, 95, 2, 6, 63, '2019-09-02 03:27:37', '2019-09-02 03:27:37'),
(1264, 13, 267, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q30', 'A floor function map a real number to :', 'A floor function map a real number to :', 7, 96, 3, 6, 84, '2019-09-02 03:27:37', '2019-09-02 03:27:37'),
(1265, 13, 138, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q20', 'A method_____an exception when that method detects that a problem has occured.', 'A method_____an exception when that method detects that a problem has occured.', 7, 95, 2, 6, 65, '2019-09-02 03:27:37', '2019-09-02 03:27:37'),
(1266, 13, 38, 'CCS102 - COMPUTER PROGRAMMING 1 - Q8', 'Which of the following is true about try block in C#?', 'Which of the following is true about try block in C#?', 7, 90, 1, 6, 19, '2019-09-02 03:27:37', '2019-09-02 03:27:37'),
(1267, 13, 78, 'CCS101 - INTRODUCTION TO COMPUTING -  Q19', 'This coding system is designed to support international languages like Chinese and Japanese.', 'This coding system is designed to support international languages like Chinese and Japanese.', 7, 89, 3, 6, 17, '2019-09-02 03:27:37', '2019-09-02 03:27:37'),
(1268, 13, 82, 'CCS101 - INTRODUCTION TO COMPUTING - Q15', '10111 is the two\'s complement representation of', '10111 is the two\'s complement representation of', 7, 89, 1, 6, 5, '2019-09-02 03:27:37', '2019-09-02 03:27:37'),
(1269, 13, 90, 'CCS101 - INTRODUCTION TO COMPUTING - Q4', 'A letter, digit, or special character is represented by a code in a ___.', 'A letter, digit, or special character is represented by a code in a ___.', 7, 89, 3, 6, 15, '2019-09-02 03:27:37', '2019-09-02 03:27:37'),
(1270, 13, 244, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q20', 'To update contents of content provider using curser and commit you need to call _______________.', 'To update contents of content provider using curser and commit you need to call _______________.', 7, 125, 2, 6, 95, '2019-09-02 03:27:37', '2019-09-02 03:27:37'),
(1271, 13, 212, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q12', 'Which company bought android?', 'Which company bought android?', 7, 125, 1, 6, 93, '2019-09-02 03:27:37', '2019-09-02 03:27:37'),
(1272, 13, 32, 'CCS102 - COMPUTER PROGRAMMING 1 - Q2', 'Which of the following is a reserved keyword in C#?', 'Which of the following is a reserved keyword in C#?', 7, 90, 1, 6, 21, '2019-09-02 03:27:38', '2019-09-02 03:27:38'),
(1273, 13, 113, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q23', 'Five different books (A, B, C, D and E) are to be arranged on a shelf. Books C and D are to be arranged first and second starting from the right of the shelf. The number of different orders in which books A, B and E may be arranged is', 'Five different books (A, B, C, D and E) are to be arranged on a shelf. Books C and D are to be arranged first and second starting from the right of the shelf. The number of different orders in which books A, B and E may be arranged is', 7, 92, 2, 6, 48, '2019-09-02 03:27:38', '2019-09-02 03:27:38'),
(1274, 13, 220, 'Computer Hardware - Q2', 'An input device that reads printed text and graphics and transfers them to a computer in digital form.', 'An input device that reads printed text and graphics and transfers them to a computer in digital form.', 7, 89, 1, 6, 7, '2019-09-02 03:27:38', '2019-09-02 03:27:38'),
(1275, 13, 254, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q30', 'What is an HTTP client class in android?', 'What is an HTTP client class in android?', 7, 125, 3, 6, 100, '2019-09-02 03:27:38', '2019-09-02 03:27:38'),
(1276, 13, 79, 'CCS101 - INTRODUCTION TO COMPUTING -Q18', 'Which of the following is/are not part of the CPU?', 'Which of the following is/are not part of the CPU?', 7, 89, 3, 6, 16, '2019-09-02 03:27:38', '2019-09-02 03:27:38'),
(1277, 13, 50, 'CCS102 - COMPUTER PROGRAMMING Q20', 'What happens when thread\'s yield() method is called?', 'What happens when thread\'s yield() method is called?', 7, 90, 2, 6, 28, '2019-09-02 03:27:38', '2019-09-02 03:27:38'),
(1278, 13, 111, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q21', 'For x greater than or equal to zero and less than or equal to 2 π, sin x and cos x are both decreasing on the intervals', 'For x greater than or equal to zero and less than or equal to 2 π, sin x and cos x are both decreasing on the intervals', 7, 92, 2, 6, 47, '2019-09-02 03:27:38', '2019-09-02 03:27:38'),
(1279, 13, 246, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q22', 'Which of  the following holds Java source code for the application?', 'Which of  the following holds Java source code for the application?', 7, 125, 2, 6, 94, '2019-09-02 03:27:38', '2019-09-02 03:27:38'),
(1280, 13, 151, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q11', 'Two sets are called disjoint if there _____________ is the empty set.', 'Two sets are called disjoint if there _____________ is the empty set.', 7, 96, 1, 6, 73, '2019-09-02 03:27:38', '2019-09-02 03:27:38'),
(1281, 13, 215, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q15', 'Which is the latest mobile version of android?', 'Which is the latest mobile version of android?', 7, 125, 1, 6, 91, '2019-09-02 03:27:38', '2019-09-02 03:27:38'),
(1282, 13, 51, 'CCS102 - COMPUTER PROGRAMMING 1 Q21', 'What is the output of this program?\n\n[[#code18]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class main_class <br />\n    {<br />\n        public static void main(String args[])<br />\n        {<br />\n            int x = 9;<br />\n            if (x == 9) <br />\n            { <br />\n                int x = 8;<br />\n                System.out.println(x);<br />\n            }<br />\n        } <br />\n    }</code></pre>', 7, 90, 2, 6, 27, '2019-09-02 03:27:38', '2019-09-02 03:27:38'),
(1283, 13, 39, 'CCS102 - COMPUTER PROGRAMMING 1 Q9', 'What of the following is the default value of an instance variable?', 'What of the following is the default value of an instance variable?', 7, 90, 1, 6, 25, '2019-09-02 03:27:38', '2019-09-02 03:27:38'),
(1284, 13, 34, 'IT01- CCS102 - COMPUTER PROGRAMMING 1 - Q4', 'Which of the following operator returns the size of a data type in C#?', 'Which of the following operator returns the size of a data type in C#?', 7, 90, 1, 6, 22, '2019-09-02 03:27:38', '2019-09-02 03:27:38'),
(1285, 13, 136, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q18', 'Private Button print = new button();', 'Private Button print = new button();', 7, 95, 2, 6, 61, '2019-09-02 03:27:38', '2019-09-02 03:27:38'),
(1286, 13, 131, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q13', 'A method of MessageBox class that allows you to call a message box for prompting user with messages and information.', 'A method of MessageBox class that allows you to call a message box for prompting user with messages and information.', 7, 95, 1, 6, 59, '2019-09-02 03:27:38', '2019-09-02 03:27:38'),
(1287, 13, 256, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q32', 'What is the difference between content values and cursor in android SQlite?', 'What is the difference between content values and cursor in android SQlite?', 7, 125, 3, 6, 98, '2019-09-02 03:27:38', '2019-09-02 03:27:38'),
(1288, 13, 99, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q9', 'Evaluate the following:\n \nlog<sub>4</sub> 25', 'Evaluate the following:<br />\n <br />\nlog<sub>4</sub> 25', 7, 92, 1, 6, 41, '2019-09-02 03:27:38', '2019-09-02 03:27:38'),
(1289, 13, 202, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q2', 'What is android?', 'What is android?', 7, 125, 1, 6, 86, '2019-09-02 03:27:38', '2019-09-02 03:27:38'),
(1290, 13, 149, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q9', 'The union of the sets {1, 2, 5} and {1, 2, 6} is the set _______________.', 'The union of the sets {1, 2, 5} and {1, 2, 6} is the set _______________.', 7, 96, 2, 6, 81, '2019-09-02 03:27:38', '2019-09-02 03:27:38'),
(1291, 13, 95, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q5', 'What is the square root of -144?', 'What is the square root of -144?', 7, 92, 1, 6, 38, '2019-09-02 03:27:38', '2019-09-02 03:27:38'),
(1292, 13, 93, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q3', 'If 2x - 8 ≥ 2, then', 'If 2x - 8 ≥ 2, then', 7, 92, 1, 6, 39, '2019-09-02 03:27:38', '2019-09-02 03:27:38'),
(1293, 13, 107, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q17', 'If Log <sub>4 </sub>(x) = 12, then log 2 (x / 4) is equal to', 'If Log <sub>4 </sub>(x) = 12, then log 2 (x / 4) is equal to', 7, 92, 1, 6, 40, '2019-09-02 03:27:38', '2019-09-02 03:27:38'),
(1294, 13, 31, 'Order of operation - Q1', 'What is the output of the following code?\n\n[[#code14]]', 'What is the output of the following code?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">double x = 2;<br />\ndouble y = 3;<br />\ndouble z = 5;<br />\n<br />\ndouble output = x + x * y + (x + 2 * z);<br />\n<br />\nSystem.out.println(output);</code></pre>', 7, 90, 1, 6, 20, '2019-09-02 03:27:38', '2019-09-02 03:27:38'),
(1295, 13, 270, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q33', 'In the given AP series the term at position 11 would be\n5, 8, 11, 14, 17, 20………50.', 'In the given AP series the term at position 11 would be<br />\n5, 8, 11, 14, 17, 20………50.', 7, 96, 3, 6, 82, '2019-09-02 03:27:38', '2019-09-02 03:27:38'),
(1296, 13, 150, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q10', 'The intersection of the sets {1, 2, 5} and {1, 2, 6} is the set _____________.', 'The intersection of the sets {1, 2, 5} and {1, 2, 6} is the set _____________.', 7, 96, 1, 6, 74, '2019-09-02 03:27:38', '2019-09-02 03:27:38'),
(1297, 13, 143, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q3', 'Power set of empty set has exactly _________ subset.', 'Power set of empty set has exactly _________ subset.', 7, 96, 1, 6, 77, '2019-09-02 03:27:38', '2019-09-02 03:27:38'),
(1298, 13, 211, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q11', 'Web browser available in android based on', 'Web browser available in android based on', 7, 125, 1, 6, 85, '2019-09-02 03:27:38', '2019-09-02 03:27:38'),
(1299, 13, 225, 'CCS101 - INTRODUCTION TO COMPUTING - Q7', 'Converting (1010111)<sub>2</sub> to base yields which of the following results?', 'Converting (1010111)<sub>2</sub> to base yields which of the following results?', 7, 89, 2, 6, 11, '2019-09-02 03:27:38', '2019-09-02 03:27:38'),
(1300, 13, 129, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q11', 'A control similar to an ordinary label having an underline and resembles a link on a web page.', 'A control similar to an ordinary label having an underline and resembles a link on a web page.', 7, 95, 1, 6, 54, '2019-09-02 03:27:38', '2019-09-02 03:27:38'),
(1301, 14, 140, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q22', 'A _______ is an identifier that denotes a storage location.', 'A _______ is an identifier that denotes a storage location.', 7, 95, 2, 6, 63, '2019-09-02 03:38:10', '2019-09-02 03:38:10'),
(1302, 14, 137, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q19', 'Polymorphism occurs when the methods of the child class.', 'Polymorphism occurs when the methods of the child class.', 7, 95, 2, 6, 62, '2019-09-02 03:38:10', '2019-09-02 03:38:10'),
(1303, 14, 275, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q24', 'How should you arrange catch blocks?', 'How should you arrange catch blocks?', 7, 95, 2, 6, 64, '2019-09-02 03:38:10', '2019-09-02 03:38:10'),
(1304, 14, 145, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q5', 'What is the Cartesian product of A = {1, 2} and B = {a, b}?', 'What is the Cartesian product of A = {1, 2} and B = {a, b}?', 7, 96, 2, 6, 78, '2019-09-02 03:38:10', '2019-09-02 03:38:10'),
(1305, 14, 138, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q20', 'A method_____an exception when that method detects that a problem has occured.', 'A method_____an exception when that method detects that a problem has occured.', 7, 95, 2, 6, 65, '2019-09-02 03:38:10', '2019-09-02 03:38:10'),
(1306, 14, 78, 'CCS101 - INTRODUCTION TO COMPUTING -  Q19', 'This coding system is designed to support international languages like Chinese and Japanese.', 'This coding system is designed to support international languages like Chinese and Japanese.', 7, 89, 3, 6, 17, '2019-09-02 03:38:10', '2019-09-02 03:38:10'),
(1307, 14, 89, 'CCS101 - INTRODUCTION TO COMPUTING - Q5', 'A memory management technique that uses hard drive space as additional RAM.', 'A memory management technique that uses hard drive space as additional RAM.', 7, 89, 1, 6, 2, '2019-09-02 03:38:10', '2019-09-02 03:38:10'),
(1308, 14, 151, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q11', 'Two sets are called disjoint if there _____________ is the empty set.', 'Two sets are called disjoint if there _____________ is the empty set.', 7, 96, 1, 6, 73, '2019-09-02 03:38:10', '2019-09-02 03:38:10'),
(1309, 14, 126, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q8', 'A control used to show a list of strings which you can select.', 'A control used to show a list of strings which you can select.', 7, 95, 1, 6, 56, '2019-09-02 03:38:10', '2019-09-02 03:38:10'),
(1310, 14, 95, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q5', 'What is the square root of -144?', 'What is the square root of -144?', 7, 92, 1, 6, 38, '2019-09-02 03:38:10', '2019-09-02 03:38:10'),
(1311, 14, 204, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q4', 'Android supports which features.', 'Android supports which features.', 7, 125, 1, 6, 92, '2019-09-02 03:38:10', '2019-09-02 03:38:10'),
(1312, 14, 277, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q26', 'Which of the following will result from compiling this code, assuming that all other code for your form works properly?\n\n[[#code27]]', 'Which of the following will result from compiling this code, assuming that all other code for your form works properly?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">csharp</span></div><pre><code class=\"language-csharp\">try<br />\n{<br />\n  //Write code to allocate some resources<br />\n}<br />\nfinally<br />\n{<br />\n  //Write code to Dispose all allocated resources<br />\n}</code></pre>', 7, 95, 3, 6, 66, '2019-09-02 03:38:10', '2019-09-02 03:38:10'),
(1313, 14, 212, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q12', 'Which company bought android?', 'Which company bought android?', 7, 125, 1, 6, 93, '2019-09-02 03:38:10', '2019-09-02 03:38:10'),
(1314, 14, 82, 'CCS101 - INTRODUCTION TO COMPUTING - Q15', '10111 is the two\'s complement representation of', '10111 is the two\'s complement representation of', 7, 89, 1, 6, 5, '2019-09-02 03:38:11', '2019-09-02 03:38:11'),
(1315, 14, 57, 'CCS102 - COMPUTER PROGRAMMING 1 Q27', 'Which of these is necessary to specify at time of array initialization?', 'Which of these is necessary to specify at time of array initialization?', 7, 90, 2, 6, 30, '2019-09-02 03:38:11', '2019-09-02 03:38:11'),
(1316, 14, 99, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q9', 'Evaluate the following:\n \nlog<sub>4</sub> 25', 'Evaluate the following:<br />\n <br />\nlog<sub>4</sub> 25', 7, 92, 1, 6, 41, '2019-09-02 03:38:11', '2019-09-02 03:38:11'),
(1317, 14, 41, 'CCS102 - COMPUTER PROGRAMMING 1 Q11', 'What is correct syntax for main method of a java class?', 'What is correct syntax for main method of a java class?', 7, 90, 1, 6, 24, '2019-09-02 03:38:11', '2019-09-02 03:38:11'),
(1318, 14, 121, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q3', 'These are additional operators used to return Boolean values.', 'These are additional operators used to return Boolean values.', 7, 95, 1, 6, 55, '2019-09-02 03:38:11', '2019-09-02 03:38:11'),
(1319, 14, 270, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q33', 'In the given AP series the term at position 11 would be\n5, 8, 11, 14, 17, 20………50.', 'In the given AP series the term at position 11 would be<br />\n5, 8, 11, 14, 17, 20………50.', 7, 96, 3, 6, 82, '2019-09-02 03:38:11', '2019-09-02 03:38:11'),
(1320, 14, 147, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q7', 'The set of positive integers is _____________.', 'The set of positive integers is _____________.', 7, 96, 1, 6, 70, '2019-09-02 03:38:11', '2019-09-02 03:38:11'),
(1321, 14, 72, 'CCS101 - INTRODUCTION TO COMPUTING - Q25', 'What type of software is a screen saver?', 'What type of software is a screen saver?', 7, 89, 2, 6, 12, '2019-09-02 03:38:11', '2019-09-02 03:38:11'),
(1322, 14, 225, 'CCS101 - INTRODUCTION TO COMPUTING - Q7', 'Converting (1010111)<sub>2</sub> to base yields which of the following results?', 'Converting (1010111)<sub>2</sub> to base yields which of the following results?', 7, 89, 2, 6, 11, '2019-09-02 03:38:11', '2019-09-02 03:38:11'),
(1323, 14, 162, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q22', 'If n(A)=10 , n(B)=30,n(C)=50 and if set A,B,C are pairwise disjoint then which of the following is correct?', 'If n(A)=10 , n(B)=30,n(C)=50 and if set A,B,C are pairwise disjoint then which of the following is correct?', 7, 96, 2, 6, 79, '2019-09-02 03:38:11', '2019-09-02 03:38:11'),
(1324, 14, 87, 'CCS101 - INTRODUCTION TO COMPUTING - Q8', '____________ are the four general operations that are performed in each machine cycle.', '____________ are the four general operations that are performed in each machine cycle.', 7, 89, 2, 6, 14, '2019-09-02 03:38:11', '2019-09-02 03:38:11'),
(1325, 14, 246, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q22', 'Which of  the following holds Java source code for the application?', 'Which of  the following holds Java source code for the application?', 7, 125, 2, 6, 94, '2019-09-02 03:38:11', '2019-09-02 03:38:11'),
(1326, 14, 107, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q17', 'If Log <sub>4 </sub>(x) = 12, then log 2 (x / 4) is equal to', 'If Log <sub>4 </sub>(x) = 12, then log 2 (x / 4) is equal to', 7, 92, 1, 6, 40, '2019-09-02 03:38:11', '2019-09-02 03:38:11'),
(1327, 14, 267, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q30', 'A floor function map a real number to :', 'A floor function map a real number to :', 7, 96, 3, 6, 84, '2019-09-02 03:38:11', '2019-09-02 03:38:11'),
(1328, 14, 61, 'CCS102 - COMPUTER PROGRAMMING 1 Q31', 'Where is array stored in memory?', 'Where is array stored in memory?', 7, 90, 2, 6, 31, '2019-09-02 03:38:11', '2019-09-02 03:38:11'),
(1329, 14, 70, 'Projectile motion 2', 'An adventurous cliff jumper runs horizontally off a cliff. We can ignore air resistance.\n\n[[#img27]]\n\nWhich diagram best describes the horizontal velocity vectors and trajectory during the person’s fall?\n\nAssume the origin of the coordinate system to be the cliff edge.\n\nA red dot represents a vector of zero magnitude.', 'An adventurous cliff jumper runs horizontally off a cliff. We can ignore air resistance.<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/PgCOEtvEENxNaqgGLMWLrysCTt8GwyXUqH8p2sz7.png\" width=\"200\" height=\"200\" /><br />\n<br />\nWhich diagram best describes the horizontal velocity vectors and trajectory during the person’s fall?<br />\n<br />\nAssume the origin of the coordinate system to be the cliff edge.<br />\n<br />\nA red dot represents a vector of zero magnitude.', 7, 89, 1, 6, 4, '2019-09-02 03:38:11', '2019-09-02 03:38:11'),
(1330, 14, 77, 'CCS101 - INTRODUCTION TO COMPUTING - Q20', 'A programming error that occurs when running a program produces incorrect results.', 'A programming error that occurs when running a program produces incorrect results.', 7, 89, 1, 6, 9, '2019-09-02 03:38:11', '2019-09-02 03:38:11'),
(1331, 14, 1, 'Solving for basic equation - Q1', 'solve for x:\n2x + 3 = 5', 'solve for x:<br />\n2x + 3 = 5', 7, 92, 1, 6, 36, '2019-09-02 03:38:11', '2019-09-02 03:38:11'),
(1332, 14, 205, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q5', 'For ___________, code used by Android is not open source.', 'For ___________, code used by Android is not open source.', 7, 125, 1, 6, 90, '2019-09-02 03:38:11', '2019-09-02 03:38:11'),
(1333, 14, 93, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q3', 'If 2x - 8 ≥ 2, then', 'If 2x - 8 ≥ 2, then', 7, 92, 1, 6, 39, '2019-09-02 03:38:11', '2019-09-02 03:38:11'),
(1334, 14, 142, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q2', 'The set O of odd positive integers less than 10 can be expressed by _____________.', 'The set O of odd positive integers less than 10 can be expressed by _____________.', 7, 96, 1, 6, 76, '2019-09-02 03:38:11', '2019-09-02 03:38:11'),
(1335, 14, 285, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q29', 'The period of 2 sin x cos x is', 'The period of 2 sin x cos x is', 7, 92, 1, 6, 35, '2019-09-02 03:38:12', '2019-09-02 03:38:12'),
(1336, 14, 42, 'CCS102 - COMPUTER PROGRAMMING 1 Q12', 'Which of the following is not a keyword in java?', 'Which of the following is not a keyword in java?', 7, 90, 1, 6, 18, '2019-09-02 03:38:12', '2019-09-02 03:38:12'),
(1337, 14, 76, 'CCS101 - INTRODUCTION TO COMPUTING _ Q21', '_______ is a duplicate copy of data or other computer content for use in the event that the original version is destroyed.', '_______ is a duplicate copy of data or other computer content for use in the event that the original version is destroyed.', 7, 89, 2, 6, 13, '2019-09-02 03:38:12', '2019-09-02 03:38:12'),
(1338, 14, 256, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q32', 'What is the difference between content values and cursor in android SQlite?', 'What is the difference between content values and cursor in android SQlite?', 7, 125, 3, 6, 98, '2019-09-02 03:38:12', '2019-09-02 03:38:12'),
(1339, 14, 136, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q18', 'Private Button print = new button();', 'Private Button print = new button();', 7, 95, 2, 6, 61, '2019-09-02 03:38:12', '2019-09-02 03:38:12'),
(1340, 14, 124, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q6', 'This data type stores the address of the value which means that they refer to a memory location.', 'This data type stores the address of the value which means that they refer to a memory location.', 7, 95, 1, 6, 52, '2019-09-02 03:38:12', '2019-09-02 03:38:12'),
(1341, 14, 92, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q2', 'Solve the inequality \n4x + 8 > 5x +9', 'Solve the inequality <br />\n4x + 8 > 5x +9', 7, 92, 1, 6, 37, '2019-09-02 03:38:12', '2019-09-02 03:38:12'),
(1342, 14, 283, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q32', 'You have a TextBox control and a Help button that the user can press to get help on allowable values. You validate the data entered by the user in the TextBox control. If the user enters an invalid value, you set the focus back in the control using the Cancel property of the CancelEventArgs. A user reports that once he enters invalid data in the text box, he cannot click the Help button. What should you do to correct the problem?', 'You have a TextBox control and a Help button that the user can press to get help on allowable values. You validate the data entered by the user in the TextBox control. If the user enters an invalid value, you set the focus back in the control using the Cancel property of the CancelEventArgs. A user reports that once he enters invalid data in the text box, he cannot click the Help button. What should you do to correct the problem?', 7, 95, 3, 6, 67, '2019-09-02 03:38:12', '2019-09-02 03:38:12'),
(1343, 14, 51, 'CCS102 - COMPUTER PROGRAMMING 1 Q21', 'What is the output of this program?\n\n[[#code18]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class main_class <br />\n    {<br />\n        public static void main(String args[])<br />\n        {<br />\n            int x = 9;<br />\n            if (x == 9) <br />\n            { <br />\n                int x = 8;<br />\n                System.out.println(x);<br />\n            }<br />\n        } <br />\n    }</code></pre>', 7, 90, 2, 6, 27, '2019-09-02 03:38:12', '2019-09-02 03:38:12'),
(1344, 14, 31, 'Order of operation - Q1', 'What is the output of the following code?\n\n[[#code14]]', 'What is the output of the following code?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">double x = 2;<br />\ndouble y = 3;<br />\ndouble z = 5;<br />\n<br />\ndouble output = x + x * y + (x + 2 * z);<br />\n<br />\nSystem.out.println(output);</code></pre>', 7, 90, 1, 6, 20, '2019-09-02 03:38:12', '2019-09-02 03:38:12'),
(1345, 14, 59, 'CCS102 - COMPUTER PROGRAMMING 1 Q29', 'What is the output of this program?\n\n[[#code24]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class evaluate <br />\n    {<br />\n        public static void main(String args[]) <br />\n            {<br />\n	        int arr[] = new int[] {0 , 1, 2, 3, 4, 5, 6, 7, 8, 9};<br />\n	        int n = 6;<br />\n                n = arr[arr[n] / 2];<br />\n	        System.out.println(arr[n] / 2);<br />\n            } <br />\n    }</code></pre>', 7, 90, 3, 6, 34, '2019-09-02 03:38:12', '2019-09-02 03:38:12'),
(1346, 14, 202, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q2', 'What is android?', 'What is android?', 7, 125, 1, 6, 86, '2019-09-02 03:38:12', '2019-09-02 03:38:12'),
(1347, 14, 211, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q11', 'Web browser available in android based on', 'Web browser available in android based on', 7, 125, 1, 6, 85, '2019-09-02 03:38:12', '2019-09-02 03:38:12'),
(1348, 14, 254, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q30', 'What is an HTTP client class in android?', 'What is an HTTP client class in android?', 7, 125, 3, 6, 100, '2019-09-02 03:38:12', '2019-09-02 03:38:12'),
(1349, 14, 38, 'CCS102 - COMPUTER PROGRAMMING 1 - Q8', 'Which of the following is true about try block in C#?', 'Which of the following is true about try block in C#?', 7, 90, 1, 6, 19, '2019-09-02 03:38:12', '2019-09-02 03:38:12'),
(1350, 14, 144, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q4', 'What is the cardinality of the set of odd positive integers less than 10?', 'What is the cardinality of the set of odd positive integers less than 10?', 7, 96, 1, 6, 71, '2019-09-02 03:38:12', '2019-09-02 03:38:12'),
(1351, 14, 97, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q7', 'The expression (3i - 2)(i + 1) - 7 can be simplified to which of the following expressions?', 'The expression (3i - 2)(i + 1) - 7 can be simplified to which of the following expressions?', 7, 92, 2, 6, 46, '2019-09-02 03:38:12', '2019-09-02 03:38:12'),
(1352, 14, 34, 'IT01- CCS102 - COMPUTER PROGRAMMING 1 - Q4', 'Which of the following operator returns the size of a data type in C#?', 'Which of the following operator returns the size of a data type in C#?', 7, 90, 1, 6, 22, '2019-09-02 03:38:12', '2019-09-02 03:38:12'),
(1353, 14, 122, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q4', 'These operators take two operands, such as arithmetic operators (+,-,*,/).', 'These operators take two operands, such as arithmetic operators (+,-,*,/).', 7, 95, 1, 6, 53, '2019-09-02 03:38:12', '2019-09-02 03:38:12'),
(1354, 14, 289, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q33', 'A number of the form 213ab, where a and b are digits, has a reminder less than 10 when divided by 100. The sum of all the digits in the above number is equal to 13. Find the digit b.', 'A number of the form 213ab, where a and b are digits, has a reminder less than 10 when divided by 100. The sum of all the digits in the above number is equal to 13. Find the digit b.', 7, 92, 1, 6, 43, '2019-09-02 03:38:12', '2019-09-02 03:38:12'),
(1355, 14, 66, 'Binary to decimal conversion 1', 'Convert 10100011 from binary to decimal.', 'Convert 10100011 from binary to decimal.', 7, 89, 1, 6, 8, '2019-09-02 03:38:12', '2019-09-02 03:38:12'),
(1356, 14, 214, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q14', 'Android is based on which kernel?', 'Android is based on which kernel?', 7, 125, 1, 6, 89, '2019-09-02 03:38:12', '2019-09-02 03:38:12'),
(1357, 14, 219, 'Computer Hardware - Q3', 'A device that enables a computer to communicate over telephone lines.', 'A device that enables a computer to communicate over telephone lines.', 7, 89, 1, 6, 1, '2019-09-02 03:38:12', '2019-09-02 03:38:12'),
(1358, 14, 32, 'CCS102 - COMPUTER PROGRAMMING 1 - Q2', 'Which of the following is a reserved keyword in C#?', 'Which of the following is a reserved keyword in C#?', 7, 90, 1, 6, 21, '2019-09-02 03:38:12', '2019-09-02 03:38:12'),
(1359, 14, 160, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q20', 'The shaded area of figure is best described by\n\n[[#img32]]', 'The shaded area of figure is best described by<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/5iL0Nsol7VkygnPftlQm5guoA5NqiGISBGevRke8.jpeg\" width=\"300\" height=\"150\" />', 7, 96, 3, 6, 83, '2019-09-02 03:38:12', '2019-09-02 03:38:12'),
(1360, 14, 129, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q11', 'A control similar to an ordinary label having an underline and resembles a link on a web page.', 'A control similar to an ordinary label having an underline and resembles a link on a web page.', 7, 95, 1, 6, 54, '2019-09-02 03:38:12', '2019-09-02 03:38:12'),
(1361, 14, 132, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q14', 'C# treats the multiple catch statements like cases in a _____________ statement.', 'C# treats the multiple catch statements like cases in a _____________ statement.', 7, 95, 1, 6, 58, '2019-09-02 03:38:13', '2019-09-02 03:38:13'),
(1362, 14, 127, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q9', 'Commonly used  control to execute commansd when it is clicked.', 'Commonly used  control to execute commansd when it is clicked.', 7, 95, 1, 6, 60, '2019-09-02 03:38:13', '2019-09-02 03:38:13'),
(1363, 14, 223, 'CC101 - INTRODUCTION TO COMPUTING - Q11', 'The sum of 11101 + 10111 equals ________.', 'The sum of 11101 + 10111 equals ________.', 7, 89, 2, 6, 10, '2019-09-02 03:38:13', '2019-09-02 03:38:13'),
(1364, 14, 278, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q27', 'What will be the output of the following code?\n\n[[#code28]]', 'What will be the output of the following code?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">csharp</span></div><pre><code class=\"language-csharp\">try<br />\n{<br />\n  int num = 100;<br />\n  int den = 0;<br />\n  try<br />\n  {<br />\n    MessageBox.Show(\"Message1\");<br />\n    int res = num/den;<br />\n    MessageBox.Show(\"Message2\");<br />\n  }<br />\n  catch(ArithmeticException ae)<br />\n  {<br />\n    MessageBox.Show(\"Message3\");<br />\n  }<br />\n  MessageBox.Show(\"Message4\");<br />\n}</code></pre>', 7, 95, 3, 6, 68, '2019-09-02 03:38:13', '2019-09-02 03:38:13'),
(1365, 14, 50, 'CCS102 - COMPUTER PROGRAMMING Q20', 'What happens when thread\'s yield() method is called?', 'What happens when thread\'s yield() method is called?', 7, 90, 2, 6, 28, '2019-09-02 03:38:13', '2019-09-02 03:38:13'),
(1366, 14, 150, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q10', 'The intersection of the sets {1, 2, 5} and {1, 2, 6} is the set _____________.', 'The intersection of the sets {1, 2, 5} and {1, 2, 6} is the set _____________.', 7, 96, 1, 6, 74, '2019-09-02 03:38:13', '2019-09-02 03:38:13');
INSERT INTO `answer_sheet_test_questions` (`id`, `answer_sheet_id`, `test_question_id`, `title`, `body`, `body_html`, `student_outcome_id`, `course_id`, `difficulty_level_id`, `performance_criteria_id`, `pos_order`, `created_at`, `updated_at`) VALUES
(1367, 14, 244, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q20', 'To update contents of content provider using curser and commit you need to call _______________.', 'To update contents of content provider using curser and commit you need to call _______________.', 7, 125, 2, 6, 95, '2019-09-02 03:38:13', '2019-09-02 03:38:13'),
(1368, 14, 68, 'Describing two-dimensional motion with vectors', 'A golfer hits a golf ball upwards at an angle of 75°, degree with the horizontal. We can ignore air resistance.\n\n[[#img22]]\n\nWhich graph best describes the golf ball\'s vertical displacement over time?\n\nAssume the origin of the coordinate system to be the point on the ground where the ball was initially at rest.', 'A golfer hits a golf ball upwards at an angle of 75°, degree with the horizontal. We can ignore air resistance.<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/MYpfYGJo93eMWxPVag4ii0jWIwamFw8EKp4yFlbj.png\" width=\"300\" height=\"150\" /><br />\n<br />\nWhich graph best describes the golf ball\'s vertical displacement over time?<br />\n<br />\nAssume the origin of the coordinate system to be the point on the ground where the ball was initially at rest.', 7, 89, 1, 6, 3, '2019-09-02 03:38:13', '2019-09-02 03:38:13'),
(1369, 14, 111, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q21', 'For x greater than or equal to zero and less than or equal to 2 π, sin x and cos x are both decreasing on the intervals', 'For x greater than or equal to zero and less than or equal to 2 π, sin x and cos x are both decreasing on the intervals', 7, 92, 2, 6, 47, '2019-09-02 03:38:13', '2019-09-02 03:38:13'),
(1370, 14, 116, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q26', 'If f(x) is an odd function, then | f(x) | is', 'If f(x) is an odd function, then | f(x) | is', 7, 92, 2, 6, 44, '2019-09-02 03:38:13', '2019-09-02 03:38:13'),
(1371, 14, 52, 'CCS102 - COMPUTER PROGRAMMING 1 Q22', 'What is the output of this program?\n\n[[#code19]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class box <br />\n    {<br />\n        int width;<br />\n        int height;<br />\n        int length;<br />\n    } <br />\n    class mainclass <br />\n    {<br />\n        public static void main(String args[]) <br />\n        {        <br />\n             box obj = new box();<br />\n             obj.width = 10;<br />\n             obj.height = 2;<br />\n             obj.length = 10;<br />\n             int y = obj.width * obj.height * obj.length; <br />\n             System.out.print(y);<br />\n        } <br />\n    }</code></pre>', 7, 90, 3, 6, 32, '2019-09-02 03:38:13', '2019-09-02 03:38:13'),
(1372, 14, 286, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q30', 'The probability that an electronic device produced by a company does not function properly is equal to 0.1. If 10 devices are bought, then the probability, to the nearest thousandth, that 7 devices function properly is', 'The probability that an electronic device produced by a company does not function properly is equal to 0.1. If 10 devices are bought, then the probability, to the nearest thousandth, that 7 devices function properly is', 7, 92, 3, 6, 49, '2019-09-02 03:38:13', '2019-09-02 03:38:13'),
(1373, 14, 104, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q14', 'What is the result when you put the expression x<sup>2</sup> +10x+41 into vertex form by completing the square ?', 'What is the result when you put the expression x<sup>2</sup> +10x+41 into vertex form by completing the square ?', 7, 92, 3, 6, 51, '2019-09-02 03:38:13', '2019-09-02 03:38:13'),
(1374, 14, 149, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q9', 'The union of the sets {1, 2, 5} and {1, 2, 6} is the set _______________.', 'The union of the sets {1, 2, 5} and {1, 2, 6} is the set _______________.', 7, 96, 2, 6, 81, '2019-09-02 03:38:13', '2019-09-02 03:38:13'),
(1375, 14, 48, 'CCS102 - COMPUTER PROGRAMMING 1 Q18', 'What is JRE?', 'What is JRE?', 7, 90, 2, 6, 29, '2019-09-02 03:38:13', '2019-09-02 03:38:13'),
(1376, 14, 33, 'IT01- CCS102 - COMPUTER PROGRAMMING 1 - Q3', 'Which of the following converts a type to a double type in C#?', 'Which of the following converts a type to a double type in C#?', 7, 90, 1, 6, 26, '2019-09-02 03:38:13', '2019-09-02 03:38:13'),
(1377, 14, 155, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q15', 'Let the set A is {1, 2, 3} and B is {2, 3, 4}. Then number of elements in A U B is _____.', 'Let the set A is {1, 2, 3} and B is {2, 3, 4}. Then number of elements in A U B is _____.', 7, 96, 1, 6, 69, '2019-09-02 03:38:13', '2019-09-02 03:38:13'),
(1378, 14, 215, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q15', 'Which is the latest mobile version of android?', 'Which is the latest mobile version of android?', 7, 125, 1, 6, 91, '2019-09-02 03:38:13', '2019-09-02 03:38:13'),
(1379, 14, 207, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q7', 'ABD stands for', 'ABD stands for', 7, 125, 1, 6, 88, '2019-09-02 03:38:13', '2019-09-02 03:38:13'),
(1380, 14, 108, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q18', 'The population of a country increased by an average of 2% per year from 2000 to 2003. If the population of this country was 2 000 000 on December 31, 2003, then the population of this country on January 1, 2000, to the nearest thousand would have been', 'The population of a country increased by an average of 2% per year from 2000 to 2003. If the population of this country was 2 000 000 on December 31, 2003, then the population of this country on January 1, 2000, to the nearest thousand would have been', 7, 92, 3, 6, 50, '2019-09-02 03:38:13', '2019-09-02 03:38:13'),
(1381, 14, 243, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q19', 'Android provides a few standard themes, listed in ________.', 'Android provides a few standard themes, listed in ________.', 7, 125, 2, 6, 96, '2019-09-02 03:38:13', '2019-09-02 03:38:13'),
(1382, 14, 220, 'Computer Hardware - Q2', 'An input device that reads printed text and graphics and transfers them to a computer in digital form.', 'An input device that reads printed text and graphics and transfers them to a computer in digital form.', 7, 89, 1, 6, 7, '2019-09-02 03:38:13', '2019-09-02 03:38:13'),
(1383, 14, 203, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q3', 'Android doesn\'t  support which format?', 'Android doesn\'t  support which format?', 7, 125, 1, 6, 87, '2019-09-02 03:38:13', '2019-09-02 03:38:13'),
(1384, 14, 156, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q16', 'If A has 4 elements B has 8 elements then the minimum and maximum number of elements in A U B are respectively', 'If A has 4 elements B has 8 elements then the minimum and maximum number of elements in A U B are respectively', 7, 96, 1, 6, 75, '2019-09-02 03:38:13', '2019-09-02 03:38:13'),
(1385, 14, 74, 'CCS101 - INTRODUCTION TO COMPUTING - Q23', 'An electronic tool that allows information to be input, processed, and output.', 'An electronic tool that allows information to be input, processed, and output.', 7, 89, 1, 6, 6, '2019-09-02 03:38:13', '2019-09-02 03:38:13'),
(1386, 14, 39, 'CCS102 - COMPUTER PROGRAMMING 1 Q9', 'What of the following is the default value of an instance variable?', 'What of the following is the default value of an instance variable?', 7, 90, 1, 6, 25, '2019-09-02 03:38:13', '2019-09-02 03:38:13'),
(1387, 14, 131, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q13', 'A method of MessageBox class that allows you to call a message box for prompting user with messages and information.', 'A method of MessageBox class that allows you to call a message box for prompting user with messages and information.', 7, 95, 1, 6, 59, '2019-09-02 03:38:13', '2019-09-02 03:38:13'),
(1388, 14, 260, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q23', 'In the given figure the if n(A)=20,n(U)=50,n(C)=10 and n(A∩B)=5 then n(B)=? \n\n[[#img34]]', 'In the given figure the if n(A)=20,n(U)=50,n(C)=10 and n(A∩B)=5 then n(B)=? <br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/23B9WIeQ00wE4pw7nsRG6le8KJWkZ1jI9HG7nYv3.jpeg\" width=\"300\" height=\"150\" />', 7, 96, 2, 6, 80, '2019-09-02 03:38:13', '2019-09-02 03:38:13'),
(1389, 14, 252, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q28', 'What is bean class in android?', 'What is bean class in android?', 7, 125, 3, 6, 99, '2019-09-02 03:38:13', '2019-09-02 03:38:13'),
(1390, 14, 148, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q8', 'What is the Cardinality of the Power set of the set {0, 1, 2}.', 'What is the Cardinality of the Power set of the set {0, 1, 2}.', 7, 96, 1, 6, 72, '2019-09-02 03:38:13', '2019-09-02 03:38:13'),
(1391, 14, 58, 'CCS102 - COMPUTER PROGRAMMING 1 Q28', 'What is the output of this program?\n\n[[#code22]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class array_output <br />\n    {<br />\n        public static void main(String args[]) <br />\n        {<br />\n            int array_variable [] = new int[10];<br />\n	    for (int i = 0; i < 10; ++i) <br />\n            {<br />\n                array_variable[i] = i;<br />\n                System.out.print(array_variable[i] + \" \");<br />\n                i++;<br />\n            }<br />\n        } <br />\n    }</code></pre>', 7, 90, 3, 6, 33, '2019-09-02 03:38:13', '2019-09-02 03:38:13'),
(1392, 14, 90, 'CCS101 - INTRODUCTION TO COMPUTING - Q4', 'A letter, digit, or special character is represented by a code in a ___.', 'A letter, digit, or special character is represented by a code in a ___.', 7, 89, 3, 6, 15, '2019-09-02 03:38:13', '2019-09-02 03:38:13'),
(1393, 14, 114, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q24', 'The mean of a data set is equal to 10 and its standard deviation is equal to 1. If we add 5 to each data value, then the mean and standard deviation become', 'The mean of a data set is equal to 10 and its standard deviation is equal to 1. If we add 5 to each data value, then the mean and standard deviation become', 7, 92, 2, 6, 45, '2019-09-02 03:38:13', '2019-09-02 03:38:13'),
(1394, 14, 40, 'CCS102 - COMPUTER PROGRAMMING 1 Q10', 'Static binding uses which information for binding?', 'Static binding uses which information for binding?', 7, 90, 1, 6, 23, '2019-09-02 03:38:13', '2019-09-02 03:38:13'),
(1395, 14, 248, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q24', 'What is the use of content provider in android?', 'What is the use of content provider in android?', 7, 125, 2, 6, 97, '2019-09-02 03:38:13', '2019-09-02 03:38:13'),
(1396, 14, 79, 'CCS101 - INTRODUCTION TO COMPUTING -Q18', 'Which of the following is/are not part of the CPU?', 'Which of the following is/are not part of the CPU?', 7, 89, 3, 6, 16, '2019-09-02 03:38:13', '2019-09-02 03:38:13'),
(1397, 14, 119, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q1', 'This is a repetition control stricture that allows you to efficiently write a loop that needs to execute a specific number of times.', 'This is a repetition control stricture that allows you to efficiently write a loop that needs to execute a specific number of times.', 7, 95, 1, 6, 57, '2019-09-02 03:38:14', '2019-09-02 03:38:14'),
(1398, 14, 113, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q23', 'Five different books (A, B, C, D and E) are to be arranged on a shelf. Books C and D are to be arranged first and second starting from the right of the shelf. The number of different orders in which books A, B and E may be arranged is', 'Five different books (A, B, C, D and E) are to be arranged on a shelf. Books C and D are to be arranged first and second starting from the right of the shelf. The number of different orders in which books A, B and E may be arranged is', 7, 92, 2, 6, 48, '2019-09-02 03:38:14', '2019-09-02 03:38:14'),
(1399, 14, 112, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q22', 'A school committee consists of 2 teachers and 4 students. The number of different committees that can be formed from 5 teachers and 10 students is', 'A school committee consists of 2 teachers and 4 students. The number of different committees that can be formed from 5 teachers and 10 students is', 7, 92, 1, 6, 42, '2019-09-02 03:38:14', '2019-09-02 03:38:14'),
(1400, 14, 143, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q3', 'Power set of empty set has exactly _________ subset.', 'Power set of empty set has exactly _________ subset.', 7, 96, 1, 6, 77, '2019-09-02 03:38:14', '2019-09-02 03:38:14'),
(1401, 15, 114, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q24', 'The mean of a data set is equal to 10 and its standard deviation is equal to 1. If we add 5 to each data value, then the mean and standard deviation become', 'The mean of a data set is equal to 10 and its standard deviation is equal to 1. If we add 5 to each data value, then the mean and standard deviation become', 7, 92, 2, 6, 45, '2019-09-02 03:44:53', '2019-09-02 03:44:53'),
(1402, 15, 72, 'CCS101 - INTRODUCTION TO COMPUTING - Q25', 'What type of software is a screen saver?', 'What type of software is a screen saver?', 7, 89, 2, 6, 12, '2019-09-02 03:44:53', '2019-09-02 03:44:53'),
(1403, 15, 48, 'CCS102 - COMPUTER PROGRAMMING 1 Q18', 'What is JRE?', 'What is JRE?', 7, 90, 2, 6, 29, '2019-09-02 03:44:53', '2019-09-02 03:44:53'),
(1404, 15, 122, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q4', 'These operators take two operands, such as arithmetic operators (+,-,*,/).', 'These operators take two operands, such as arithmetic operators (+,-,*,/).', 7, 95, 1, 6, 53, '2019-09-02 03:44:53', '2019-09-02 03:44:53'),
(1405, 15, 256, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q32', 'What is the difference between content values and cursor in android SQlite?', 'What is the difference between content values and cursor in android SQlite?', 7, 125, 3, 6, 98, '2019-09-02 03:44:53', '2019-09-02 03:44:53'),
(1406, 15, 59, 'CCS102 - COMPUTER PROGRAMMING 1 Q29', 'What is the output of this program?\n\n[[#code24]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class evaluate <br />\n    {<br />\n        public static void main(String args[]) <br />\n            {<br />\n	        int arr[] = new int[] {0 , 1, 2, 3, 4, 5, 6, 7, 8, 9};<br />\n	        int n = 6;<br />\n                n = arr[arr[n] / 2];<br />\n	        System.out.println(arr[n] / 2);<br />\n            } <br />\n    }</code></pre>', 7, 90, 3, 6, 34, '2019-09-02 03:44:53', '2019-09-02 03:44:53'),
(1407, 15, 108, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q18', 'The population of a country increased by an average of 2% per year from 2000 to 2003. If the population of this country was 2 000 000 on December 31, 2003, then the population of this country on January 1, 2000, to the nearest thousand would have been', 'The population of a country increased by an average of 2% per year from 2000 to 2003. If the population of this country was 2 000 000 on December 31, 2003, then the population of this country on January 1, 2000, to the nearest thousand would have been', 7, 92, 3, 6, 50, '2019-09-02 03:44:53', '2019-09-02 03:44:53'),
(1408, 15, 148, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q8', 'What is the Cardinality of the Power set of the set {0, 1, 2}.', 'What is the Cardinality of the Power set of the set {0, 1, 2}.', 7, 96, 1, 6, 72, '2019-09-02 03:44:53', '2019-09-02 03:44:53'),
(1409, 15, 74, 'CCS101 - INTRODUCTION TO COMPUTING - Q23', 'An electronic tool that allows information to be input, processed, and output.', 'An electronic tool that allows information to be input, processed, and output.', 7, 89, 1, 6, 6, '2019-09-02 03:44:53', '2019-09-02 03:44:53'),
(1410, 15, 203, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q3', 'Android doesn\'t  support which format?', 'Android doesn\'t  support which format?', 7, 125, 1, 6, 87, '2019-09-02 03:44:53', '2019-09-02 03:44:53'),
(1411, 15, 90, 'CCS101 - INTRODUCTION TO COMPUTING - Q4', 'A letter, digit, or special character is represented by a code in a ___.', 'A letter, digit, or special character is represented by a code in a ___.', 7, 89, 3, 6, 15, '2019-09-02 03:44:54', '2019-09-02 03:44:54'),
(1412, 15, 107, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q17', 'If Log <sub>4 </sub>(x) = 12, then log 2 (x / 4) is equal to', 'If Log <sub>4 </sub>(x) = 12, then log 2 (x / 4) is equal to', 7, 92, 1, 6, 40, '2019-09-02 03:44:54', '2019-09-02 03:44:54'),
(1413, 15, 97, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q7', 'The expression (3i - 2)(i + 1) - 7 can be simplified to which of the following expressions?', 'The expression (3i - 2)(i + 1) - 7 can be simplified to which of the following expressions?', 7, 92, 2, 6, 46, '2019-09-02 03:44:54', '2019-09-02 03:44:54'),
(1414, 15, 283, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q32', 'You have a TextBox control and a Help button that the user can press to get help on allowable values. You validate the data entered by the user in the TextBox control. If the user enters an invalid value, you set the focus back in the control using the Cancel property of the CancelEventArgs. A user reports that once he enters invalid data in the text box, he cannot click the Help button. What should you do to correct the problem?', 'You have a TextBox control and a Help button that the user can press to get help on allowable values. You validate the data entered by the user in the TextBox control. If the user enters an invalid value, you set the focus back in the control using the Cancel property of the CancelEventArgs. A user reports that once he enters invalid data in the text box, he cannot click the Help button. What should you do to correct the problem?', 7, 95, 3, 6, 67, '2019-09-02 03:44:54', '2019-09-02 03:44:54'),
(1415, 15, 92, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q2', 'Solve the inequality \n4x + 8 > 5x +9', 'Solve the inequality <br />\n4x + 8 > 5x +9', 7, 92, 1, 6, 37, '2019-09-02 03:44:54', '2019-09-02 03:44:54'),
(1416, 15, 99, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q9', 'Evaluate the following:\n \nlog<sub>4</sub> 25', 'Evaluate the following:<br />\n <br />\nlog<sub>4</sub> 25', 7, 92, 1, 6, 41, '2019-09-02 03:44:54', '2019-09-02 03:44:54'),
(1417, 15, 51, 'CCS102 - COMPUTER PROGRAMMING 1 Q21', 'What is the output of this program?\n\n[[#code18]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class main_class <br />\n    {<br />\n        public static void main(String args[])<br />\n        {<br />\n            int x = 9;<br />\n            if (x == 9) <br />\n            { <br />\n                int x = 8;<br />\n                System.out.println(x);<br />\n            }<br />\n        } <br />\n    }</code></pre>', 7, 90, 2, 6, 27, '2019-09-02 03:44:54', '2019-09-02 03:44:54'),
(1418, 15, 124, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q6', 'This data type stores the address of the value which means that they refer to a memory location.', 'This data type stores the address of the value which means that they refer to a memory location.', 7, 95, 1, 6, 52, '2019-09-02 03:44:54', '2019-09-02 03:44:54'),
(1419, 15, 42, 'CCS102 - COMPUTER PROGRAMMING 1 Q12', 'Which of the following is not a keyword in java?', 'Which of the following is not a keyword in java?', 7, 90, 1, 6, 18, '2019-09-02 03:44:54', '2019-09-02 03:44:54'),
(1420, 15, 33, 'IT01- CCS102 - COMPUTER PROGRAMMING 1 - Q3', 'Which of the following converts a type to a double type in C#?', 'Which of the following converts a type to a double type in C#?', 7, 90, 1, 6, 26, '2019-09-02 03:44:54', '2019-09-02 03:44:54'),
(1421, 15, 57, 'CCS102 - COMPUTER PROGRAMMING 1 Q27', 'Which of these is necessary to specify at time of array initialization?', 'Which of these is necessary to specify at time of array initialization?', 7, 90, 2, 6, 30, '2019-09-02 03:44:54', '2019-09-02 03:44:54'),
(1422, 15, 136, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q18', 'Private Button print = new button();', 'Private Button print = new button();', 7, 95, 2, 6, 61, '2019-09-02 03:44:54', '2019-09-02 03:44:54'),
(1423, 15, 248, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q24', 'What is the use of content provider in android?', 'What is the use of content provider in android?', 7, 125, 2, 6, 97, '2019-09-02 03:44:54', '2019-09-02 03:44:54'),
(1424, 15, 39, 'CCS102 - COMPUTER PROGRAMMING 1 Q9', 'What of the following is the default value of an instance variable?', 'What of the following is the default value of an instance variable?', 7, 90, 1, 6, 25, '2019-09-02 03:44:54', '2019-09-02 03:44:54'),
(1425, 15, 119, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q1', 'This is a repetition control stricture that allows you to efficiently write a loop that needs to execute a specific number of times.', 'This is a repetition control stricture that allows you to efficiently write a loop that needs to execute a specific number of times.', 7, 95, 1, 6, 57, '2019-09-02 03:44:54', '2019-09-02 03:44:54'),
(1426, 15, 260, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q23', 'In the given figure the if n(A)=20,n(U)=50,n(C)=10 and n(A∩B)=5 then n(B)=? \n\n[[#img34]]', 'In the given figure the if n(A)=20,n(U)=50,n(C)=10 and n(A∩B)=5 then n(B)=? <br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/23B9WIeQ00wE4pw7nsRG6le8KJWkZ1jI9HG7nYv3.jpeg\" width=\"300\" height=\"150\" />', 7, 96, 2, 6, 80, '2019-09-02 03:44:54', '2019-09-02 03:44:54'),
(1427, 15, 104, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q14', 'What is the result when you put the expression x<sup>2</sup> +10x+41 into vertex form by completing the square ?', 'What is the result when you put the expression x<sup>2</sup> +10x+41 into vertex form by completing the square ?', 7, 92, 3, 6, 51, '2019-09-02 03:44:54', '2019-09-02 03:44:54'),
(1428, 15, 70, 'Projectile motion 2', 'An adventurous cliff jumper runs horizontally off a cliff. We can ignore air resistance.\n\n[[#img27]]\n\nWhich diagram best describes the horizontal velocity vectors and trajectory during the person’s fall?\n\nAssume the origin of the coordinate system to be the cliff edge.\n\nA red dot represents a vector of zero magnitude.', 'An adventurous cliff jumper runs horizontally off a cliff. We can ignore air resistance.<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/PgCOEtvEENxNaqgGLMWLrysCTt8GwyXUqH8p2sz7.png\" width=\"200\" height=\"200\" /><br />\n<br />\nWhich diagram best describes the horizontal velocity vectors and trajectory during the person’s fall?<br />\n<br />\nAssume the origin of the coordinate system to be the cliff edge.<br />\n<br />\nA red dot represents a vector of zero magnitude.', 7, 89, 1, 6, 4, '2019-09-02 03:44:54', '2019-09-02 03:44:54'),
(1429, 15, 212, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q12', 'Which company bought android?', 'Which company bought android?', 7, 125, 1, 6, 93, '2019-09-02 03:44:54', '2019-09-02 03:44:54'),
(1430, 15, 121, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q3', 'These are additional operators used to return Boolean values.', 'These are additional operators used to return Boolean values.', 7, 95, 1, 6, 55, '2019-09-02 03:44:54', '2019-09-02 03:44:54'),
(1431, 15, 223, 'CC101 - INTRODUCTION TO COMPUTING - Q11', 'The sum of 11101 + 10111 equals ________.', 'The sum of 11101 + 10111 equals ________.', 7, 89, 2, 6, 10, '2019-09-02 03:44:54', '2019-09-02 03:44:54'),
(1432, 15, 116, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q26', 'If f(x) is an odd function, then | f(x) | is', 'If f(x) is an odd function, then | f(x) | is', 7, 92, 2, 6, 44, '2019-09-02 03:44:54', '2019-09-02 03:44:54'),
(1433, 15, 50, 'CCS102 - COMPUTER PROGRAMMING Q20', 'What happens when thread\'s yield() method is called?', 'What happens when thread\'s yield() method is called?', 7, 90, 2, 6, 28, '2019-09-02 03:44:54', '2019-09-02 03:44:54'),
(1434, 15, 246, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q22', 'Which of  the following holds Java source code for the application?', 'Which of  the following holds Java source code for the application?', 7, 125, 2, 6, 94, '2019-09-02 03:44:54', '2019-09-02 03:44:54'),
(1435, 15, 127, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q9', 'Commonly used  control to execute commansd when it is clicked.', 'Commonly used  control to execute commansd when it is clicked.', 7, 95, 1, 6, 60, '2019-09-02 03:44:54', '2019-09-02 03:44:54'),
(1436, 15, 286, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q30', 'The probability that an electronic device produced by a company does not function properly is equal to 0.1. If 10 devices are bought, then the probability, to the nearest thousandth, that 7 devices function properly is', 'The probability that an electronic device produced by a company does not function properly is equal to 0.1. If 10 devices are bought, then the probability, to the nearest thousandth, that 7 devices function properly is', 7, 92, 3, 6, 49, '2019-09-02 03:44:54', '2019-09-02 03:44:54'),
(1437, 15, 155, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q15', 'Let the set A is {1, 2, 3} and B is {2, 3, 4}. Then number of elements in A U B is _____.', 'Let the set A is {1, 2, 3} and B is {2, 3, 4}. Then number of elements in A U B is _____.', 7, 96, 1, 6, 69, '2019-09-02 03:44:54', '2019-09-02 03:44:54'),
(1438, 15, 1, 'Solving for basic equation - Q1', 'solve for x:\n2x + 3 = 5', 'solve for x:<br />\n2x + 3 = 5', 7, 92, 1, 6, 36, '2019-09-02 03:44:54', '2019-09-02 03:44:54'),
(1439, 15, 76, 'CCS101 - INTRODUCTION TO COMPUTING _ Q21', '_______ is a duplicate copy of data or other computer content for use in the event that the original version is destroyed.', '_______ is a duplicate copy of data or other computer content for use in the event that the original version is destroyed.', 7, 89, 2, 6, 13, '2019-09-02 03:44:54', '2019-09-02 03:44:54'),
(1440, 15, 204, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q4', 'Android supports which features.', 'Android supports which features.', 7, 125, 1, 6, 92, '2019-09-02 03:44:54', '2019-09-02 03:44:54'),
(1441, 15, 140, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q22', 'A _______ is an identifier that denotes a storage location.', 'A _______ is an identifier that denotes a storage location.', 7, 95, 2, 6, 63, '2019-09-02 03:44:54', '2019-09-02 03:44:54'),
(1442, 15, 112, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q22', 'A school committee consists of 2 teachers and 4 students. The number of different committees that can be formed from 5 teachers and 10 students is', 'A school committee consists of 2 teachers and 4 students. The number of different committees that can be formed from 5 teachers and 10 students is', 7, 92, 1, 6, 42, '2019-09-02 03:44:55', '2019-09-02 03:44:55'),
(1443, 15, 220, 'Computer Hardware - Q2', 'An input device that reads printed text and graphics and transfers them to a computer in digital form.', 'An input device that reads printed text and graphics and transfers them to a computer in digital form.', 7, 89, 1, 6, 7, '2019-09-02 03:44:55', '2019-09-02 03:44:55'),
(1444, 15, 267, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q30', 'A floor function map a real number to :', 'A floor function map a real number to :', 7, 96, 3, 6, 84, '2019-09-02 03:44:55', '2019-09-02 03:44:55'),
(1445, 15, 126, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q8', 'A control used to show a list of strings which you can select.', 'A control used to show a list of strings which you can select.', 7, 95, 1, 6, 56, '2019-09-02 03:44:55', '2019-09-02 03:44:55'),
(1446, 15, 156, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q16', 'If A has 4 elements B has 8 elements then the minimum and maximum number of elements in A U B are respectively', 'If A has 4 elements B has 8 elements then the minimum and maximum number of elements in A U B are respectively', 7, 96, 1, 6, 75, '2019-09-02 03:44:55', '2019-09-02 03:44:55'),
(1447, 15, 38, 'CCS102 - COMPUTER PROGRAMMING 1 - Q8', 'Which of the following is true about try block in C#?', 'Which of the following is true about try block in C#?', 7, 90, 1, 6, 19, '2019-09-02 03:44:55', '2019-09-02 03:44:55'),
(1448, 15, 150, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q10', 'The intersection of the sets {1, 2, 5} and {1, 2, 6} is the set _____________.', 'The intersection of the sets {1, 2, 5} and {1, 2, 6} is the set _____________.', 7, 96, 1, 6, 74, '2019-09-02 03:44:55', '2019-09-02 03:44:55'),
(1449, 15, 160, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q20', 'The shaded area of figure is best described by\n\n[[#img32]]', 'The shaded area of figure is best described by<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/5iL0Nsol7VkygnPftlQm5guoA5NqiGISBGevRke8.jpeg\" width=\"300\" height=\"150\" />', 7, 96, 3, 6, 83, '2019-09-02 03:44:55', '2019-09-02 03:44:55'),
(1450, 15, 202, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q2', 'What is android?', 'What is android?', 7, 125, 1, 6, 86, '2019-09-02 03:44:55', '2019-09-02 03:44:55'),
(1451, 15, 285, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q29', 'The period of 2 sin x cos x is', 'The period of 2 sin x cos x is', 7, 92, 1, 6, 35, '2019-09-02 03:44:55', '2019-09-02 03:44:55'),
(1452, 15, 289, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q33', 'A number of the form 213ab, where a and b are digits, has a reminder less than 10 when divided by 100. The sum of all the digits in the above number is equal to 13. Find the digit b.', 'A number of the form 213ab, where a and b are digits, has a reminder less than 10 when divided by 100. The sum of all the digits in the above number is equal to 13. Find the digit b.', 7, 92, 1, 6, 43, '2019-09-02 03:44:55', '2019-09-02 03:44:55'),
(1453, 15, 93, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q3', 'If 2x - 8 ≥ 2, then', 'If 2x - 8 ≥ 2, then', 7, 92, 1, 6, 39, '2019-09-02 03:44:55', '2019-09-02 03:44:55'),
(1454, 15, 138, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q20', 'A method_____an exception when that method detects that a problem has occured.', 'A method_____an exception when that method detects that a problem has occured.', 7, 95, 2, 6, 65, '2019-09-02 03:44:55', '2019-09-02 03:44:55'),
(1455, 15, 278, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q27', 'What will be the output of the following code?\n\n[[#code28]]', 'What will be the output of the following code?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">csharp</span></div><pre><code class=\"language-csharp\">try<br />\n{<br />\n  int num = 100;<br />\n  int den = 0;<br />\n  try<br />\n  {<br />\n    MessageBox.Show(\"Message1\");<br />\n    int res = num/den;<br />\n    MessageBox.Show(\"Message2\");<br />\n  }<br />\n  catch(ArithmeticException ae)<br />\n  {<br />\n    MessageBox.Show(\"Message3\");<br />\n  }<br />\n  MessageBox.Show(\"Message4\");<br />\n}</code></pre>', 7, 95, 3, 6, 68, '2019-09-02 03:44:55', '2019-09-02 03:44:55'),
(1456, 15, 252, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q28', 'What is bean class in android?', 'What is bean class in android?', 7, 125, 3, 6, 99, '2019-09-02 03:44:55', '2019-09-02 03:44:55'),
(1457, 15, 58, 'CCS102 - COMPUTER PROGRAMMING 1 Q28', 'What is the output of this program?\n\n[[#code22]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class array_output <br />\n    {<br />\n        public static void main(String args[]) <br />\n        {<br />\n            int array_variable [] = new int[10];<br />\n	    for (int i = 0; i < 10; ++i) <br />\n            {<br />\n                array_variable[i] = i;<br />\n                System.out.print(array_variable[i] + \" \");<br />\n                i++;<br />\n            }<br />\n        } <br />\n    }</code></pre>', 7, 90, 3, 6, 33, '2019-09-02 03:44:55', '2019-09-02 03:44:55'),
(1458, 15, 225, 'CCS101 - INTRODUCTION TO COMPUTING - Q7', 'Converting (1010111)<sub>2</sub> to base yields which of the following results?', 'Converting (1010111)<sub>2</sub> to base yields which of the following results?', 7, 89, 2, 6, 11, '2019-09-02 03:44:55', '2019-09-02 03:44:55'),
(1459, 15, 205, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q5', 'For ___________, code used by Android is not open source.', 'For ___________, code used by Android is not open source.', 7, 125, 1, 6, 90, '2019-09-02 03:44:55', '2019-09-02 03:44:55'),
(1460, 15, 270, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q33', 'In the given AP series the term at position 11 would be\n5, 8, 11, 14, 17, 20………50.', 'In the given AP series the term at position 11 would be<br />\n5, 8, 11, 14, 17, 20………50.', 7, 96, 3, 6, 82, '2019-09-02 03:44:55', '2019-09-02 03:44:55'),
(1461, 15, 52, 'CCS102 - COMPUTER PROGRAMMING 1 Q22', 'What is the output of this program?\n\n[[#code19]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class box <br />\n    {<br />\n        int width;<br />\n        int height;<br />\n        int length;<br />\n    } <br />\n    class mainclass <br />\n    {<br />\n        public static void main(String args[]) <br />\n        {        <br />\n             box obj = new box();<br />\n             obj.width = 10;<br />\n             obj.height = 2;<br />\n             obj.length = 10;<br />\n             int y = obj.width * obj.height * obj.length; <br />\n             System.out.print(y);<br />\n        } <br />\n    }</code></pre>', 7, 90, 3, 6, 32, '2019-09-02 03:44:55', '2019-09-02 03:44:55'),
(1462, 15, 79, 'CCS101 - INTRODUCTION TO COMPUTING -Q18', 'Which of the following is/are not part of the CPU?', 'Which of the following is/are not part of the CPU?', 7, 89, 3, 6, 16, '2019-09-02 03:44:55', '2019-09-02 03:44:55'),
(1463, 15, 87, 'CCS101 - INTRODUCTION TO COMPUTING - Q8', '____________ are the four general operations that are performed in each machine cycle.', '____________ are the four general operations that are performed in each machine cycle.', 7, 89, 2, 6, 14, '2019-09-02 03:44:55', '2019-09-02 03:44:55'),
(1464, 15, 111, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q21', 'For x greater than or equal to zero and less than or equal to 2 π, sin x and cos x are both decreasing on the intervals', 'For x greater than or equal to zero and less than or equal to 2 π, sin x and cos x are both decreasing on the intervals', 7, 92, 2, 6, 47, '2019-09-02 03:44:55', '2019-09-02 03:44:55'),
(1465, 15, 31, 'Order of operation - Q1', 'What is the output of the following code?\n\n[[#code14]]', 'What is the output of the following code?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">double x = 2;<br />\ndouble y = 3;<br />\ndouble z = 5;<br />\n<br />\ndouble output = x + x * y + (x + 2 * z);<br />\n<br />\nSystem.out.println(output);</code></pre>', 7, 90, 1, 6, 20, '2019-09-02 03:44:55', '2019-09-02 03:44:55'),
(1466, 15, 41, 'CCS102 - COMPUTER PROGRAMMING 1 Q11', 'What is correct syntax for main method of a java class?', 'What is correct syntax for main method of a java class?', 7, 90, 1, 6, 24, '2019-09-02 03:44:55', '2019-09-02 03:44:55'),
(1467, 15, 243, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q19', 'Android provides a few standard themes, listed in ________.', 'Android provides a few standard themes, listed in ________.', 7, 125, 2, 6, 96, '2019-09-02 03:44:55', '2019-09-02 03:44:55'),
(1468, 15, 129, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q11', 'A control similar to an ordinary label having an underline and resembles a link on a web page.', 'A control similar to an ordinary label having an underline and resembles a link on a web page.', 7, 95, 1, 6, 54, '2019-09-02 03:44:55', '2019-09-02 03:44:55'),
(1469, 15, 254, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q30', 'What is an HTTP client class in android?', 'What is an HTTP client class in android?', 7, 125, 3, 6, 100, '2019-09-02 03:44:55', '2019-09-02 03:44:55'),
(1470, 15, 40, 'CCS102 - COMPUTER PROGRAMMING 1 Q10', 'Static binding uses which information for binding?', 'Static binding uses which information for binding?', 7, 90, 1, 6, 23, '2019-09-02 03:44:55', '2019-09-02 03:44:55'),
(1471, 15, 214, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q14', 'Android is based on which kernel?', 'Android is based on which kernel?', 7, 125, 1, 6, 89, '2019-09-02 03:44:55', '2019-09-02 03:44:55'),
(1472, 15, 244, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q20', 'To update contents of content provider using curser and commit you need to call _______________.', 'To update contents of content provider using curser and commit you need to call _______________.', 7, 125, 2, 6, 95, '2019-09-02 03:44:55', '2019-09-02 03:44:55'),
(1473, 15, 277, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q26', 'Which of the following will result from compiling this code, assuming that all other code for your form works properly?\n\n[[#code27]]', 'Which of the following will result from compiling this code, assuming that all other code for your form works properly?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">csharp</span></div><pre><code class=\"language-csharp\">try<br />\n{<br />\n  //Write code to allocate some resources<br />\n}<br />\nfinally<br />\n{<br />\n  //Write code to Dispose all allocated resources<br />\n}</code></pre>', 7, 95, 3, 6, 66, '2019-09-02 03:44:55', '2019-09-02 03:44:55'),
(1474, 15, 211, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q11', 'Web browser available in android based on', 'Web browser available in android based on', 7, 125, 1, 6, 85, '2019-09-02 03:44:55', '2019-09-02 03:44:55'),
(1475, 15, 162, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q22', 'If n(A)=10 , n(B)=30,n(C)=50 and if set A,B,C are pairwise disjoint then which of the following is correct?', 'If n(A)=10 , n(B)=30,n(C)=50 and if set A,B,C are pairwise disjoint then which of the following is correct?', 7, 96, 2, 6, 79, '2019-09-02 03:44:55', '2019-09-02 03:44:55'),
(1476, 15, 144, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q4', 'What is the cardinality of the set of odd positive integers less than 10?', 'What is the cardinality of the set of odd positive integers less than 10?', 7, 96, 1, 6, 71, '2019-09-02 03:44:55', '2019-09-02 03:44:55'),
(1477, 15, 68, 'Describing two-dimensional motion with vectors', 'A golfer hits a golf ball upwards at an angle of 75°, degree with the horizontal. We can ignore air resistance.\n\n[[#img22]]\n\nWhich graph best describes the golf ball\'s vertical displacement over time?\n\nAssume the origin of the coordinate system to be the point on the ground where the ball was initially at rest.', 'A golfer hits a golf ball upwards at an angle of 75°, degree with the horizontal. We can ignore air resistance.<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/MYpfYGJo93eMWxPVag4ii0jWIwamFw8EKp4yFlbj.png\" width=\"300\" height=\"150\" /><br />\n<br />\nWhich graph best describes the golf ball\'s vertical displacement over time?<br />\n<br />\nAssume the origin of the coordinate system to be the point on the ground where the ball was initially at rest.', 7, 89, 1, 6, 3, '2019-09-02 03:44:55', '2019-09-02 03:44:55'),
(1478, 15, 95, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q5', 'What is the square root of -144?', 'What is the square root of -144?', 7, 92, 1, 6, 38, '2019-09-02 03:44:55', '2019-09-02 03:44:55'),
(1479, 15, 78, 'CCS101 - INTRODUCTION TO COMPUTING -  Q19', 'This coding system is designed to support international languages like Chinese and Japanese.', 'This coding system is designed to support international languages like Chinese and Japanese.', 7, 89, 3, 6, 17, '2019-09-02 03:44:55', '2019-09-02 03:44:55'),
(1480, 15, 131, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q13', 'A method of MessageBox class that allows you to call a message box for prompting user with messages and information.', 'A method of MessageBox class that allows you to call a message box for prompting user with messages and information.', 7, 95, 1, 6, 59, '2019-09-02 03:44:56', '2019-09-02 03:44:56'),
(1481, 15, 215, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q15', 'Which is the latest mobile version of android?', 'Which is the latest mobile version of android?', 7, 125, 1, 6, 91, '2019-09-02 03:44:56', '2019-09-02 03:44:56'),
(1482, 15, 61, 'CCS102 - COMPUTER PROGRAMMING 1 Q31', 'Where is array stored in memory?', 'Where is array stored in memory?', 7, 90, 2, 6, 31, '2019-09-02 03:44:56', '2019-09-02 03:44:56'),
(1483, 15, 142, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q2', 'The set O of odd positive integers less than 10 can be expressed by _____________.', 'The set O of odd positive integers less than 10 can be expressed by _____________.', 7, 96, 1, 6, 76, '2019-09-02 03:44:56', '2019-09-02 03:44:56'),
(1484, 15, 66, 'Binary to decimal conversion 1', 'Convert 10100011 from binary to decimal.', 'Convert 10100011 from binary to decimal.', 7, 89, 1, 6, 8, '2019-09-02 03:44:56', '2019-09-02 03:44:56'),
(1485, 15, 113, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q23', 'Five different books (A, B, C, D and E) are to be arranged on a shelf. Books C and D are to be arranged first and second starting from the right of the shelf. The number of different orders in which books A, B and E may be arranged is', 'Five different books (A, B, C, D and E) are to be arranged on a shelf. Books C and D are to be arranged first and second starting from the right of the shelf. The number of different orders in which books A, B and E may be arranged is', 7, 92, 2, 6, 48, '2019-09-02 03:44:56', '2019-09-02 03:44:56'),
(1486, 15, 149, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q9', 'The union of the sets {1, 2, 5} and {1, 2, 6} is the set _______________.', 'The union of the sets {1, 2, 5} and {1, 2, 6} is the set _______________.', 7, 96, 2, 6, 81, '2019-09-02 03:44:56', '2019-09-02 03:44:56'),
(1487, 15, 143, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q3', 'Power set of empty set has exactly _________ subset.', 'Power set of empty set has exactly _________ subset.', 7, 96, 1, 6, 77, '2019-09-02 03:44:56', '2019-09-02 03:44:56'),
(1488, 15, 145, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q5', 'What is the Cartesian product of A = {1, 2} and B = {a, b}?', 'What is the Cartesian product of A = {1, 2} and B = {a, b}?', 7, 96, 2, 6, 78, '2019-09-02 03:44:56', '2019-09-02 03:44:56'),
(1489, 15, 219, 'Computer Hardware - Q3', 'A device that enables a computer to communicate over telephone lines.', 'A device that enables a computer to communicate over telephone lines.', 7, 89, 1, 6, 1, '2019-09-02 03:44:56', '2019-09-02 03:44:56'),
(1490, 15, 89, 'CCS101 - INTRODUCTION TO COMPUTING - Q5', 'A memory management technique that uses hard drive space as additional RAM.', 'A memory management technique that uses hard drive space as additional RAM.', 7, 89, 1, 6, 2, '2019-09-02 03:44:56', '2019-09-02 03:44:56'),
(1491, 15, 132, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q14', 'C# treats the multiple catch statements like cases in a _____________ statement.', 'C# treats the multiple catch statements like cases in a _____________ statement.', 7, 95, 1, 6, 58, '2019-09-02 03:44:56', '2019-09-02 03:44:56'),
(1492, 15, 151, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q11', 'Two sets are called disjoint if there _____________ is the empty set.', 'Two sets are called disjoint if there _____________ is the empty set.', 7, 96, 1, 6, 73, '2019-09-02 03:44:56', '2019-09-02 03:44:56'),
(1493, 15, 34, 'IT01- CCS102 - COMPUTER PROGRAMMING 1 - Q4', 'Which of the following operator returns the size of a data type in C#?', 'Which of the following operator returns the size of a data type in C#?', 7, 90, 1, 6, 22, '2019-09-02 03:44:56', '2019-09-02 03:44:56'),
(1494, 15, 275, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q24', 'How should you arrange catch blocks?', 'How should you arrange catch blocks?', 7, 95, 2, 6, 64, '2019-09-02 03:44:56', '2019-09-02 03:44:56'),
(1495, 15, 147, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q7', 'The set of positive integers is _____________.', 'The set of positive integers is _____________.', 7, 96, 1, 6, 70, '2019-09-02 03:44:56', '2019-09-02 03:44:56'),
(1496, 15, 77, 'CCS101 - INTRODUCTION TO COMPUTING - Q20', 'A programming error that occurs when running a program produces incorrect results.', 'A programming error that occurs when running a program produces incorrect results.', 7, 89, 1, 6, 9, '2019-09-02 03:44:56', '2019-09-02 03:44:56'),
(1497, 15, 82, 'CCS101 - INTRODUCTION TO COMPUTING - Q15', '10111 is the two\'s complement representation of', '10111 is the two\'s complement representation of', 7, 89, 1, 6, 5, '2019-09-02 03:44:56', '2019-09-02 03:44:56'),
(1498, 15, 32, 'CCS102 - COMPUTER PROGRAMMING 1 - Q2', 'Which of the following is a reserved keyword in C#?', 'Which of the following is a reserved keyword in C#?', 7, 90, 1, 6, 21, '2019-09-02 03:44:56', '2019-09-02 03:44:56'),
(1499, 15, 207, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q7', 'ABD stands for', 'ABD stands for', 7, 125, 1, 6, 88, '2019-09-02 03:44:56', '2019-09-02 03:44:56'),
(1500, 15, 137, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q19', 'Polymorphism occurs when the methods of the child class.', 'Polymorphism occurs when the methods of the child class.', 7, 95, 2, 6, 62, '2019-09-02 03:44:56', '2019-09-02 03:44:56'),
(1501, 16, 219, 'Computer Hardware - Q3', 'A device that enables a computer to communicate over telephone lines.', 'A device that enables a computer to communicate over telephone lines.', 7, 89, 1, 6, 1, '2019-09-02 04:02:40', '2019-09-02 04:02:40'),
(1502, 16, 74, 'CCS101 - INTRODUCTION TO COMPUTING - Q23', 'An electronic tool that allows information to be input, processed, and output.', 'An electronic tool that allows information to be input, processed, and output.', 7, 89, 1, 6, 6, '2019-09-02 04:02:40', '2019-09-02 04:02:40'),
(1503, 16, 126, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q8', 'A control used to show a list of strings which you can select.', 'A control used to show a list of strings which you can select.', 7, 95, 1, 6, 56, '2019-09-02 04:02:40', '2019-09-02 04:02:40'),
(1504, 16, 254, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q30', 'What is an HTTP client class in android?', 'What is an HTTP client class in android?', 7, 125, 3, 6, 100, '2019-09-02 04:02:40', '2019-09-02 04:02:40'),
(1505, 16, 1, 'Solving for basic equation - Q1', 'solve for x:\n2x + 3 = 5', 'solve for x:<br />\n2x + 3 = 5', 7, 92, 1, 6, 36, '2019-09-02 04:02:41', '2019-09-02 04:02:41'),
(1506, 16, 122, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q4', 'These operators take two operands, such as arithmetic operators (+,-,*,/).', 'These operators take two operands, such as arithmetic operators (+,-,*,/).', 7, 95, 1, 6, 53, '2019-09-02 04:02:41', '2019-09-02 04:02:41'),
(1507, 16, 121, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q3', 'These are additional operators used to return Boolean values.', 'These are additional operators used to return Boolean values.', 7, 95, 1, 6, 55, '2019-09-02 04:02:41', '2019-09-02 04:02:41'),
(1508, 16, 275, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q24', 'How should you arrange catch blocks?', 'How should you arrange catch blocks?', 7, 95, 2, 6, 64, '2019-09-02 04:02:41', '2019-09-02 04:02:41'),
(1509, 16, 205, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q5', 'For ___________, code used by Android is not open source.', 'For ___________, code used by Android is not open source.', 7, 125, 1, 6, 90, '2019-09-02 04:02:41', '2019-09-02 04:02:41'),
(1510, 16, 267, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q30', 'A floor function map a real number to :', 'A floor function map a real number to :', 7, 96, 3, 6, 84, '2019-09-02 04:02:41', '2019-09-02 04:02:41'),
(1511, 16, 156, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q16', 'If A has 4 elements B has 8 elements then the minimum and maximum number of elements in A U B are respectively', 'If A has 4 elements B has 8 elements then the minimum and maximum number of elements in A U B are respectively', 7, 96, 1, 6, 75, '2019-09-02 04:02:41', '2019-09-02 04:02:41'),
(1512, 16, 286, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q30', 'The probability that an electronic device produced by a company does not function properly is equal to 0.1. If 10 devices are bought, then the probability, to the nearest thousandth, that 7 devices function properly is', 'The probability that an electronic device produced by a company does not function properly is equal to 0.1. If 10 devices are bought, then the probability, to the nearest thousandth, that 7 devices function properly is', 7, 92, 3, 6, 49, '2019-09-02 04:02:41', '2019-09-02 04:02:41'),
(1513, 16, 246, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q22', 'Which of  the following holds Java source code for the application?', 'Which of  the following holds Java source code for the application?', 7, 125, 2, 6, 94, '2019-09-02 04:02:41', '2019-09-02 04:02:41'),
(1514, 16, 87, 'CCS101 - INTRODUCTION TO COMPUTING - Q8', '____________ are the four general operations that are performed in each machine cycle.', '____________ are the four general operations that are performed in each machine cycle.', 7, 89, 2, 6, 14, '2019-09-02 04:02:41', '2019-09-02 04:02:41'),
(1515, 16, 107, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q17', 'If Log <sub>4 </sub>(x) = 12, then log 2 (x / 4) is equal to', 'If Log <sub>4 </sub>(x) = 12, then log 2 (x / 4) is equal to', 7, 92, 1, 6, 40, '2019-09-02 04:02:41', '2019-09-02 04:02:41');
INSERT INTO `answer_sheet_test_questions` (`id`, `answer_sheet_id`, `test_question_id`, `title`, `body`, `body_html`, `student_outcome_id`, `course_id`, `difficulty_level_id`, `performance_criteria_id`, `pos_order`, `created_at`, `updated_at`) VALUES
(1516, 16, 270, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q33', 'In the given AP series the term at position 11 would be\n5, 8, 11, 14, 17, 20………50.', 'In the given AP series the term at position 11 would be<br />\n5, 8, 11, 14, 17, 20………50.', 7, 96, 3, 6, 82, '2019-09-02 04:02:41', '2019-09-02 04:02:41'),
(1517, 16, 114, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q24', 'The mean of a data set is equal to 10 and its standard deviation is equal to 1. If we add 5 to each data value, then the mean and standard deviation become', 'The mean of a data set is equal to 10 and its standard deviation is equal to 1. If we add 5 to each data value, then the mean and standard deviation become', 7, 92, 2, 6, 45, '2019-09-02 04:02:41', '2019-09-02 04:02:41'),
(1518, 16, 61, 'CCS102 - COMPUTER PROGRAMMING 1 Q31', 'Where is array stored in memory?', 'Where is array stored in memory?', 7, 90, 2, 6, 31, '2019-09-02 04:02:41', '2019-09-02 04:02:41'),
(1519, 16, 32, 'CCS102 - COMPUTER PROGRAMMING 1 - Q2', 'Which of the following is a reserved keyword in C#?', 'Which of the following is a reserved keyword in C#?', 7, 90, 1, 6, 21, '2019-09-02 04:02:41', '2019-09-02 04:02:41'),
(1520, 16, 214, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q14', 'Android is based on which kernel?', 'Android is based on which kernel?', 7, 125, 1, 6, 89, '2019-09-02 04:02:41', '2019-09-02 04:02:41'),
(1521, 16, 97, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q7', 'The expression (3i - 2)(i + 1) - 7 can be simplified to which of the following expressions?', 'The expression (3i - 2)(i + 1) - 7 can be simplified to which of the following expressions?', 7, 92, 2, 6, 46, '2019-09-02 04:02:41', '2019-09-02 04:02:41'),
(1522, 16, 225, 'CCS101 - INTRODUCTION TO COMPUTING - Q7', 'Converting (1010111)<sub>2</sub> to base yields which of the following results?', 'Converting (1010111)<sub>2</sub> to base yields which of the following results?', 7, 89, 2, 6, 11, '2019-09-02 04:02:41', '2019-09-02 04:02:41'),
(1523, 16, 124, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q6', 'This data type stores the address of the value which means that they refer to a memory location.', 'This data type stores the address of the value which means that they refer to a memory location.', 7, 95, 1, 6, 52, '2019-09-02 04:02:41', '2019-09-02 04:02:41'),
(1524, 16, 42, 'CCS102 - COMPUTER PROGRAMMING 1 Q12', 'Which of the following is not a keyword in java?', 'Which of the following is not a keyword in java?', 7, 90, 1, 6, 18, '2019-09-02 04:02:41', '2019-09-02 04:02:41'),
(1525, 16, 41, 'CCS102 - COMPUTER PROGRAMMING 1 Q11', 'What is correct syntax for main method of a java class?', 'What is correct syntax for main method of a java class?', 7, 90, 1, 6, 24, '2019-09-02 04:02:41', '2019-09-02 04:02:41'),
(1526, 16, 138, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q20', 'A method_____an exception when that method detects that a problem has occured.', 'A method_____an exception when that method detects that a problem has occured.', 7, 95, 2, 6, 65, '2019-09-02 04:02:41', '2019-09-02 04:02:41'),
(1527, 16, 162, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q22', 'If n(A)=10 , n(B)=30,n(C)=50 and if set A,B,C are pairwise disjoint then which of the following is correct?', 'If n(A)=10 , n(B)=30,n(C)=50 and if set A,B,C are pairwise disjoint then which of the following is correct?', 7, 96, 2, 6, 79, '2019-09-02 04:02:41', '2019-09-02 04:02:41'),
(1528, 16, 95, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q5', 'What is the square root of -144?', 'What is the square root of -144?', 7, 92, 1, 6, 38, '2019-09-02 04:02:41', '2019-09-02 04:02:41'),
(1529, 16, 150, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q10', 'The intersection of the sets {1, 2, 5} and {1, 2, 6} is the set _____________.', 'The intersection of the sets {1, 2, 5} and {1, 2, 6} is the set _____________.', 7, 96, 1, 6, 74, '2019-09-02 04:02:41', '2019-09-02 04:02:41'),
(1530, 16, 112, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q22', 'A school committee consists of 2 teachers and 4 students. The number of different committees that can be formed from 5 teachers and 10 students is', 'A school committee consists of 2 teachers and 4 students. The number of different committees that can be formed from 5 teachers and 10 students is', 7, 92, 1, 6, 42, '2019-09-02 04:02:41', '2019-09-02 04:02:41'),
(1531, 16, 82, 'CCS101 - INTRODUCTION TO COMPUTING - Q15', '10111 is the two\'s complement representation of', '10111 is the two\'s complement representation of', 7, 89, 1, 6, 5, '2019-09-02 04:02:41', '2019-09-02 04:02:41'),
(1532, 16, 277, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q26', 'Which of the following will result from compiling this code, assuming that all other code for your form works properly?\n\n[[#code27]]', 'Which of the following will result from compiling this code, assuming that all other code for your form works properly?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">csharp</span></div><pre><code class=\"language-csharp\">try<br />\n{<br />\n  //Write code to allocate some resources<br />\n}<br />\nfinally<br />\n{<br />\n  //Write code to Dispose all allocated resources<br />\n}</code></pre>', 7, 95, 3, 6, 66, '2019-09-02 04:02:41', '2019-09-02 04:02:41'),
(1533, 16, 248, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q24', 'What is the use of content provider in android?', 'What is the use of content provider in android?', 7, 125, 2, 6, 97, '2019-09-02 04:02:41', '2019-09-02 04:02:41'),
(1534, 16, 256, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q32', 'What is the difference between content values and cursor in android SQlite?', 'What is the difference between content values and cursor in android SQlite?', 7, 125, 3, 6, 98, '2019-09-02 04:02:41', '2019-09-02 04:02:41'),
(1535, 16, 129, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q11', 'A control similar to an ordinary label having an underline and resembles a link on a web page.', 'A control similar to an ordinary label having an underline and resembles a link on a web page.', 7, 95, 1, 6, 54, '2019-09-02 04:02:42', '2019-09-02 04:02:42'),
(1536, 16, 51, 'CCS102 - COMPUTER PROGRAMMING 1 Q21', 'What is the output of this program?\n\n[[#code18]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class main_class <br />\n    {<br />\n        public static void main(String args[])<br />\n        {<br />\n            int x = 9;<br />\n            if (x == 9) <br />\n            { <br />\n                int x = 8;<br />\n                System.out.println(x);<br />\n            }<br />\n        } <br />\n    }</code></pre>', 7, 90, 2, 6, 27, '2019-09-02 04:02:42', '2019-09-02 04:02:42'),
(1537, 16, 147, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q7', 'The set of positive integers is _____________.', 'The set of positive integers is _____________.', 7, 96, 1, 6, 70, '2019-09-02 04:02:42', '2019-09-02 04:02:42'),
(1538, 16, 66, 'Binary to decimal conversion 1', 'Convert 10100011 from binary to decimal.', 'Convert 10100011 from binary to decimal.', 7, 89, 1, 6, 8, '2019-09-02 04:02:42', '2019-09-02 04:02:42'),
(1539, 16, 68, 'Describing two-dimensional motion with vectors', 'A golfer hits a golf ball upwards at an angle of 75°, degree with the horizontal. We can ignore air resistance.\n\n[[#img22]]\n\nWhich graph best describes the golf ball\'s vertical displacement over time?\n\nAssume the origin of the coordinate system to be the point on the ground where the ball was initially at rest.', 'A golfer hits a golf ball upwards at an angle of 75°, degree with the horizontal. We can ignore air resistance.<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/MYpfYGJo93eMWxPVag4ii0jWIwamFw8EKp4yFlbj.png\" width=\"300\" height=\"150\" /><br />\n<br />\nWhich graph best describes the golf ball\'s vertical displacement over time?<br />\n<br />\nAssume the origin of the coordinate system to be the point on the ground where the ball was initially at rest.', 7, 89, 1, 6, 3, '2019-09-02 04:02:42', '2019-09-02 04:02:42'),
(1540, 16, 285, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q29', 'The period of 2 sin x cos x is', 'The period of 2 sin x cos x is', 7, 92, 1, 6, 35, '2019-09-02 04:02:42', '2019-09-02 04:02:42'),
(1541, 16, 155, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q15', 'Let the set A is {1, 2, 3} and B is {2, 3, 4}. Then number of elements in A U B is _____.', 'Let the set A is {1, 2, 3} and B is {2, 3, 4}. Then number of elements in A U B is _____.', 7, 96, 1, 6, 69, '2019-09-02 04:02:42', '2019-09-02 04:02:42'),
(1542, 16, 89, 'CCS101 - INTRODUCTION TO COMPUTING - Q5', 'A memory management technique that uses hard drive space as additional RAM.', 'A memory management technique that uses hard drive space as additional RAM.', 7, 89, 1, 6, 2, '2019-09-02 04:02:42', '2019-09-02 04:02:42'),
(1543, 16, 52, 'CCS102 - COMPUTER PROGRAMMING 1 Q22', 'What is the output of this program?\n\n[[#code19]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class box <br />\n    {<br />\n        int width;<br />\n        int height;<br />\n        int length;<br />\n    } <br />\n    class mainclass <br />\n    {<br />\n        public static void main(String args[]) <br />\n        {        <br />\n             box obj = new box();<br />\n             obj.width = 10;<br />\n             obj.height = 2;<br />\n             obj.length = 10;<br />\n             int y = obj.width * obj.height * obj.length; <br />\n             System.out.print(y);<br />\n        } <br />\n    }</code></pre>', 7, 90, 3, 6, 32, '2019-09-02 04:02:42', '2019-09-02 04:02:42'),
(1544, 16, 132, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q14', 'C# treats the multiple catch statements like cases in a _____________ statement.', 'C# treats the multiple catch statements like cases in a _____________ statement.', 7, 95, 1, 6, 58, '2019-09-02 04:02:42', '2019-09-02 04:02:42'),
(1545, 16, 57, 'CCS102 - COMPUTER PROGRAMMING 1 Q27', 'Which of these is necessary to specify at time of array initialization?', 'Which of these is necessary to specify at time of array initialization?', 7, 90, 2, 6, 30, '2019-09-02 04:02:42', '2019-09-02 04:02:42'),
(1546, 16, 111, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q21', 'For x greater than or equal to zero and less than or equal to 2 π, sin x and cos x are both decreasing on the intervals', 'For x greater than or equal to zero and less than or equal to 2 π, sin x and cos x are both decreasing on the intervals', 7, 92, 2, 6, 47, '2019-09-02 04:02:42', '2019-09-02 04:02:42'),
(1547, 16, 39, 'CCS102 - COMPUTER PROGRAMMING 1 Q9', 'What of the following is the default value of an instance variable?', 'What of the following is the default value of an instance variable?', 7, 90, 1, 6, 25, '2019-09-02 04:02:42', '2019-09-02 04:02:42'),
(1548, 16, 243, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q19', 'Android provides a few standard themes, listed in ________.', 'Android provides a few standard themes, listed in ________.', 7, 125, 2, 6, 96, '2019-09-02 04:02:42', '2019-09-02 04:02:42'),
(1549, 16, 260, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q23', 'In the given figure the if n(A)=20,n(U)=50,n(C)=10 and n(A∩B)=5 then n(B)=? \n\n[[#img34]]', 'In the given figure the if n(A)=20,n(U)=50,n(C)=10 and n(A∩B)=5 then n(B)=? <br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/23B9WIeQ00wE4pw7nsRG6le8KJWkZ1jI9HG7nYv3.jpeg\" width=\"300\" height=\"150\" />', 7, 96, 2, 6, 80, '2019-09-02 04:02:42', '2019-09-02 04:02:42'),
(1550, 16, 116, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q26', 'If f(x) is an odd function, then | f(x) | is', 'If f(x) is an odd function, then | f(x) | is', 7, 92, 2, 6, 44, '2019-09-02 04:02:42', '2019-09-02 04:02:42'),
(1551, 16, 202, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q2', 'What is android?', 'What is android?', 7, 125, 1, 6, 86, '2019-09-02 04:02:42', '2019-09-02 04:02:42'),
(1552, 16, 142, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q2', 'The set O of odd positive integers less than 10 can be expressed by _____________.', 'The set O of odd positive integers less than 10 can be expressed by _____________.', 7, 96, 1, 6, 76, '2019-09-02 04:02:42', '2019-09-02 04:02:42'),
(1553, 16, 76, 'CCS101 - INTRODUCTION TO COMPUTING _ Q21', '_______ is a duplicate copy of data or other computer content for use in the event that the original version is destroyed.', '_______ is a duplicate copy of data or other computer content for use in the event that the original version is destroyed.', 7, 89, 2, 6, 13, '2019-09-02 04:02:42', '2019-09-02 04:02:42'),
(1554, 16, 93, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q3', 'If 2x - 8 ≥ 2, then', 'If 2x - 8 ≥ 2, then', 7, 92, 1, 6, 39, '2019-09-02 04:02:42', '2019-09-02 04:02:42'),
(1555, 16, 77, 'CCS101 - INTRODUCTION TO COMPUTING - Q20', 'A programming error that occurs when running a program produces incorrect results.', 'A programming error that occurs when running a program produces incorrect results.', 7, 89, 1, 6, 9, '2019-09-02 04:02:42', '2019-09-02 04:02:42'),
(1556, 16, 127, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q9', 'Commonly used  control to execute commansd when it is clicked.', 'Commonly used  control to execute commansd when it is clicked.', 7, 95, 1, 6, 60, '2019-09-02 04:02:42', '2019-09-02 04:02:42'),
(1557, 16, 148, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q8', 'What is the Cardinality of the Power set of the set {0, 1, 2}.', 'What is the Cardinality of the Power set of the set {0, 1, 2}.', 7, 96, 1, 6, 72, '2019-09-02 04:02:42', '2019-09-02 04:02:42'),
(1558, 16, 40, 'CCS102 - COMPUTER PROGRAMMING 1 Q10', 'Static binding uses which information for binding?', 'Static binding uses which information for binding?', 7, 90, 1, 6, 23, '2019-09-02 04:02:42', '2019-09-02 04:02:42'),
(1559, 16, 79, 'CCS101 - INTRODUCTION TO COMPUTING -Q18', 'Which of the following is/are not part of the CPU?', 'Which of the following is/are not part of the CPU?', 7, 89, 3, 6, 16, '2019-09-02 04:02:42', '2019-09-02 04:02:42'),
(1560, 16, 34, 'IT01- CCS102 - COMPUTER PROGRAMMING 1 - Q4', 'Which of the following operator returns the size of a data type in C#?', 'Which of the following operator returns the size of a data type in C#?', 7, 90, 1, 6, 22, '2019-09-02 04:02:42', '2019-09-02 04:02:42'),
(1561, 16, 207, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q7', 'ABD stands for', 'ABD stands for', 7, 125, 1, 6, 88, '2019-09-02 04:02:42', '2019-09-02 04:02:42'),
(1562, 16, 72, 'CCS101 - INTRODUCTION TO COMPUTING - Q25', 'What type of software is a screen saver?', 'What type of software is a screen saver?', 7, 89, 2, 6, 12, '2019-09-02 04:02:42', '2019-09-02 04:02:42'),
(1563, 16, 278, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q27', 'What will be the output of the following code?\n\n[[#code28]]', 'What will be the output of the following code?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">csharp</span></div><pre><code class=\"language-csharp\">try<br />\n{<br />\n  int num = 100;<br />\n  int den = 0;<br />\n  try<br />\n  {<br />\n    MessageBox.Show(\"Message1\");<br />\n    int res = num/den;<br />\n    MessageBox.Show(\"Message2\");<br />\n  }<br />\n  catch(ArithmeticException ae)<br />\n  {<br />\n    MessageBox.Show(\"Message3\");<br />\n  }<br />\n  MessageBox.Show(\"Message4\");<br />\n}</code></pre>', 7, 95, 3, 6, 68, '2019-09-02 04:02:42', '2019-09-02 04:02:42'),
(1564, 16, 140, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q22', 'A _______ is an identifier that denotes a storage location.', 'A _______ is an identifier that denotes a storage location.', 7, 95, 2, 6, 63, '2019-09-02 04:02:42', '2019-09-02 04:02:42'),
(1565, 16, 92, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q2', 'Solve the inequality \n4x + 8 > 5x +9', 'Solve the inequality <br />\n4x + 8 > 5x +9', 7, 92, 1, 6, 37, '2019-09-02 04:02:42', '2019-09-02 04:02:42'),
(1566, 16, 145, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q5', 'What is the Cartesian product of A = {1, 2} and B = {a, b}?', 'What is the Cartesian product of A = {1, 2} and B = {a, b}?', 7, 96, 2, 6, 78, '2019-09-02 04:02:43', '2019-09-02 04:02:43'),
(1567, 16, 203, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q3', 'Android doesn\'t  support which format?', 'Android doesn\'t  support which format?', 7, 125, 1, 6, 87, '2019-09-02 04:02:43', '2019-09-02 04:02:43'),
(1568, 16, 143, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q3', 'Power set of empty set has exactly _________ subset.', 'Power set of empty set has exactly _________ subset.', 7, 96, 1, 6, 77, '2019-09-02 04:02:43', '2019-09-02 04:02:43'),
(1569, 16, 104, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q14', 'What is the result when you put the expression x<sup>2</sup> +10x+41 into vertex form by completing the square ?', 'What is the result when you put the expression x<sup>2</sup> +10x+41 into vertex form by completing the square ?', 7, 92, 3, 6, 51, '2019-09-02 04:02:43', '2019-09-02 04:02:43'),
(1570, 16, 136, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q18', 'Private Button print = new button();', 'Private Button print = new button();', 7, 95, 2, 6, 61, '2019-09-02 04:02:43', '2019-09-02 04:02:43'),
(1571, 16, 137, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q19', 'Polymorphism occurs when the methods of the child class.', 'Polymorphism occurs when the methods of the child class.', 7, 95, 2, 6, 62, '2019-09-02 04:02:43', '2019-09-02 04:02:43'),
(1572, 16, 244, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q20', 'To update contents of content provider using curser and commit you need to call _______________.', 'To update contents of content provider using curser and commit you need to call _______________.', 7, 125, 2, 6, 95, '2019-09-02 04:02:43', '2019-09-02 04:02:43'),
(1573, 16, 211, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q11', 'Web browser available in android based on', 'Web browser available in android based on', 7, 125, 1, 6, 85, '2019-09-02 04:02:43', '2019-09-02 04:02:43'),
(1574, 16, 48, 'CCS102 - COMPUTER PROGRAMMING 1 Q18', 'What is JRE?', 'What is JRE?', 7, 90, 2, 6, 29, '2019-09-02 04:02:43', '2019-09-02 04:02:43'),
(1575, 16, 144, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q4', 'What is the cardinality of the set of odd positive integers less than 10?', 'What is the cardinality of the set of odd positive integers less than 10?', 7, 96, 1, 6, 71, '2019-09-02 04:02:43', '2019-09-02 04:02:43'),
(1576, 16, 31, 'Order of operation - Q1', 'What is the output of the following code?\n\n[[#code14]]', 'What is the output of the following code?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">double x = 2;<br />\ndouble y = 3;<br />\ndouble z = 5;<br />\n<br />\ndouble output = x + x * y + (x + 2 * z);<br />\n<br />\nSystem.out.println(output);</code></pre>', 7, 90, 1, 6, 20, '2019-09-02 04:02:43', '2019-09-02 04:02:43'),
(1577, 16, 90, 'CCS101 - INTRODUCTION TO COMPUTING - Q4', 'A letter, digit, or special character is represented by a code in a ___.', 'A letter, digit, or special character is represented by a code in a ___.', 7, 89, 3, 6, 15, '2019-09-02 04:02:43', '2019-09-02 04:02:43'),
(1578, 16, 59, 'CCS102 - COMPUTER PROGRAMMING 1 Q29', 'What is the output of this program?\n\n[[#code24]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class evaluate <br />\n    {<br />\n        public static void main(String args[]) <br />\n            {<br />\n	        int arr[] = new int[] {0 , 1, 2, 3, 4, 5, 6, 7, 8, 9};<br />\n	        int n = 6;<br />\n                n = arr[arr[n] / 2];<br />\n	        System.out.println(arr[n] / 2);<br />\n            } <br />\n    }</code></pre>', 7, 90, 3, 6, 34, '2019-09-02 04:02:43', '2019-09-02 04:02:43'),
(1579, 16, 33, 'IT01- CCS102 - COMPUTER PROGRAMMING 1 - Q3', 'Which of the following converts a type to a double type in C#?', 'Which of the following converts a type to a double type in C#?', 7, 90, 1, 6, 26, '2019-09-02 04:02:43', '2019-09-02 04:02:43'),
(1580, 16, 108, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q18', 'The population of a country increased by an average of 2% per year from 2000 to 2003. If the population of this country was 2 000 000 on December 31, 2003, then the population of this country on January 1, 2000, to the nearest thousand would have been', 'The population of a country increased by an average of 2% per year from 2000 to 2003. If the population of this country was 2 000 000 on December 31, 2003, then the population of this country on January 1, 2000, to the nearest thousand would have been', 7, 92, 3, 6, 50, '2019-09-02 04:02:43', '2019-09-02 04:02:43'),
(1581, 16, 50, 'CCS102 - COMPUTER PROGRAMMING Q20', 'What happens when thread\'s yield() method is called?', 'What happens when thread\'s yield() method is called?', 7, 90, 2, 6, 28, '2019-09-02 04:02:43', '2019-09-02 04:02:43'),
(1582, 16, 223, 'CC101 - INTRODUCTION TO COMPUTING - Q11', 'The sum of 11101 + 10111 equals ________.', 'The sum of 11101 + 10111 equals ________.', 7, 89, 2, 6, 10, '2019-09-02 04:02:43', '2019-09-02 04:02:43'),
(1583, 16, 215, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q15', 'Which is the latest mobile version of android?', 'Which is the latest mobile version of android?', 7, 125, 1, 6, 91, '2019-09-02 04:02:43', '2019-09-02 04:02:43'),
(1584, 16, 131, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q13', 'A method of MessageBox class that allows you to call a message box for prompting user with messages and information.', 'A method of MessageBox class that allows you to call a message box for prompting user with messages and information.', 7, 95, 1, 6, 59, '2019-09-02 04:02:43', '2019-09-02 04:02:43'),
(1585, 16, 78, 'CCS101 - INTRODUCTION TO COMPUTING -  Q19', 'This coding system is designed to support international languages like Chinese and Japanese.', 'This coding system is designed to support international languages like Chinese and Japanese.', 7, 89, 3, 6, 17, '2019-09-02 04:02:43', '2019-09-02 04:02:43'),
(1586, 16, 252, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q28', 'What is bean class in android?', 'What is bean class in android?', 7, 125, 3, 6, 99, '2019-09-02 04:02:43', '2019-09-02 04:02:43'),
(1587, 16, 151, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q11', 'Two sets are called disjoint if there _____________ is the empty set.', 'Two sets are called disjoint if there _____________ is the empty set.', 7, 96, 1, 6, 73, '2019-09-02 04:02:43', '2019-09-02 04:02:43'),
(1588, 16, 58, 'CCS102 - COMPUTER PROGRAMMING 1 Q28', 'What is the output of this program?\n\n[[#code22]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class array_output <br />\n    {<br />\n        public static void main(String args[]) <br />\n        {<br />\n            int array_variable [] = new int[10];<br />\n	    for (int i = 0; i < 10; ++i) <br />\n            {<br />\n                array_variable[i] = i;<br />\n                System.out.print(array_variable[i] + \" \");<br />\n                i++;<br />\n            }<br />\n        } <br />\n    }</code></pre>', 7, 90, 3, 6, 33, '2019-09-02 04:02:43', '2019-09-02 04:02:43'),
(1589, 16, 204, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q4', 'Android supports which features.', 'Android supports which features.', 7, 125, 1, 6, 92, '2019-09-02 04:02:43', '2019-09-02 04:02:43'),
(1590, 16, 220, 'Computer Hardware - Q2', 'An input device that reads printed text and graphics and transfers them to a computer in digital form.', 'An input device that reads printed text and graphics and transfers them to a computer in digital form.', 7, 89, 1, 6, 7, '2019-09-02 04:02:43', '2019-09-02 04:02:43'),
(1591, 16, 119, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q1', 'This is a repetition control stricture that allows you to efficiently write a loop that needs to execute a specific number of times.', 'This is a repetition control stricture that allows you to efficiently write a loop that needs to execute a specific number of times.', 7, 95, 1, 6, 57, '2019-09-02 04:02:43', '2019-09-02 04:02:43'),
(1592, 16, 160, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q20', 'The shaded area of figure is best described by\n\n[[#img32]]', 'The shaded area of figure is best described by<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/5iL0Nsol7VkygnPftlQm5guoA5NqiGISBGevRke8.jpeg\" width=\"300\" height=\"150\" />', 7, 96, 3, 6, 83, '2019-09-02 04:02:43', '2019-09-02 04:02:43'),
(1593, 16, 38, 'CCS102 - COMPUTER PROGRAMMING 1 - Q8', 'Which of the following is true about try block in C#?', 'Which of the following is true about try block in C#?', 7, 90, 1, 6, 19, '2019-09-02 04:02:43', '2019-09-02 04:02:43'),
(1594, 16, 113, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q23', 'Five different books (A, B, C, D and E) are to be arranged on a shelf. Books C and D are to be arranged first and second starting from the right of the shelf. The number of different orders in which books A, B and E may be arranged is', 'Five different books (A, B, C, D and E) are to be arranged on a shelf. Books C and D are to be arranged first and second starting from the right of the shelf. The number of different orders in which books A, B and E may be arranged is', 7, 92, 2, 6, 48, '2019-09-02 04:02:43', '2019-09-02 04:02:43'),
(1595, 16, 289, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q33', 'A number of the form 213ab, where a and b are digits, has a reminder less than 10 when divided by 100. The sum of all the digits in the above number is equal to 13. Find the digit b.', 'A number of the form 213ab, where a and b are digits, has a reminder less than 10 when divided by 100. The sum of all the digits in the above number is equal to 13. Find the digit b.', 7, 92, 1, 6, 43, '2019-09-02 04:02:43', '2019-09-02 04:02:43'),
(1596, 16, 212, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q12', 'Which company bought android?', 'Which company bought android?', 7, 125, 1, 6, 93, '2019-09-02 04:02:43', '2019-09-02 04:02:43'),
(1597, 16, 283, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q32', 'You have a TextBox control and a Help button that the user can press to get help on allowable values. You validate the data entered by the user in the TextBox control. If the user enters an invalid value, you set the focus back in the control using the Cancel property of the CancelEventArgs. A user reports that once he enters invalid data in the text box, he cannot click the Help button. What should you do to correct the problem?', 'You have a TextBox control and a Help button that the user can press to get help on allowable values. You validate the data entered by the user in the TextBox control. If the user enters an invalid value, you set the focus back in the control using the Cancel property of the CancelEventArgs. A user reports that once he enters invalid data in the text box, he cannot click the Help button. What should you do to correct the problem?', 7, 95, 3, 6, 67, '2019-09-02 04:02:43', '2019-09-02 04:02:43'),
(1598, 16, 70, 'Projectile motion 2', 'An adventurous cliff jumper runs horizontally off a cliff. We can ignore air resistance.\n\n[[#img27]]\n\nWhich diagram best describes the horizontal velocity vectors and trajectory during the person’s fall?\n\nAssume the origin of the coordinate system to be the cliff edge.\n\nA red dot represents a vector of zero magnitude.', 'An adventurous cliff jumper runs horizontally off a cliff. We can ignore air resistance.<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/PgCOEtvEENxNaqgGLMWLrysCTt8GwyXUqH8p2sz7.png\" width=\"200\" height=\"200\" /><br />\n<br />\nWhich diagram best describes the horizontal velocity vectors and trajectory during the person’s fall?<br />\n<br />\nAssume the origin of the coordinate system to be the cliff edge.<br />\n<br />\nA red dot represents a vector of zero magnitude.', 7, 89, 1, 6, 4, '2019-09-02 04:02:43', '2019-09-02 04:02:43'),
(1599, 16, 99, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q9', 'Evaluate the following:\n \nlog<sub>4</sub> 25', 'Evaluate the following:<br />\n <br />\nlog<sub>4</sub> 25', 7, 92, 1, 6, 41, '2019-09-02 04:02:43', '2019-09-02 04:02:43'),
(1600, 16, 149, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q9', 'The union of the sets {1, 2, 5} and {1, 2, 6} is the set _______________.', 'The union of the sets {1, 2, 5} and {1, 2, 6} is the set _______________.', 7, 96, 2, 6, 81, '2019-09-02 04:02:43', '2019-09-02 04:02:43'),
(1601, 17, 77, 'CCS101 - INTRODUCTION TO COMPUTING - Q20', 'A programming error that occurs when running a program produces incorrect results.', 'A programming error that occurs when running a program produces incorrect results.', 7, 89, 1, 6, 9, '2019-09-02 04:09:55', '2019-09-02 04:09:55'),
(1602, 17, 225, 'CCS101 - INTRODUCTION TO COMPUTING - Q7', 'Converting (1010111)<sub>2</sub> to base yields which of the following results?', 'Converting (1010111)<sub>2</sub> to base yields which of the following results?', 7, 89, 2, 6, 11, '2019-09-02 04:09:55', '2019-09-02 04:09:55'),
(1603, 17, 155, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q15', 'Let the set A is {1, 2, 3} and B is {2, 3, 4}. Then number of elements in A U B is _____.', 'Let the set A is {1, 2, 3} and B is {2, 3, 4}. Then number of elements in A U B is _____.', 7, 96, 1, 6, 69, '2019-09-02 04:09:55', '2019-09-02 04:09:55'),
(1604, 17, 59, 'CCS102 - COMPUTER PROGRAMMING 1 Q29', 'What is the output of this program?\n\n[[#code24]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class evaluate <br />\n    {<br />\n        public static void main(String args[]) <br />\n            {<br />\n	        int arr[] = new int[] {0 , 1, 2, 3, 4, 5, 6, 7, 8, 9};<br />\n	        int n = 6;<br />\n                n = arr[arr[n] / 2];<br />\n	        System.out.println(arr[n] / 2);<br />\n            } <br />\n    }</code></pre>', 7, 90, 3, 6, 34, '2019-09-02 04:09:55', '2019-09-02 04:09:55'),
(1605, 17, 289, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q33', 'A number of the form 213ab, where a and b are digits, has a reminder less than 10 when divided by 100. The sum of all the digits in the above number is equal to 13. Find the digit b.', 'A number of the form 213ab, where a and b are digits, has a reminder less than 10 when divided by 100. The sum of all the digits in the above number is equal to 13. Find the digit b.', 7, 92, 1, 6, 43, '2019-09-02 04:09:55', '2019-09-02 04:09:55'),
(1606, 17, 89, 'CCS101 - INTRODUCTION TO COMPUTING - Q5', 'A memory management technique that uses hard drive space as additional RAM.', 'A memory management technique that uses hard drive space as additional RAM.', 7, 89, 1, 6, 2, '2019-09-02 04:09:55', '2019-09-02 04:09:55'),
(1607, 17, 205, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q5', 'For ___________, code used by Android is not open source.', 'For ___________, code used by Android is not open source.', 7, 125, 1, 6, 90, '2019-09-02 04:09:55', '2019-09-02 04:09:55'),
(1608, 17, 211, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q11', 'Web browser available in android based on', 'Web browser available in android based on', 7, 125, 1, 6, 85, '2019-09-02 04:09:55', '2019-09-02 04:09:55'),
(1609, 17, 41, 'CCS102 - COMPUTER PROGRAMMING 1 Q11', 'What is correct syntax for main method of a java class?', 'What is correct syntax for main method of a java class?', 7, 90, 1, 6, 24, '2019-09-02 04:09:55', '2019-09-02 04:09:55'),
(1610, 17, 76, 'CCS101 - INTRODUCTION TO COMPUTING _ Q21', '_______ is a duplicate copy of data or other computer content for use in the event that the original version is destroyed.', '_______ is a duplicate copy of data or other computer content for use in the event that the original version is destroyed.', 7, 89, 2, 6, 13, '2019-09-02 04:09:55', '2019-09-02 04:09:55'),
(1611, 17, 1, 'Solving for basic equation - Q1', 'solve for x:\n2x + 3 = 5', 'solve for x:<br />\n2x + 3 = 5', 7, 92, 1, 6, 36, '2019-09-02 04:09:55', '2019-09-02 04:09:55'),
(1612, 17, 74, 'CCS101 - INTRODUCTION TO COMPUTING - Q23', 'An electronic tool that allows information to be input, processed, and output.', 'An electronic tool that allows information to be input, processed, and output.', 7, 89, 1, 6, 6, '2019-09-02 04:09:55', '2019-09-02 04:09:55'),
(1613, 17, 148, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q8', 'What is the Cardinality of the Power set of the set {0, 1, 2}.', 'What is the Cardinality of the Power set of the set {0, 1, 2}.', 7, 96, 1, 6, 72, '2019-09-02 04:09:55', '2019-09-02 04:09:55'),
(1614, 17, 97, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q7', 'The expression (3i - 2)(i + 1) - 7 can be simplified to which of the following expressions?', 'The expression (3i - 2)(i + 1) - 7 can be simplified to which of the following expressions?', 7, 92, 2, 6, 46, '2019-09-02 04:09:55', '2019-09-02 04:09:55'),
(1615, 17, 212, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q12', 'Which company bought android?', 'Which company bought android?', 7, 125, 1, 6, 93, '2019-09-02 04:09:55', '2019-09-02 04:09:55'),
(1616, 17, 124, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q6', 'This data type stores the address of the value which means that they refer to a memory location.', 'This data type stores the address of the value which means that they refer to a memory location.', 7, 95, 1, 6, 52, '2019-09-02 04:09:55', '2019-09-02 04:09:55'),
(1617, 17, 32, 'CCS102 - COMPUTER PROGRAMMING 1 - Q2', 'Which of the following is a reserved keyword in C#?', 'Which of the following is a reserved keyword in C#?', 7, 90, 1, 6, 21, '2019-09-02 04:09:56', '2019-09-02 04:09:56'),
(1618, 17, 61, 'CCS102 - COMPUTER PROGRAMMING 1 Q31', 'Where is array stored in memory?', 'Where is array stored in memory?', 7, 90, 2, 6, 31, '2019-09-02 04:09:56', '2019-09-02 04:09:56'),
(1619, 17, 50, 'CCS102 - COMPUTER PROGRAMMING Q20', 'What happens when thread\'s yield() method is called?', 'What happens when thread\'s yield() method is called?', 7, 90, 2, 6, 28, '2019-09-02 04:09:56', '2019-09-02 04:09:56'),
(1620, 17, 92, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q2', 'Solve the inequality \n4x + 8 > 5x +9', 'Solve the inequality <br />\n4x + 8 > 5x +9', 7, 92, 1, 6, 37, '2019-09-02 04:09:56', '2019-09-02 04:09:56'),
(1621, 17, 127, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q9', 'Commonly used  control to execute commansd when it is clicked.', 'Commonly used  control to execute commansd when it is clicked.', 7, 95, 1, 6, 60, '2019-09-02 04:09:56', '2019-09-02 04:09:56'),
(1622, 17, 149, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q9', 'The union of the sets {1, 2, 5} and {1, 2, 6} is the set _______________.', 'The union of the sets {1, 2, 5} and {1, 2, 6} is the set _______________.', 7, 96, 2, 6, 81, '2019-09-02 04:09:56', '2019-09-02 04:09:56'),
(1623, 17, 58, 'CCS102 - COMPUTER PROGRAMMING 1 Q28', 'What is the output of this program?\n\n[[#code22]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class array_output <br />\n    {<br />\n        public static void main(String args[]) <br />\n        {<br />\n            int array_variable [] = new int[10];<br />\n	    for (int i = 0; i < 10; ++i) <br />\n            {<br />\n                array_variable[i] = i;<br />\n                System.out.print(array_variable[i] + \" \");<br />\n                i++;<br />\n            }<br />\n        } <br />\n    }</code></pre>', 7, 90, 3, 6, 33, '2019-09-02 04:09:56', '2019-09-02 04:09:56'),
(1624, 17, 126, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q8', 'A control used to show a list of strings which you can select.', 'A control used to show a list of strings which you can select.', 7, 95, 1, 6, 56, '2019-09-02 04:09:56', '2019-09-02 04:09:56'),
(1625, 17, 204, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q4', 'Android supports which features.', 'Android supports which features.', 7, 125, 1, 6, 92, '2019-09-02 04:09:56', '2019-09-02 04:09:56'),
(1626, 17, 203, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q3', 'Android doesn\'t  support which format?', 'Android doesn\'t  support which format?', 7, 125, 1, 6, 87, '2019-09-02 04:09:56', '2019-09-02 04:09:56'),
(1627, 17, 147, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q7', 'The set of positive integers is _____________.', 'The set of positive integers is _____________.', 7, 96, 1, 6, 70, '2019-09-02 04:09:56', '2019-09-02 04:09:56'),
(1628, 17, 267, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q30', 'A floor function map a real number to :', 'A floor function map a real number to :', 7, 96, 3, 6, 84, '2019-09-02 04:09:56', '2019-09-02 04:09:56'),
(1629, 17, 31, 'Order of operation - Q1', 'What is the output of the following code?\n\n[[#code14]]', 'What is the output of the following code?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">double x = 2;<br />\ndouble y = 3;<br />\ndouble z = 5;<br />\n<br />\ndouble output = x + x * y + (x + 2 * z);<br />\n<br />\nSystem.out.println(output);</code></pre>', 7, 90, 1, 6, 20, '2019-09-02 04:09:56', '2019-09-02 04:09:56'),
(1630, 17, 283, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q32', 'You have a TextBox control and a Help button that the user can press to get help on allowable values. You validate the data entered by the user in the TextBox control. If the user enters an invalid value, you set the focus back in the control using the Cancel property of the CancelEventArgs. A user reports that once he enters invalid data in the text box, he cannot click the Help button. What should you do to correct the problem?', 'You have a TextBox control and a Help button that the user can press to get help on allowable values. You validate the data entered by the user in the TextBox control. If the user enters an invalid value, you set the focus back in the control using the Cancel property of the CancelEventArgs. A user reports that once he enters invalid data in the text box, he cannot click the Help button. What should you do to correct the problem?', 7, 95, 3, 6, 67, '2019-09-02 04:09:56', '2019-09-02 04:09:56'),
(1631, 17, 132, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q14', 'C# treats the multiple catch statements like cases in a _____________ statement.', 'C# treats the multiple catch statements like cases in a _____________ statement.', 7, 95, 1, 6, 58, '2019-09-02 04:09:56', '2019-09-02 04:09:56'),
(1632, 17, 52, 'CCS102 - COMPUTER PROGRAMMING 1 Q22', 'What is the output of this program?\n\n[[#code19]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class box <br />\n    {<br />\n        int width;<br />\n        int height;<br />\n        int length;<br />\n    } <br />\n    class mainclass <br />\n    {<br />\n        public static void main(String args[]) <br />\n        {        <br />\n             box obj = new box();<br />\n             obj.width = 10;<br />\n             obj.height = 2;<br />\n             obj.length = 10;<br />\n             int y = obj.width * obj.height * obj.length; <br />\n             System.out.print(y);<br />\n        } <br />\n    }</code></pre>', 7, 90, 3, 6, 32, '2019-09-02 04:09:56', '2019-09-02 04:09:56'),
(1633, 17, 220, 'Computer Hardware - Q2', 'An input device that reads printed text and graphics and transfers them to a computer in digital form.', 'An input device that reads printed text and graphics and transfers them to a computer in digital form.', 7, 89, 1, 6, 7, '2019-09-02 04:09:56', '2019-09-02 04:09:56'),
(1634, 17, 114, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q24', 'The mean of a data set is equal to 10 and its standard deviation is equal to 1. If we add 5 to each data value, then the mean and standard deviation become', 'The mean of a data set is equal to 10 and its standard deviation is equal to 1. If we add 5 to each data value, then the mean and standard deviation become', 7, 92, 2, 6, 45, '2019-09-02 04:09:56', '2019-09-02 04:09:56'),
(1635, 17, 79, 'CCS101 - INTRODUCTION TO COMPUTING -Q18', 'Which of the following is/are not part of the CPU?', 'Which of the following is/are not part of the CPU?', 7, 89, 3, 6, 16, '2019-09-02 04:09:56', '2019-09-02 04:09:56'),
(1636, 17, 244, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q20', 'To update contents of content provider using curser and commit you need to call _______________.', 'To update contents of content provider using curser and commit you need to call _______________.', 7, 125, 2, 6, 95, '2019-09-02 04:09:56', '2019-09-02 04:09:56'),
(1637, 17, 143, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q3', 'Power set of empty set has exactly _________ subset.', 'Power set of empty set has exactly _________ subset.', 7, 96, 1, 6, 77, '2019-09-02 04:09:56', '2019-09-02 04:09:56'),
(1638, 17, 144, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q4', 'What is the cardinality of the set of odd positive integers less than 10?', 'What is the cardinality of the set of odd positive integers less than 10?', 7, 96, 1, 6, 71, '2019-09-02 04:09:56', '2019-09-02 04:09:56'),
(1639, 17, 82, 'CCS101 - INTRODUCTION TO COMPUTING - Q15', '10111 is the two\'s complement representation of', '10111 is the two\'s complement representation of', 7, 89, 1, 6, 5, '2019-09-02 04:09:56', '2019-09-02 04:09:56'),
(1640, 17, 112, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q22', 'A school committee consists of 2 teachers and 4 students. The number of different committees that can be formed from 5 teachers and 10 students is', 'A school committee consists of 2 teachers and 4 students. The number of different committees that can be formed from 5 teachers and 10 students is', 7, 92, 1, 6, 42, '2019-09-02 04:09:56', '2019-09-02 04:09:56'),
(1641, 17, 119, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q1', 'This is a repetition control stricture that allows you to efficiently write a loop that needs to execute a specific number of times.', 'This is a repetition control stricture that allows you to efficiently write a loop that needs to execute a specific number of times.', 7, 95, 1, 6, 57, '2019-09-02 04:09:56', '2019-09-02 04:09:56'),
(1642, 17, 66, 'Binary to decimal conversion 1', 'Convert 10100011 from binary to decimal.', 'Convert 10100011 from binary to decimal.', 7, 89, 1, 6, 8, '2019-09-02 04:09:56', '2019-09-02 04:09:56'),
(1643, 17, 51, 'CCS102 - COMPUTER PROGRAMMING 1 Q21', 'What is the output of this program?\n\n[[#code18]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class main_class <br />\n    {<br />\n        public static void main(String args[])<br />\n        {<br />\n            int x = 9;<br />\n            if (x == 9) <br />\n            { <br />\n                int x = 8;<br />\n                System.out.println(x);<br />\n            }<br />\n        } <br />\n    }</code></pre>', 7, 90, 2, 6, 27, '2019-09-02 04:09:56', '2019-09-02 04:09:56'),
(1644, 17, 285, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q29', 'The period of 2 sin x cos x is', 'The period of 2 sin x cos x is', 7, 92, 1, 6, 35, '2019-09-02 04:09:56', '2019-09-02 04:09:56'),
(1645, 17, 131, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q13', 'A method of MessageBox class that allows you to call a message box for prompting user with messages and information.', 'A method of MessageBox class that allows you to call a message box for prompting user with messages and information.', 7, 95, 1, 6, 59, '2019-09-02 04:09:56', '2019-09-02 04:09:56'),
(1646, 17, 219, 'Computer Hardware - Q3', 'A device that enables a computer to communicate over telephone lines.', 'A device that enables a computer to communicate over telephone lines.', 7, 89, 1, 6, 1, '2019-09-02 04:09:56', '2019-09-02 04:09:56'),
(1647, 17, 151, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q11', 'Two sets are called disjoint if there _____________ is the empty set.', 'Two sets are called disjoint if there _____________ is the empty set.', 7, 96, 1, 6, 73, '2019-09-02 04:09:56', '2019-09-02 04:09:56'),
(1648, 17, 129, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q11', 'A control similar to an ordinary label having an underline and resembles a link on a web page.', 'A control similar to an ordinary label having an underline and resembles a link on a web page.', 7, 95, 1, 6, 54, '2019-09-02 04:09:56', '2019-09-02 04:09:56'),
(1649, 17, 162, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q22', 'If n(A)=10 , n(B)=30,n(C)=50 and if set A,B,C are pairwise disjoint then which of the following is correct?', 'If n(A)=10 , n(B)=30,n(C)=50 and if set A,B,C are pairwise disjoint then which of the following is correct?', 7, 96, 2, 6, 79, '2019-09-02 04:09:56', '2019-09-02 04:09:56'),
(1650, 17, 38, 'CCS102 - COMPUTER PROGRAMMING 1 - Q8', 'Which of the following is true about try block in C#?', 'Which of the following is true about try block in C#?', 7, 90, 1, 6, 19, '2019-09-02 04:09:57', '2019-09-02 04:09:57'),
(1651, 17, 113, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q23', 'Five different books (A, B, C, D and E) are to be arranged on a shelf. Books C and D are to be arranged first and second starting from the right of the shelf. The number of different orders in which books A, B and E may be arranged is', 'Five different books (A, B, C, D and E) are to be arranged on a shelf. Books C and D are to be arranged first and second starting from the right of the shelf. The number of different orders in which books A, B and E may be arranged is', 7, 92, 2, 6, 48, '2019-09-02 04:09:57', '2019-09-02 04:09:57'),
(1652, 17, 202, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q2', 'What is android?', 'What is android?', 7, 125, 1, 6, 86, '2019-09-02 04:09:57', '2019-09-02 04:09:57'),
(1653, 17, 145, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q5', 'What is the Cartesian product of A = {1, 2} and B = {a, b}?', 'What is the Cartesian product of A = {1, 2} and B = {a, b}?', 7, 96, 2, 6, 78, '2019-09-02 04:09:57', '2019-09-02 04:09:57'),
(1654, 17, 214, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q14', 'Android is based on which kernel?', 'Android is based on which kernel?', 7, 125, 1, 6, 89, '2019-09-02 04:09:57', '2019-09-02 04:09:57'),
(1655, 17, 138, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q20', 'A method_____an exception when that method detects that a problem has occured.', 'A method_____an exception when that method detects that a problem has occured.', 7, 95, 2, 6, 65, '2019-09-02 04:09:57', '2019-09-02 04:09:57'),
(1656, 17, 275, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q24', 'How should you arrange catch blocks?', 'How should you arrange catch blocks?', 7, 95, 2, 6, 64, '2019-09-02 04:09:57', '2019-09-02 04:09:57'),
(1657, 17, 111, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q21', 'For x greater than or equal to zero and less than or equal to 2 π, sin x and cos x are both decreasing on the intervals', 'For x greater than or equal to zero and less than or equal to 2 π, sin x and cos x are both decreasing on the intervals', 7, 92, 2, 6, 47, '2019-09-02 04:09:57', '2019-09-02 04:09:57'),
(1658, 17, 39, 'CCS102 - COMPUTER PROGRAMMING 1 Q9', 'What of the following is the default value of an instance variable?', 'What of the following is the default value of an instance variable?', 7, 90, 1, 6, 25, '2019-09-02 04:09:57', '2019-09-02 04:09:57'),
(1659, 17, 87, 'CCS101 - INTRODUCTION TO COMPUTING - Q8', '____________ are the four general operations that are performed in each machine cycle.', '____________ are the four general operations that are performed in each machine cycle.', 7, 89, 2, 6, 14, '2019-09-02 04:09:57', '2019-09-02 04:09:57'),
(1660, 17, 278, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q27', 'What will be the output of the following code?\n\n[[#code28]]', 'What will be the output of the following code?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">csharp</span></div><pre><code class=\"language-csharp\">try<br />\n{<br />\n  int num = 100;<br />\n  int den = 0;<br />\n  try<br />\n  {<br />\n    MessageBox.Show(\"Message1\");<br />\n    int res = num/den;<br />\n    MessageBox.Show(\"Message2\");<br />\n  }<br />\n  catch(ArithmeticException ae)<br />\n  {<br />\n    MessageBox.Show(\"Message3\");<br />\n  }<br />\n  MessageBox.Show(\"Message4\");<br />\n}</code></pre>', 7, 95, 3, 6, 68, '2019-09-02 04:09:57', '2019-09-02 04:09:57'),
(1661, 17, 256, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q32', 'What is the difference between content values and cursor in android SQlite?', 'What is the difference between content values and cursor in android SQlite?', 7, 125, 3, 6, 98, '2019-09-02 04:09:57', '2019-09-02 04:09:57'),
(1662, 17, 90, 'CCS101 - INTRODUCTION TO COMPUTING - Q4', 'A letter, digit, or special character is represented by a code in a ___.', 'A letter, digit, or special character is represented by a code in a ___.', 7, 89, 3, 6, 15, '2019-09-02 04:09:57', '2019-09-02 04:09:57');
INSERT INTO `answer_sheet_test_questions` (`id`, `answer_sheet_id`, `test_question_id`, `title`, `body`, `body_html`, `student_outcome_id`, `course_id`, `difficulty_level_id`, `performance_criteria_id`, `pos_order`, `created_at`, `updated_at`) VALUES
(1663, 17, 286, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q30', 'The probability that an electronic device produced by a company does not function properly is equal to 0.1. If 10 devices are bought, then the probability, to the nearest thousandth, that 7 devices function properly is', 'The probability that an electronic device produced by a company does not function properly is equal to 0.1. If 10 devices are bought, then the probability, to the nearest thousandth, that 7 devices function properly is', 7, 92, 3, 6, 49, '2019-09-02 04:09:57', '2019-09-02 04:09:57'),
(1664, 17, 72, 'CCS101 - INTRODUCTION TO COMPUTING - Q25', 'What type of software is a screen saver?', 'What type of software is a screen saver?', 7, 89, 2, 6, 12, '2019-09-02 04:09:57', '2019-09-02 04:09:57'),
(1665, 17, 33, 'IT01- CCS102 - COMPUTER PROGRAMMING 1 - Q3', 'Which of the following converts a type to a double type in C#?', 'Which of the following converts a type to a double type in C#?', 7, 90, 1, 6, 26, '2019-09-02 04:09:57', '2019-09-02 04:09:57'),
(1666, 17, 104, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q14', 'What is the result when you put the expression x<sup>2</sup> +10x+41 into vertex form by completing the square ?', 'What is the result when you put the expression x<sup>2</sup> +10x+41 into vertex form by completing the square ?', 7, 92, 3, 6, 51, '2019-09-02 04:09:57', '2019-09-02 04:09:57'),
(1667, 17, 42, 'CCS102 - COMPUTER PROGRAMMING 1 Q12', 'Which of the following is not a keyword in java?', 'Which of the following is not a keyword in java?', 7, 90, 1, 6, 18, '2019-09-02 04:09:57', '2019-09-02 04:09:57'),
(1668, 17, 136, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q18', 'Private Button print = new button();', 'Private Button print = new button();', 7, 95, 2, 6, 61, '2019-09-02 04:09:57', '2019-09-02 04:09:57'),
(1669, 17, 95, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q5', 'What is the square root of -144?', 'What is the square root of -144?', 7, 92, 1, 6, 38, '2019-09-02 04:09:57', '2019-09-02 04:09:57'),
(1670, 17, 48, 'CCS102 - COMPUTER PROGRAMMING 1 Q18', 'What is JRE?', 'What is JRE?', 7, 90, 2, 6, 29, '2019-09-02 04:09:57', '2019-09-02 04:09:57'),
(1671, 17, 215, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q15', 'Which is the latest mobile version of android?', 'Which is the latest mobile version of android?', 7, 125, 1, 6, 91, '2019-09-02 04:09:57', '2019-09-02 04:09:57'),
(1672, 17, 248, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q24', 'What is the use of content provider in android?', 'What is the use of content provider in android?', 7, 125, 2, 6, 97, '2019-09-02 04:09:57', '2019-09-02 04:09:57'),
(1673, 17, 108, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q18', 'The population of a country increased by an average of 2% per year from 2000 to 2003. If the population of this country was 2 000 000 on December 31, 2003, then the population of this country on January 1, 2000, to the nearest thousand would have been', 'The population of a country increased by an average of 2% per year from 2000 to 2003. If the population of this country was 2 000 000 on December 31, 2003, then the population of this country on January 1, 2000, to the nearest thousand would have been', 7, 92, 3, 6, 50, '2019-09-02 04:09:57', '2019-09-02 04:09:57'),
(1674, 17, 260, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q23', 'In the given figure the if n(A)=20,n(U)=50,n(C)=10 and n(A∩B)=5 then n(B)=? \n\n[[#img34]]', 'In the given figure the if n(A)=20,n(U)=50,n(C)=10 and n(A∩B)=5 then n(B)=? <br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/23B9WIeQ00wE4pw7nsRG6le8KJWkZ1jI9HG7nYv3.jpeg\" width=\"300\" height=\"150\" />', 7, 96, 2, 6, 80, '2019-09-02 04:09:57', '2019-09-02 04:09:57'),
(1675, 17, 137, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q19', 'Polymorphism occurs when the methods of the child class.', 'Polymorphism occurs when the methods of the child class.', 7, 95, 2, 6, 62, '2019-09-02 04:09:57', '2019-09-02 04:09:57'),
(1676, 17, 140, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q22', 'A _______ is an identifier that denotes a storage location.', 'A _______ is an identifier that denotes a storage location.', 7, 95, 2, 6, 63, '2019-09-02 04:09:57', '2019-09-02 04:09:57'),
(1677, 17, 93, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q3', 'If 2x - 8 ≥ 2, then', 'If 2x - 8 ≥ 2, then', 7, 92, 1, 6, 39, '2019-09-02 04:09:57', '2019-09-02 04:09:57'),
(1678, 17, 122, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q4', 'These operators take two operands, such as arithmetic operators (+,-,*,/).', 'These operators take two operands, such as arithmetic operators (+,-,*,/).', 7, 95, 1, 6, 53, '2019-09-02 04:09:57', '2019-09-02 04:09:57'),
(1679, 17, 160, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q20', 'The shaded area of figure is best described by\n\n[[#img32]]', 'The shaded area of figure is best described by<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/5iL0Nsol7VkygnPftlQm5guoA5NqiGISBGevRke8.jpeg\" width=\"300\" height=\"150\" />', 7, 96, 3, 6, 83, '2019-09-02 04:09:57', '2019-09-02 04:09:57'),
(1680, 17, 142, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q2', 'The set O of odd positive integers less than 10 can be expressed by _____________.', 'The set O of odd positive integers less than 10 can be expressed by _____________.', 7, 96, 1, 6, 76, '2019-09-02 04:09:57', '2019-09-02 04:09:57'),
(1681, 17, 223, 'CC101 - INTRODUCTION TO COMPUTING - Q11', 'The sum of 11101 + 10111 equals ________.', 'The sum of 11101 + 10111 equals ________.', 7, 89, 2, 6, 10, '2019-09-02 04:09:57', '2019-09-02 04:09:57'),
(1682, 17, 68, 'Describing two-dimensional motion with vectors', 'A golfer hits a golf ball upwards at an angle of 75°, degree with the horizontal. We can ignore air resistance.\n\n[[#img22]]\n\nWhich graph best describes the golf ball\'s vertical displacement over time?\n\nAssume the origin of the coordinate system to be the point on the ground where the ball was initially at rest.', 'A golfer hits a golf ball upwards at an angle of 75°, degree with the horizontal. We can ignore air resistance.<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/MYpfYGJo93eMWxPVag4ii0jWIwamFw8EKp4yFlbj.png\" width=\"300\" height=\"150\" /><br />\n<br />\nWhich graph best describes the golf ball\'s vertical displacement over time?<br />\n<br />\nAssume the origin of the coordinate system to be the point on the ground where the ball was initially at rest.', 7, 89, 1, 6, 3, '2019-09-02 04:09:57', '2019-09-02 04:09:57'),
(1683, 17, 150, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q10', 'The intersection of the sets {1, 2, 5} and {1, 2, 6} is the set _____________.', 'The intersection of the sets {1, 2, 5} and {1, 2, 6} is the set _____________.', 7, 96, 1, 6, 74, '2019-09-02 04:09:57', '2019-09-02 04:09:57'),
(1684, 17, 57, 'CCS102 - COMPUTER PROGRAMMING 1 Q27', 'Which of these is necessary to specify at time of array initialization?', 'Which of these is necessary to specify at time of array initialization?', 7, 90, 2, 6, 30, '2019-09-02 04:09:57', '2019-09-02 04:09:57'),
(1685, 17, 156, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q16', 'If A has 4 elements B has 8 elements then the minimum and maximum number of elements in A U B are respectively', 'If A has 4 elements B has 8 elements then the minimum and maximum number of elements in A U B are respectively', 7, 96, 1, 6, 75, '2019-09-02 04:09:57', '2019-09-02 04:09:57'),
(1686, 17, 107, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q17', 'If Log <sub>4 </sub>(x) = 12, then log 2 (x / 4) is equal to', 'If Log <sub>4 </sub>(x) = 12, then log 2 (x / 4) is equal to', 7, 92, 1, 6, 40, '2019-09-02 04:09:57', '2019-09-02 04:09:57'),
(1687, 17, 207, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q7', 'ABD stands for', 'ABD stands for', 7, 125, 1, 6, 88, '2019-09-02 04:09:57', '2019-09-02 04:09:57'),
(1688, 17, 270, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q33', 'In the given AP series the term at position 11 would be\n5, 8, 11, 14, 17, 20………50.', 'In the given AP series the term at position 11 would be<br />\n5, 8, 11, 14, 17, 20………50.', 7, 96, 3, 6, 82, '2019-09-02 04:09:57', '2019-09-02 04:09:57'),
(1689, 17, 116, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q26', 'If f(x) is an odd function, then | f(x) | is', 'If f(x) is an odd function, then | f(x) | is', 7, 92, 2, 6, 44, '2019-09-02 04:09:58', '2019-09-02 04:09:58'),
(1690, 17, 34, 'IT01- CCS102 - COMPUTER PROGRAMMING 1 - Q4', 'Which of the following operator returns the size of a data type in C#?', 'Which of the following operator returns the size of a data type in C#?', 7, 90, 1, 6, 22, '2019-09-02 04:09:58', '2019-09-02 04:09:58'),
(1691, 17, 121, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q3', 'These are additional operators used to return Boolean values.', 'These are additional operators used to return Boolean values.', 7, 95, 1, 6, 55, '2019-09-02 04:09:58', '2019-09-02 04:09:58'),
(1692, 17, 78, 'CCS101 - INTRODUCTION TO COMPUTING -  Q19', 'This coding system is designed to support international languages like Chinese and Japanese.', 'This coding system is designed to support international languages like Chinese and Japanese.', 7, 89, 3, 6, 17, '2019-09-02 04:09:58', '2019-09-02 04:09:58'),
(1693, 17, 40, 'CCS102 - COMPUTER PROGRAMMING 1 Q10', 'Static binding uses which information for binding?', 'Static binding uses which information for binding?', 7, 90, 1, 6, 23, '2019-09-02 04:09:58', '2019-09-02 04:09:58'),
(1694, 17, 246, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q22', 'Which of  the following holds Java source code for the application?', 'Which of  the following holds Java source code for the application?', 7, 125, 2, 6, 94, '2019-09-02 04:09:58', '2019-09-02 04:09:58'),
(1695, 17, 243, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q19', 'Android provides a few standard themes, listed in ________.', 'Android provides a few standard themes, listed in ________.', 7, 125, 2, 6, 96, '2019-09-02 04:09:58', '2019-09-02 04:09:58'),
(1696, 17, 252, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q28', 'What is bean class in android?', 'What is bean class in android?', 7, 125, 3, 6, 99, '2019-09-02 04:09:58', '2019-09-02 04:09:58'),
(1697, 17, 254, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q30', 'What is an HTTP client class in android?', 'What is an HTTP client class in android?', 7, 125, 3, 6, 100, '2019-09-02 04:09:58', '2019-09-02 04:09:58'),
(1698, 17, 70, 'Projectile motion 2', 'An adventurous cliff jumper runs horizontally off a cliff. We can ignore air resistance.\n\n[[#img27]]\n\nWhich diagram best describes the horizontal velocity vectors and trajectory during the person’s fall?\n\nAssume the origin of the coordinate system to be the cliff edge.\n\nA red dot represents a vector of zero magnitude.', 'An adventurous cliff jumper runs horizontally off a cliff. We can ignore air resistance.<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/PgCOEtvEENxNaqgGLMWLrysCTt8GwyXUqH8p2sz7.png\" width=\"200\" height=\"200\" /><br />\n<br />\nWhich diagram best describes the horizontal velocity vectors and trajectory during the person’s fall?<br />\n<br />\nAssume the origin of the coordinate system to be the cliff edge.<br />\n<br />\nA red dot represents a vector of zero magnitude.', 7, 89, 1, 6, 4, '2019-09-02 04:09:58', '2019-09-02 04:09:58'),
(1699, 17, 277, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q26', 'Which of the following will result from compiling this code, assuming that all other code for your form works properly?\n\n[[#code27]]', 'Which of the following will result from compiling this code, assuming that all other code for your form works properly?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">csharp</span></div><pre><code class=\"language-csharp\">try<br />\n{<br />\n  //Write code to allocate some resources<br />\n}<br />\nfinally<br />\n{<br />\n  //Write code to Dispose all allocated resources<br />\n}</code></pre>', 7, 95, 3, 6, 66, '2019-09-02 04:09:58', '2019-09-02 04:09:58'),
(1700, 17, 99, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q9', 'Evaluate the following:\n \nlog<sub>4</sub> 25', 'Evaluate the following:<br />\n <br />\nlog<sub>4</sub> 25', 7, 92, 1, 6, 41, '2019-09-02 04:09:58', '2019-09-02 04:09:58'),
(1701, 18, 145, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q5', 'What is the Cartesian product of A = {1, 2} and B = {a, b}?', 'What is the Cartesian product of A = {1, 2} and B = {a, b}?', 7, 96, 2, 6, 78, '2019-09-02 13:13:39', '2019-09-02 13:13:39'),
(1702, 18, 223, 'CC101 - INTRODUCTION TO COMPUTING - Q11', 'The sum of 11101 + 10111 equals ________.', 'The sum of 11101 + 10111 equals ________.', 7, 89, 2, 6, 10, '2019-09-02 13:13:39', '2019-09-02 13:13:39'),
(1703, 18, 127, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q9', 'Commonly used  control to execute commansd when it is clicked.', 'Commonly used  control to execute commansd when it is clicked.', 7, 95, 1, 6, 60, '2019-09-02 13:13:39', '2019-09-02 13:13:39'),
(1704, 18, 79, 'CCS101 - INTRODUCTION TO COMPUTING -Q18', 'Which of the following is/are not part of the CPU?', 'Which of the following is/are not part of the CPU?', 7, 89, 3, 6, 16, '2019-09-02 13:13:39', '2019-09-02 13:13:39'),
(1705, 18, 1, 'Solving for basic equation - Q1', 'solve for x:\n2x + 3 = 5', 'solve for x:<br />\n2x + 3 = 5', 7, 92, 1, 6, 36, '2019-09-02 13:13:39', '2019-09-02 13:13:39'),
(1706, 18, 82, 'CCS101 - INTRODUCTION TO COMPUTING - Q15', '10111 is the two\'s complement representation of', '10111 is the two\'s complement representation of', 7, 89, 1, 6, 5, '2019-09-02 13:13:39', '2019-09-02 13:13:39'),
(1707, 18, 267, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q30', 'A floor function map a real number to :', 'A floor function map a real number to :', 7, 96, 3, 6, 84, '2019-09-02 13:13:39', '2019-09-02 13:13:39'),
(1708, 18, 207, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q7', 'ABD stands for', 'ABD stands for', 7, 125, 1, 6, 88, '2019-09-02 13:13:39', '2019-09-02 13:13:39'),
(1709, 18, 57, 'CCS102 - COMPUTER PROGRAMMING 1 Q27', 'Which of these is necessary to specify at time of array initialization?', 'Which of these is necessary to specify at time of array initialization?', 7, 90, 2, 6, 30, '2019-09-02 13:13:39', '2019-09-02 13:13:39'),
(1710, 18, 155, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q15', 'Let the set A is {1, 2, 3} and B is {2, 3, 4}. Then number of elements in A U B is _____.', 'Let the set A is {1, 2, 3} and B is {2, 3, 4}. Then number of elements in A U B is _____.', 7, 96, 1, 6, 69, '2019-09-02 13:13:39', '2019-09-02 13:13:39'),
(1711, 18, 119, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q1', 'This is a repetition control stricture that allows you to efficiently write a loop that needs to execute a specific number of times.', 'This is a repetition control stricture that allows you to efficiently write a loop that needs to execute a specific number of times.', 7, 95, 1, 6, 57, '2019-09-02 13:13:39', '2019-09-02 13:13:39'),
(1712, 18, 34, 'IT01- CCS102 - COMPUTER PROGRAMMING 1 - Q4', 'Which of the following operator returns the size of a data type in C#?', 'Which of the following operator returns the size of a data type in C#?', 7, 90, 1, 6, 22, '2019-09-02 13:13:39', '2019-09-02 13:13:39'),
(1713, 18, 50, 'CCS102 - COMPUTER PROGRAMMING Q20', 'What happens when thread\'s yield() method is called?', 'What happens when thread\'s yield() method is called?', 7, 90, 2, 6, 28, '2019-09-02 13:13:39', '2019-09-02 13:13:39'),
(1714, 18, 156, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q16', 'If A has 4 elements B has 8 elements then the minimum and maximum number of elements in A U B are respectively', 'If A has 4 elements B has 8 elements then the minimum and maximum number of elements in A U B are respectively', 7, 96, 1, 6, 75, '2019-09-02 13:13:39', '2019-09-02 13:13:39'),
(1715, 18, 137, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q19', 'Polymorphism occurs when the methods of the child class.', 'Polymorphism occurs when the methods of the child class.', 7, 95, 2, 6, 62, '2019-09-02 13:13:39', '2019-09-02 13:13:39'),
(1716, 18, 248, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q24', 'What is the use of content provider in android?', 'What is the use of content provider in android?', 7, 125, 2, 6, 97, '2019-09-02 13:13:39', '2019-09-02 13:13:39'),
(1717, 18, 150, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q10', 'The intersection of the sets {1, 2, 5} and {1, 2, 6} is the set _____________.', 'The intersection of the sets {1, 2, 5} and {1, 2, 6} is the set _____________.', 7, 96, 1, 6, 74, '2019-09-02 13:13:39', '2019-09-02 13:13:39'),
(1718, 18, 220, 'Computer Hardware - Q2', 'An input device that reads printed text and graphics and transfers them to a computer in digital form.', 'An input device that reads printed text and graphics and transfers them to a computer in digital form.', 7, 89, 1, 6, 7, '2019-09-02 13:13:39', '2019-09-02 13:13:39'),
(1719, 18, 278, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q27', 'What will be the output of the following code?\n\n[[#code28]]', 'What will be the output of the following code?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">csharp</span></div><pre><code class=\"language-csharp\">try<br />\n{<br />\n  int num = 100;<br />\n  int den = 0;<br />\n  try<br />\n  {<br />\n    MessageBox.Show(\"Message1\");<br />\n    int res = num/den;<br />\n    MessageBox.Show(\"Message2\");<br />\n  }<br />\n  catch(ArithmeticException ae)<br />\n  {<br />\n    MessageBox.Show(\"Message3\");<br />\n  }<br />\n  MessageBox.Show(\"Message4\");<br />\n}</code></pre>', 7, 95, 3, 6, 68, '2019-09-02 13:13:39', '2019-09-02 13:13:39'),
(1720, 18, 252, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q28', 'What is bean class in android?', 'What is bean class in android?', 7, 125, 3, 6, 99, '2019-09-02 13:13:39', '2019-09-02 13:13:39'),
(1721, 18, 77, 'CCS101 - INTRODUCTION TO COMPUTING - Q20', 'A programming error that occurs when running a program produces incorrect results.', 'A programming error that occurs when running a program produces incorrect results.', 7, 89, 1, 6, 9, '2019-09-02 13:13:39', '2019-09-02 13:13:39'),
(1722, 18, 97, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q7', 'The expression (3i - 2)(i + 1) - 7 can be simplified to which of the following expressions?', 'The expression (3i - 2)(i + 1) - 7 can be simplified to which of the following expressions?', 7, 92, 2, 6, 46, '2019-09-02 13:13:39', '2019-09-02 13:13:39'),
(1723, 18, 136, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q18', 'Private Button print = new button();', 'Private Button print = new button();', 7, 95, 2, 6, 61, '2019-09-02 13:13:39', '2019-09-02 13:13:39'),
(1724, 18, 76, 'CCS101 - INTRODUCTION TO COMPUTING _ Q21', '_______ is a duplicate copy of data or other computer content for use in the event that the original version is destroyed.', '_______ is a duplicate copy of data or other computer content for use in the event that the original version is destroyed.', 7, 89, 2, 6, 13, '2019-09-02 13:13:39', '2019-09-02 13:13:39'),
(1725, 18, 132, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q14', 'C# treats the multiple catch statements like cases in a _____________ statement.', 'C# treats the multiple catch statements like cases in a _____________ statement.', 7, 95, 1, 6, 58, '2019-09-02 13:13:39', '2019-09-02 13:13:39'),
(1726, 18, 113, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q23', 'Five different books (A, B, C, D and E) are to be arranged on a shelf. Books C and D are to be arranged first and second starting from the right of the shelf. The number of different orders in which books A, B and E may be arranged is', 'Five different books (A, B, C, D and E) are to be arranged on a shelf. Books C and D are to be arranged first and second starting from the right of the shelf. The number of different orders in which books A, B and E may be arranged is', 7, 92, 2, 6, 48, '2019-09-02 13:13:40', '2019-09-02 13:13:40'),
(1727, 18, 93, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q3', 'If 2x - 8 ≥ 2, then', 'If 2x - 8 ≥ 2, then', 7, 92, 1, 6, 39, '2019-09-02 13:13:40', '2019-09-02 13:13:40'),
(1728, 18, 89, 'CCS101 - INTRODUCTION TO COMPUTING - Q5', 'A memory management technique that uses hard drive space as additional RAM.', 'A memory management technique that uses hard drive space as additional RAM.', 7, 89, 1, 6, 2, '2019-09-02 13:13:40', '2019-09-02 13:13:40'),
(1729, 18, 39, 'CCS102 - COMPUTER PROGRAMMING 1 Q9', 'What of the following is the default value of an instance variable?', 'What of the following is the default value of an instance variable?', 7, 90, 1, 6, 25, '2019-09-02 13:13:40', '2019-09-02 13:13:40'),
(1730, 18, 33, 'IT01- CCS102 - COMPUTER PROGRAMMING 1 - Q3', 'Which of the following converts a type to a double type in C#?', 'Which of the following converts a type to a double type in C#?', 7, 90, 1, 6, 26, '2019-09-02 13:13:40', '2019-09-02 13:13:40'),
(1731, 18, 160, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q20', 'The shaded area of figure is best described by\n\n[[#img32]]', 'The shaded area of figure is best described by<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/5iL0Nsol7VkygnPftlQm5guoA5NqiGISBGevRke8.jpeg\" width=\"300\" height=\"150\" />', 7, 96, 3, 6, 83, '2019-09-02 13:13:40', '2019-09-02 13:13:40'),
(1732, 18, 38, 'CCS102 - COMPUTER PROGRAMMING 1 - Q8', 'Which of the following is true about try block in C#?', 'Which of the following is true about try block in C#?', 7, 90, 1, 6, 19, '2019-09-02 13:13:40', '2019-09-02 13:13:40'),
(1733, 18, 204, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q4', 'Android supports which features.', 'Android supports which features.', 7, 125, 1, 6, 92, '2019-09-02 13:13:40', '2019-09-02 13:13:40'),
(1734, 18, 78, 'CCS101 - INTRODUCTION TO COMPUTING -  Q19', 'This coding system is designed to support international languages like Chinese and Japanese.', 'This coding system is designed to support international languages like Chinese and Japanese.', 7, 89, 3, 6, 17, '2019-09-02 13:13:40', '2019-09-02 13:13:40'),
(1735, 18, 66, 'Binary to decimal conversion 1', 'Convert 10100011 from binary to decimal.', 'Convert 10100011 from binary to decimal.', 7, 89, 1, 6, 8, '2019-09-02 13:13:40', '2019-09-02 13:13:40'),
(1736, 18, 143, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q3', 'Power set of empty set has exactly _________ subset.', 'Power set of empty set has exactly _________ subset.', 7, 96, 1, 6, 77, '2019-09-02 13:13:40', '2019-09-02 13:13:40'),
(1737, 18, 61, 'CCS102 - COMPUTER PROGRAMMING 1 Q31', 'Where is array stored in memory?', 'Where is array stored in memory?', 7, 90, 2, 6, 31, '2019-09-02 13:13:40', '2019-09-02 13:13:40'),
(1738, 18, 215, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q15', 'Which is the latest mobile version of android?', 'Which is the latest mobile version of android?', 7, 125, 1, 6, 91, '2019-09-02 13:13:40', '2019-09-02 13:13:40'),
(1739, 18, 41, 'CCS102 - COMPUTER PROGRAMMING 1 Q11', 'What is correct syntax for main method of a java class?', 'What is correct syntax for main method of a java class?', 7, 90, 1, 6, 24, '2019-09-02 13:13:40', '2019-09-02 13:13:40'),
(1740, 18, 225, 'CCS101 - INTRODUCTION TO COMPUTING - Q7', 'Converting (1010111)<sub>2</sub> to base yields which of the following results?', 'Converting (1010111)<sub>2</sub> to base yields which of the following results?', 7, 89, 2, 6, 11, '2019-09-02 13:13:40', '2019-09-02 13:13:40'),
(1741, 18, 59, 'CCS102 - COMPUTER PROGRAMMING 1 Q29', 'What is the output of this program?\n\n[[#code24]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class evaluate <br />\n    {<br />\n        public static void main(String args[]) <br />\n            {<br />\n	        int arr[] = new int[] {0 , 1, 2, 3, 4, 5, 6, 7, 8, 9};<br />\n	        int n = 6;<br />\n                n = arr[arr[n] / 2];<br />\n	        System.out.println(arr[n] / 2);<br />\n            } <br />\n    }</code></pre>', 7, 90, 3, 6, 34, '2019-09-02 13:13:40', '2019-09-02 13:13:40'),
(1742, 18, 211, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q11', 'Web browser available in android based on', 'Web browser available in android based on', 7, 125, 1, 6, 85, '2019-09-02 13:13:40', '2019-09-02 13:13:40'),
(1743, 18, 122, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q4', 'These operators take two operands, such as arithmetic operators (+,-,*,/).', 'These operators take two operands, such as arithmetic operators (+,-,*,/).', 7, 95, 1, 6, 53, '2019-09-02 13:13:40', '2019-09-02 13:13:40'),
(1744, 18, 124, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q6', 'This data type stores the address of the value which means that they refer to a memory location.', 'This data type stores the address of the value which means that they refer to a memory location.', 7, 95, 1, 6, 52, '2019-09-02 13:13:40', '2019-09-02 13:13:40'),
(1745, 18, 285, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q29', 'The period of 2 sin x cos x is', 'The period of 2 sin x cos x is', 7, 92, 1, 6, 35, '2019-09-02 13:13:40', '2019-09-02 13:13:40'),
(1746, 18, 286, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q30', 'The probability that an electronic device produced by a company does not function properly is equal to 0.1. If 10 devices are bought, then the probability, to the nearest thousandth, that 7 devices function properly is', 'The probability that an electronic device produced by a company does not function properly is equal to 0.1. If 10 devices are bought, then the probability, to the nearest thousandth, that 7 devices function properly is', 7, 92, 3, 6, 49, '2019-09-02 13:13:40', '2019-09-02 13:13:40'),
(1747, 18, 289, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q33', 'A number of the form 213ab, where a and b are digits, has a reminder less than 10 when divided by 100. The sum of all the digits in the above number is equal to 13. Find the digit b.', 'A number of the form 213ab, where a and b are digits, has a reminder less than 10 when divided by 100. The sum of all the digits in the above number is equal to 13. Find the digit b.', 7, 92, 1, 6, 43, '2019-09-02 13:13:40', '2019-09-02 13:13:40'),
(1748, 18, 87, 'CCS101 - INTRODUCTION TO COMPUTING - Q8', '____________ are the four general operations that are performed in each machine cycle.', '____________ are the four general operations that are performed in each machine cycle.', 7, 89, 2, 6, 14, '2019-09-02 13:13:40', '2019-09-02 13:13:40'),
(1749, 18, 107, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q17', 'If Log <sub>4 </sub>(x) = 12, then log 2 (x / 4) is equal to', 'If Log <sub>4 </sub>(x) = 12, then log 2 (x / 4) is equal to', 7, 92, 1, 6, 40, '2019-09-02 13:13:40', '2019-09-02 13:13:40'),
(1750, 18, 40, 'CCS102 - COMPUTER PROGRAMMING 1 Q10', 'Static binding uses which information for binding?', 'Static binding uses which information for binding?', 7, 90, 1, 6, 23, '2019-09-02 13:13:40', '2019-09-02 13:13:40'),
(1751, 18, 212, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q12', 'Which company bought android?', 'Which company bought android?', 7, 125, 1, 6, 93, '2019-09-02 13:13:41', '2019-09-02 13:13:41'),
(1752, 18, 277, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q26', 'Which of the following will result from compiling this code, assuming that all other code for your form works properly?\n\n[[#code27]]', 'Which of the following will result from compiling this code, assuming that all other code for your form works properly?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">csharp</span></div><pre><code class=\"language-csharp\">try<br />\n{<br />\n  //Write code to allocate some resources<br />\n}<br />\nfinally<br />\n{<br />\n  //Write code to Dispose all allocated resources<br />\n}</code></pre>', 7, 95, 3, 6, 66, '2019-09-02 13:13:41', '2019-09-02 13:13:41'),
(1753, 18, 149, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q9', 'The union of the sets {1, 2, 5} and {1, 2, 6} is the set _______________.', 'The union of the sets {1, 2, 5} and {1, 2, 6} is the set _______________.', 7, 96, 2, 6, 81, '2019-09-02 13:13:41', '2019-09-02 13:13:41'),
(1754, 18, 52, 'CCS102 - COMPUTER PROGRAMMING 1 Q22', 'What is the output of this program?\n\n[[#code19]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class box <br />\n    {<br />\n        int width;<br />\n        int height;<br />\n        int length;<br />\n    } <br />\n    class mainclass <br />\n    {<br />\n        public static void main(String args[]) <br />\n        {        <br />\n             box obj = new box();<br />\n             obj.width = 10;<br />\n             obj.height = 2;<br />\n             obj.length = 10;<br />\n             int y = obj.width * obj.height * obj.length; <br />\n             System.out.print(y);<br />\n        } <br />\n    }</code></pre>', 7, 90, 3, 6, 32, '2019-09-02 13:13:41', '2019-09-02 13:13:41'),
(1755, 18, 111, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q21', 'For x greater than or equal to zero and less than or equal to 2 π, sin x and cos x are both decreasing on the intervals', 'For x greater than or equal to zero and less than or equal to 2 π, sin x and cos x are both decreasing on the intervals', 7, 92, 2, 6, 47, '2019-09-02 13:13:41', '2019-09-02 13:13:41'),
(1756, 18, 31, 'Order of operation - Q1', 'What is the output of the following code?\n\n[[#code14]]', 'What is the output of the following code?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">double x = 2;<br />\ndouble y = 3;<br />\ndouble z = 5;<br />\n<br />\ndouble output = x + x * y + (x + 2 * z);<br />\n<br />\nSystem.out.println(output);</code></pre>', 7, 90, 1, 6, 20, '2019-09-02 13:13:41', '2019-09-02 13:13:41'),
(1757, 18, 51, 'CCS102 - COMPUTER PROGRAMMING 1 Q21', 'What is the output of this program?\n\n[[#code18]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class main_class <br />\n    {<br />\n        public static void main(String args[])<br />\n        {<br />\n            int x = 9;<br />\n            if (x == 9) <br />\n            { <br />\n                int x = 8;<br />\n                System.out.println(x);<br />\n            }<br />\n        } <br />\n    }</code></pre>', 7, 90, 2, 6, 27, '2019-09-02 13:13:41', '2019-09-02 13:13:41'),
(1758, 18, 151, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q11', 'Two sets are called disjoint if there _____________ is the empty set.', 'Two sets are called disjoint if there _____________ is the empty set.', 7, 96, 1, 6, 73, '2019-09-02 13:13:41', '2019-09-02 13:13:41'),
(1759, 18, 112, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q22', 'A school committee consists of 2 teachers and 4 students. The number of different committees that can be formed from 5 teachers and 10 students is', 'A school committee consists of 2 teachers and 4 students. The number of different committees that can be formed from 5 teachers and 10 students is', 7, 92, 1, 6, 42, '2019-09-02 13:13:41', '2019-09-02 13:13:41'),
(1760, 18, 148, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q8', 'What is the Cardinality of the Power set of the set {0, 1, 2}.', 'What is the Cardinality of the Power set of the set {0, 1, 2}.', 7, 96, 1, 6, 72, '2019-09-02 13:13:41', '2019-09-02 13:13:41'),
(1761, 18, 214, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q14', 'Android is based on which kernel?', 'Android is based on which kernel?', 7, 125, 1, 6, 89, '2019-09-02 13:13:41', '2019-09-02 13:13:41'),
(1762, 18, 275, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q24', 'How should you arrange catch blocks?', 'How should you arrange catch blocks?', 7, 95, 2, 6, 64, '2019-09-02 13:13:41', '2019-09-02 13:13:41'),
(1763, 18, 246, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q22', 'Which of  the following holds Java source code for the application?', 'Which of  the following holds Java source code for the application?', 7, 125, 2, 6, 94, '2019-09-02 13:13:41', '2019-09-02 13:13:41'),
(1764, 18, 116, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q26', 'If f(x) is an odd function, then | f(x) | is', 'If f(x) is an odd function, then | f(x) | is', 7, 92, 2, 6, 44, '2019-09-02 13:13:41', '2019-09-02 13:13:41'),
(1765, 18, 108, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q18', 'The population of a country increased by an average of 2% per year from 2000 to 2003. If the population of this country was 2 000 000 on December 31, 2003, then the population of this country on January 1, 2000, to the nearest thousand would have been', 'The population of a country increased by an average of 2% per year from 2000 to 2003. If the population of this country was 2 000 000 on December 31, 2003, then the population of this country on January 1, 2000, to the nearest thousand would have been', 7, 92, 3, 6, 50, '2019-09-02 13:13:41', '2019-09-02 13:13:41'),
(1766, 18, 48, 'CCS102 - COMPUTER PROGRAMMING 1 Q18', 'What is JRE?', 'What is JRE?', 7, 90, 2, 6, 29, '2019-09-02 13:13:41', '2019-09-02 13:13:41'),
(1767, 18, 243, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q19', 'Android provides a few standard themes, listed in ________.', 'Android provides a few standard themes, listed in ________.', 7, 125, 2, 6, 96, '2019-09-02 13:13:41', '2019-09-02 13:13:41'),
(1768, 18, 42, 'CCS102 - COMPUTER PROGRAMMING 1 Q12', 'Which of the following is not a keyword in java?', 'Which of the following is not a keyword in java?', 7, 90, 1, 6, 18, '2019-09-02 13:13:41', '2019-09-02 13:13:41'),
(1769, 18, 260, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q23', 'In the given figure the if n(A)=20,n(U)=50,n(C)=10 and n(A∩B)=5 then n(B)=? \n\n[[#img34]]', 'In the given figure the if n(A)=20,n(U)=50,n(C)=10 and n(A∩B)=5 then n(B)=? <br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/23B9WIeQ00wE4pw7nsRG6le8KJWkZ1jI9HG7nYv3.jpeg\" width=\"300\" height=\"150\" />', 7, 96, 2, 6, 80, '2019-09-02 13:13:41', '2019-09-02 13:13:41'),
(1770, 18, 126, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q8', 'A control used to show a list of strings which you can select.', 'A control used to show a list of strings which you can select.', 7, 95, 1, 6, 56, '2019-09-02 13:13:41', '2019-09-02 13:13:41'),
(1771, 18, 256, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q32', 'What is the difference between content values and cursor in android SQlite?', 'What is the difference between content values and cursor in android SQlite?', 7, 125, 3, 6, 98, '2019-09-02 13:13:41', '2019-09-02 13:13:41'),
(1772, 18, 244, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q20', 'To update contents of content provider using curser and commit you need to call _______________.', 'To update contents of content provider using curser and commit you need to call _______________.', 7, 125, 2, 6, 95, '2019-09-02 13:13:41', '2019-09-02 13:13:41'),
(1773, 18, 70, 'Projectile motion 2', 'An adventurous cliff jumper runs horizontally off a cliff. We can ignore air resistance.\n\n[[#img27]]\n\nWhich diagram best describes the horizontal velocity vectors and trajectory during the person’s fall?\n\nAssume the origin of the coordinate system to be the cliff edge.\n\nA red dot represents a vector of zero magnitude.', 'An adventurous cliff jumper runs horizontally off a cliff. We can ignore air resistance.<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/PgCOEtvEENxNaqgGLMWLrysCTt8GwyXUqH8p2sz7.png\" width=\"200\" height=\"200\" /><br />\n<br />\nWhich diagram best describes the horizontal velocity vectors and trajectory during the person’s fall?<br />\n<br />\nAssume the origin of the coordinate system to be the cliff edge.<br />\n<br />\nA red dot represents a vector of zero magnitude.', 7, 89, 1, 6, 4, '2019-09-02 13:13:41', '2019-09-02 13:13:41'),
(1774, 18, 254, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q30', 'What is an HTTP client class in android?', 'What is an HTTP client class in android?', 7, 125, 3, 6, 100, '2019-09-02 13:13:41', '2019-09-02 13:13:41'),
(1775, 18, 140, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q22', 'A _______ is an identifier that denotes a storage location.', 'A _______ is an identifier that denotes a storage location.', 7, 95, 2, 6, 63, '2019-09-02 13:13:41', '2019-09-02 13:13:41'),
(1776, 18, 270, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q33', 'In the given AP series the term at position 11 would be\n5, 8, 11, 14, 17, 20………50.', 'In the given AP series the term at position 11 would be<br />\n5, 8, 11, 14, 17, 20………50.', 7, 96, 3, 6, 82, '2019-09-02 13:13:41', '2019-09-02 13:13:41'),
(1777, 18, 92, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q2', 'Solve the inequality \n4x + 8 > 5x +9', 'Solve the inequality <br />\n4x + 8 > 5x +9', 7, 92, 1, 6, 37, '2019-09-02 13:13:41', '2019-09-02 13:13:41'),
(1778, 18, 144, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q4', 'What is the cardinality of the set of odd positive integers less than 10?', 'What is the cardinality of the set of odd positive integers less than 10?', 7, 96, 1, 6, 71, '2019-09-02 13:13:41', '2019-09-02 13:13:41'),
(1779, 18, 147, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q7', 'The set of positive integers is _____________.', 'The set of positive integers is _____________.', 7, 96, 1, 6, 70, '2019-09-02 13:13:41', '2019-09-02 13:13:41'),
(1780, 18, 129, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q11', 'A control similar to an ordinary label having an underline and resembles a link on a web page.', 'A control similar to an ordinary label having an underline and resembles a link on a web page.', 7, 95, 1, 6, 54, '2019-09-02 13:13:41', '2019-09-02 13:13:41'),
(1781, 18, 219, 'Computer Hardware - Q3', 'A device that enables a computer to communicate over telephone lines.', 'A device that enables a computer to communicate over telephone lines.', 7, 89, 1, 6, 1, '2019-09-02 13:13:41', '2019-09-02 13:13:41'),
(1782, 18, 202, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q2', 'What is android?', 'What is android?', 7, 125, 1, 6, 86, '2019-09-02 13:13:41', '2019-09-02 13:13:41'),
(1783, 18, 58, 'CCS102 - COMPUTER PROGRAMMING 1 Q28', 'What is the output of this program?\n\n[[#code22]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class array_output <br />\n    {<br />\n        public static void main(String args[]) <br />\n        {<br />\n            int array_variable [] = new int[10];<br />\n	    for (int i = 0; i < 10; ++i) <br />\n            {<br />\n                array_variable[i] = i;<br />\n                System.out.print(array_variable[i] + \" \");<br />\n                i++;<br />\n            }<br />\n        } <br />\n    }</code></pre>', 7, 90, 3, 6, 33, '2019-09-02 13:13:41', '2019-09-02 13:13:41'),
(1784, 18, 121, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q3', 'These are additional operators used to return Boolean values.', 'These are additional operators used to return Boolean values.', 7, 95, 1, 6, 55, '2019-09-02 13:13:41', '2019-09-02 13:13:41'),
(1785, 18, 99, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q9', 'Evaluate the following:\n \nlog<sub>4</sub> 25', 'Evaluate the following:<br />\n <br />\nlog<sub>4</sub> 25', 7, 92, 1, 6, 41, '2019-09-02 13:13:41', '2019-09-02 13:13:41'),
(1786, 18, 205, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q5', 'For ___________, code used by Android is not open source.', 'For ___________, code used by Android is not open source.', 7, 125, 1, 6, 90, '2019-09-02 13:13:41', '2019-09-02 13:13:41'),
(1787, 18, 114, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q24', 'The mean of a data set is equal to 10 and its standard deviation is equal to 1. If we add 5 to each data value, then the mean and standard deviation become', 'The mean of a data set is equal to 10 and its standard deviation is equal to 1. If we add 5 to each data value, then the mean and standard deviation become', 7, 92, 2, 6, 45, '2019-09-02 13:13:41', '2019-09-02 13:13:41'),
(1788, 18, 74, 'CCS101 - INTRODUCTION TO COMPUTING - Q23', 'An electronic tool that allows information to be input, processed, and output.', 'An electronic tool that allows information to be input, processed, and output.', 7, 89, 1, 6, 6, '2019-09-02 13:13:41', '2019-09-02 13:13:41'),
(1789, 18, 72, 'CCS101 - INTRODUCTION TO COMPUTING - Q25', 'What type of software is a screen saver?', 'What type of software is a screen saver?', 7, 89, 2, 6, 12, '2019-09-02 13:13:41', '2019-09-02 13:13:41'),
(1790, 18, 104, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q14', 'What is the result when you put the expression x<sup>2</sup> +10x+41 into vertex form by completing the square ?', 'What is the result when you put the expression x<sup>2</sup> +10x+41 into vertex form by completing the square ?', 7, 92, 3, 6, 51, '2019-09-02 13:13:41', '2019-09-02 13:13:41'),
(1791, 18, 138, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q20', 'A method_____an exception when that method detects that a problem has occured.', 'A method_____an exception when that method detects that a problem has occured.', 7, 95, 2, 6, 65, '2019-09-02 13:13:41', '2019-09-02 13:13:41'),
(1792, 18, 203, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q3', 'Android doesn\'t  support which format?', 'Android doesn\'t  support which format?', 7, 125, 1, 6, 87, '2019-09-02 13:13:41', '2019-09-02 13:13:41'),
(1793, 18, 68, 'Describing two-dimensional motion with vectors', 'A golfer hits a golf ball upwards at an angle of 75°, degree with the horizontal. We can ignore air resistance.\n\n[[#img22]]\n\nWhich graph best describes the golf ball\'s vertical displacement over time?\n\nAssume the origin of the coordinate system to be the point on the ground where the ball was initially at rest.', 'A golfer hits a golf ball upwards at an angle of 75°, degree with the horizontal. We can ignore air resistance.<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/MYpfYGJo93eMWxPVag4ii0jWIwamFw8EKp4yFlbj.png\" width=\"300\" height=\"150\" /><br />\n<br />\nWhich graph best describes the golf ball\'s vertical displacement over time?<br />\n<br />\nAssume the origin of the coordinate system to be the point on the ground where the ball was initially at rest.', 7, 89, 1, 6, 3, '2019-09-02 13:13:42', '2019-09-02 13:13:42'),
(1794, 18, 90, 'CCS101 - INTRODUCTION TO COMPUTING - Q4', 'A letter, digit, or special character is represented by a code in a ___.', 'A letter, digit, or special character is represented by a code in a ___.', 7, 89, 3, 6, 15, '2019-09-02 13:13:42', '2019-09-02 13:13:42'),
(1795, 18, 142, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q2', 'The set O of odd positive integers less than 10 can be expressed by _____________.', 'The set O of odd positive integers less than 10 can be expressed by _____________.', 7, 96, 1, 6, 76, '2019-09-02 13:13:42', '2019-09-02 13:13:42'),
(1796, 18, 95, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q5', 'What is the square root of -144?', 'What is the square root of -144?', 7, 92, 1, 6, 38, '2019-09-02 13:13:42', '2019-09-02 13:13:42'),
(1797, 18, 162, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q22', 'If n(A)=10 , n(B)=30,n(C)=50 and if set A,B,C are pairwise disjoint then which of the following is correct?', 'If n(A)=10 , n(B)=30,n(C)=50 and if set A,B,C are pairwise disjoint then which of the following is correct?', 7, 96, 2, 6, 79, '2019-09-02 13:13:42', '2019-09-02 13:13:42'),
(1798, 18, 131, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q13', 'A method of MessageBox class that allows you to call a message box for prompting user with messages and information.', 'A method of MessageBox class that allows you to call a message box for prompting user with messages and information.', 7, 95, 1, 6, 59, '2019-09-02 13:13:42', '2019-09-02 13:13:42'),
(1799, 18, 283, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q32', 'You have a TextBox control and a Help button that the user can press to get help on allowable values. You validate the data entered by the user in the TextBox control. If the user enters an invalid value, you set the focus back in the control using the Cancel property of the CancelEventArgs. A user reports that once he enters invalid data in the text box, he cannot click the Help button. What should you do to correct the problem?', 'You have a TextBox control and a Help button that the user can press to get help on allowable values. You validate the data entered by the user in the TextBox control. If the user enters an invalid value, you set the focus back in the control using the Cancel property of the CancelEventArgs. A user reports that once he enters invalid data in the text box, he cannot click the Help button. What should you do to correct the problem?', 7, 95, 3, 6, 67, '2019-09-02 13:13:42', '2019-09-02 13:13:42'),
(1800, 18, 32, 'CCS102 - COMPUTER PROGRAMMING 1 - Q2', 'Which of the following is a reserved keyword in C#?', 'Which of the following is a reserved keyword in C#?', 7, 90, 1, 6, 21, '2019-09-02 13:13:42', '2019-09-02 13:13:42'),
(1801, 19, 70, 'Projectile motion 2', 'An adventurous cliff jumper runs horizontally off a cliff. We can ignore air resistance.\n\n[[#img27]]\n\nWhich diagram best describes the horizontal velocity vectors and trajectory during the person’s fall?\n\nAssume the origin of the coordinate system to be the cliff edge.\n\nA red dot represents a vector of zero magnitude.', 'An adventurous cliff jumper runs horizontally off a cliff. We can ignore air resistance.<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/PgCOEtvEENxNaqgGLMWLrysCTt8GwyXUqH8p2sz7.png\" width=\"200\" height=\"200\" /><br />\n<br />\nWhich diagram best describes the horizontal velocity vectors and trajectory during the person’s fall?<br />\n<br />\nAssume the origin of the coordinate system to be the cliff edge.<br />\n<br />\nA red dot represents a vector of zero magnitude.', 7, 89, 1, 6, 4, '2019-09-02 13:26:55', '2019-09-02 13:26:55'),
(1802, 19, 143, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q3', 'Power set of empty set has exactly _________ subset.', 'Power set of empty set has exactly _________ subset.', 7, 96, 1, 6, 77, '2019-09-02 13:26:55', '2019-09-02 13:26:55'),
(1803, 19, 32, 'CCS102 - COMPUTER PROGRAMMING 1 - Q2', 'Which of the following is a reserved keyword in C#?', 'Which of the following is a reserved keyword in C#?', 7, 90, 1, 6, 21, '2019-09-02 13:26:56', '2019-09-02 13:26:56'),
(1804, 19, 252, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q28', 'What is bean class in android?', 'What is bean class in android?', 7, 125, 3, 6, 99, '2019-09-02 13:26:56', '2019-09-02 13:26:56'),
(1805, 19, 61, 'CCS102 - COMPUTER PROGRAMMING 1 Q31', 'Where is array stored in memory?', 'Where is array stored in memory?', 7, 90, 2, 6, 31, '2019-09-02 13:26:56', '2019-09-02 13:26:56'),
(1806, 19, 112, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q22', 'A school committee consists of 2 teachers and 4 students. The number of different committees that can be formed from 5 teachers and 10 students is', 'A school committee consists of 2 teachers and 4 students. The number of different committees that can be formed from 5 teachers and 10 students is', 7, 92, 1, 6, 42, '2019-09-02 13:26:56', '2019-09-02 13:26:56'),
(1807, 19, 203, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q3', 'Android doesn\'t  support which format?', 'Android doesn\'t  support which format?', 7, 125, 1, 6, 87, '2019-09-02 13:26:56', '2019-09-02 13:26:56'),
(1808, 19, 97, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q7', 'The expression (3i - 2)(i + 1) - 7 can be simplified to which of the following expressions?', 'The expression (3i - 2)(i + 1) - 7 can be simplified to which of the following expressions?', 7, 92, 2, 6, 46, '2019-09-02 13:26:56', '2019-09-02 13:26:56'),
(1809, 19, 147, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q7', 'The set of positive integers is _____________.', 'The set of positive integers is _____________.', 7, 96, 1, 6, 70, '2019-09-02 13:26:56', '2019-09-02 13:26:56'),
(1810, 19, 68, 'Describing two-dimensional motion with vectors', 'A golfer hits a golf ball upwards at an angle of 75°, degree with the horizontal. We can ignore air resistance.\n\n[[#img22]]\n\nWhich graph best describes the golf ball\'s vertical displacement over time?\n\nAssume the origin of the coordinate system to be the point on the ground where the ball was initially at rest.', 'A golfer hits a golf ball upwards at an angle of 75°, degree with the horizontal. We can ignore air resistance.<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/MYpfYGJo93eMWxPVag4ii0jWIwamFw8EKp4yFlbj.png\" width=\"300\" height=\"150\" /><br />\n<br />\nWhich graph best describes the golf ball\'s vertical displacement over time?<br />\n<br />\nAssume the origin of the coordinate system to be the point on the ground where the ball was initially at rest.', 7, 89, 1, 6, 3, '2019-09-02 13:26:56', '2019-09-02 13:26:56'),
(1811, 19, 107, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q17', 'If Log <sub>4 </sub>(x) = 12, then log 2 (x / 4) is equal to', 'If Log <sub>4 </sub>(x) = 12, then log 2 (x / 4) is equal to', 7, 92, 1, 6, 40, '2019-09-02 13:26:56', '2019-09-02 13:26:56');
INSERT INTO `answer_sheet_test_questions` (`id`, `answer_sheet_id`, `test_question_id`, `title`, `body`, `body_html`, `student_outcome_id`, `course_id`, `difficulty_level_id`, `performance_criteria_id`, `pos_order`, `created_at`, `updated_at`) VALUES
(1812, 19, 119, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q1', 'This is a repetition control stricture that allows you to efficiently write a loop that needs to execute a specific number of times.', 'This is a repetition control stricture that allows you to efficiently write a loop that needs to execute a specific number of times.', 7, 95, 1, 6, 57, '2019-09-02 13:26:56', '2019-09-02 13:26:56'),
(1813, 19, 270, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q33', 'In the given AP series the term at position 11 would be\n5, 8, 11, 14, 17, 20………50.', 'In the given AP series the term at position 11 would be<br />\n5, 8, 11, 14, 17, 20………50.', 7, 96, 3, 6, 82, '2019-09-02 13:26:56', '2019-09-02 13:26:56'),
(1814, 19, 160, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q20', 'The shaded area of figure is best described by\n\n[[#img32]]', 'The shaded area of figure is best described by<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/5iL0Nsol7VkygnPftlQm5guoA5NqiGISBGevRke8.jpeg\" width=\"300\" height=\"150\" />', 7, 96, 3, 6, 83, '2019-09-02 13:26:56', '2019-09-02 13:26:56'),
(1815, 19, 87, 'CCS101 - INTRODUCTION TO COMPUTING - Q8', '____________ are the four general operations that are performed in each machine cycle.', '____________ are the four general operations that are performed in each machine cycle.', 7, 89, 2, 6, 14, '2019-09-02 13:26:56', '2019-09-02 13:26:56'),
(1816, 19, 50, 'CCS102 - COMPUTER PROGRAMMING Q20', 'What happens when thread\'s yield() method is called?', 'What happens when thread\'s yield() method is called?', 7, 90, 2, 6, 28, '2019-09-02 13:26:56', '2019-09-02 13:26:56'),
(1817, 19, 121, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q3', 'These are additional operators used to return Boolean values.', 'These are additional operators used to return Boolean values.', 7, 95, 1, 6, 55, '2019-09-02 13:26:56', '2019-09-02 13:26:56'),
(1818, 19, 211, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q11', 'Web browser available in android based on', 'Web browser available in android based on', 7, 125, 1, 6, 85, '2019-09-02 13:26:56', '2019-09-02 13:26:56'),
(1819, 19, 31, 'Order of operation - Q1', 'What is the output of the following code?\n\n[[#code14]]', 'What is the output of the following code?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">double x = 2;<br />\ndouble y = 3;<br />\ndouble z = 5;<br />\n<br />\ndouble output = x + x * y + (x + 2 * z);<br />\n<br />\nSystem.out.println(output);</code></pre>', 7, 90, 1, 6, 20, '2019-09-02 13:26:56', '2019-09-02 13:26:56'),
(1820, 19, 145, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q5', 'What is the Cartesian product of A = {1, 2} and B = {a, b}?', 'What is the Cartesian product of A = {1, 2} and B = {a, b}?', 7, 96, 2, 6, 78, '2019-09-02 13:26:56', '2019-09-02 13:26:56'),
(1821, 19, 95, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q5', 'What is the square root of -144?', 'What is the square root of -144?', 7, 92, 1, 6, 38, '2019-09-02 13:26:56', '2019-09-02 13:26:56'),
(1822, 19, 39, 'CCS102 - COMPUTER PROGRAMMING 1 Q9', 'What of the following is the default value of an instance variable?', 'What of the following is the default value of an instance variable?', 7, 90, 1, 6, 25, '2019-09-02 13:26:56', '2019-09-02 13:26:56'),
(1823, 19, 144, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q4', 'What is the cardinality of the set of odd positive integers less than 10?', 'What is the cardinality of the set of odd positive integers less than 10?', 7, 96, 1, 6, 71, '2019-09-02 13:26:56', '2019-09-02 13:26:56'),
(1824, 19, 275, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q24', 'How should you arrange catch blocks?', 'How should you arrange catch blocks?', 7, 95, 2, 6, 64, '2019-09-02 13:26:56', '2019-09-02 13:26:56'),
(1825, 19, 108, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q18', 'The population of a country increased by an average of 2% per year from 2000 to 2003. If the population of this country was 2 000 000 on December 31, 2003, then the population of this country on January 1, 2000, to the nearest thousand would have been', 'The population of a country increased by an average of 2% per year from 2000 to 2003. If the population of this country was 2 000 000 on December 31, 2003, then the population of this country on January 1, 2000, to the nearest thousand would have been', 7, 92, 3, 6, 50, '2019-09-02 13:26:56', '2019-09-02 13:26:56'),
(1826, 19, 127, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q9', 'Commonly used  control to execute commansd when it is clicked.', 'Commonly used  control to execute commansd when it is clicked.', 7, 95, 1, 6, 60, '2019-09-02 13:26:56', '2019-09-02 13:26:56'),
(1827, 19, 104, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q14', 'What is the result when you put the expression x<sup>2</sup> +10x+41 into vertex form by completing the square ?', 'What is the result when you put the expression x<sup>2</sup> +10x+41 into vertex form by completing the square ?', 7, 92, 3, 6, 51, '2019-09-02 13:26:56', '2019-09-02 13:26:56'),
(1828, 19, 220, 'Computer Hardware - Q2', 'An input device that reads printed text and graphics and transfers them to a computer in digital form.', 'An input device that reads printed text and graphics and transfers them to a computer in digital form.', 7, 89, 1, 6, 7, '2019-09-02 13:26:56', '2019-09-02 13:26:56'),
(1829, 19, 142, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q2', 'The set O of odd positive integers less than 10 can be expressed by _____________.', 'The set O of odd positive integers less than 10 can be expressed by _____________.', 7, 96, 1, 6, 76, '2019-09-02 13:26:56', '2019-09-02 13:26:56'),
(1830, 19, 33, 'IT01- CCS102 - COMPUTER PROGRAMMING 1 - Q3', 'Which of the following converts a type to a double type in C#?', 'Which of the following converts a type to a double type in C#?', 7, 90, 1, 6, 26, '2019-09-02 13:26:56', '2019-09-02 13:26:56'),
(1831, 19, 116, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q26', 'If f(x) is an odd function, then | f(x) | is', 'If f(x) is an odd function, then | f(x) | is', 7, 92, 2, 6, 44, '2019-09-02 13:26:56', '2019-09-02 13:26:56'),
(1832, 19, 289, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q33', 'A number of the form 213ab, where a and b are digits, has a reminder less than 10 when divided by 100. The sum of all the digits in the above number is equal to 13. Find the digit b.', 'A number of the form 213ab, where a and b are digits, has a reminder less than 10 when divided by 100. The sum of all the digits in the above number is equal to 13. Find the digit b.', 7, 92, 1, 6, 43, '2019-09-02 13:26:56', '2019-09-02 13:26:56'),
(1833, 19, 66, 'Binary to decimal conversion 1', 'Convert 10100011 from binary to decimal.', 'Convert 10100011 from binary to decimal.', 7, 89, 1, 6, 8, '2019-09-02 13:26:56', '2019-09-02 13:26:56'),
(1834, 19, 267, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q30', 'A floor function map a real number to :', 'A floor function map a real number to :', 7, 96, 3, 6, 84, '2019-09-02 13:26:56', '2019-09-02 13:26:56'),
(1835, 19, 126, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q8', 'A control used to show a list of strings which you can select.', 'A control used to show a list of strings which you can select.', 7, 95, 1, 6, 56, '2019-09-02 13:26:56', '2019-09-02 13:26:56'),
(1836, 19, 122, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q4', 'These operators take two operands, such as arithmetic operators (+,-,*,/).', 'These operators take two operands, such as arithmetic operators (+,-,*,/).', 7, 95, 1, 6, 53, '2019-09-02 13:26:56', '2019-09-02 13:26:56'),
(1837, 19, 277, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q26', 'Which of the following will result from compiling this code, assuming that all other code for your form works properly?\n\n[[#code27]]', 'Which of the following will result from compiling this code, assuming that all other code for your form works properly?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">csharp</span></div><pre><code class=\"language-csharp\">try<br />\n{<br />\n  //Write code to allocate some resources<br />\n}<br />\nfinally<br />\n{<br />\n  //Write code to Dispose all allocated resources<br />\n}</code></pre>', 7, 95, 3, 6, 66, '2019-09-02 13:26:56', '2019-09-02 13:26:56'),
(1838, 19, 260, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q23', 'In the given figure the if n(A)=20,n(U)=50,n(C)=10 and n(A∩B)=5 then n(B)=? \n\n[[#img34]]', 'In the given figure the if n(A)=20,n(U)=50,n(C)=10 and n(A∩B)=5 then n(B)=? <br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/23B9WIeQ00wE4pw7nsRG6le8KJWkZ1jI9HG7nYv3.jpeg\" width=\"300\" height=\"150\" />', 7, 96, 2, 6, 80, '2019-09-02 13:26:56', '2019-09-02 13:26:56'),
(1839, 19, 92, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q2', 'Solve the inequality \n4x + 8 > 5x +9', 'Solve the inequality <br />\n4x + 8 > 5x +9', 7, 92, 1, 6, 37, '2019-09-02 13:26:56', '2019-09-02 13:26:56'),
(1840, 19, 48, 'CCS102 - COMPUTER PROGRAMMING 1 Q18', 'What is JRE?', 'What is JRE?', 7, 90, 2, 6, 29, '2019-09-02 13:26:56', '2019-09-02 13:26:56'),
(1841, 19, 223, 'CC101 - INTRODUCTION TO COMPUTING - Q11', 'The sum of 11101 + 10111 equals ________.', 'The sum of 11101 + 10111 equals ________.', 7, 89, 2, 6, 10, '2019-09-02 13:26:56', '2019-09-02 13:26:56'),
(1842, 19, 155, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q15', 'Let the set A is {1, 2, 3} and B is {2, 3, 4}. Then number of elements in A U B is _____.', 'Let the set A is {1, 2, 3} and B is {2, 3, 4}. Then number of elements in A U B is _____.', 7, 96, 1, 6, 69, '2019-09-02 13:26:57', '2019-09-02 13:26:57'),
(1843, 19, 57, 'CCS102 - COMPUTER PROGRAMMING 1 Q27', 'Which of these is necessary to specify at time of array initialization?', 'Which of these is necessary to specify at time of array initialization?', 7, 90, 2, 6, 30, '2019-09-02 13:26:57', '2019-09-02 13:26:57'),
(1844, 19, 219, 'Computer Hardware - Q3', 'A device that enables a computer to communicate over telephone lines.', 'A device that enables a computer to communicate over telephone lines.', 7, 89, 1, 6, 1, '2019-09-02 13:26:57', '2019-09-02 13:26:57'),
(1845, 19, 156, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q16', 'If A has 4 elements B has 8 elements then the minimum and maximum number of elements in A U B are respectively', 'If A has 4 elements B has 8 elements then the minimum and maximum number of elements in A U B are respectively', 7, 96, 1, 6, 75, '2019-09-02 13:26:57', '2019-09-02 13:26:57'),
(1846, 19, 136, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q18', 'Private Button print = new button();', 'Private Button print = new button();', 7, 95, 2, 6, 61, '2019-09-02 13:26:57', '2019-09-02 13:26:57'),
(1847, 19, 89, 'CCS101 - INTRODUCTION TO COMPUTING - Q5', 'A memory management technique that uses hard drive space as additional RAM.', 'A memory management technique that uses hard drive space as additional RAM.', 7, 89, 1, 6, 2, '2019-09-02 13:26:57', '2019-09-02 13:26:57'),
(1848, 19, 40, 'CCS102 - COMPUTER PROGRAMMING 1 Q10', 'Static binding uses which information for binding?', 'Static binding uses which information for binding?', 7, 90, 1, 6, 23, '2019-09-02 13:26:57', '2019-09-02 13:26:57'),
(1849, 19, 34, 'IT01- CCS102 - COMPUTER PROGRAMMING 1 - Q4', 'Which of the following operator returns the size of a data type in C#?', 'Which of the following operator returns the size of a data type in C#?', 7, 90, 1, 6, 22, '2019-09-02 13:26:57', '2019-09-02 13:26:57'),
(1850, 19, 58, 'CCS102 - COMPUTER PROGRAMMING 1 Q28', 'What is the output of this program?\n\n[[#code22]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class array_output <br />\n    {<br />\n        public static void main(String args[]) <br />\n        {<br />\n            int array_variable [] = new int[10];<br />\n	    for (int i = 0; i < 10; ++i) <br />\n            {<br />\n                array_variable[i] = i;<br />\n                System.out.print(array_variable[i] + \" \");<br />\n                i++;<br />\n            }<br />\n        } <br />\n    }</code></pre>', 7, 90, 3, 6, 33, '2019-09-02 13:26:57', '2019-09-02 13:26:57'),
(1851, 19, 78, 'CCS101 - INTRODUCTION TO COMPUTING -  Q19', 'This coding system is designed to support international languages like Chinese and Japanese.', 'This coding system is designed to support international languages like Chinese and Japanese.', 7, 89, 3, 6, 17, '2019-09-02 13:26:57', '2019-09-02 13:26:57'),
(1852, 19, 207, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q7', 'ABD stands for', 'ABD stands for', 7, 125, 1, 6, 88, '2019-09-02 13:26:57', '2019-09-02 13:26:57'),
(1853, 19, 111, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q21', 'For x greater than or equal to zero and less than or equal to 2 π, sin x and cos x are both decreasing on the intervals', 'For x greater than or equal to zero and less than or equal to 2 π, sin x and cos x are both decreasing on the intervals', 7, 92, 2, 6, 47, '2019-09-02 13:26:57', '2019-09-02 13:26:57'),
(1854, 19, 205, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q5', 'For ___________, code used by Android is not open source.', 'For ___________, code used by Android is not open source.', 7, 125, 1, 6, 90, '2019-09-02 13:26:57', '2019-09-02 13:26:57'),
(1855, 19, 132, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q14', 'C# treats the multiple catch statements like cases in a _____________ statement.', 'C# treats the multiple catch statements like cases in a _____________ statement.', 7, 95, 1, 6, 58, '2019-09-02 13:26:57', '2019-09-02 13:26:57'),
(1856, 19, 114, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q24', 'The mean of a data set is equal to 10 and its standard deviation is equal to 1. If we add 5 to each data value, then the mean and standard deviation become', 'The mean of a data set is equal to 10 and its standard deviation is equal to 1. If we add 5 to each data value, then the mean and standard deviation become', 7, 92, 2, 6, 45, '2019-09-02 13:26:57', '2019-09-02 13:26:57'),
(1857, 19, 248, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q24', 'What is the use of content provider in android?', 'What is the use of content provider in android?', 7, 125, 2, 6, 97, '2019-09-02 13:26:57', '2019-09-02 13:26:57'),
(1858, 19, 79, 'CCS101 - INTRODUCTION TO COMPUTING -Q18', 'Which of the following is/are not part of the CPU?', 'Which of the following is/are not part of the CPU?', 7, 89, 3, 6, 16, '2019-09-02 13:26:57', '2019-09-02 13:26:57'),
(1859, 19, 131, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q13', 'A method of MessageBox class that allows you to call a message box for prompting user with messages and information.', 'A method of MessageBox class that allows you to call a message box for prompting user with messages and information.', 7, 95, 1, 6, 59, '2019-09-02 13:26:57', '2019-09-02 13:26:57'),
(1860, 19, 138, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q20', 'A method_____an exception when that method detects that a problem has occured.', 'A method_____an exception when that method detects that a problem has occured.', 7, 95, 2, 6, 65, '2019-09-02 13:26:57', '2019-09-02 13:26:57'),
(1861, 19, 124, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q6', 'This data type stores the address of the value which means that they refer to a memory location.', 'This data type stores the address of the value which means that they refer to a memory location.', 7, 95, 1, 6, 52, '2019-09-02 13:26:57', '2019-09-02 13:26:57'),
(1862, 19, 278, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q27', 'What will be the output of the following code?\n\n[[#code28]]', 'What will be the output of the following code?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">csharp</span></div><pre><code class=\"language-csharp\">try<br />\n{<br />\n  int num = 100;<br />\n  int den = 0;<br />\n  try<br />\n  {<br />\n    MessageBox.Show(\"Message1\");<br />\n    int res = num/den;<br />\n    MessageBox.Show(\"Message2\");<br />\n  }<br />\n  catch(ArithmeticException ae)<br />\n  {<br />\n    MessageBox.Show(\"Message3\");<br />\n  }<br />\n  MessageBox.Show(\"Message4\");<br />\n}</code></pre>', 7, 95, 3, 6, 68, '2019-09-02 13:26:57', '2019-09-02 13:26:57'),
(1863, 19, 286, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q30', 'The probability that an electronic device produced by a company does not function properly is equal to 0.1. If 10 devices are bought, then the probability, to the nearest thousandth, that 7 devices function properly is', 'The probability that an electronic device produced by a company does not function properly is equal to 0.1. If 10 devices are bought, then the probability, to the nearest thousandth, that 7 devices function properly is', 7, 92, 3, 6, 49, '2019-09-02 13:26:57', '2019-09-02 13:26:57'),
(1864, 19, 151, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q11', 'Two sets are called disjoint if there _____________ is the empty set.', 'Two sets are called disjoint if there _____________ is the empty set.', 7, 96, 1, 6, 73, '2019-09-02 13:26:57', '2019-09-02 13:26:57'),
(1865, 19, 77, 'CCS101 - INTRODUCTION TO COMPUTING - Q20', 'A programming error that occurs when running a program produces incorrect results.', 'A programming error that occurs when running a program produces incorrect results.', 7, 89, 1, 6, 9, '2019-09-02 13:26:57', '2019-09-02 13:26:57'),
(1866, 19, 214, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q14', 'Android is based on which kernel?', 'Android is based on which kernel?', 7, 125, 1, 6, 89, '2019-09-02 13:26:57', '2019-09-02 13:26:57'),
(1867, 19, 137, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q19', 'Polymorphism occurs when the methods of the child class.', 'Polymorphism occurs when the methods of the child class.', 7, 95, 2, 6, 62, '2019-09-02 13:26:57', '2019-09-02 13:26:57'),
(1868, 19, 76, 'CCS101 - INTRODUCTION TO COMPUTING _ Q21', '_______ is a duplicate copy of data or other computer content for use in the event that the original version is destroyed.', '_______ is a duplicate copy of data or other computer content for use in the event that the original version is destroyed.', 7, 89, 2, 6, 13, '2019-09-02 13:26:57', '2019-09-02 13:26:57'),
(1869, 19, 99, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q9', 'Evaluate the following:\n \nlog<sub>4</sub> 25', 'Evaluate the following:<br />\n <br />\nlog<sub>4</sub> 25', 7, 92, 1, 6, 41, '2019-09-02 13:26:57', '2019-09-02 13:26:57'),
(1870, 19, 113, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q23', 'Five different books (A, B, C, D and E) are to be arranged on a shelf. Books C and D are to be arranged first and second starting from the right of the shelf. The number of different orders in which books A, B and E may be arranged is', 'Five different books (A, B, C, D and E) are to be arranged on a shelf. Books C and D are to be arranged first and second starting from the right of the shelf. The number of different orders in which books A, B and E may be arranged is', 7, 92, 2, 6, 48, '2019-09-02 13:26:57', '2019-09-02 13:26:57'),
(1871, 19, 150, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q10', 'The intersection of the sets {1, 2, 5} and {1, 2, 6} is the set _____________.', 'The intersection of the sets {1, 2, 5} and {1, 2, 6} is the set _____________.', 7, 96, 1, 6, 74, '2019-09-02 13:26:58', '2019-09-02 13:26:58'),
(1872, 19, 285, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q29', 'The period of 2 sin x cos x is', 'The period of 2 sin x cos x is', 7, 92, 1, 6, 35, '2019-09-02 13:26:58', '2019-09-02 13:26:58'),
(1873, 19, 244, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q20', 'To update contents of content provider using curser and commit you need to call _______________.', 'To update contents of content provider using curser and commit you need to call _______________.', 7, 125, 2, 6, 95, '2019-09-02 13:26:58', '2019-09-02 13:26:58'),
(1874, 19, 74, 'CCS101 - INTRODUCTION TO COMPUTING - Q23', 'An electronic tool that allows information to be input, processed, and output.', 'An electronic tool that allows information to be input, processed, and output.', 7, 89, 1, 6, 6, '2019-09-02 13:26:58', '2019-09-02 13:26:58'),
(1875, 19, 72, 'CCS101 - INTRODUCTION TO COMPUTING - Q25', 'What type of software is a screen saver?', 'What type of software is a screen saver?', 7, 89, 2, 6, 12, '2019-09-02 13:26:58', '2019-09-02 13:26:58'),
(1876, 19, 243, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q19', 'Android provides a few standard themes, listed in ________.', 'Android provides a few standard themes, listed in ________.', 7, 125, 2, 6, 96, '2019-09-02 13:26:58', '2019-09-02 13:26:58'),
(1877, 19, 82, 'CCS101 - INTRODUCTION TO COMPUTING - Q15', '10111 is the two\'s complement representation of', '10111 is the two\'s complement representation of', 7, 89, 1, 6, 5, '2019-09-02 13:26:58', '2019-09-02 13:26:58'),
(1878, 19, 256, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q32', 'What is the difference between content values and cursor in android SQlite?', 'What is the difference between content values and cursor in android SQlite?', 7, 125, 3, 6, 98, '2019-09-02 13:26:58', '2019-09-02 13:26:58'),
(1879, 19, 51, 'CCS102 - COMPUTER PROGRAMMING 1 Q21', 'What is the output of this program?\n\n[[#code18]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class main_class <br />\n    {<br />\n        public static void main(String args[])<br />\n        {<br />\n            int x = 9;<br />\n            if (x == 9) <br />\n            { <br />\n                int x = 8;<br />\n                System.out.println(x);<br />\n            }<br />\n        } <br />\n    }</code></pre>', 7, 90, 2, 6, 27, '2019-09-02 13:26:58', '2019-09-02 13:26:58'),
(1880, 19, 90, 'CCS101 - INTRODUCTION TO COMPUTING - Q4', 'A letter, digit, or special character is represented by a code in a ___.', 'A letter, digit, or special character is represented by a code in a ___.', 7, 89, 3, 6, 15, '2019-09-02 13:26:58', '2019-09-02 13:26:58'),
(1881, 19, 140, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q22', 'A _______ is an identifier that denotes a storage location.', 'A _______ is an identifier that denotes a storage location.', 7, 95, 2, 6, 63, '2019-09-02 13:26:58', '2019-09-02 13:26:58'),
(1882, 19, 129, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q11', 'A control similar to an ordinary label having an underline and resembles a link on a web page.', 'A control similar to an ordinary label having an underline and resembles a link on a web page.', 7, 95, 1, 6, 54, '2019-09-02 13:26:58', '2019-09-02 13:26:58'),
(1883, 19, 149, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q9', 'The union of the sets {1, 2, 5} and {1, 2, 6} is the set _______________.', 'The union of the sets {1, 2, 5} and {1, 2, 6} is the set _______________.', 7, 96, 2, 6, 81, '2019-09-02 13:26:58', '2019-09-02 13:26:58'),
(1884, 19, 59, 'CCS102 - COMPUTER PROGRAMMING 1 Q29', 'What is the output of this program?\n\n[[#code24]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class evaluate <br />\n    {<br />\n        public static void main(String args[]) <br />\n            {<br />\n	        int arr[] = new int[] {0 , 1, 2, 3, 4, 5, 6, 7, 8, 9};<br />\n	        int n = 6;<br />\n                n = arr[arr[n] / 2];<br />\n	        System.out.println(arr[n] / 2);<br />\n            } <br />\n    }</code></pre>', 7, 90, 3, 6, 34, '2019-09-02 13:26:58', '2019-09-02 13:26:58'),
(1885, 19, 148, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q8', 'What is the Cardinality of the Power set of the set {0, 1, 2}.', 'What is the Cardinality of the Power set of the set {0, 1, 2}.', 7, 96, 1, 6, 72, '2019-09-02 13:26:58', '2019-09-02 13:26:58'),
(1886, 19, 1, 'Solving for basic equation - Q1', 'solve for x:\n2x + 3 = 5', 'solve for x:<br />\n2x + 3 = 5', 7, 92, 1, 6, 36, '2019-09-02 13:26:58', '2019-09-02 13:26:58'),
(1887, 19, 246, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q22', 'Which of  the following holds Java source code for the application?', 'Which of  the following holds Java source code for the application?', 7, 125, 2, 6, 94, '2019-09-02 13:26:58', '2019-09-02 13:26:58'),
(1888, 19, 202, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q2', 'What is android?', 'What is android?', 7, 125, 1, 6, 86, '2019-09-02 13:26:58', '2019-09-02 13:26:58'),
(1889, 19, 42, 'CCS102 - COMPUTER PROGRAMMING 1 Q12', 'Which of the following is not a keyword in java?', 'Which of the following is not a keyword in java?', 7, 90, 1, 6, 18, '2019-09-02 13:26:58', '2019-09-02 13:26:58'),
(1890, 19, 52, 'CCS102 - COMPUTER PROGRAMMING 1 Q22', 'What is the output of this program?\n\n[[#code19]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class box <br />\n    {<br />\n        int width;<br />\n        int height;<br />\n        int length;<br />\n    } <br />\n    class mainclass <br />\n    {<br />\n        public static void main(String args[]) <br />\n        {        <br />\n             box obj = new box();<br />\n             obj.width = 10;<br />\n             obj.height = 2;<br />\n             obj.length = 10;<br />\n             int y = obj.width * obj.height * obj.length; <br />\n             System.out.print(y);<br />\n        } <br />\n    }</code></pre>', 7, 90, 3, 6, 32, '2019-09-02 13:26:58', '2019-09-02 13:26:58'),
(1891, 19, 283, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q32', 'You have a TextBox control and a Help button that the user can press to get help on allowable values. You validate the data entered by the user in the TextBox control. If the user enters an invalid value, you set the focus back in the control using the Cancel property of the CancelEventArgs. A user reports that once he enters invalid data in the text box, he cannot click the Help button. What should you do to correct the problem?', 'You have a TextBox control and a Help button that the user can press to get help on allowable values. You validate the data entered by the user in the TextBox control. If the user enters an invalid value, you set the focus back in the control using the Cancel property of the CancelEventArgs. A user reports that once he enters invalid data in the text box, he cannot click the Help button. What should you do to correct the problem?', 7, 95, 3, 6, 67, '2019-09-02 13:26:58', '2019-09-02 13:26:58'),
(1892, 19, 215, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q15', 'Which is the latest mobile version of android?', 'Which is the latest mobile version of android?', 7, 125, 1, 6, 91, '2019-09-02 13:26:58', '2019-09-02 13:26:58'),
(1893, 19, 41, 'CCS102 - COMPUTER PROGRAMMING 1 Q11', 'What is correct syntax for main method of a java class?', 'What is correct syntax for main method of a java class?', 7, 90, 1, 6, 24, '2019-09-02 13:26:58', '2019-09-02 13:26:58'),
(1894, 19, 93, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q3', 'If 2x - 8 ≥ 2, then', 'If 2x - 8 ≥ 2, then', 7, 92, 1, 6, 39, '2019-09-02 13:26:58', '2019-09-02 13:26:58'),
(1895, 19, 212, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q12', 'Which company bought android?', 'Which company bought android?', 7, 125, 1, 6, 93, '2019-09-02 13:26:58', '2019-09-02 13:26:58'),
(1896, 19, 204, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q4', 'Android supports which features.', 'Android supports which features.', 7, 125, 1, 6, 92, '2019-09-02 13:26:59', '2019-09-02 13:26:59'),
(1897, 19, 254, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q30', 'What is an HTTP client class in android?', 'What is an HTTP client class in android?', 7, 125, 3, 6, 100, '2019-09-02 13:26:59', '2019-09-02 13:26:59'),
(1898, 19, 225, 'CCS101 - INTRODUCTION TO COMPUTING - Q7', 'Converting (1010111)<sub>2</sub> to base yields which of the following results?', 'Converting (1010111)<sub>2</sub> to base yields which of the following results?', 7, 89, 2, 6, 11, '2019-09-02 13:26:59', '2019-09-02 13:26:59'),
(1899, 19, 38, 'CCS102 - COMPUTER PROGRAMMING 1 - Q8', 'Which of the following is true about try block in C#?', 'Which of the following is true about try block in C#?', 7, 90, 1, 6, 19, '2019-09-02 13:26:59', '2019-09-02 13:26:59'),
(1900, 19, 162, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q22', 'If n(A)=10 , n(B)=30,n(C)=50 and if set A,B,C are pairwise disjoint then which of the following is correct?', 'If n(A)=10 , n(B)=30,n(C)=50 and if set A,B,C are pairwise disjoint then which of the following is correct?', 7, 96, 2, 6, 79, '2019-09-02 13:26:59', '2019-09-02 13:26:59'),
(1901, 20, 104, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q14', 'What is the result when you put the expression x<sup>2</sup> +10x+41 into vertex form by completing the square ?', 'What is the result when you put the expression x<sup>2</sup> +10x+41 into vertex form by completing the square ?', 7, 92, 3, 6, 51, '2019-09-02 13:32:33', '2019-09-02 13:32:33'),
(1902, 20, 108, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q18', 'The population of a country increased by an average of 2% per year from 2000 to 2003. If the population of this country was 2 000 000 on December 31, 2003, then the population of this country on January 1, 2000, to the nearest thousand would have been', 'The population of a country increased by an average of 2% per year from 2000 to 2003. If the population of this country was 2 000 000 on December 31, 2003, then the population of this country on January 1, 2000, to the nearest thousand would have been', 7, 92, 3, 6, 50, '2019-09-02 13:32:33', '2019-09-02 13:32:33'),
(1903, 20, 61, 'CCS102 - COMPUTER PROGRAMMING 1 Q31', 'Where is array stored in memory?', 'Where is array stored in memory?', 7, 90, 2, 6, 31, '2019-09-02 13:32:33', '2019-09-02 13:32:33'),
(1904, 20, 38, 'CCS102 - COMPUTER PROGRAMMING 1 - Q8', 'Which of the following is true about try block in C#?', 'Which of the following is true about try block in C#?', 7, 90, 1, 6, 19, '2019-09-02 13:32:33', '2019-09-02 13:32:33'),
(1905, 20, 243, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q19', 'Android provides a few standard themes, listed in ________.', 'Android provides a few standard themes, listed in ________.', 7, 125, 2, 6, 96, '2019-09-02 13:32:33', '2019-09-02 13:32:33'),
(1906, 20, 140, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q22', 'A _______ is an identifier that denotes a storage location.', 'A _______ is an identifier that denotes a storage location.', 7, 95, 2, 6, 63, '2019-09-02 13:32:33', '2019-09-02 13:32:33'),
(1907, 20, 283, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q32', 'You have a TextBox control and a Help button that the user can press to get help on allowable values. You validate the data entered by the user in the TextBox control. If the user enters an invalid value, you set the focus back in the control using the Cancel property of the CancelEventArgs. A user reports that once he enters invalid data in the text box, he cannot click the Help button. What should you do to correct the problem?', 'You have a TextBox control and a Help button that the user can press to get help on allowable values. You validate the data entered by the user in the TextBox control. If the user enters an invalid value, you set the focus back in the control using the Cancel property of the CancelEventArgs. A user reports that once he enters invalid data in the text box, he cannot click the Help button. What should you do to correct the problem?', 7, 95, 3, 6, 67, '2019-09-02 13:32:33', '2019-09-02 13:32:33'),
(1908, 20, 82, 'CCS101 - INTRODUCTION TO COMPUTING - Q15', '10111 is the two\'s complement representation of', '10111 is the two\'s complement representation of', 7, 89, 1, 6, 5, '2019-09-02 13:32:33', '2019-09-02 13:32:33'),
(1909, 20, 203, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q3', 'Android doesn\'t  support which format?', 'Android doesn\'t  support which format?', 7, 125, 1, 6, 87, '2019-09-02 13:32:33', '2019-09-02 13:32:33'),
(1910, 20, 223, 'CC101 - INTRODUCTION TO COMPUTING - Q11', 'The sum of 11101 + 10111 equals ________.', 'The sum of 11101 + 10111 equals ________.', 7, 89, 2, 6, 10, '2019-09-02 13:32:33', '2019-09-02 13:32:33'),
(1911, 20, 58, 'CCS102 - COMPUTER PROGRAMMING 1 Q28', 'What is the output of this program?\n\n[[#code22]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class array_output <br />\n    {<br />\n        public static void main(String args[]) <br />\n        {<br />\n            int array_variable [] = new int[10];<br />\n	    for (int i = 0; i < 10; ++i) <br />\n            {<br />\n                array_variable[i] = i;<br />\n                System.out.print(array_variable[i] + \" \");<br />\n                i++;<br />\n            }<br />\n        } <br />\n    }</code></pre>', 7, 90, 3, 6, 33, '2019-09-02 13:32:33', '2019-09-02 13:32:33'),
(1912, 20, 151, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q11', 'Two sets are called disjoint if there _____________ is the empty set.', 'Two sets are called disjoint if there _____________ is the empty set.', 7, 96, 1, 6, 73, '2019-09-02 13:32:33', '2019-09-02 13:32:33'),
(1913, 20, 31, 'Order of operation - Q1', 'What is the output of the following code?\n\n[[#code14]]', 'What is the output of the following code?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">double x = 2;<br />\ndouble y = 3;<br />\ndouble z = 5;<br />\n<br />\ndouble output = x + x * y + (x + 2 * z);<br />\n<br />\nSystem.out.println(output);</code></pre>', 7, 90, 1, 6, 20, '2019-09-02 13:32:33', '2019-09-02 13:32:33'),
(1914, 20, 149, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q9', 'The union of the sets {1, 2, 5} and {1, 2, 6} is the set _______________.', 'The union of the sets {1, 2, 5} and {1, 2, 6} is the set _______________.', 7, 96, 2, 6, 81, '2019-09-02 13:32:34', '2019-09-02 13:32:34'),
(1915, 20, 57, 'CCS102 - COMPUTER PROGRAMMING 1 Q27', 'Which of these is necessary to specify at time of array initialization?', 'Which of these is necessary to specify at time of array initialization?', 7, 90, 2, 6, 30, '2019-09-02 13:32:34', '2019-09-02 13:32:34'),
(1916, 20, 144, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q4', 'What is the cardinality of the set of odd positive integers less than 10?', 'What is the cardinality of the set of odd positive integers less than 10?', 7, 96, 1, 6, 71, '2019-09-02 13:32:34', '2019-09-02 13:32:34'),
(1917, 20, 89, 'CCS101 - INTRODUCTION TO COMPUTING - Q5', 'A memory management technique that uses hard drive space as additional RAM.', 'A memory management technique that uses hard drive space as additional RAM.', 7, 89, 1, 6, 2, '2019-09-02 13:32:34', '2019-09-02 13:32:34'),
(1918, 20, 39, 'CCS102 - COMPUTER PROGRAMMING 1 Q9', 'What of the following is the default value of an instance variable?', 'What of the following is the default value of an instance variable?', 7, 90, 1, 6, 25, '2019-09-02 13:32:34', '2019-09-02 13:32:34'),
(1919, 20, 220, 'Computer Hardware - Q2', 'An input device that reads printed text and graphics and transfers them to a computer in digital form.', 'An input device that reads printed text and graphics and transfers them to a computer in digital form.', 7, 89, 1, 6, 7, '2019-09-02 13:32:34', '2019-09-02 13:32:34'),
(1920, 20, 207, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q7', 'ABD stands for', 'ABD stands for', 7, 125, 1, 6, 88, '2019-09-02 13:32:34', '2019-09-02 13:32:34'),
(1921, 20, 78, 'CCS101 - INTRODUCTION TO COMPUTING -  Q19', 'This coding system is designed to support international languages like Chinese and Japanese.', 'This coding system is designed to support international languages like Chinese and Japanese.', 7, 89, 3, 6, 17, '2019-09-02 13:32:34', '2019-09-02 13:32:34'),
(1922, 20, 142, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q2', 'The set O of odd positive integers less than 10 can be expressed by _____________.', 'The set O of odd positive integers less than 10 can be expressed by _____________.', 7, 96, 1, 6, 76, '2019-09-02 13:32:34', '2019-09-02 13:32:34'),
(1923, 20, 1, 'Solving for basic equation - Q1', 'solve for x:\n2x + 3 = 5', 'solve for x:<br />\n2x + 3 = 5', 7, 92, 1, 6, 36, '2019-09-02 13:32:34', '2019-09-02 13:32:34'),
(1924, 20, 246, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q22', 'Which of  the following holds Java source code for the application?', 'Which of  the following holds Java source code for the application?', 7, 125, 2, 6, 94, '2019-09-02 13:32:34', '2019-09-02 13:32:34'),
(1925, 20, 260, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q23', 'In the given figure the if n(A)=20,n(U)=50,n(C)=10 and n(A∩B)=5 then n(B)=? \n\n[[#img34]]', 'In the given figure the if n(A)=20,n(U)=50,n(C)=10 and n(A∩B)=5 then n(B)=? <br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/23B9WIeQ00wE4pw7nsRG6le8KJWkZ1jI9HG7nYv3.jpeg\" width=\"300\" height=\"150\" />', 7, 96, 2, 6, 80, '2019-09-02 13:32:34', '2019-09-02 13:32:34'),
(1926, 20, 119, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q1', 'This is a repetition control stricture that allows you to efficiently write a loop that needs to execute a specific number of times.', 'This is a repetition control stricture that allows you to efficiently write a loop that needs to execute a specific number of times.', 7, 95, 1, 6, 57, '2019-09-02 13:32:34', '2019-09-02 13:32:34'),
(1927, 20, 116, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q26', 'If f(x) is an odd function, then | f(x) | is', 'If f(x) is an odd function, then | f(x) | is', 7, 92, 2, 6, 44, '2019-09-02 13:32:34', '2019-09-02 13:32:34'),
(1928, 20, 40, 'CCS102 - COMPUTER PROGRAMMING 1 Q10', 'Static binding uses which information for binding?', 'Static binding uses which information for binding?', 7, 90, 1, 6, 23, '2019-09-02 13:32:34', '2019-09-02 13:32:34'),
(1929, 20, 148, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q8', 'What is the Cardinality of the Power set of the set {0, 1, 2}.', 'What is the Cardinality of the Power set of the set {0, 1, 2}.', 7, 96, 1, 6, 72, '2019-09-02 13:32:34', '2019-09-02 13:32:34'),
(1930, 20, 278, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q27', 'What will be the output of the following code?\n\n[[#code28]]', 'What will be the output of the following code?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">csharp</span></div><pre><code class=\"language-csharp\">try<br />\n{<br />\n  int num = 100;<br />\n  int den = 0;<br />\n  try<br />\n  {<br />\n    MessageBox.Show(\"Message1\");<br />\n    int res = num/den;<br />\n    MessageBox.Show(\"Message2\");<br />\n  }<br />\n  catch(ArithmeticException ae)<br />\n  {<br />\n    MessageBox.Show(\"Message3\");<br />\n  }<br />\n  MessageBox.Show(\"Message4\");<br />\n}</code></pre>', 7, 95, 3, 6, 68, '2019-09-02 13:32:34', '2019-09-02 13:32:34'),
(1931, 20, 42, 'CCS102 - COMPUTER PROGRAMMING 1 Q12', 'Which of the following is not a keyword in java?', 'Which of the following is not a keyword in java?', 7, 90, 1, 6, 18, '2019-09-02 13:32:34', '2019-09-02 13:32:34'),
(1932, 20, 286, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q30', 'The probability that an electronic device produced by a company does not function properly is equal to 0.1. If 10 devices are bought, then the probability, to the nearest thousandth, that 7 devices function properly is', 'The probability that an electronic device produced by a company does not function properly is equal to 0.1. If 10 devices are bought, then the probability, to the nearest thousandth, that 7 devices function properly is', 7, 92, 3, 6, 49, '2019-09-02 13:32:34', '2019-09-02 13:32:34'),
(1933, 20, 34, 'IT01- CCS102 - COMPUTER PROGRAMMING 1 - Q4', 'Which of the following operator returns the size of a data type in C#?', 'Which of the following operator returns the size of a data type in C#?', 7, 90, 1, 6, 22, '2019-09-02 13:32:34', '2019-09-02 13:32:34'),
(1934, 20, 202, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q2', 'What is android?', 'What is android?', 7, 125, 1, 6, 86, '2019-09-02 13:32:34', '2019-09-02 13:32:34'),
(1935, 20, 219, 'Computer Hardware - Q3', 'A device that enables a computer to communicate over telephone lines.', 'A device that enables a computer to communicate over telephone lines.', 7, 89, 1, 6, 1, '2019-09-02 13:32:34', '2019-09-02 13:32:34'),
(1936, 20, 225, 'CCS101 - INTRODUCTION TO COMPUTING - Q7', 'Converting (1010111)<sub>2</sub> to base yields which of the following results?', 'Converting (1010111)<sub>2</sub> to base yields which of the following results?', 7, 89, 2, 6, 11, '2019-09-02 13:32:35', '2019-09-02 13:32:35'),
(1937, 20, 41, 'CCS102 - COMPUTER PROGRAMMING 1 Q11', 'What is correct syntax for main method of a java class?', 'What is correct syntax for main method of a java class?', 7, 90, 1, 6, 24, '2019-09-02 13:32:35', '2019-09-02 13:32:35'),
(1938, 20, 138, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q20', 'A method_____an exception when that method detects that a problem has occured.', 'A method_____an exception when that method detects that a problem has occured.', 7, 95, 2, 6, 65, '2019-09-02 13:32:35', '2019-09-02 13:32:35'),
(1939, 20, 112, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q22', 'A school committee consists of 2 teachers and 4 students. The number of different committees that can be formed from 5 teachers and 10 students is', 'A school committee consists of 2 teachers and 4 students. The number of different committees that can be formed from 5 teachers and 10 students is', 7, 92, 1, 6, 42, '2019-09-02 13:32:35', '2019-09-02 13:32:35'),
(1940, 20, 51, 'CCS102 - COMPUTER PROGRAMMING 1 Q21', 'What is the output of this program?\n\n[[#code18]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class main_class <br />\n    {<br />\n        public static void main(String args[])<br />\n        {<br />\n            int x = 9;<br />\n            if (x == 9) <br />\n            { <br />\n                int x = 8;<br />\n                System.out.println(x);<br />\n            }<br />\n        } <br />\n    }</code></pre>', 7, 90, 2, 6, 27, '2019-09-02 13:32:35', '2019-09-02 13:32:35'),
(1941, 20, 121, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q3', 'These are additional operators used to return Boolean values.', 'These are additional operators used to return Boolean values.', 7, 95, 1, 6, 55, '2019-09-02 13:32:35', '2019-09-02 13:32:35'),
(1942, 20, 66, 'Binary to decimal conversion 1', 'Convert 10100011 from binary to decimal.', 'Convert 10100011 from binary to decimal.', 7, 89, 1, 6, 8, '2019-09-02 13:32:35', '2019-09-02 13:32:35'),
(1943, 20, 129, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q11', 'A control similar to an ordinary label having an underline and resembles a link on a web page.', 'A control similar to an ordinary label having an underline and resembles a link on a web page.', 7, 95, 1, 6, 54, '2019-09-02 13:32:35', '2019-09-02 13:32:35'),
(1944, 20, 256, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q32', 'What is the difference between content values and cursor in android SQlite?', 'What is the difference between content values and cursor in android SQlite?', 7, 125, 3, 6, 98, '2019-09-02 13:32:35', '2019-09-02 13:32:35'),
(1945, 20, 204, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q4', 'Android supports which features.', 'Android supports which features.', 7, 125, 1, 6, 92, '2019-09-02 13:32:35', '2019-09-02 13:32:35'),
(1946, 20, 70, 'Projectile motion 2', 'An adventurous cliff jumper runs horizontally off a cliff. We can ignore air resistance.\n\n[[#img27]]\n\nWhich diagram best describes the horizontal velocity vectors and trajectory during the person’s fall?\n\nAssume the origin of the coordinate system to be the cliff edge.\n\nA red dot represents a vector of zero magnitude.', 'An adventurous cliff jumper runs horizontally off a cliff. We can ignore air resistance.<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/PgCOEtvEENxNaqgGLMWLrysCTt8GwyXUqH8p2sz7.png\" width=\"200\" height=\"200\" /><br />\n<br />\nWhich diagram best describes the horizontal velocity vectors and trajectory during the person’s fall?<br />\n<br />\nAssume the origin of the coordinate system to be the cliff edge.<br />\n<br />\nA red dot represents a vector of zero magnitude.', 7, 89, 1, 6, 4, '2019-09-02 13:32:35', '2019-09-02 13:32:35'),
(1947, 20, 155, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q15', 'Let the set A is {1, 2, 3} and B is {2, 3, 4}. Then number of elements in A U B is _____.', 'Let the set A is {1, 2, 3} and B is {2, 3, 4}. Then number of elements in A U B is _____.', 7, 96, 1, 6, 69, '2019-09-02 13:32:35', '2019-09-02 13:32:35'),
(1948, 20, 90, 'CCS101 - INTRODUCTION TO COMPUTING - Q4', 'A letter, digit, or special character is represented by a code in a ___.', 'A letter, digit, or special character is represented by a code in a ___.', 7, 89, 3, 6, 15, '2019-09-02 13:32:35', '2019-09-02 13:32:35'),
(1949, 20, 248, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q24', 'What is the use of content provider in android?', 'What is the use of content provider in android?', 7, 125, 2, 6, 97, '2019-09-02 13:32:35', '2019-09-02 13:32:35'),
(1950, 20, 143, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q3', 'Power set of empty set has exactly _________ subset.', 'Power set of empty set has exactly _________ subset.', 7, 96, 1, 6, 77, '2019-09-02 13:32:35', '2019-09-02 13:32:35'),
(1951, 20, 131, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q13', 'A method of MessageBox class that allows you to call a message box for prompting user with messages and information.', 'A method of MessageBox class that allows you to call a message box for prompting user with messages and information.', 7, 95, 1, 6, 59, '2019-09-02 13:32:35', '2019-09-02 13:32:35'),
(1952, 20, 275, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q24', 'How should you arrange catch blocks?', 'How should you arrange catch blocks?', 7, 95, 2, 6, 64, '2019-09-02 13:32:35', '2019-09-02 13:32:35'),
(1953, 20, 289, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q33', 'A number of the form 213ab, where a and b are digits, has a reminder less than 10 when divided by 100. The sum of all the digits in the above number is equal to 13. Find the digit b.', 'A number of the form 213ab, where a and b are digits, has a reminder less than 10 when divided by 100. The sum of all the digits in the above number is equal to 13. Find the digit b.', 7, 92, 1, 6, 43, '2019-09-02 13:32:35', '2019-09-02 13:32:35'),
(1954, 20, 147, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q7', 'The set of positive integers is _____________.', 'The set of positive integers is _____________.', 7, 96, 1, 6, 70, '2019-09-02 13:32:35', '2019-09-02 13:32:35'),
(1955, 20, 93, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q3', 'If 2x - 8 ≥ 2, then', 'If 2x - 8 ≥ 2, then', 7, 92, 1, 6, 39, '2019-09-02 13:32:35', '2019-09-02 13:32:35'),
(1956, 20, 32, 'CCS102 - COMPUTER PROGRAMMING 1 - Q2', 'Which of the following is a reserved keyword in C#?', 'Which of the following is a reserved keyword in C#?', 7, 90, 1, 6, 21, '2019-09-02 13:32:35', '2019-09-02 13:32:35'),
(1957, 20, 136, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q18', 'Private Button print = new button();', 'Private Button print = new button();', 7, 95, 2, 6, 61, '2019-09-02 13:32:35', '2019-09-02 13:32:35'),
(1958, 20, 244, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q20', 'To update contents of content provider using curser and commit you need to call _______________.', 'To update contents of content provider using curser and commit you need to call _______________.', 7, 125, 2, 6, 95, '2019-09-02 13:32:35', '2019-09-02 13:32:35'),
(1959, 20, 150, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q10', 'The intersection of the sets {1, 2, 5} and {1, 2, 6} is the set _____________.', 'The intersection of the sets {1, 2, 5} and {1, 2, 6} is the set _____________.', 7, 96, 1, 6, 74, '2019-09-02 13:32:35', '2019-09-02 13:32:35'),
(1960, 20, 99, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q9', 'Evaluate the following:\n \nlog<sub>4</sub> 25', 'Evaluate the following:<br />\n <br />\nlog<sub>4</sub> 25', 7, 92, 1, 6, 41, '2019-09-02 13:32:35', '2019-09-02 13:32:35'),
(1961, 20, 156, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q16', 'If A has 4 elements B has 8 elements then the minimum and maximum number of elements in A U B are respectively', 'If A has 4 elements B has 8 elements then the minimum and maximum number of elements in A U B are respectively', 7, 96, 1, 6, 75, '2019-09-02 13:32:35', '2019-09-02 13:32:35'),
(1962, 20, 113, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q23', 'Five different books (A, B, C, D and E) are to be arranged on a shelf. Books C and D are to be arranged first and second starting from the right of the shelf. The number of different orders in which books A, B and E may be arranged is', 'Five different books (A, B, C, D and E) are to be arranged on a shelf. Books C and D are to be arranged first and second starting from the right of the shelf. The number of different orders in which books A, B and E may be arranged is', 7, 92, 2, 6, 48, '2019-09-02 13:32:35', '2019-09-02 13:32:35');
INSERT INTO `answer_sheet_test_questions` (`id`, `answer_sheet_id`, `test_question_id`, `title`, `body`, `body_html`, `student_outcome_id`, `course_id`, `difficulty_level_id`, `performance_criteria_id`, `pos_order`, `created_at`, `updated_at`) VALUES
(1963, 20, 59, 'CCS102 - COMPUTER PROGRAMMING 1 Q29', 'What is the output of this program?\n\n[[#code24]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class evaluate <br />\n    {<br />\n        public static void main(String args[]) <br />\n            {<br />\n	        int arr[] = new int[] {0 , 1, 2, 3, 4, 5, 6, 7, 8, 9};<br />\n	        int n = 6;<br />\n                n = arr[arr[n] / 2];<br />\n	        System.out.println(arr[n] / 2);<br />\n            } <br />\n    }</code></pre>', 7, 90, 3, 6, 34, '2019-09-02 13:32:35', '2019-09-02 13:32:35'),
(1964, 20, 267, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q30', 'A floor function map a real number to :', 'A floor function map a real number to :', 7, 96, 3, 6, 84, '2019-09-02 13:32:35', '2019-09-02 13:32:35'),
(1965, 20, 127, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q9', 'Commonly used  control to execute commansd when it is clicked.', 'Commonly used  control to execute commansd when it is clicked.', 7, 95, 1, 6, 60, '2019-09-02 13:32:35', '2019-09-02 13:32:35'),
(1966, 20, 52, 'CCS102 - COMPUTER PROGRAMMING 1 Q22', 'What is the output of this program?\n\n[[#code19]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class box <br />\n    {<br />\n        int width;<br />\n        int height;<br />\n        int length;<br />\n    } <br />\n    class mainclass <br />\n    {<br />\n        public static void main(String args[]) <br />\n        {        <br />\n             box obj = new box();<br />\n             obj.width = 10;<br />\n             obj.height = 2;<br />\n             obj.length = 10;<br />\n             int y = obj.width * obj.height * obj.length; <br />\n             System.out.print(y);<br />\n        } <br />\n    }</code></pre>', 7, 90, 3, 6, 32, '2019-09-02 13:32:35', '2019-09-02 13:32:35'),
(1967, 20, 76, 'CCS101 - INTRODUCTION TO COMPUTING _ Q21', '_______ is a duplicate copy of data or other computer content for use in the event that the original version is destroyed.', '_______ is a duplicate copy of data or other computer content for use in the event that the original version is destroyed.', 7, 89, 2, 6, 13, '2019-09-02 13:32:35', '2019-09-02 13:32:35'),
(1968, 20, 95, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q5', 'What is the square root of -144?', 'What is the square root of -144?', 7, 92, 1, 6, 38, '2019-09-02 13:32:35', '2019-09-02 13:32:35'),
(1969, 20, 122, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q4', 'These operators take two operands, such as arithmetic operators (+,-,*,/).', 'These operators take two operands, such as arithmetic operators (+,-,*,/).', 7, 95, 1, 6, 53, '2019-09-02 13:32:35', '2019-09-02 13:32:35'),
(1970, 20, 211, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q11', 'Web browser available in android based on', 'Web browser available in android based on', 7, 125, 1, 6, 85, '2019-09-02 13:32:36', '2019-09-02 13:32:36'),
(1971, 20, 132, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q14', 'C# treats the multiple catch statements like cases in a _____________ statement.', 'C# treats the multiple catch statements like cases in a _____________ statement.', 7, 95, 1, 6, 58, '2019-09-02 13:32:36', '2019-09-02 13:32:36'),
(1972, 20, 277, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q26', 'Which of the following will result from compiling this code, assuming that all other code for your form works properly?\n\n[[#code27]]', 'Which of the following will result from compiling this code, assuming that all other code for your form works properly?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">csharp</span></div><pre><code class=\"language-csharp\">try<br />\n{<br />\n  //Write code to allocate some resources<br />\n}<br />\nfinally<br />\n{<br />\n  //Write code to Dispose all allocated resources<br />\n}</code></pre>', 7, 95, 3, 6, 66, '2019-09-02 13:32:36', '2019-09-02 13:32:36'),
(1973, 20, 77, 'CCS101 - INTRODUCTION TO COMPUTING - Q20', 'A programming error that occurs when running a program produces incorrect results.', 'A programming error that occurs when running a program produces incorrect results.', 7, 89, 1, 6, 9, '2019-09-02 13:32:36', '2019-09-02 13:32:36'),
(1974, 20, 72, 'CCS101 - INTRODUCTION TO COMPUTING - Q25', 'What type of software is a screen saver?', 'What type of software is a screen saver?', 7, 89, 2, 6, 12, '2019-09-02 13:32:36', '2019-09-02 13:32:36'),
(1975, 20, 162, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q22', 'If n(A)=10 , n(B)=30,n(C)=50 and if set A,B,C are pairwise disjoint then which of the following is correct?', 'If n(A)=10 , n(B)=30,n(C)=50 and if set A,B,C are pairwise disjoint then which of the following is correct?', 7, 96, 2, 6, 79, '2019-09-02 13:32:36', '2019-09-02 13:32:36'),
(1976, 20, 33, 'IT01- CCS102 - COMPUTER PROGRAMMING 1 - Q3', 'Which of the following converts a type to a double type in C#?', 'Which of the following converts a type to a double type in C#?', 7, 90, 1, 6, 26, '2019-09-02 13:32:36', '2019-09-02 13:32:36'),
(1977, 20, 68, 'Describing two-dimensional motion with vectors', 'A golfer hits a golf ball upwards at an angle of 75°, degree with the horizontal. We can ignore air resistance.\n\n[[#img22]]\n\nWhich graph best describes the golf ball\'s vertical displacement over time?\n\nAssume the origin of the coordinate system to be the point on the ground where the ball was initially at rest.', 'A golfer hits a golf ball upwards at an angle of 75°, degree with the horizontal. We can ignore air resistance.<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/MYpfYGJo93eMWxPVag4ii0jWIwamFw8EKp4yFlbj.png\" width=\"300\" height=\"150\" /><br />\n<br />\nWhich graph best describes the golf ball\'s vertical displacement over time?<br />\n<br />\nAssume the origin of the coordinate system to be the point on the ground where the ball was initially at rest.', 7, 89, 1, 6, 3, '2019-09-02 13:32:36', '2019-09-02 13:32:36'),
(1978, 20, 285, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q29', 'The period of 2 sin x cos x is', 'The period of 2 sin x cos x is', 7, 92, 1, 6, 35, '2019-09-02 13:32:36', '2019-09-02 13:32:36'),
(1979, 20, 160, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q20', 'The shaded area of figure is best described by\n\n[[#img32]]', 'The shaded area of figure is best described by<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/5iL0Nsol7VkygnPftlQm5guoA5NqiGISBGevRke8.jpeg\" width=\"300\" height=\"150\" />', 7, 96, 3, 6, 83, '2019-09-02 13:32:36', '2019-09-02 13:32:36'),
(1980, 20, 107, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q17', 'If Log <sub>4 </sub>(x) = 12, then log 2 (x / 4) is equal to', 'If Log <sub>4 </sub>(x) = 12, then log 2 (x / 4) is equal to', 7, 92, 1, 6, 40, '2019-09-02 13:32:36', '2019-09-02 13:32:36'),
(1981, 20, 215, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q15', 'Which is the latest mobile version of android?', 'Which is the latest mobile version of android?', 7, 125, 1, 6, 91, '2019-09-02 13:32:36', '2019-09-02 13:32:36'),
(1982, 20, 270, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q33', 'In the given AP series the term at position 11 would be\n5, 8, 11, 14, 17, 20………50.', 'In the given AP series the term at position 11 would be<br />\n5, 8, 11, 14, 17, 20………50.', 7, 96, 3, 6, 82, '2019-09-02 13:32:36', '2019-09-02 13:32:36'),
(1983, 20, 50, 'CCS102 - COMPUTER PROGRAMMING Q20', 'What happens when thread\'s yield() method is called?', 'What happens when thread\'s yield() method is called?', 7, 90, 2, 6, 28, '2019-09-02 13:32:36', '2019-09-02 13:32:36'),
(1984, 20, 145, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q5', 'What is the Cartesian product of A = {1, 2} and B = {a, b}?', 'What is the Cartesian product of A = {1, 2} and B = {a, b}?', 7, 96, 2, 6, 78, '2019-09-02 13:32:36', '2019-09-02 13:32:36'),
(1985, 20, 252, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q28', 'What is bean class in android?', 'What is bean class in android?', 7, 125, 3, 6, 99, '2019-09-02 13:32:36', '2019-09-02 13:32:36'),
(1986, 20, 87, 'CCS101 - INTRODUCTION TO COMPUTING - Q8', '____________ are the four general operations that are performed in each machine cycle.', '____________ are the four general operations that are performed in each machine cycle.', 7, 89, 2, 6, 14, '2019-09-02 13:32:36', '2019-09-02 13:32:36'),
(1987, 20, 92, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q2', 'Solve the inequality \n4x + 8 > 5x +9', 'Solve the inequality <br />\n4x + 8 > 5x +9', 7, 92, 1, 6, 37, '2019-09-02 13:32:36', '2019-09-02 13:32:36'),
(1988, 20, 74, 'CCS101 - INTRODUCTION TO COMPUTING - Q23', 'An electronic tool that allows information to be input, processed, and output.', 'An electronic tool that allows information to be input, processed, and output.', 7, 89, 1, 6, 6, '2019-09-02 13:32:36', '2019-09-02 13:32:36'),
(1989, 20, 111, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q21', 'For x greater than or equal to zero and less than or equal to 2 π, sin x and cos x are both decreasing on the intervals', 'For x greater than or equal to zero and less than or equal to 2 π, sin x and cos x are both decreasing on the intervals', 7, 92, 2, 6, 47, '2019-09-02 13:32:36', '2019-09-02 13:32:36'),
(1990, 20, 124, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q6', 'This data type stores the address of the value which means that they refer to a memory location.', 'This data type stores the address of the value which means that they refer to a memory location.', 7, 95, 1, 6, 52, '2019-09-02 13:32:36', '2019-09-02 13:32:36'),
(1991, 20, 205, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q5', 'For ___________, code used by Android is not open source.', 'For ___________, code used by Android is not open source.', 7, 125, 1, 6, 90, '2019-09-02 13:32:36', '2019-09-02 13:32:36'),
(1992, 20, 214, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q14', 'Android is based on which kernel?', 'Android is based on which kernel?', 7, 125, 1, 6, 89, '2019-09-02 13:32:36', '2019-09-02 13:32:36'),
(1993, 20, 126, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q8', 'A control used to show a list of strings which you can select.', 'A control used to show a list of strings which you can select.', 7, 95, 1, 6, 56, '2019-09-02 13:32:36', '2019-09-02 13:32:36'),
(1994, 20, 137, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q19', 'Polymorphism occurs when the methods of the child class.', 'Polymorphism occurs when the methods of the child class.', 7, 95, 2, 6, 62, '2019-09-02 13:32:36', '2019-09-02 13:32:36'),
(1995, 20, 48, 'CCS102 - COMPUTER PROGRAMMING 1 Q18', 'What is JRE?', 'What is JRE?', 7, 90, 2, 6, 29, '2019-09-02 13:32:36', '2019-09-02 13:32:36'),
(1996, 20, 254, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q30', 'What is an HTTP client class in android?', 'What is an HTTP client class in android?', 7, 125, 3, 6, 100, '2019-09-02 13:32:36', '2019-09-02 13:32:36'),
(1997, 20, 212, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q12', 'Which company bought android?', 'Which company bought android?', 7, 125, 1, 6, 93, '2019-09-02 13:32:36', '2019-09-02 13:32:36'),
(1998, 20, 79, 'CCS101 - INTRODUCTION TO COMPUTING -Q18', 'Which of the following is/are not part of the CPU?', 'Which of the following is/are not part of the CPU?', 7, 89, 3, 6, 16, '2019-09-02 13:32:36', '2019-09-02 13:32:36'),
(1999, 20, 97, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q7', 'The expression (3i - 2)(i + 1) - 7 can be simplified to which of the following expressions?', 'The expression (3i - 2)(i + 1) - 7 can be simplified to which of the following expressions?', 7, 92, 2, 6, 46, '2019-09-02 13:32:36', '2019-09-02 13:32:36'),
(2000, 20, 114, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q24', 'The mean of a data set is equal to 10 and its standard deviation is equal to 1. If we add 5 to each data value, then the mean and standard deviation become', 'The mean of a data set is equal to 10 and its standard deviation is equal to 1. If we add 5 to each data value, then the mean and standard deviation become', 7, 92, 2, 6, 45, '2019-09-02 13:32:36', '2019-09-02 13:32:36'),
(2001, 21, 114, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q24', 'The mean of a data set is equal to 10 and its standard deviation is equal to 1. If we add 5 to each data value, then the mean and standard deviation become', 'The mean of a data set is equal to 10 and its standard deviation is equal to 1. If we add 5 to each data value, then the mean and standard deviation become', 7, 92, 2, 6, 45, '2019-09-15 04:31:58', '2019-09-15 04:31:58'),
(2002, 21, 223, 'CC101 - INTRODUCTION TO COMPUTING - Q11', 'The sum of 11101 + 10111 equals ________.', 'The sum of 11101 + 10111 equals ________.', 7, 89, 2, 6, 10, '2019-09-15 04:31:58', '2019-09-15 04:31:58'),
(2003, 21, 70, 'Projectile motion 2', 'An adventurous cliff jumper runs horizontally off a cliff. We can ignore air resistance.\n\n[[#img27]]\n\nWhich diagram best describes the horizontal velocity vectors and trajectory during the person’s fall?\n\nAssume the origin of the coordinate system to be the cliff edge.\n\nA red dot represents a vector of zero magnitude.', 'An adventurous cliff jumper runs horizontally off a cliff. We can ignore air resistance.<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/PgCOEtvEENxNaqgGLMWLrysCTt8GwyXUqH8p2sz7.png\" width=\"200\" height=\"200\" /><br />\n<br />\nWhich diagram best describes the horizontal velocity vectors and trajectory during the person’s fall?<br />\n<br />\nAssume the origin of the coordinate system to be the cliff edge.<br />\n<br />\nA red dot represents a vector of zero magnitude.', 7, 89, 1, 6, 4, '2019-09-15 04:31:58', '2019-09-15 04:31:58'),
(2004, 21, 99, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q9', 'Evaluate the following:\n \nlog<sub>4</sub> 25', 'Evaluate the following:<br />\n <br />\nlog<sub>4</sub> 25', 7, 92, 1, 6, 41, '2019-09-15 04:31:58', '2019-09-15 04:31:58'),
(2005, 21, 214, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q14', 'Android is based on which kernel?', 'Android is based on which kernel?', 7, 125, 1, 6, 89, '2019-09-15 04:31:58', '2019-09-15 04:31:58'),
(2006, 21, 108, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q18', 'The population of a country increased by an average of 2% per year from 2000 to 2003. If the population of this country was 2 000 000 on December 31, 2003, then the population of this country on January 1, 2000, to the nearest thousand would have been', 'The population of a country increased by an average of 2% per year from 2000 to 2003. If the population of this country was 2 000 000 on December 31, 2003, then the population of this country on January 1, 2000, to the nearest thousand would have been', 7, 92, 3, 6, 50, '2019-09-15 04:31:58', '2019-09-15 04:31:58'),
(2007, 21, 127, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q9', 'Commonly used  control to execute commansd when it is clicked.', 'Commonly used  control to execute commansd when it is clicked.', 7, 95, 1, 6, 60, '2019-09-15 04:31:58', '2019-09-15 04:31:58'),
(2008, 21, 119, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q1', 'This is a repetition control stricture that allows you to efficiently write a loop that needs to execute a specific number of times.', 'This is a repetition control stricture that allows you to efficiently write a loop that needs to execute a specific number of times.', 7, 95, 1, 6, 57, '2019-09-15 04:31:58', '2019-09-15 04:31:58'),
(2009, 21, 267, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q30', 'A floor function map a real number to :', 'A floor function map a real number to :', 7, 96, 3, 6, 84, '2019-09-15 04:31:58', '2019-09-15 04:31:58'),
(2010, 21, 149, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q9', 'The union of the sets {1, 2, 5} and {1, 2, 6} is the set _______________.', 'The union of the sets {1, 2, 5} and {1, 2, 6} is the set _______________.', 7, 96, 2, 6, 81, '2019-09-15 04:31:58', '2019-09-15 04:31:58'),
(2011, 21, 116, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q26', 'If f(x) is an odd function, then | f(x) | is', 'If f(x) is an odd function, then | f(x) | is', 7, 92, 2, 6, 44, '2019-09-15 04:31:59', '2019-09-15 04:31:59'),
(2012, 21, 122, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q4', 'These operators take two operands, such as arithmetic operators (+,-,*,/).', 'These operators take two operands, such as arithmetic operators (+,-,*,/).', 7, 95, 1, 6, 53, '2019-09-15 04:31:59', '2019-09-15 04:31:59'),
(2013, 21, 132, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q14', 'C# treats the multiple catch statements like cases in a _____________ statement.', 'C# treats the multiple catch statements like cases in a _____________ statement.', 7, 95, 1, 6, 58, '2019-09-15 04:31:59', '2019-09-15 04:31:59'),
(2014, 21, 93, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q3', 'If 2x - 8 ≥ 2, then', 'If 2x - 8 ≥ 2, then', 7, 92, 1, 6, 39, '2019-09-15 04:31:59', '2019-09-15 04:31:59'),
(2015, 21, 270, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q33', 'In the given AP series the term at position 11 would be\n5, 8, 11, 14, 17, 20………50.', 'In the given AP series the term at position 11 would be<br />\n5, 8, 11, 14, 17, 20………50.', 7, 96, 3, 6, 82, '2019-09-15 04:31:59', '2019-09-15 04:31:59'),
(2016, 21, 33, 'IT01- CCS102 - COMPUTER PROGRAMMING 1 - Q3', 'Which of the following converts a type to a double type in C#?', 'Which of the following converts a type to a double type in C#?', 7, 90, 1, 6, 26, '2019-09-15 04:31:59', '2019-09-15 04:31:59'),
(2017, 21, 68, 'Describing two-dimensional motion with vectors', 'A golfer hits a golf ball upwards at an angle of 75°, degree with the horizontal. We can ignore air resistance.\n\n[[#img22]]\n\nWhich graph best describes the golf ball\'s vertical displacement over time?\n\nAssume the origin of the coordinate system to be the point on the ground where the ball was initially at rest.', 'A golfer hits a golf ball upwards at an angle of 75°, degree with the horizontal. We can ignore air resistance.<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/MYpfYGJo93eMWxPVag4ii0jWIwamFw8EKp4yFlbj.png\" width=\"300\" height=\"150\" /><br />\n<br />\nWhich graph best describes the golf ball\'s vertical displacement over time?<br />\n<br />\nAssume the origin of the coordinate system to be the point on the ground where the ball was initially at rest.', 7, 89, 1, 6, 3, '2019-09-15 04:31:59', '2019-09-15 04:31:59'),
(2018, 21, 51, 'CCS102 - COMPUTER PROGRAMMING 1 Q21', 'What is the output of this program?\n\n[[#code18]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class main_class <br />\n    {<br />\n        public static void main(String args[])<br />\n        {<br />\n            int x = 9;<br />\n            if (x == 9) <br />\n            { <br />\n                int x = 8;<br />\n                System.out.println(x);<br />\n            }<br />\n        } <br />\n    }</code></pre>', 7, 90, 2, 6, 27, '2019-09-15 04:31:59', '2019-09-15 04:31:59'),
(2019, 21, 204, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q4', 'Android supports which features.', 'Android supports which features.', 7, 125, 1, 6, 92, '2019-09-15 04:31:59', '2019-09-15 04:31:59'),
(2020, 21, 89, 'CCS101 - INTRODUCTION TO COMPUTING - Q5', 'A memory management technique that uses hard drive space as additional RAM.', 'A memory management technique that uses hard drive space as additional RAM.', 7, 89, 1, 6, 2, '2019-09-15 04:31:59', '2019-09-15 04:31:59'),
(2021, 21, 145, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q5', 'What is the Cartesian product of A = {1, 2} and B = {a, b}?', 'What is the Cartesian product of A = {1, 2} and B = {a, b}?', 7, 96, 2, 6, 78, '2019-09-15 04:31:59', '2019-09-15 04:31:59'),
(2022, 21, 256, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q32', 'What is the difference between content values and cursor in android SQlite?', 'What is the difference between content values and cursor in android SQlite?', 7, 125, 3, 6, 98, '2019-09-15 04:31:59', '2019-09-15 04:31:59'),
(2023, 21, 212, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q12', 'Which company bought android?', 'Which company bought android?', 7, 125, 1, 6, 93, '2019-09-15 04:31:59', '2019-09-15 04:31:59'),
(2024, 21, 111, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q21', 'For x greater than or equal to zero and less than or equal to 2 π, sin x and cos x are both decreasing on the intervals', 'For x greater than or equal to zero and less than or equal to 2 π, sin x and cos x are both decreasing on the intervals', 7, 92, 2, 6, 47, '2019-09-15 04:31:59', '2019-09-15 04:31:59'),
(2025, 21, 215, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q15', 'Which is the latest mobile version of android?', 'Which is the latest mobile version of android?', 7, 125, 1, 6, 91, '2019-09-15 04:31:59', '2019-09-15 04:31:59'),
(2026, 21, 156, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q16', 'If A has 4 elements B has 8 elements then the minimum and maximum number of elements in A U B are respectively', 'If A has 4 elements B has 8 elements then the minimum and maximum number of elements in A U B are respectively', 7, 96, 1, 6, 75, '2019-09-15 04:31:59', '2019-09-15 04:31:59'),
(2027, 21, 151, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q11', 'Two sets are called disjoint if there _____________ is the empty set.', 'Two sets are called disjoint if there _____________ is the empty set.', 7, 96, 1, 6, 73, '2019-09-15 04:31:59', '2019-09-15 04:31:59'),
(2028, 21, 107, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q17', 'If Log <sub>4 </sub>(x) = 12, then log 2 (x / 4) is equal to', 'If Log <sub>4 </sub>(x) = 12, then log 2 (x / 4) is equal to', 7, 92, 1, 6, 40, '2019-09-15 04:31:59', '2019-09-15 04:31:59'),
(2029, 21, 131, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q13', 'A method of MessageBox class that allows you to call a message box for prompting user with messages and information.', 'A method of MessageBox class that allows you to call a message box for prompting user with messages and information.', 7, 95, 1, 6, 59, '2019-09-15 04:31:59', '2019-09-15 04:31:59'),
(2030, 21, 160, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q20', 'The shaded area of figure is best described by\n\n[[#img32]]', 'The shaded area of figure is best described by<br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/5iL0Nsol7VkygnPftlQm5guoA5NqiGISBGevRke8.jpeg\" width=\"300\" height=\"150\" />', 7, 96, 3, 6, 83, '2019-09-15 04:31:59', '2019-09-15 04:31:59'),
(2031, 21, 52, 'CCS102 - COMPUTER PROGRAMMING 1 Q22', 'What is the output of this program?\n\n[[#code19]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class box <br />\n    {<br />\n        int width;<br />\n        int height;<br />\n        int length;<br />\n    } <br />\n    class mainclass <br />\n    {<br />\n        public static void main(String args[]) <br />\n        {        <br />\n             box obj = new box();<br />\n             obj.width = 10;<br />\n             obj.height = 2;<br />\n             obj.length = 10;<br />\n             int y = obj.width * obj.height * obj.length; <br />\n             System.out.print(y);<br />\n        } <br />\n    }</code></pre>', 7, 90, 3, 6, 32, '2019-09-15 04:31:59', '2019-09-15 04:31:59'),
(2032, 21, 87, 'CCS101 - INTRODUCTION TO COMPUTING - Q8', '____________ are the four general operations that are performed in each machine cycle.', '____________ are the four general operations that are performed in each machine cycle.', 7, 89, 2, 6, 14, '2019-09-15 04:31:59', '2019-09-15 04:31:59'),
(2033, 21, 113, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q23', 'Five different books (A, B, C, D and E) are to be arranged on a shelf. Books C and D are to be arranged first and second starting from the right of the shelf. The number of different orders in which books A, B and E may be arranged is', 'Five different books (A, B, C, D and E) are to be arranged on a shelf. Books C and D are to be arranged first and second starting from the right of the shelf. The number of different orders in which books A, B and E may be arranged is', 7, 92, 2, 6, 48, '2019-09-15 04:31:59', '2019-09-15 04:31:59'),
(2034, 21, 48, 'CCS102 - COMPUTER PROGRAMMING 1 Q18', 'What is JRE?', 'What is JRE?', 7, 90, 2, 6, 29, '2019-09-15 04:31:59', '2019-09-15 04:31:59'),
(2035, 21, 41, 'CCS102 - COMPUTER PROGRAMMING 1 Q11', 'What is correct syntax for main method of a java class?', 'What is correct syntax for main method of a java class?', 7, 90, 1, 6, 24, '2019-09-15 04:31:59', '2019-09-15 04:31:59'),
(2036, 21, 254, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q30', 'What is an HTTP client class in android?', 'What is an HTTP client class in android?', 7, 125, 3, 6, 100, '2019-09-15 04:31:59', '2019-09-15 04:31:59'),
(2037, 21, 78, 'CCS101 - INTRODUCTION TO COMPUTING -  Q19', 'This coding system is designed to support international languages like Chinese and Japanese.', 'This coding system is designed to support international languages like Chinese and Japanese.', 7, 89, 3, 6, 17, '2019-09-15 04:31:59', '2019-09-15 04:31:59'),
(2038, 21, 275, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q24', 'How should you arrange catch blocks?', 'How should you arrange catch blocks?', 7, 95, 2, 6, 64, '2019-09-15 04:31:59', '2019-09-15 04:31:59'),
(2039, 21, 58, 'CCS102 - COMPUTER PROGRAMMING 1 Q28', 'What is the output of this program?\n\n[[#code22]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class array_output <br />\n    {<br />\n        public static void main(String args[]) <br />\n        {<br />\n            int array_variable [] = new int[10];<br />\n	    for (int i = 0; i < 10; ++i) <br />\n            {<br />\n                array_variable[i] = i;<br />\n                System.out.print(array_variable[i] + \" \");<br />\n                i++;<br />\n            }<br />\n        } <br />\n    }</code></pre>', 7, 90, 3, 6, 33, '2019-09-15 04:31:59', '2019-09-15 04:31:59'),
(2040, 21, 92, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q2', 'Solve the inequality \n4x + 8 > 5x +9', 'Solve the inequality <br />\n4x + 8 > 5x +9', 7, 92, 1, 6, 37, '2019-09-15 04:31:59', '2019-09-15 04:31:59'),
(2041, 21, 61, 'CCS102 - COMPUTER PROGRAMMING 1 Q31', 'Where is array stored in memory?', 'Where is array stored in memory?', 7, 90, 2, 6, 31, '2019-09-15 04:31:59', '2019-09-15 04:31:59'),
(2042, 21, 112, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q22', 'A school committee consists of 2 teachers and 4 students. The number of different committees that can be formed from 5 teachers and 10 students is', 'A school committee consists of 2 teachers and 4 students. The number of different committees that can be formed from 5 teachers and 10 students is', 7, 92, 1, 6, 42, '2019-09-15 04:31:59', '2019-09-15 04:31:59'),
(2043, 21, 252, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q28', 'What is bean class in android?', 'What is bean class in android?', 7, 125, 3, 6, 99, '2019-09-15 04:31:59', '2019-09-15 04:31:59'),
(2044, 21, 31, 'Order of operation - Q1', 'What is the output of the following code?\n\n[[#code14]]', 'What is the output of the following code?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">double x = 2;<br />\ndouble y = 3;<br />\ndouble z = 5;<br />\n<br />\ndouble output = x + x * y + (x + 2 * z);<br />\n<br />\nSystem.out.println(output);</code></pre>', 7, 90, 1, 6, 20, '2019-09-15 04:31:59', '2019-09-15 04:31:59'),
(2045, 21, 162, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q22', 'If n(A)=10 , n(B)=30,n(C)=50 and if set A,B,C are pairwise disjoint then which of the following is correct?', 'If n(A)=10 , n(B)=30,n(C)=50 and if set A,B,C are pairwise disjoint then which of the following is correct?', 7, 96, 2, 6, 79, '2019-09-15 04:31:59', '2019-09-15 04:31:59'),
(2046, 21, 147, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q7', 'The set of positive integers is _____________.', 'The set of positive integers is _____________.', 7, 96, 1, 6, 70, '2019-09-15 04:31:59', '2019-09-15 04:31:59'),
(2047, 21, 95, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q5', 'What is the square root of -144?', 'What is the square root of -144?', 7, 92, 1, 6, 38, '2019-09-15 04:31:59', '2019-09-15 04:31:59'),
(2048, 21, 66, 'Binary to decimal conversion 1', 'Convert 10100011 from binary to decimal.', 'Convert 10100011 from binary to decimal.', 7, 89, 1, 6, 8, '2019-09-15 04:32:00', '2019-09-15 04:32:00'),
(2049, 21, 243, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q19', 'Android provides a few standard themes, listed in ________.', 'Android provides a few standard themes, listed in ________.', 7, 125, 2, 6, 96, '2019-09-15 04:32:00', '2019-09-15 04:32:00'),
(2050, 21, 1, 'Solving for basic equation - Q1', 'solve for x:\n2x + 3 = 5', 'solve for x:<br />\n2x + 3 = 5', 7, 92, 1, 6, 36, '2019-09-15 04:32:00', '2019-09-15 04:32:00'),
(2051, 21, 260, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q23', 'In the given figure the if n(A)=20,n(U)=50,n(C)=10 and n(A∩B)=5 then n(B)=? \n\n[[#img34]]', 'In the given figure the if n(A)=20,n(U)=50,n(C)=10 and n(A∩B)=5 then n(B)=? <br />\n<br />\n<img src=\"http://localhost/pnc_soa/public/storage/uploads/23B9WIeQ00wE4pw7nsRG6le8KJWkZ1jI9HG7nYv3.jpeg\" width=\"300\" height=\"150\" />', 7, 96, 2, 6, 80, '2019-09-15 04:32:00', '2019-09-15 04:32:00'),
(2052, 21, 244, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q20', 'To update contents of content provider using curser and commit you need to call _______________.', 'To update contents of content provider using curser and commit you need to call _______________.', 7, 125, 2, 6, 95, '2019-09-15 04:32:00', '2019-09-15 04:32:00'),
(2053, 21, 283, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q32', 'You have a TextBox control and a Help button that the user can press to get help on allowable values. You validate the data entered by the user in the TextBox control. If the user enters an invalid value, you set the focus back in the control using the Cancel property of the CancelEventArgs. A user reports that once he enters invalid data in the text box, he cannot click the Help button. What should you do to correct the problem?', 'You have a TextBox control and a Help button that the user can press to get help on allowable values. You validate the data entered by the user in the TextBox control. If the user enters an invalid value, you set the focus back in the control using the Cancel property of the CancelEventArgs. A user reports that once he enters invalid data in the text box, he cannot click the Help button. What should you do to correct the problem?', 7, 95, 3, 6, 67, '2019-09-15 04:32:00', '2019-09-15 04:32:00'),
(2054, 21, 148, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q8', 'What is the Cardinality of the Power set of the set {0, 1, 2}.', 'What is the Cardinality of the Power set of the set {0, 1, 2}.', 7, 96, 1, 6, 72, '2019-09-15 04:32:00', '2019-09-15 04:32:00'),
(2055, 21, 207, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q7', 'ABD stands for', 'ABD stands for', 7, 125, 1, 6, 88, '2019-09-15 04:32:00', '2019-09-15 04:32:00'),
(2056, 21, 220, 'Computer Hardware - Q2', 'An input device that reads printed text and graphics and transfers them to a computer in digital form.', 'An input device that reads printed text and graphics and transfers them to a computer in digital form.', 7, 89, 1, 6, 7, '2019-09-15 04:32:00', '2019-09-15 04:32:00'),
(2057, 21, 42, 'CCS102 - COMPUTER PROGRAMMING 1 Q12', 'Which of the following is not a keyword in java?', 'Which of the following is not a keyword in java?', 7, 90, 1, 6, 18, '2019-09-15 04:32:00', '2019-09-15 04:32:00'),
(2058, 21, 143, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q3', 'Power set of empty set has exactly _________ subset.', 'Power set of empty set has exactly _________ subset.', 7, 96, 1, 6, 77, '2019-09-15 04:32:00', '2019-09-15 04:32:00'),
(2059, 21, 50, 'CCS102 - COMPUTER PROGRAMMING Q20', 'What happens when thread\'s yield() method is called?', 'What happens when thread\'s yield() method is called?', 7, 90, 2, 6, 28, '2019-09-15 04:32:00', '2019-09-15 04:32:00'),
(2060, 21, 124, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q6', 'This data type stores the address of the value which means that they refer to a memory location.', 'This data type stores the address of the value which means that they refer to a memory location.', 7, 95, 1, 6, 52, '2019-09-15 04:32:00', '2019-09-15 04:32:00'),
(2061, 21, 40, 'CCS102 - COMPUTER PROGRAMMING 1 Q10', 'Static binding uses which information for binding?', 'Static binding uses which information for binding?', 7, 90, 1, 6, 23, '2019-09-15 04:32:00', '2019-09-15 04:32:00'),
(2062, 21, 136, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q18', 'Private Button print = new button();', 'Private Button print = new button();', 7, 95, 2, 6, 61, '2019-09-15 04:32:00', '2019-09-15 04:32:00'),
(2063, 21, 76, 'CCS101 - INTRODUCTION TO COMPUTING _ Q21', '_______ is a duplicate copy of data or other computer content for use in the event that the original version is destroyed.', '_______ is a duplicate copy of data or other computer content for use in the event that the original version is destroyed.', 7, 89, 2, 6, 13, '2019-09-15 04:32:00', '2019-09-15 04:32:00'),
(2064, 21, 32, 'CCS102 - COMPUTER PROGRAMMING 1 - Q2', 'Which of the following is a reserved keyword in C#?', 'Which of the following is a reserved keyword in C#?', 7, 90, 1, 6, 21, '2019-09-15 04:32:00', '2019-09-15 04:32:00'),
(2065, 21, 121, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q3', 'These are additional operators used to return Boolean values.', 'These are additional operators used to return Boolean values.', 7, 95, 1, 6, 55, '2019-09-15 04:32:00', '2019-09-15 04:32:00'),
(2066, 21, 246, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q22', 'Which of  the following holds Java source code for the application?', 'Which of  the following holds Java source code for the application?', 7, 125, 2, 6, 94, '2019-09-15 04:32:00', '2019-09-15 04:32:00'),
(2067, 21, 97, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q7', 'The expression (3i - 2)(i + 1) - 7 can be simplified to which of the following expressions?', 'The expression (3i - 2)(i + 1) - 7 can be simplified to which of the following expressions?', 7, 92, 2, 6, 46, '2019-09-15 04:32:00', '2019-09-15 04:32:00'),
(2068, 21, 211, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q11', 'Web browser available in android based on', 'Web browser available in android based on', 7, 125, 1, 6, 85, '2019-09-15 04:32:00', '2019-09-15 04:32:00'),
(2069, 21, 285, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q29', 'The period of 2 sin x cos x is', 'The period of 2 sin x cos x is', 7, 92, 1, 6, 35, '2019-09-15 04:32:00', '2019-09-15 04:32:00'),
(2070, 21, 77, 'CCS101 - INTRODUCTION TO COMPUTING - Q20', 'A programming error that occurs when running a program produces incorrect results.', 'A programming error that occurs when running a program produces incorrect results.', 7, 89, 1, 6, 9, '2019-09-15 04:32:00', '2019-09-15 04:32:00'),
(2071, 21, 205, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q5', 'For ___________, code used by Android is not open source.', 'For ___________, code used by Android is not open source.', 7, 125, 1, 6, 90, '2019-09-15 04:32:00', '2019-09-15 04:32:00'),
(2072, 21, 79, 'CCS101 - INTRODUCTION TO COMPUTING -Q18', 'Which of the following is/are not part of the CPU?', 'Which of the following is/are not part of the CPU?', 7, 89, 3, 6, 16, '2019-09-15 04:32:00', '2019-09-15 04:32:00'),
(2073, 21, 90, 'CCS101 - INTRODUCTION TO COMPUTING - Q4', 'A letter, digit, or special character is represented by a code in a ___.', 'A letter, digit, or special character is represented by a code in a ___.', 7, 89, 3, 6, 15, '2019-09-15 04:32:00', '2019-09-15 04:32:00'),
(2074, 21, 137, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q19', 'Polymorphism occurs when the methods of the child class.', 'Polymorphism occurs when the methods of the child class.', 7, 95, 2, 6, 62, '2019-09-15 04:32:00', '2019-09-15 04:32:00'),
(2075, 21, 144, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q4', 'What is the cardinality of the set of odd positive integers less than 10?', 'What is the cardinality of the set of odd positive integers less than 10?', 7, 96, 1, 6, 71, '2019-09-15 04:32:00', '2019-09-15 04:32:00'),
(2076, 21, 82, 'CCS101 - INTRODUCTION TO COMPUTING - Q15', '10111 is the two\'s complement representation of', '10111 is the two\'s complement representation of', 7, 89, 1, 6, 5, '2019-09-15 04:32:00', '2019-09-15 04:32:00'),
(2077, 21, 74, 'CCS101 - INTRODUCTION TO COMPUTING - Q23', 'An electronic tool that allows information to be input, processed, and output.', 'An electronic tool that allows information to be input, processed, and output.', 7, 89, 1, 6, 6, '2019-09-15 04:32:00', '2019-09-15 04:32:00'),
(2078, 21, 129, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q11', 'A control similar to an ordinary label having an underline and resembles a link on a web page.', 'A control similar to an ordinary label having an underline and resembles a link on a web page.', 7, 95, 1, 6, 54, '2019-09-15 04:32:00', '2019-09-15 04:32:00'),
(2079, 21, 286, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q30', 'The probability that an electronic device produced by a company does not function properly is equal to 0.1. If 10 devices are bought, then the probability, to the nearest thousandth, that 7 devices function properly is', 'The probability that an electronic device produced by a company does not function properly is equal to 0.1. If 10 devices are bought, then the probability, to the nearest thousandth, that 7 devices function properly is', 7, 92, 3, 6, 49, '2019-09-15 04:32:00', '2019-09-15 04:32:00'),
(2080, 21, 126, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q8', 'A control used to show a list of strings which you can select.', 'A control used to show a list of strings which you can select.', 7, 95, 1, 6, 56, '2019-09-15 04:32:00', '2019-09-15 04:32:00'),
(2081, 21, 155, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q15', 'Let the set A is {1, 2, 3} and B is {2, 3, 4}. Then number of elements in A U B is _____.', 'Let the set A is {1, 2, 3} and B is {2, 3, 4}. Then number of elements in A U B is _____.', 7, 96, 1, 6, 69, '2019-09-15 04:32:00', '2019-09-15 04:32:00'),
(2082, 21, 150, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q10', 'The intersection of the sets {1, 2, 5} and {1, 2, 6} is the set _____________.', 'The intersection of the sets {1, 2, 5} and {1, 2, 6} is the set _____________.', 7, 96, 1, 6, 74, '2019-09-15 04:32:00', '2019-09-15 04:32:00'),
(2083, 21, 39, 'CCS102 - COMPUTER PROGRAMMING 1 Q9', 'What of the following is the default value of an instance variable?', 'What of the following is the default value of an instance variable?', 7, 90, 1, 6, 25, '2019-09-15 04:32:00', '2019-09-15 04:32:00'),
(2084, 21, 38, 'CCS102 - COMPUTER PROGRAMMING 1 - Q8', 'Which of the following is true about try block in C#?', 'Which of the following is true about try block in C#?', 7, 90, 1, 6, 19, '2019-09-15 04:32:00', '2019-09-15 04:32:00'),
(2085, 21, 289, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q33', 'A number of the form 213ab, where a and b are digits, has a reminder less than 10 when divided by 100. The sum of all the digits in the above number is equal to 13. Find the digit b.', 'A number of the form 213ab, where a and b are digits, has a reminder less than 10 when divided by 100. The sum of all the digits in the above number is equal to 13. Find the digit b.', 7, 92, 1, 6, 43, '2019-09-15 04:32:00', '2019-09-15 04:32:00'),
(2086, 21, 278, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q27', 'What will be the output of the following code?\n\n[[#code28]]', 'What will be the output of the following code?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">csharp</span></div><pre><code class=\"language-csharp\">try<br />\n{<br />\n  int num = 100;<br />\n  int den = 0;<br />\n  try<br />\n  {<br />\n    MessageBox.Show(\"Message1\");<br />\n    int res = num/den;<br />\n    MessageBox.Show(\"Message2\");<br />\n  }<br />\n  catch(ArithmeticException ae)<br />\n  {<br />\n    MessageBox.Show(\"Message3\");<br />\n  }<br />\n  MessageBox.Show(\"Message4\");<br />\n}</code></pre>', 7, 95, 3, 6, 68, '2019-09-15 04:32:00', '2019-09-15 04:32:00'),
(2087, 21, 57, 'CCS102 - COMPUTER PROGRAMMING 1 Q27', 'Which of these is necessary to specify at time of array initialization?', 'Which of these is necessary to specify at time of array initialization?', 7, 90, 2, 6, 30, '2019-09-15 04:32:00', '2019-09-15 04:32:00'),
(2088, 21, 142, 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q2', 'The set O of odd positive integers less than 10 can be expressed by _____________.', 'The set O of odd positive integers less than 10 can be expressed by _____________.', 7, 96, 1, 6, 76, '2019-09-15 04:32:00', '2019-09-15 04:32:00'),
(2089, 21, 277, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q26', 'Which of the following will result from compiling this code, assuming that all other code for your form works properly?\n\n[[#code27]]', 'Which of the following will result from compiling this code, assuming that all other code for your form works properly?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">csharp</span></div><pre><code class=\"language-csharp\">try<br />\n{<br />\n  //Write code to allocate some resources<br />\n}<br />\nfinally<br />\n{<br />\n  //Write code to Dispose all allocated resources<br />\n}</code></pre>', 7, 95, 3, 6, 66, '2019-09-15 04:32:00', '2019-09-15 04:32:00'),
(2090, 21, 203, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q3', 'Android doesn\'t  support which format?', 'Android doesn\'t  support which format?', 7, 125, 1, 6, 87, '2019-09-15 04:32:00', '2019-09-15 04:32:00'),
(2091, 21, 34, 'IT01- CCS102 - COMPUTER PROGRAMMING 1 - Q4', 'Which of the following operator returns the size of a data type in C#?', 'Which of the following operator returns the size of a data type in C#?', 7, 90, 1, 6, 22, '2019-09-15 04:32:00', '2019-09-15 04:32:00'),
(2092, 21, 72, 'CCS101 - INTRODUCTION TO COMPUTING - Q25', 'What type of software is a screen saver?', 'What type of software is a screen saver?', 7, 89, 2, 6, 12, '2019-09-15 04:32:00', '2019-09-15 04:32:00'),
(2093, 21, 140, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q22', 'A _______ is an identifier that denotes a storage location.', 'A _______ is an identifier that denotes a storage location.', 7, 95, 2, 6, 63, '2019-09-15 04:32:00', '2019-09-15 04:32:00'),
(2094, 21, 248, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q24', 'What is the use of content provider in android?', 'What is the use of content provider in android?', 7, 125, 2, 6, 97, '2019-09-15 04:32:00', '2019-09-15 04:32:00'),
(2095, 21, 59, 'CCS102 - COMPUTER PROGRAMMING 1 Q29', 'What is the output of this program?\n\n[[#code24]]', 'What is the output of this program?<br />\n<br />\n<div class=\"d-flex justify-content-end\"><span class=\"badge badge-light\">java</span></div><pre><code class=\"language-java\">class evaluate <br />\n    {<br />\n        public static void main(String args[]) <br />\n            {<br />\n	        int arr[] = new int[] {0 , 1, 2, 3, 4, 5, 6, 7, 8, 9};<br />\n	        int n = 6;<br />\n                n = arr[arr[n] / 2];<br />\n	        System.out.println(arr[n] / 2);<br />\n            } <br />\n    }</code></pre>', 7, 90, 3, 6, 34, '2019-09-15 04:32:00', '2019-09-15 04:32:00'),
(2096, 21, 104, 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q14', 'What is the result when you put the expression x<sup>2</sup> +10x+41 into vertex form by completing the square ?', 'What is the result when you put the expression x<sup>2</sup> +10x+41 into vertex form by completing the square ?', 7, 92, 3, 6, 51, '2019-09-15 04:32:01', '2019-09-15 04:32:01'),
(2097, 21, 202, 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q2', 'What is android?', 'What is android?', 7, 125, 1, 6, 86, '2019-09-15 04:32:01', '2019-09-15 04:32:01'),
(2098, 21, 138, 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q20', 'A method_____an exception when that method detects that a problem has occured.', 'A method_____an exception when that method detects that a problem has occured.', 7, 95, 2, 6, 65, '2019-09-15 04:32:01', '2019-09-15 04:32:01'),
(2099, 21, 225, 'CCS101 - INTRODUCTION TO COMPUTING - Q7', 'Converting (1010111)<sub>2</sub> to base yields which of the following results?', 'Converting (1010111)<sub>2</sub> to base yields which of the following results?', 7, 89, 2, 6, 11, '2019-09-15 04:32:01', '2019-09-15 04:32:01'),
(2100, 21, 219, 'Computer Hardware - Q3', 'A device that enables a computer to communicate over telephone lines.', 'A device that enables a computer to communicate over telephone lines.', 7, 89, 2, 6, 1, '2019-09-15 04:32:01', '2019-09-15 04:32:01');

-- --------------------------------------------------------

--
-- Table structure for table `answer_sheet_test_question_choices`
--

CREATE TABLE `answer_sheet_test_question_choices` (
  `id` int(10) UNSIGNED NOT NULL,
  `choice_id` int(11) NOT NULL,
  `answer_sheet_test_question_id` int(11) NOT NULL,
  `test_question_id` int(11) NOT NULL,
  `body` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `body_html` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `is_correct` tinyint(1) NOT NULL,
  `is_selected` tinyint(1) NOT NULL DEFAULT '0',
  `pos_order` int(11) DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `answer_sheet_test_question_choices`
--

INSERT INTO `answer_sheet_test_question_choices` (`id`, `choice_id`, `answer_sheet_test_question_id`, `test_question_id`, `body`, `body_html`, `is_correct`, `is_selected`, `pos_order`, `created_at`, `updated_at`) VALUES
(1, 1105, 1, 289, '7', '7', 1, 0, 2, '2019-08-31 22:04:24', '2019-08-31 22:07:24'),
(2, 1106, 1, 289, '6', '6', 0, 0, 3, '2019-08-31 22:04:24', '2019-08-31 22:07:24'),
(3, 1107, 1, 289, '8', '8', 0, 1, 4, '2019-08-31 22:04:24', '2019-08-31 22:07:24'),
(4, 1104, 1, 289, '5', '5', 0, 0, 1, '2019-08-31 22:04:24', '2019-08-31 22:07:24'),
(5, 930, 2, 142, '{1, 5, 7, 9, 11}', '{1, 5, 7, 9, 11}', 0, 0, 4, '2019-08-31 22:04:24', '2019-08-31 22:07:24'),
(6, 449, 2, 142, '{1, 2, 5, 9}', '{1, 2, 5, 9}', 0, 0, 3, '2019-08-31 22:04:24', '2019-08-31 22:07:24'),
(7, 447, 2, 142, '{1, 2, 3}', '{1, 2, 3}', 0, 1, 1, '2019-08-31 22:04:24', '2019-08-31 22:07:24'),
(8, 448, 2, 142, '{1, 3, 5, 7, 9}', '{1, 3, 5, 7, 9}', 1, 0, 2, '2019-08-31 22:04:24', '2019-08-31 22:07:24'),
(9, 176, 3, 51, 'Compilation error', 'Compilation error', 1, 0, 3, '2019-08-31 22:04:24', '2019-08-31 22:07:24'),
(10, 911, 3, 51, 'Runtime error', 'Runtime error', 0, 1, 4, '2019-08-31 22:04:24', '2019-08-31 22:07:24'),
(11, 175, 3, 51, '8', '8', 0, 0, 2, '2019-08-31 22:04:24', '2019-08-31 22:07:24'),
(12, 174, 3, 51, '9', '9', 0, 0, 1, '2019-08-31 22:04:24', '2019-08-31 22:07:24'),
(13, 363, 4, 114, 'mean = 15 , standard deviation = 6', 'mean = 15 , standard deviation = 6', 0, 0, 1, '2019-08-31 22:04:24', '2019-08-31 22:07:24'),
(14, 364, 4, 114, 'mean = 10 , standard deviation = 6', 'mean = 10 , standard deviation = 6', 0, 1, 2, '2019-08-31 22:04:24', '2019-08-31 22:07:24'),
(15, 365, 4, 114, 'mean = 15 , standard deviation = 1', 'mean = 15 , standard deviation = 1', 1, 0, 3, '2019-08-31 22:04:24', '2019-08-31 22:07:24'),
(16, 1083, 4, 114, 'mean = 10 , standard deviation = 1', 'mean = 10 , standard deviation = 1', 0, 0, 4, '2019-08-31 22:04:24', '2019-08-31 22:07:24'),
(17, 663, 5, 214, 'Linux kernel', 'Linux kernel', 1, 0, 1, '2019-08-31 22:04:24', '2019-08-31 22:07:24'),
(18, 664, 5, 214, 'Windows kernel', 'Windows kernel', 0, 0, 2, '2019-08-31 22:04:24', '2019-08-31 22:07:24'),
(19, 832, 5, 214, 'Hybrid kernel', 'Hybrid kernel', 0, 1, 4, '2019-08-31 22:04:24', '2019-08-31 22:07:24'),
(20, 665, 5, 214, 'MAC kernel', 'MAC kernel', 0, 0, 3, '2019-08-31 22:04:24', '2019-08-31 22:07:24'),
(21, 434, 6, 137, 'Have different return types and arguments than the parent class', 'Have different return types and arguments than the parent class', 0, 0, 3, '2019-08-31 22:04:24', '2019-08-31 22:07:24'),
(22, 433, 6, 137, 'Maintain the same return type and arguments as the parent class, but implement it differently', 'Maintain the same return type and arguments as the parent class, but implement it differently', 1, 0, 2, '2019-08-31 22:04:24', '2019-08-31 22:07:24'),
(23, 432, 6, 137, 'Override the parent class methods but maintain the implementation', 'Override the parent class methods but maintain the implementation', 0, 1, 1, '2019-08-31 22:04:24', '2019-08-31 22:07:24'),
(24, 1013, 6, 137, 'Are Virtual', 'Are Virtual', 0, 0, 4, '2019-08-31 22:04:24', '2019-08-31 22:07:24'),
(25, 979, 7, 267, 'greatest previous integer', 'greatest previous integer', 1, 0, 2, '2019-08-31 22:04:24', '2019-08-31 22:07:24'),
(26, 978, 7, 267, 'smallest previous integer', 'smallest previous integer', 0, 0, 1, '2019-08-31 22:04:24', '2019-08-31 22:07:24'),
(27, 980, 7, 267, 'smallest following integer', 'smallest following integer', 0, 1, 3, '2019-08-31 22:04:24', '2019-08-31 22:07:24'),
(28, 667, 8, 215, '2.3 (Gingerbread)', '2.3 (Gingerbread)', 1, 0, 2, '2019-08-31 22:04:24', '2019-08-31 22:07:24'),
(29, 668, 8, 215, '2.6', '2.6', 0, 0, 3, '2019-08-31 22:04:24', '2019-08-31 22:07:24'),
(30, 666, 8, 215, '3.0 (Honeycomb)', '3.0 (Honeycomb)', 0, 0, 1, '2019-08-31 22:04:24', '2019-08-31 22:07:24'),
(31, 833, 8, 215, '2.2 (Froyo)', '2.2 (Froyo)', 0, 1, 4, '2019-08-31 22:04:24', '2019-08-31 22:07:24'),
(32, 399, 9, 126, 'CheckListBox control', 'CheckListBox control', 0, 0, 1, '2019-08-31 22:04:24', '2019-08-31 22:07:24'),
(33, 400, 9, 126, 'ListBox control', 'ListBox control', 1, 0, 2, '2019-08-31 22:04:24', '2019-08-31 22:07:24'),
(34, 401, 9, 126, 'TextBox control', 'TextBox control', 0, 1, 3, '2019-08-31 22:04:24', '2019-08-31 22:07:24'),
(35, 887, 10, 254, 'None of the above', 'None of the above', 0, 0, 4, '2019-08-31 22:04:24', '2019-08-31 22:07:24'),
(36, 885, 10, 254, 'Cookies management', 'Cookies management', 0, 0, 2, '2019-08-31 22:04:24', '2019-08-31 22:07:24'),
(37, 886, 10, 254, 'Authentication management', 'Authentication management', 0, 1, 3, '2019-08-31 22:04:24', '2019-08-31 22:07:24'),
(38, 884, 10, 254, 'httprequest(get/post) and returns response from the server', 'httprequest(get/post) and returns response from the server', 1, 0, 1, '2019-08-31 22:04:24', '2019-08-31 22:07:24'),
(39, 314, 11, 97, 'i - 12', 'i - 12', 1, 0, 3, '2019-08-31 22:04:24', '2019-08-31 22:07:24'),
(40, 1066, 11, 97, '3i - 10', '3i - 10', 0, 0, 4, '2019-08-31 22:04:24', '2019-08-31 22:07:24'),
(41, 313, 11, 97, '7 - 3i', '7 - 3i', 0, 1, 2, '2019-08-31 22:04:24', '2019-08-31 22:07:24'),
(42, 312, 11, 97, 'i - 5', 'i - 5', 0, 0, 1, '2019-08-31 22:04:24', '2019-08-31 22:07:24'),
(43, 141, 12, 40, 'type.', 'type.', 1, 0, 1, '2019-08-31 22:04:24', '2019-08-31 22:07:24'),
(44, 142, 12, 40, 'object.', 'object.', 0, 0, 2, '2019-08-31 22:04:24', '2019-08-31 22:07:24'),
(45, 143, 12, 40, 'Both of the above.', 'Both of the above.', 0, 1, 3, '2019-08-31 22:04:24', '2019-08-31 22:07:24'),
(46, 137, 13, 38, 'A and B', 'A and B', 1, 0, 3, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(47, 136, 13, 38, 'It is followed by one or more catch blocks.', 'It is followed by one or more catch blocks.', 0, 1, 2, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(48, 135, 13, 38, 'A try block identifies a block of code for which particular exceptions is activated.', 'A try block identifies a block of code for which particular exceptions is activated.', 0, 0, 1, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(49, 193, 14, 57, 'Column', 'Column', 0, 0, 2, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(50, 192, 14, 57, 'Row', 'Row', 1, 0, 1, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(51, 194, 14, 57, 'Both Row and Column', 'Both Row and Column', 0, 1, 3, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(52, 912, 15, 52, '100', '100', 0, 0, 4, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(53, 177, 15, 52, '12', '12', 0, 0, 1, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(54, 179, 15, 52, '400', '400', 0, 1, 3, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(55, 178, 15, 52, '200', '200', 1, 0, 2, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(56, 358, 16, 112, '15', '15', 0, 0, 2, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(57, 357, 16, 112, '10', '10', 0, 0, 1, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(58, 1081, 16, 112, '8', '8', 0, 1, 4, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(59, 359, 16, 112, '2100', '2100', 1, 0, 3, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(60, 847, 17, 244, 'none of these', 'none of these', 0, 0, 4, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(61, 844, 17, 244, 'commitUpdates()', 'commitUpdates()', 1, 0, 1, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(62, 846, 17, 244, 'commit()', 'commit()', 0, 1, 3, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(63, 845, 17, 244, 'updates()', 'updates()', 0, 0, 2, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(64, 1023, 18, 275, 'Several catch blocks within one try block, arranged starting with the most specific exception and ending with Exception.', 'Several catch blocks within one try block, arranged starting with the most specific exception and ending with Exception.', 1, 0, 3, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(65, 1021, 18, 275, 'Only one catch block for each try block.', 'Only one catch block for each try block.', 0, 0, 1, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(66, 1024, 18, 275, 'The catch blocks should be used only when a finally block is not used.', 'The catch blocks should be used only when a finally block is not used.', 0, 1, 4, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(67, 1022, 18, 275, 'Several catch blocks for a try block, arranged in order starting with Exception and ending with the most specific exception.', 'Several catch blocks for a try block, arranged in order starting with Exception and ending with the most specific exception.', 0, 0, 2, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(68, 715, 19, 87, 'fetch, decode, execute and store', 'fetch, decode, execute and store', 1, 0, 4, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(69, 282, 19, 87, 'fetch, execute, store and decode', 'fetch, execute, store and decode', 0, 1, 1, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(70, 284, 19, 87, 'decode, fetch, store and execute', 'decode, fetch, store and execute', 0, 0, 3, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(71, 283, 19, 87, 'decode, execute, store and fetch', 'decode, execute, store and fetch', 0, 0, 2, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(72, 854, 20, 246, 'src/', 'src/', 1, 0, 3, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(73, 853, 20, 246, 'assets/', 'assets/', 0, 0, 2, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(74, 855, 20, 246, 'bin/', 'bin/', 0, 1, 4, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(75, 852, 20, 246, 'res/', 'res/', 0, 0, 1, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(76, 386, 21, 121, 'Logical operators', 'Logical operators', 1, 0, 3, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(77, 385, 21, 121, 'Bitwise operators', 'Bitwise operators', 0, 0, 2, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(78, 384, 21, 121, 'RElational operators', 'RElational operators', 0, 1, 1, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(79, 1004, 21, 121, 'Assignment Operators', 'Assignment Operators', 0, 0, 4, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(80, 347, 22, 108, '1 000 000', '1 000 000', 0, 0, 3, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(81, 346, 22, 108, '1 852 000', '1 852 000', 0, 0, 2, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(82, 1077, 22, 108, '1 500 000', '1 500 000', 0, 1, 4, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(83, 345, 22, 108, '1 846 000', '1 846 000', 1, 0, 1, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(84, 936, 23, 148, '9', '9', 0, 0, 4, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(85, 467, 23, 148, '7', '7', 0, 1, 3, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(86, 465, 23, 148, '8', '8', 1, 0, 1, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(87, 466, 23, 148, '6', '6', 0, 0, 2, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(88, 147, 24, 42, 'static', 'static', 0, 0, 1, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(89, 148, 24, 42, 'Boolean', 'Boolean', 1, 0, 2, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(90, 149, 24, 42, 'void', 'void', 0, 1, 3, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(91, 907, 24, 42, 'private', 'private', 0, 0, 4, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(92, 879, 25, 252, 'None of the above', 'None of the above', 0, 0, 4, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(93, 877, 25, 252, 'A bean class can be passed from one activity to another.', 'A bean class can be passed from one activity to another.', 0, 0, 2, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(94, 876, 25, 252, 'A class used to hold states and objects', 'A class used to hold states and objects', 1, 0, 1, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(95, 878, 25, 252, 'A mandatory class in android', 'A mandatory class in android', 0, 1, 3, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(96, 125, 26, 34, '&</a>', '&</a>', 0, 0, 3, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(97, 124, 26, 34, 'typeof', 'typeof', 0, 1, 2, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(98, 123, 26, 34, 'sizeof', 'sizeof', 1, 0, 1, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(99, 902, 26, 34, '*', '*', 0, 0, 4, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(100, 431, 27, 136, 'instantiates button control', 'instantiates button control', 0, 0, 3, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(101, 1012, 27, 136, 'a and c', 'a and c', 1, 0, 4, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(102, 430, 27, 136, 'initializes a button control', 'initializes a button control', 0, 0, 2, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(103, 429, 27, 136, 'creates a button control', 'creates a button control', 0, 1, 1, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(104, 1091, 28, 285, 'π', 'π', 1, 0, 4, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(105, 1088, 28, 285, '4 π <sup>2</sup>', '4 π <sup>2</sup>', 0, 1, 1, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(106, 1090, 28, 285, '4 π', '4 π', 0, 0, 3, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(107, 1089, 28, 285, '2 π', '2 π', 0, 0, 2, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(108, 861, 29, 248, 'To store the data in a database', 'To store the data in a database', 0, 0, 2, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(109, 862, 29, 248, 'To share the data between applications', 'To share the data between applications', 1, 0, 3, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(110, 860, 29, 248, 'To send the data from an application to another application', 'To send the data from an application to another application', 0, 0, 1, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(111, 863, 29, 248, 'none of the choices', 'none of the choices', 0, 1, 4, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(112, 700, 30, 223, '100001', '100001', 0, 0, 2, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(113, 718, 30, 223, '100100', '100100', 0, 1, 4, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(114, 701, 30, 223, '110100', '110100', 1, 0, 3, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(115, 699, 30, 223, '110011', '110011', 0, 0, 1, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(116, 488, 31, 155, '6', '6', 0, 0, 3, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(117, 487, 31, 155, '5', '5', 0, 1, 2, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(118, 486, 31, 155, '4', '4', 1, 0, 1, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(119, 943, 31, 155, '7', '7', 0, 0, 4, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(120, 658, 32, 212, 'Google', 'Google', 1, 0, 2, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(121, 659, 32, 212, 'Nokia', 'Nokia', 0, 0, 3, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(122, 657, 32, 212, 'Apple', 'Apple', 0, 0, 1, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(123, 830, 32, 212, 'No company', 'No company', 0, 1, 4, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(124, 165, 33, 48, 'JRE is a java based GUI application.', 'JRE is a java based GUI application.', 0, 0, 1, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(125, 167, 33, 48, 'JRE is an implementation of the Java Virtual Machine which executes Java programs.', 'JRE is an implementation of the Java Virtual Machine which executes Java programs.', 1, 0, 3, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(126, 166, 33, 48, 'JRE is an application development framework.', 'JRE is an application development framework.', 0, 1, 2, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(127, 417, 34, 132, 'If', 'If', 0, 0, 1, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(128, 1009, 34, 132, 'While', 'While', 0, 0, 4, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(129, 418, 34, 132, 'Switch', 'Switch', 1, 0, 2, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(130, 419, 34, 132, 'For', 'For', 0, 1, 3, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(131, 463, 35, 147, 'Finite', 'Finite', 0, 0, 2, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(132, 464, 35, 147, 'Subset', 'Subset', 0, 0, 3, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(133, 935, 35, 147, 'Empty', 'Empty', 0, 1, 4, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(134, 462, 35, 147, 'Infinite', 'Infinite', 1, 0, 1, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(135, 319, 36, 99, '1.756', '1.756', 0, 0, 2, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(136, 320, 36, 99, '2.322', '2.322', 1, 0, 3, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(137, 1068, 36, 99, '4.753', '4.753', 0, 1, 4, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(138, 318, 36, 99, '6.25', '6.25', 0, 0, 1, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(139, 302, 37, 93, 'x ≥ -5', 'x ≥ -5', 0, 0, 3, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(140, 1062, 37, 93, 'x ≤ -5', 'x ≤ -5', 0, 0, 4, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(141, 301, 37, 93, 'x ≥ 5', 'x ≥ 5', 1, 0, 2, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(142, 300, 37, 93, 'x ≤ 5', 'x ≤ 5', 0, 1, 1, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(143, 841, 38, 243, 'X.style', 'X.style', 0, 0, 2, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(144, 842, 38, 243, 'manifest.XML', 'manifest.XML', 0, 0, 3, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(145, 843, 38, 243, 'application', 'application', 0, 1, 4, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(146, 840, 38, 243, 'R.style', 'R.style', 1, 0, 1, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(147, 257, 39, 78, 'EBCDIC', 'EBCDIC', 0, 0, 3, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(148, 726, 39, 78, 'ANSI', 'ANSI', 0, 1, 4, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(149, 256, 39, 78, 'Unicode', 'Unicode', 1, 0, 2, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(150, 255, 39, 78, 'ASCII', 'ASCII', 0, 0, 1, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(151, 456, 40, 145, '{(1, a), (1, b), (2, a), (b, b)}', '{(1, a), (1, b), (2, a), (b, b)}', 0, 0, 1, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(152, 457, 40, 145, '{(1, 1), (2, 2), (a, a), (b, b)}', '{(1, 1), (2, 2), (a, a), (b, b)}', 0, 0, 2, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(153, 933, 40, 145, '{(1, 1), (a, a), (2, a), (1, b)}', '{(1, 1), (a, a), (2, a), (1, b)}', 0, 1, 4, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(154, 458, 40, 145, '{(1, a), (2, a), (1, b), (2, b)}', '{(1, a), (2, a), (1, b), (2, b)}', 1, 0, 3, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(155, 355, 41, 111, '(π/2 , π)', '(π/2 , π)', 1, 0, 2, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(156, 1080, 41, 111, '(3 π / 2 , 2 π)', '(3 π / 2 , 2 π)', 0, 0, 4, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(157, 354, 41, 111, '(0 , π/2)', '(0 , π/2)', 0, 1, 1, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(158, 356, 41, 111, '(π , 3 π / 2)', '(π , 3 π / 2)', 0, 0, 3, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(159, 371, 42, 116, 'neither odd nor even', 'neither odd nor even', 0, 0, 3, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(160, 369, 42, 116, 'an odd function', 'an odd function', 0, 1, 1, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(161, 370, 42, 116, 'an even function', 'an even function', 1, 0, 2, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(162, 1085, 42, 116, 'even and odd', 'even and odd', 0, 0, 4, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(163, 118, 43, 32, 'as', 'as', 0, 0, 2, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(164, 900, 43, 32, 'All of the choices', 'All of the choices', 1, 0, 4, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(165, 117, 43, 32, 'abstract', 'abstract', 0, 1, 1, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(166, 119, 43, 32, 'foreach', 'foreach', 0, 0, 3, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(167, 892, 44, 256, 'Content values are key pair values, which are updated or inserted in the database', 'Content values are key pair values, which are updated or inserted in the database', 0, 0, 1, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(168, 894, 44, 256, 'A & B', 'A & B', 1, 0, 3, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(169, 895, 44, 256, 'Cursor is used to store data permanently.', 'Cursor is used to store data permanently.', 0, 1, 4, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(170, 893, 44, 256, 'Cursor is used to store the temporary result.', 'Cursor is used to store the temporary result.', 0, 0, 2, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(171, 1035, 45, 278, 'Message1\nMessage3\nMessage4', 'Message1<br />\nMessage3<br />\nMessage4', 1, 1, 3, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(172, 1034, 45, 278, 'Message1\nMessage2\nMessage3\nMessage4', 'Message1<br />\nMessage2<br />\nMessage3<br />\nMessage4', 0, 0, 2, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(173, 1036, 45, 278, 'Message1\nMessage3\nMessage2\nMessage4', 'Message1<br />\nMessage3<br />\nMessage2<br />\nMessage4', 0, 0, 4, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(174, 1033, 45, 278, 'Message1\nMessage4', 'Message1<br />\nMessage4', 0, 0, 1, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(175, 393, 46, 124, 'Reference type', 'Reference type', 1, 0, 1, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(176, 394, 46, 124, 'Value types', 'Value types', 0, 0, 2, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(177, 395, 46, 124, 'Data Type', 'Data Type', 0, 1, 3, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(178, 1007, 46, 124, 'Explicit Types', 'Explicit Types', 0, 0, 4, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(179, 120, 47, 33, 'ToDecimal', 'ToDecimal', 0, 0, 1, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(180, 122, 47, 33, 'ToInt16', 'ToInt16', 0, 1, 3, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(181, 121, 47, 33, 'ToDouble', 'ToDouble', 1, 0, 2, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(182, 901, 47, 33, 'ToInt32', 'ToInt32', 0, 0, 4, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(183, 442, 48, 140, 'Reference type', 'Reference type', 0, 0, 2, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(184, 441, 48, 140, 'Constant', 'Constant', 0, 0, 1, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(185, 1016, 48, 140, 'Object', 'Object', 0, 1, 4, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(186, 443, 48, 140, 'Variable', 'Variable', 1, 0, 3, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(187, 402, 49, 127, 'Radio Button', 'Radio Button', 0, 0, 1, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(188, 404, 49, 127, 'Button control', 'Button control', 1, 0, 3, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(189, 403, 49, 127, 'Textbox control', 'Textbox control', 0, 1, 2, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(190, 931, 50, 143, 'Three', 'Three', 0, 0, 4, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(191, 450, 50, 143, 'One', 'One', 1, 0, 1, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(192, 451, 50, 143, 'Two', 'Two', 0, 1, 2, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(193, 452, 50, 143, 'Zero', 'Zero', 0, 0, 3, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(194, 1092, 51, 286, '0.057', '0.057', 1, 0, 1, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(195, 1095, 51, 286, '0', '0', 0, 0, 4, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(196, 1093, 51, 286, '0.478', '0.478', 0, 1, 2, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(197, 1094, 51, 286, '0.001', '0.001', 0, 0, 3, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(198, 631, 52, 203, 'MPEG', 'MPEG', 0, 0, 2, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(199, 630, 52, 203, 'MP4', 'MP4', 0, 0, 1, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(200, 632, 52, 203, 'AVI', 'AVI', 1, 0, 3, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(201, 821, 52, 203, 'MIDI', 'MIDI', 0, 1, 4, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(202, 635, 53, 204, 'Video calling', 'Video calling', 0, 0, 3, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(203, 822, 53, 204, 'All of the choices', 'All of the choices', 1, 0, 4, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(204, 634, 53, 204, 'Bluetooth', 'Bluetooth', 0, 0, 2, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(205, 633, 53, 204, 'Multitasking', 'Multitasking', 0, 1, 1, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(206, 987, 54, 270, '35', '35', 1, 0, 1, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(207, 989, 54, 270, '25', '25', 0, 1, 3, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(208, 988, 54, 270, '45', '45', 0, 0, 2, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(209, 199, 55, 59, '0', '0', 0, 0, 2, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(210, 918, 55, 59, '1', '1', 1, 0, 4, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(211, 200, 55, 59, '6', '6', 0, 1, 3, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(212, 198, 55, 59, '3', '3', 0, 0, 1, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(213, 232, 56, 70, '[[#img29]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/Cf9qY75IYjLpUVFWsICWK07cAwLtqRPDIO6JjLqT.png\" width=\"150\" height=\"150\" />', 0, 0, 2, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(214, 233, 56, 70, '[[#img30]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/5CGn3NoMP2AFTNnuWdi3jGe97XfkU7ydkF3PldTA.png\" width=\"150\" height=\"150\" />', 0, 1, 3, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(215, 231, 56, 70, '[[#img28]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/jkL1TWHhQQMAtCTbSz6HtJyZn8zhXmtgMQYX3Zpo.png\" width=\"150\" height=\"150\" />', 1, 0, 1, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(216, 680, 56, 70, '[[#img31]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/VNrzOvOE3LpeuWi9ciBQDVlGrXxObvbfnI3kfNS4.png\" width=\"150\" height=\"150\" />', 0, 0, 4, '2019-08-31 22:04:25', '2019-08-31 22:07:24'),
(217, 238, 57, 72, 'Utility software', 'Utility software', 1, 0, 2, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(218, 732, 57, 72, 'Disk optimization software', 'Disk optimization software', 0, 1, 4, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(219, 237, 57, 72, 'Operating system software', 'Operating system software', 0, 0, 1, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(220, 239, 57, 72, 'Anti-virus software', 'Anti-virus software', 0, 0, 3, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(221, 507, 58, 162, 'n(A U B)=0', 'n(A U B)=0', 0, 0, 1, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(222, 509, 58, 162, 'n( A U B U C)=90', 'n( A U B U C)=90', 0, 0, 3, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(223, 508, 58, 162, 'n( B U C)=0', 'n( B U C)=0', 0, 1, 2, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(224, 950, 58, 162, 'All of the mentioned', 'All of the mentioned', 1, 0, 4, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(225, 712, 59, 89, 'None of them', 'None of them', 0, 0, 4, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(226, 290, 59, 89, 'Virtual Machine', 'Virtual Machine', 0, 0, 3, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(227, 288, 59, 89, 'Virtual private network', 'Virtual private network', 0, 1, 1, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(228, 289, 59, 89, 'Virtual memory', 'Virtual memory', 1, 0, 2, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(229, 725, 60, 79, 'Primary Storage', 'Primary Storage', 1, 0, 4, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(230, 258, 60, 79, 'Control unit', 'Control unit', 0, 0, 1, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(231, 259, 60, 79, 'ALU', 'ALU', 0, 1, 2, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(232, 260, 60, 79, 'Registers', 'Registers', 0, 0, 3, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(233, 655, 61, 211, 'Firefox', 'Firefox', 0, 0, 2, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(234, 829, 61, 211, 'Opera', 'Opera', 0, 0, 4, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(235, 654, 61, 211, 'Chrome', 'Chrome', 0, 1, 1, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(236, 656, 61, 211, 'Open source Webkit', 'Open source Webkit', 1, 0, 3, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(237, 252, 62, 77, 'logic error', 'logic error', 1, 0, 1, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(238, 727, 62, 77, 'linker error', 'linker error', 0, 0, 4, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(239, 254, 62, 77, 'run time error', 'run time error', 0, 1, 3, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(240, 253, 62, 77, 'syntax error', 'syntax error', 0, 0, 2, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(241, 637, 63, 205, 'Video Driver', 'Video Driver', 0, 0, 2, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(242, 636, 63, 205, 'Device Driver', 'Device Driver', 0, 0, 1, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(243, 823, 63, 205, 'Bluetooth driver', 'Bluetooth driver', 0, 1, 4, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(244, 638, 63, 205, 'WiFi driver', 'WiFi driver', 1, 0, 3, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(245, 221, 64, 66, '199', '199', 0, 0, 3, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(246, 220, 64, 66, '163', '163', 1, 0, 2, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(247, 219, 64, 66, '121', '121', 0, 1, 1, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(248, 676, 64, 66, '212', '212', 0, 0, 4, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(249, 227, 65, 68, '[[#img25]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/rDh656ehodyPQmn7CxxjGK2H29sx2bh6LDz9INfN.png\" width=\"150\" height=\"150\" />', 0, 0, 3, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(250, 225, 65, 68, '[[#img23]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/IyLDJJaUUQ0aIZOMyEjh4JO72W4HpXtPj2CfMKZL.png\" width=\"150\" height=\"150\" />', 1, 0, 1, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(251, 226, 65, 68, '[[#img24]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/nVLwXww7AT2RBfzhH1tPQMxdLPF1iWuunHzErZRh.png\" width=\"150\" height=\"150\" />', 0, 1, 2, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(252, 679, 65, 68, '[[#img26]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/tBuCNpani0PgWIFN01ztVOAj4FS4CBDAiTW9J8lB.png\" width=\"150\" height=\"150\" />', 0, 0, 4, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(253, 1056, 66, 283, 'Set the CausesValidation property of the Help button to true.', 'Set the CausesValidation property of the Help button to true.', 0, 0, 4, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(254, 1053, 66, 283, 'Set the CausesValidation property of the text box to false.', 'Set the CausesValidation property of the text box to false.', 0, 1, 1, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(255, 1055, 66, 283, 'Set the CausesValidation property of the Help button to false.', 'Set the CausesValidation property of the Help button to false.', 1, 0, 3, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(256, 1054, 66, 283, 'Set the CausesValidation property of the text box to true.', 'Set the CausesValidation property of the text box to true.', 0, 0, 2, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(257, 1064, 67, 95, '-12i', '-12i', 0, 0, 4, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(258, 307, 67, 95, 'You cannot find the square root of a negative number', 'You cannot find the square root of a negative number', 0, 1, 2, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(259, 306, 67, 95, '12i', '12i', 1, 0, 1, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(260, 308, 67, 95, '-12', '-12', 0, 0, 3, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(261, 297, 68, 92, 'x < 6', 'x < 6', 0, 0, 1, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(262, 298, 68, 92, 'x > 1', 'x > 1', 0, 1, 2, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(263, 299, 68, 92, 'x < -1', 'x < -1', 1, 0, 3, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(264, 1061, 68, 92, 'x > 6', 'x > 6', 0, 0, 4, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(265, 705, 69, 225, '531', '531', 0, 0, 1, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(266, 714, 69, 225, '135', '135', 0, 1, 4, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(267, 706, 69, 225, '127', '127', 1, 0, 2, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(268, 707, 69, 225, '44', '44', 0, 0, 3, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(269, 474, 70, 151, 'Union', 'Union', 0, 0, 1, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(270, 476, 70, 151, 'Intersection', 'Intersection', 1, 0, 3, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(271, 475, 70, 151, 'Difference', 'Difference', 0, 1, 2, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(272, 939, 70, 151, 'Complement', 'Complement', 0, 0, 4, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(273, 416, 71, 131, 'Show()', 'Show()', 1, 0, 3, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(274, 414, 71, 131, 'Get()', 'Get()', 0, 1, 1, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(275, 415, 71, 131, 'Enable()', 'Enable()', 0, 0, 2, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(276, 435, 72, 138, 'Trys', 'Trys', 0, 0, 1, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(277, 1014, 72, 138, 'a and b', 'a and b', 0, 1, 4, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(278, 437, 72, 138, 'Throws', 'Throws', 1, 0, 3, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(279, 436, 72, 138, 'Catches', 'Catches', 0, 0, 2, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(280, 379, 73, 119, 'do while', 'do while', 0, 0, 2, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(281, 380, 73, 119, 'while', 'while', 0, 0, 3, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(282, 378, 73, 119, 'forEach loop', 'forEach loop', 0, 1, 1, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(283, 1002, 73, 119, 'for loop', 'for loop', 1, 0, 4, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(284, 952, 74, 260, '20', '20', 0, 1, 2, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(285, 951, 74, 260, '35', '35', 1, 0, 1, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(286, 954, 74, 260, '10', '10', 0, 0, 4, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(287, 953, 74, 260, '30', '30', 0, 0, 3, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(288, 920, 75, 61, 'first generation memory', 'first generation memory', 0, 0, 4, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(289, 204, 75, 61, 'heap space', 'heap space', 1, 0, 1, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(290, 206, 75, 61, 'heap space and stack space', 'heap space and stack space', 0, 1, 3, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(291, 205, 75, 61, 'stack space', 'stack space', 0, 0, 2, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(292, 409, 76, 129, 'LinkLabel control', 'LinkLabel control', 1, 0, 2, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(293, 410, 76, 129, 'ListView Control', 'ListView Control', 0, 0, 3, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(294, 408, 76, 129, 'GroupBox control', 'GroupBox control', 0, 1, 1, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(295, 1082, 77, 113, '3! * 2!', '3! * 2!', 0, 0, 4, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(296, 361, 77, 113, '3!', '3!', 1, 0, 2, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(297, 360, 77, 113, '5!', '5!', 0, 1, 1, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(298, 362, 77, 113, '2!', '2!', 0, 0, 3, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(299, 685, 78, 219, 'Switch', 'Switch', 0, 0, 2, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(300, 686, 78, 219, 'Modem', 'Modem', 1, 0, 3, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(301, 710, 78, 219, 'Wireless access point', 'Wireless access point', 0, 1, 4, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(302, 684, 78, 219, 'Repeater', 'Repeater', 0, 0, 1, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(303, 251, 79, 76, 'virtual memory', 'virtual memory', 0, 1, 3, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(304, 728, 79, 76, 'back up', 'back up', 1, 0, 4, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(305, 250, 79, 76, 'buffering', 'buffering', 0, 0, 2, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(306, 249, 79, 76, 'spooling', 'spooling', 0, 0, 1, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(307, 138, 80, 39, 'null', 'null', 0, 0, 1, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(308, 906, 80, 39, 'Not assigned', 'Not assigned', 0, 0, 4, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(309, 139, 80, 39, '0', '0', 0, 1, 2, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(310, 140, 80, 39, 'Depends upon the type of variable', 'Depends upon the type of variable', 1, 0, 3, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(311, 471, 81, 150, '{1, 2}', '{1, 2}', 1, 0, 1, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(312, 472, 81, 150, '{5, 6}', '{5, 6}', 0, 0, 2, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(313, 938, 81, 150, '{1, 6}', '{1, 6}', 0, 1, 4, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(314, 473, 81, 150, '{2, 5}', '{2, 5}', 0, 0, 3, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(315, 387, 82, 122, 'unary operators', 'unary operators', 1, 0, 1, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(316, 388, 82, 122, 'Binary operators', 'Binary operators', 0, 0, 2, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(317, 1005, 82, 122, 'Assignment opeartors', 'Assignment opeartors', 0, 1, 4, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(318, 389, 82, 122, 'Logical operators', 'Logical operators', 0, 0, 3, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(319, 917, 83, 58, '1 2 3 4 5 6 7 8 9 10', '1 2 3 4 5 6 7 8 9 10', 0, 0, 4, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(320, 197, 83, 58, '0 1 2 3 4 5 6 7 8 9', '0 1 2 3 4 5 6 7 8 9', 0, 1, 3, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(321, 196, 83, 58, '1 3 5 7 9', '1 3 5 7 9', 0, 0, 2, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(322, 195, 83, 58, '0 2 4 6 8', '0 2 4 6 8', 1, 0, 1, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(323, 145, 84, 41, 'public int main(String[] args)', 'public int main(String[] args)', 0, 0, 2, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(324, 146, 84, 41, 'public static void main(String[] args)', 'public static void main(String[] args)', 1, 0, 3, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(325, 144, 84, 41, 'public static int main(String[] args)', 'public static int main(String[] args)', 0, 1, 1, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(326, 1073, 85, 104, '(x+5)<sup>2</sup> -16', '(x+5)<sup>2</sup> -16', 0, 0, 4, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(327, 334, 85, 104, '(x+5)<sup>2</sup> +16', '(x+5)<sup>2</sup> +16', 1, 0, 2, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(328, 333, 85, 104, '(x-7)<sup>2</sup> +8', '(x-7)<sup>2</sup> +8', 0, 1, 1, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(329, 335, 85, 104, '(x+7)<sup>2</sup> -8', '(x+7)<sup>2</sup> -8', 0, 0, 3, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(330, 293, 86, 90, 'kilobyte', 'kilobyte', 0, 0, 3, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(331, 711, 86, 90, 'megabyte', 'megabyte', 0, 1, 4, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(332, 291, 86, 90, 'bit', 'bit', 0, 0, 1, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(333, 292, 86, 90, 'byte', 'byte', 1, 0, 2, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(334, 628, 87, 202, 'Programming Language', 'Programming Language', 0, 0, 2, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(335, 820, 87, 202, 'Database', 'Database', 0, 1, 4, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(336, 629, 87, 202, 'Mobile Operating System', 'Mobile Operating System', 1, 0, 3, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(337, 627, 87, 202, 'Desktop Operatng System', 'Desktop Operatng System', 0, 0, 1, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(338, 932, 88, 144, '20', '20', 0, 0, 4, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(339, 453, 88, 144, '10', '10', 0, 0, 1, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(340, 455, 88, 144, '3', '3', 0, 1, 3, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(341, 454, 88, 144, '5', '5', 1, 0, 2, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(342, 489, 89, 156, '4, 8', '4, 8', 0, 0, 1, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(343, 490, 89, 156, '8, 12', '8, 12', 1, 0, 2, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(344, 944, 89, 156, 'None of the choices', 'None of the choices', 0, 1, 4, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(345, 491, 89, 156, '4, 12', '4, 12', 0, 0, 3, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(346, 709, 90, 220, 'RFID readers', 'RFID readers', 0, 0, 4, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(347, 688, 90, 220, 'scanner', 'scanner', 1, 0, 2, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(348, 689, 90, 220, 'MICR', 'MICR', 0, 1, 3, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(349, 687, 90, 220, 'digital camera', 'digital camera', 0, 0, 1, '2019-08-31 22:04:26', '2019-08-31 22:07:24'),
(350, 343, 91, 107, '48', '48', 0, 0, 2, '2019-08-31 22:04:27', '2019-08-31 22:07:25'),
(351, 344, 91, 107, '-12', '-12', 0, 0, 3, '2019-08-31 22:04:27', '2019-08-31 22:07:25'),
(352, 342, 91, 107, '11', '11', 0, 1, 1, '2019-08-31 22:04:27', '2019-08-31 22:07:25'),
(353, 1076, 91, 107, '22', '22', 1, 0, 4, '2019-08-31 22:04:27', '2019-08-31 22:07:25'),
(354, 643, 92, 207, 'Application Debug Bridge', 'Application Debug Bridge', 0, 0, 2, '2019-08-31 22:04:27', '2019-08-31 22:07:25'),
(355, 825, 92, 207, 'Application data bridge', 'Application data bridge', 0, 0, 4, '2019-08-31 22:04:27', '2019-08-31 22:07:25'),
(356, 644, 92, 207, 'Android data bridge', 'Android data bridge', 0, 1, 3, '2019-08-31 22:04:27', '2019-08-31 22:07:25'),
(357, 642, 92, 207, 'Android Debug Bridge', 'Android Debug Bridge', 1, 0, 1, '2019-08-31 22:04:27', '2019-08-31 22:07:25'),
(358, 172, 93, 50, 'Thread returns to the waiting state.', 'Thread returns to the waiting state.', 0, 0, 2, '2019-08-31 22:04:27', '2019-08-31 22:07:25'),
(359, 171, 93, 50, 'Thread returns to the ready state.', 'Thread returns to the ready state.', 1, 0, 1, '2019-08-31 22:04:27', '2019-08-31 22:07:25'),
(360, 173, 93, 50, 'Thread starts running.', 'Thread starts running.', 0, 1, 3, '2019-08-31 22:04:27', '2019-08-31 22:07:25'),
(361, 1, 94, 1, 'x = 1', 'x = 1', 1, 0, 1, '2019-08-31 22:04:27', '2019-08-31 22:07:25'),
(362, 2, 94, 1, 'x = 4', 'x = 4', 0, 0, 2, '2019-08-31 22:04:27', '2019-08-31 22:07:25'),
(363, 3, 94, 1, 'x = 2', 'x = 2', 0, 1, 3, '2019-08-31 22:04:27', '2019-08-31 22:07:25'),
(364, 267, 95, 82, '-23', '-23', 0, 0, 1, '2019-08-31 22:04:27', '2019-08-31 22:07:25'),
(365, 269, 95, 82, '-7', '-7', 0, 1, 3, '2019-08-31 22:04:27', '2019-08-31 22:07:25'),
(366, 722, 95, 82, '22', '22', 0, 0, 4, '2019-08-31 22:04:27', '2019-08-31 22:07:25'),
(367, 268, 95, 82, '-9', '-9', 1, 0, 2, '2019-08-31 22:04:27', '2019-08-31 22:07:25'),
(368, 243, 96, 74, 'Operating System', 'Operating System', 0, 0, 1, '2019-08-31 22:04:27', '2019-08-31 22:07:25'),
(369, 730, 96, 74, 'CPU', 'CPU', 0, 1, 4, '2019-08-31 22:04:27', '2019-08-31 22:07:25'),
(370, 245, 96, 74, 'Computer', 'Computer', 1, 0, 3, '2019-08-31 22:04:27', '2019-08-31 22:07:25'),
(371, 244, 96, 74, 'Motherboard', 'Motherboard', 0, 0, 2, '2019-08-31 22:04:27', '2019-08-31 22:07:25'),
(372, 502, 97, 160, 'A U B -B', 'A U B -B', 1, 0, 2, '2019-08-31 22:04:27', '2019-08-31 22:07:25'),
(373, 948, 97, 160, 'B', 'B', 0, 0, 4, '2019-08-31 22:04:27', '2019-08-31 22:07:25'),
(374, 503, 97, 160, 'A ∩ B', 'A ∩ B', 0, 0, 3, '2019-08-31 22:04:27', '2019-08-31 22:07:25'),
(375, 501, 97, 160, 'A‘ (Complement of A)', 'A‘ (Complement of A)', 0, 1, 1, '2019-08-31 22:04:27', '2019-08-31 22:07:25'),
(376, 469, 98, 149, '{1, 2, 5, 6}', '{1, 2, 5, 6}', 1, 0, 2, '2019-08-31 22:04:27', '2019-08-31 22:07:25'),
(377, 937, 98, 149, '{1, 5, 6, 3}', '{1, 5, 6, 3}', 0, 0, 4, '2019-08-31 22:04:27', '2019-08-31 22:07:25'),
(378, 468, 98, 149, '{1, 2, 6, 1}', '{1, 2, 6, 1}', 0, 1, 1, '2019-08-31 22:04:27', '2019-08-31 22:07:25'),
(379, 470, 98, 149, '{1, 2, 1, 2}', '{1, 2, 1, 2}', 0, 0, 3, '2019-08-31 22:04:27', '2019-08-31 22:07:25'),
(380, 1032, 99, 277, 'The code will compile without an error.', 'The code will compile without an error.', 1, 0, 4, '2019-08-31 22:04:27', '2019-08-31 22:07:25'),
(381, 1031, 99, 277, 'The code will generate an error because the finally block is placed immediately after the try block.', 'The code will generate an error because the finally block is placed immediately after the try block.', 0, 1, 3, '2019-08-31 22:04:27', '2019-08-31 22:07:25'),
(382, 1030, 99, 277, 'The code will generate an error because it lacks a throw statement.', 'The code will generate an error because it lacks a throw statement.', 0, 0, 2, '2019-08-31 22:04:27', '2019-08-31 22:07:25'),
(383, 1029, 99, 277, 'The code will generate an error because it lacks a catch block.', 'The code will generate an error because it lacks a catch block.', 0, 0, 1, '2019-08-31 22:04:27', '2019-08-31 22:07:25'),
(384, 114, 100, 31, '10', '10', 0, 1, 1, '2019-08-31 22:04:27', '2019-08-31 22:07:25'),
(385, 115, 100, 31, '20', '20', 1, 0, 2, '2019-08-31 22:04:27', '2019-08-31 22:07:25'),
(386, 116, 100, 31, '12', '12', 0, 0, 3, '2019-08-31 22:04:27', '2019-08-31 22:07:25'),
(387, 195, 101, 58, '0 2 4 6 8', '0 2 4 6 8', 1, 1, 1, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(388, 917, 101, 58, '1 2 3 4 5 6 7 8 9 10', '1 2 3 4 5 6 7 8 9 10', 0, 0, 4, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(389, 197, 101, 58, '0 1 2 3 4 5 6 7 8 9', '0 1 2 3 4 5 6 7 8 9', 0, 0, 3, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(390, 196, 101, 58, '1 3 5 7 9', '1 3 5 7 9', 0, 0, 2, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(391, 705, 102, 225, '531', '531', 0, 0, 1, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(392, 714, 102, 225, '135', '135', 0, 0, 4, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(393, 707, 102, 225, '44', '44', 0, 1, 3, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(394, 706, 102, 225, '127', '127', 1, 0, 2, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(395, 884, 103, 254, 'httprequest(get/post) and returns response from the server', 'httprequest(get/post) and returns response from the server', 1, 1, 1, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(396, 885, 103, 254, 'Cookies management', 'Cookies management', 0, 0, 2, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(397, 886, 103, 254, 'Authentication management', 'Authentication management', 0, 0, 3, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(398, 887, 103, 254, 'None of the above', 'None of the above', 0, 0, 4, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(399, 347, 104, 108, '1 000 000', '1 000 000', 0, 0, 3, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(400, 345, 104, 108, '1 846 000', '1 846 000', 1, 1, 1, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(401, 1077, 104, 108, '1 500 000', '1 500 000', 0, 0, 4, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(402, 346, 104, 108, '1 852 000', '1 852 000', 0, 0, 2, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(403, 254, 105, 77, 'run time error', 'run time error', 0, 0, 3, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(404, 727, 105, 77, 'linker error', 'linker error', 0, 0, 4, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(405, 253, 105, 77, 'syntax error', 'syntax error', 0, 1, 2, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(406, 252, 105, 77, 'logic error', 'logic error', 1, 0, 1, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(407, 902, 106, 34, '*', '*', 0, 0, 4, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(408, 125, 106, 34, '&</a>', '&</a>', 0, 0, 3, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(409, 123, 106, 34, 'sizeof', 'sizeof', 1, 1, 1, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(410, 124, 106, 34, 'typeof', 'typeof', 0, 0, 2, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(411, 1107, 107, 289, '8', '8', 0, 0, 4, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(412, 1104, 107, 289, '5', '5', 0, 0, 1, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(413, 1105, 107, 289, '7', '7', 1, 1, 2, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(414, 1106, 107, 289, '6', '6', 0, 0, 3, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(415, 225, 108, 68, '[[#img23]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/IyLDJJaUUQ0aIZOMyEjh4JO72W4HpXtPj2CfMKZL.png\" width=\"150\" height=\"150\" />', 1, 1, 1, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(416, 227, 108, 68, '[[#img25]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/rDh656ehodyPQmn7CxxjGK2H29sx2bh6LDz9INfN.png\" width=\"150\" height=\"150\" />', 0, 0, 3, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(417, 226, 108, 68, '[[#img24]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/nVLwXww7AT2RBfzhH1tPQMxdLPF1iWuunHzErZRh.png\" width=\"150\" height=\"150\" />', 0, 0, 2, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(418, 679, 108, 68, '[[#img26]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/tBuCNpani0PgWIFN01ztVOAj4FS4CBDAiTW9J8lB.png\" width=\"150\" height=\"150\" />', 0, 0, 4, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(419, 117, 109, 32, 'abstract', 'abstract', 0, 0, 1, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(420, 900, 109, 32, 'All of the choices', 'All of the choices', 1, 1, 4, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(421, 119, 109, 32, 'foreach', 'foreach', 0, 0, 3, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(422, 118, 109, 32, 'as', 'as', 0, 0, 2, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(423, 823, 110, 205, 'Bluetooth driver', 'Bluetooth driver', 0, 0, 4, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(424, 636, 110, 205, 'Device Driver', 'Device Driver', 0, 0, 1, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(425, 637, 110, 205, 'Video Driver', 'Video Driver', 0, 0, 2, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(426, 638, 110, 205, 'WiFi driver', 'WiFi driver', 1, 1, 3, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(427, 473, 111, 150, '{2, 5}', '{2, 5}', 0, 0, 3, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(428, 938, 111, 150, '{1, 6}', '{1, 6}', 0, 0, 4, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(429, 471, 111, 150, '{1, 2}', '{1, 2}', 1, 1, 1, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(430, 472, 111, 150, '{5, 6}', '{5, 6}', 0, 0, 2, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(431, 1, 112, 1, 'x = 1', 'x = 1', 1, 1, 1, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(432, 3, 112, 1, 'x = 2', 'x = 2', 0, 0, 3, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(433, 2, 112, 1, 'x = 4', 'x = 4', 0, 0, 2, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(434, 501, 113, 160, 'A‘ (Complement of A)', 'A‘ (Complement of A)', 0, 0, 1, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(435, 948, 113, 160, 'B', 'B', 0, 0, 4, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(436, 503, 113, 160, 'A ∩ B', 'A ∩ B', 0, 0, 3, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(437, 502, 113, 160, 'A U B -B', 'A U B -B', 1, 1, 2, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(438, 877, 114, 252, 'A bean class can be passed from one activity to another.', 'A bean class can be passed from one activity to another.', 0, 0, 2, '2019-08-31 22:09:24', '2019-08-31 22:12:31');
INSERT INTO `answer_sheet_test_question_choices` (`id`, `choice_id`, `answer_sheet_test_question_id`, `test_question_id`, `body`, `body_html`, `is_correct`, `is_selected`, `pos_order`, `created_at`, `updated_at`) VALUES
(439, 876, 114, 252, 'A class used to hold states and objects', 'A class used to hold states and objects', 1, 1, 1, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(440, 879, 114, 252, 'None of the above', 'None of the above', 0, 0, 4, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(441, 878, 114, 252, 'A mandatory class in android', 'A mandatory class in android', 0, 0, 3, '2019-08-31 22:09:24', '2019-08-31 22:12:31'),
(442, 1014, 115, 138, 'a and b', 'a and b', 0, 0, 4, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(443, 437, 115, 138, 'Throws', 'Throws', 1, 1, 3, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(444, 436, 115, 138, 'Catches', 'Catches', 0, 0, 2, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(445, 435, 115, 138, 'Trys', 'Trys', 0, 0, 1, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(446, 114, 116, 31, '10', '10', 0, 0, 1, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(447, 115, 116, 31, '20', '20', 1, 1, 2, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(448, 116, 116, 31, '12', '12', 0, 0, 3, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(449, 1031, 117, 277, 'The code will generate an error because the finally block is placed immediately after the try block.', 'The code will generate an error because the finally block is placed immediately after the try block.', 0, 0, 3, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(450, 1032, 117, 277, 'The code will compile without an error.', 'The code will compile without an error.', 1, 1, 4, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(451, 1030, 117, 277, 'The code will generate an error because it lacks a throw statement.', 'The code will generate an error because it lacks a throw statement.', 0, 0, 2, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(452, 1029, 117, 277, 'The code will generate an error because it lacks a catch block.', 'The code will generate an error because it lacks a catch block.', 0, 0, 1, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(453, 288, 118, 89, 'Virtual private network', 'Virtual private network', 0, 0, 1, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(454, 712, 118, 89, 'None of them', 'None of them', 0, 0, 4, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(455, 290, 118, 89, 'Virtual Machine', 'Virtual Machine', 0, 0, 3, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(456, 289, 118, 89, 'Virtual memory', 'Virtual memory', 1, 1, 2, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(457, 172, 119, 50, 'Thread returns to the waiting state.', 'Thread returns to the waiting state.', 0, 0, 2, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(458, 171, 119, 50, 'Thread returns to the ready state.', 'Thread returns to the ready state.', 1, 1, 1, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(459, 173, 119, 50, 'Thread starts running.', 'Thread starts running.', 0, 0, 3, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(460, 844, 120, 244, 'commitUpdates()', 'commitUpdates()', 1, 1, 1, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(461, 847, 120, 244, 'none of these', 'none of these', 0, 0, 4, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(462, 845, 120, 244, 'updates()', 'updates()', 0, 0, 2, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(463, 846, 120, 244, 'commit()', 'commit()', 0, 0, 3, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(464, 825, 121, 207, 'Application data bridge', 'Application data bridge', 0, 0, 4, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(465, 642, 121, 207, 'Android Debug Bridge', 'Android Debug Bridge', 1, 1, 1, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(466, 643, 121, 207, 'Application Debug Bridge', 'Application Debug Bridge', 0, 0, 2, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(467, 644, 121, 207, 'Android data bridge', 'Android data bridge', 0, 0, 3, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(468, 142, 122, 40, 'object.', 'object.', 0, 0, 2, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(469, 143, 122, 40, 'Both of the above.', 'Both of the above.', 0, 0, 3, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(470, 141, 122, 40, 'type.', 'type.', 1, 1, 1, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(471, 249, 123, 76, 'spooling', 'spooling', 0, 0, 1, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(472, 250, 123, 76, 'buffering', 'buffering', 0, 0, 2, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(473, 251, 123, 76, 'virtual memory', 'virtual memory', 0, 0, 3, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(474, 728, 123, 76, 'back up', 'back up', 1, 1, 4, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(475, 462, 124, 147, 'Infinite', 'Infinite', 1, 1, 1, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(476, 464, 124, 147, 'Subset', 'Subset', 0, 0, 3, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(477, 935, 124, 147, 'Empty', 'Empty', 0, 0, 4, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(478, 463, 124, 147, 'Finite', 'Finite', 0, 0, 2, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(479, 862, 125, 248, 'To share the data between applications', 'To share the data between applications', 1, 1, 3, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(480, 861, 125, 248, 'To store the data in a database', 'To store the data in a database', 0, 0, 2, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(481, 863, 125, 248, 'none of the choices', 'none of the choices', 0, 0, 4, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(482, 860, 125, 248, 'To send the data from an application to another application', 'To send the data from an application to another application', 0, 0, 1, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(483, 394, 126, 124, 'Value types', 'Value types', 0, 0, 2, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(484, 395, 126, 124, 'Data Type', 'Data Type', 0, 0, 3, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(485, 1007, 126, 124, 'Explicit Types', 'Explicit Types', 0, 0, 4, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(486, 393, 126, 124, 'Reference type', 'Reference type', 1, 1, 1, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(487, 255, 127, 78, 'ASCII', 'ASCII', 0, 0, 1, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(488, 257, 127, 78, 'EBCDIC', 'EBCDIC', 0, 0, 3, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(489, 726, 127, 78, 'ANSI', 'ANSI', 0, 0, 4, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(490, 256, 127, 78, 'Unicode', 'Unicode', 1, 1, 2, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(491, 237, 128, 72, 'Operating system software', 'Operating system software', 0, 0, 1, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(492, 238, 128, 72, 'Utility software', 'Utility software', 1, 1, 2, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(493, 239, 128, 72, 'Anti-virus software', 'Anti-virus software', 0, 0, 3, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(494, 732, 128, 72, 'Disk optimization software', 'Disk optimization software', 0, 0, 4, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(495, 147, 129, 42, 'static', 'static', 0, 0, 1, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(496, 148, 129, 42, 'Boolean', 'Boolean', 1, 1, 2, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(497, 907, 129, 42, 'private', 'private', 0, 0, 4, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(498, 149, 129, 42, 'void', 'void', 0, 0, 3, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(499, 456, 130, 145, '{(1, a), (1, b), (2, a), (b, b)}', '{(1, a), (1, b), (2, a), (b, b)}', 0, 0, 1, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(500, 457, 130, 145, '{(1, 1), (2, 2), (a, a), (b, b)}', '{(1, 1), (2, 2), (a, a), (b, b)}', 0, 0, 2, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(501, 458, 130, 145, '{(1, a), (2, a), (1, b), (2, b)}', '{(1, a), (2, a), (1, b), (2, b)}', 1, 1, 3, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(502, 933, 130, 145, '{(1, 1), (a, a), (2, a), (1, b)}', '{(1, 1), (a, a), (2, a), (1, b)}', 0, 0, 4, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(503, 430, 131, 136, 'initializes a button control', 'initializes a button control', 0, 0, 2, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(504, 431, 131, 136, 'instantiates button control', 'instantiates button control', 0, 0, 3, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(505, 1012, 131, 136, 'a and c', 'a and c', 1, 1, 4, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(506, 429, 131, 136, 'creates a button control', 'creates a button control', 0, 0, 1, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(507, 1073, 132, 104, '(x+5)<sup>2</sup> -16', '(x+5)<sup>2</sup> -16', 0, 0, 4, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(508, 334, 132, 104, '(x+5)<sup>2</sup> +16', '(x+5)<sup>2</sup> +16', 1, 1, 2, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(509, 335, 132, 104, '(x+7)<sup>2</sup> -8', '(x+7)<sup>2</sup> -8', 0, 0, 3, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(510, 333, 132, 104, '(x-7)<sup>2</sup> +8', '(x-7)<sup>2</sup> +8', 0, 0, 1, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(511, 1034, 133, 278, 'Message1\nMessage2\nMessage3\nMessage4', 'Message1<br />\nMessage2<br />\nMessage3<br />\nMessage4', 0, 0, 2, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(512, 1035, 133, 278, 'Message1\nMessage3\nMessage4', 'Message1<br />\nMessage3<br />\nMessage4', 1, 1, 3, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(513, 1033, 133, 278, 'Message1\nMessage4', 'Message1<br />\nMessage4', 0, 0, 1, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(514, 1036, 133, 278, 'Message1\nMessage3\nMessage2\nMessage4', 'Message1<br />\nMessage3<br />\nMessage2<br />\nMessage4', 0, 0, 4, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(515, 448, 134, 142, '{1, 3, 5, 7, 9}', '{1, 3, 5, 7, 9}', 1, 1, 2, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(516, 449, 134, 142, '{1, 2, 5, 9}', '{1, 2, 5, 9}', 0, 0, 3, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(517, 930, 134, 142, '{1, 5, 7, 9, 11}', '{1, 5, 7, 9, 11}', 0, 0, 4, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(518, 447, 134, 142, '{1, 2, 3}', '{1, 2, 3}', 0, 0, 1, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(519, 433, 135, 137, 'Maintain the same return type and arguments as the parent class, but implement it differently', 'Maintain the same return type and arguments as the parent class, but implement it differently', 1, 1, 2, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(520, 432, 135, 137, 'Override the parent class methods but maintain the implementation', 'Override the parent class methods but maintain the implementation', 0, 0, 1, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(521, 1013, 135, 137, 'Are Virtual', 'Are Virtual', 0, 0, 4, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(522, 434, 135, 137, 'Have different return types and arguments than the parent class', 'Have different return types and arguments than the parent class', 0, 0, 3, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(523, 362, 136, 113, '2!', '2!', 0, 0, 3, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(524, 1082, 136, 113, '3! * 2!', '3! * 2!', 0, 0, 4, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(525, 361, 136, 113, '3!', '3!', 1, 1, 2, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(526, 360, 136, 113, '5!', '5!', 0, 0, 1, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(527, 192, 137, 57, 'Row', 'Row', 1, 1, 1, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(528, 193, 137, 57, 'Column', 'Column', 0, 0, 2, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(529, 194, 137, 57, 'Both Row and Column', 'Both Row and Column', 0, 0, 3, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(530, 301, 138, 93, 'x ≥ 5', 'x ≥ 5', 1, 1, 2, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(531, 1062, 138, 93, 'x ≤ -5', 'x ≤ -5', 0, 0, 4, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(532, 302, 138, 93, 'x ≥ -5', 'x ≥ -5', 0, 0, 3, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(533, 300, 138, 93, 'x ≤ 5', 'x ≤ 5', 0, 0, 1, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(534, 490, 139, 156, '8, 12', '8, 12', 1, 1, 2, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(535, 491, 139, 156, '4, 12', '4, 12', 0, 0, 3, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(536, 944, 139, 156, 'None of the choices', 'None of the choices', 0, 0, 4, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(537, 489, 139, 156, '4, 8', '4, 8', 0, 0, 1, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(538, 684, 140, 219, 'Repeater', 'Repeater', 0, 0, 1, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(539, 686, 140, 219, 'Modem', 'Modem', 1, 1, 3, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(540, 685, 140, 219, 'Switch', 'Switch', 0, 0, 2, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(541, 710, 140, 219, 'Wireless access point', 'Wireless access point', 0, 0, 4, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(542, 1002, 141, 119, 'for loop', 'for loop', 1, 1, 4, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(543, 378, 141, 119, 'forEach loop', 'forEach loop', 0, 0, 1, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(544, 379, 141, 119, 'do while', 'do while', 0, 0, 2, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(545, 380, 141, 119, 'while', 'while', 0, 0, 3, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(546, 410, 142, 129, 'ListView Control', 'ListView Control', 0, 0, 3, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(547, 408, 142, 129, 'GroupBox control', 'GroupBox control', 0, 0, 1, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(548, 409, 142, 129, 'LinkLabel control', 'LinkLabel control', 1, 1, 2, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(549, 725, 143, 79, 'Primary Storage', 'Primary Storage', 1, 1, 4, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(550, 260, 143, 79, 'Registers', 'Registers', 0, 0, 3, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(551, 258, 143, 79, 'Control unit', 'Control unit', 0, 0, 1, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(552, 259, 143, 79, 'ALU', 'ALU', 0, 0, 2, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(553, 370, 144, 116, 'an even function', 'an even function', 1, 1, 2, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(554, 1085, 144, 116, 'even and odd', 'even and odd', 0, 0, 4, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(555, 371, 144, 116, 'neither odd nor even', 'neither odd nor even', 0, 0, 3, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(556, 369, 144, 116, 'an odd function', 'an odd function', 0, 0, 1, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(557, 466, 145, 148, '6', '6', 0, 0, 2, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(558, 465, 145, 148, '8', '8', 1, 1, 1, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(559, 936, 145, 148, '9', '9', 0, 0, 4, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(560, 467, 145, 148, '7', '7', 0, 0, 3, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(561, 667, 146, 215, '2.3 (Gingerbread)', '2.3 (Gingerbread)', 1, 1, 2, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(562, 668, 146, 215, '2.6', '2.6', 0, 0, 3, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(563, 833, 146, 215, '2.2 (Froyo)', '2.2 (Froyo)', 0, 0, 4, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(564, 666, 146, 215, '3.0 (Honeycomb)', '3.0 (Honeycomb)', 0, 0, 1, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(565, 978, 147, 267, 'smallest previous integer', 'smallest previous integer', 0, 0, 1, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(566, 980, 147, 267, 'smallest following integer', 'smallest following integer', 0, 0, 3, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(567, 979, 147, 267, 'greatest previous integer', 'greatest previous integer', 1, 1, 2, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(568, 419, 148, 132, 'For', 'For', 0, 0, 3, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(569, 417, 148, 132, 'If', 'If', 0, 0, 1, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(570, 418, 148, 132, 'Switch', 'Switch', 1, 1, 2, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(571, 1009, 148, 132, 'While', 'While', 0, 0, 4, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(572, 628, 149, 202, 'Programming Language', 'Programming Language', 0, 0, 2, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(573, 820, 149, 202, 'Database', 'Database', 0, 0, 4, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(574, 629, 149, 202, 'Mobile Operating System', 'Mobile Operating System', 1, 1, 3, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(575, 627, 149, 202, 'Desktop Operatng System', 'Desktop Operatng System', 0, 0, 1, '2019-08-31 22:09:25', '2019-08-31 22:12:31'),
(576, 403, 150, 127, 'Textbox control', 'Textbox control', 0, 0, 2, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(577, 404, 150, 127, 'Button control', 'Button control', 1, 1, 3, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(578, 402, 150, 127, 'Radio Button', 'Radio Button', 0, 0, 1, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(579, 1093, 151, 286, '0.478', '0.478', 0, 0, 2, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(580, 1092, 151, 286, '0.057', '0.057', 1, 1, 1, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(581, 1095, 151, 286, '0', '0', 0, 0, 4, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(582, 1094, 151, 286, '0.001', '0.001', 0, 0, 3, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(583, 1061, 152, 92, 'x > 6', 'x > 6', 0, 0, 4, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(584, 297, 152, 92, 'x < 6', 'x < 6', 0, 0, 1, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(585, 298, 152, 92, 'x > 1', 'x > 1', 0, 0, 2, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(586, 299, 152, 92, 'x < -1', 'x < -1', 1, 1, 3, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(587, 356, 153, 111, '(π , 3 π / 2)', '(π , 3 π / 2)', 0, 0, 3, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(588, 1080, 153, 111, '(3 π / 2 , 2 π)', '(3 π / 2 , 2 π)', 0, 0, 4, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(589, 355, 153, 111, '(π/2 , π)', '(π/2 , π)', 1, 1, 2, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(590, 354, 153, 111, '(0 , π/2)', '(0 , π/2)', 0, 0, 1, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(591, 387, 154, 122, 'unary operators', 'unary operators', 1, 1, 1, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(592, 1005, 154, 122, 'Assignment opeartors', 'Assignment opeartors', 0, 0, 4, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(593, 388, 154, 122, 'Binary operators', 'Binary operators', 0, 0, 2, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(594, 389, 154, 122, 'Logical operators', 'Logical operators', 0, 0, 3, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(595, 939, 155, 151, 'Complement', 'Complement', 0, 0, 4, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(596, 474, 155, 151, 'Union', 'Union', 0, 0, 1, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(597, 476, 155, 151, 'Intersection', 'Intersection', 1, 1, 3, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(598, 475, 155, 151, 'Difference', 'Difference', 0, 0, 2, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(599, 284, 156, 87, 'decode, fetch, store and execute', 'decode, fetch, store and execute', 0, 0, 3, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(600, 715, 156, 87, 'fetch, decode, execute and store', 'fetch, decode, execute and store', 1, 1, 4, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(601, 282, 156, 87, 'fetch, execute, store and decode', 'fetch, execute, store and decode', 0, 0, 1, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(602, 283, 156, 87, 'decode, execute, store and fetch', 'decode, execute, store and fetch', 0, 0, 2, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(603, 632, 157, 203, 'AVI', 'AVI', 1, 1, 3, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(604, 630, 157, 203, 'MP4', 'MP4', 0, 0, 1, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(605, 821, 157, 203, 'MIDI', 'MIDI', 0, 0, 4, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(606, 631, 157, 203, 'MPEG', 'MPEG', 0, 0, 2, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(607, 507, 158, 162, 'n(A U B)=0', 'n(A U B)=0', 0, 0, 1, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(608, 509, 158, 162, 'n( A U B U C)=90', 'n( A U B U C)=90', 0, 0, 3, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(609, 950, 158, 162, 'All of the mentioned', 'All of the mentioned', 1, 1, 4, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(610, 508, 158, 162, 'n( B U C)=0', 'n( B U C)=0', 0, 0, 2, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(611, 269, 159, 82, '-7', '-7', 0, 0, 3, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(612, 267, 159, 82, '-23', '-23', 0, 0, 1, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(613, 722, 159, 82, '22', '22', 0, 0, 4, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(614, 268, 159, 82, '-9', '-9', 1, 1, 2, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(615, 656, 160, 211, 'Open source Webkit', 'Open source Webkit', 1, 1, 3, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(616, 654, 160, 211, 'Chrome', 'Chrome', 0, 0, 1, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(617, 655, 160, 211, 'Firefox', 'Firefox', 0, 0, 2, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(618, 829, 160, 211, 'Opera', 'Opera', 0, 0, 4, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(619, 365, 161, 114, 'mean = 15 , standard deviation = 1', 'mean = 15 , standard deviation = 1', 1, 1, 3, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(620, 1083, 161, 114, 'mean = 10 , standard deviation = 1', 'mean = 10 , standard deviation = 1', 0, 0, 4, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(621, 363, 161, 114, 'mean = 15 , standard deviation = 6', 'mean = 15 , standard deviation = 6', 0, 0, 1, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(622, 364, 161, 114, 'mean = 10 , standard deviation = 6', 'mean = 10 , standard deviation = 6', 0, 0, 2, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(623, 711, 162, 90, 'megabyte', 'megabyte', 0, 0, 4, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(624, 293, 162, 90, 'kilobyte', 'kilobyte', 0, 0, 3, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(625, 291, 162, 90, 'bit', 'bit', 0, 0, 1, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(626, 292, 162, 90, 'byte', 'byte', 1, 1, 2, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(627, 177, 163, 52, '12', '12', 0, 0, 1, '2019-08-31 22:09:26', '2019-08-31 22:12:31'),
(628, 178, 163, 52, '200', '200', 1, 1, 2, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(629, 179, 163, 52, '400', '400', 0, 0, 3, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(630, 912, 163, 52, '100', '100', 0, 0, 4, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(631, 634, 164, 204, 'Bluetooth', 'Bluetooth', 0, 0, 2, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(632, 633, 164, 204, 'Multitasking', 'Multitasking', 0, 0, 1, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(633, 822, 164, 204, 'All of the choices', 'All of the choices', 1, 1, 4, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(634, 635, 164, 204, 'Video calling', 'Video calling', 0, 0, 3, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(635, 198, 165, 59, '3', '3', 0, 0, 1, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(636, 199, 165, 59, '0', '0', 0, 0, 2, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(637, 918, 165, 59, '1', '1', 1, 1, 4, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(638, 200, 165, 59, '6', '6', 0, 0, 3, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(639, 1076, 166, 107, '22', '22', 1, 1, 4, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(640, 342, 166, 107, '11', '11', 0, 0, 1, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(641, 344, 166, 107, '-12', '-12', 0, 0, 3, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(642, 343, 166, 107, '48', '48', 0, 0, 2, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(643, 385, 167, 121, 'Bitwise operators', 'Bitwise operators', 0, 0, 2, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(644, 1004, 167, 121, 'Assignment Operators', 'Assignment Operators', 0, 0, 4, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(645, 386, 167, 121, 'Logical operators', 'Logical operators', 1, 1, 3, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(646, 384, 167, 121, 'RElational operators', 'RElational operators', 0, 0, 1, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(647, 892, 168, 256, 'Content values are key pair values, which are updated or inserted in the database', 'Content values are key pair values, which are updated or inserted in the database', 0, 0, 1, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(648, 894, 168, 256, 'A & B', 'A & B', 1, 1, 3, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(649, 895, 168, 256, 'Cursor is used to store data permanently.', 'Cursor is used to store data permanently.', 0, 0, 4, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(650, 893, 168, 256, 'Cursor is used to store the temporary result.', 'Cursor is used to store the temporary result.', 0, 0, 2, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(651, 842, 169, 243, 'manifest.XML', 'manifest.XML', 0, 0, 3, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(652, 841, 169, 243, 'X.style', 'X.style', 0, 0, 2, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(653, 843, 169, 243, 'application', 'application', 0, 0, 4, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(654, 840, 169, 243, 'R.style', 'R.style', 1, 1, 1, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(655, 1053, 170, 283, 'Set the CausesValidation property of the text box to false.', 'Set the CausesValidation property of the text box to false.', 0, 0, 1, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(656, 1054, 170, 283, 'Set the CausesValidation property of the text box to true.', 'Set the CausesValidation property of the text box to true.', 0, 0, 2, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(657, 1056, 170, 283, 'Set the CausesValidation property of the Help button to true.', 'Set the CausesValidation property of the Help button to true.', 0, 0, 4, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(658, 1055, 170, 283, 'Set the CausesValidation property of the Help button to false.', 'Set the CausesValidation property of the Help button to false.', 1, 1, 3, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(659, 136, 171, 38, 'It is followed by one or more catch blocks.', 'It is followed by one or more catch blocks.', 0, 0, 2, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(660, 137, 171, 38, 'A and B', 'A and B', 1, 1, 3, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(661, 135, 171, 38, 'A try block identifies a block of code for which particular exceptions is activated.', 'A try block identifies a block of code for which particular exceptions is activated.', 0, 0, 1, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(662, 165, 172, 48, 'JRE is a java based GUI application.', 'JRE is a java based GUI application.', 0, 0, 1, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(663, 166, 172, 48, 'JRE is an application development framework.', 'JRE is an application development framework.', 0, 0, 2, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(664, 167, 172, 48, 'JRE is an implementation of the Java Virtual Machine which executes Java programs.', 'JRE is an implementation of the Java Virtual Machine which executes Java programs.', 1, 1, 3, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(665, 314, 173, 97, 'i - 12', 'i - 12', 1, 1, 3, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(666, 1066, 173, 97, '3i - 10', '3i - 10', 0, 0, 4, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(667, 313, 173, 97, '7 - 3i', '7 - 3i', 0, 0, 2, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(668, 312, 173, 97, 'i - 5', 'i - 5', 0, 0, 1, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(669, 244, 174, 74, 'Motherboard', 'Motherboard', 0, 0, 2, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(670, 243, 174, 74, 'Operating System', 'Operating System', 0, 0, 1, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(671, 730, 174, 74, 'CPU', 'CPU', 0, 0, 4, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(672, 245, 174, 74, 'Computer', 'Computer', 1, 1, 3, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(673, 220, 175, 66, '163', '163', 1, 1, 2, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(674, 219, 175, 66, '121', '121', 0, 0, 1, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(675, 676, 175, 66, '212', '212', 0, 0, 4, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(676, 221, 175, 66, '199', '199', 0, 0, 3, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(677, 451, 176, 143, 'Two', 'Two', 0, 0, 2, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(678, 450, 176, 143, 'One', 'One', 1, 1, 1, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(679, 931, 176, 143, 'Three', 'Three', 0, 0, 4, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(680, 452, 176, 143, 'Zero', 'Zero', 0, 0, 3, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(681, 700, 177, 223, '100001', '100001', 0, 0, 2, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(682, 699, 177, 223, '110011', '110011', 0, 0, 1, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(683, 718, 177, 223, '100100', '100100', 0, 0, 4, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(684, 701, 177, 223, '110100', '110100', 1, 1, 3, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(685, 953, 178, 260, '30', '30', 0, 0, 3, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(686, 951, 178, 260, '35', '35', 1, 1, 1, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(687, 952, 178, 260, '20', '20', 0, 0, 2, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(688, 954, 178, 260, '10', '10', 0, 0, 4, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(689, 120, 179, 33, 'ToDecimal', 'ToDecimal', 0, 0, 1, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(690, 122, 179, 33, 'ToInt16', 'ToInt16', 0, 0, 3, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(691, 901, 179, 33, 'ToInt32', 'ToInt32', 0, 0, 4, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(692, 121, 179, 33, 'ToDouble', 'ToDouble', 1, 1, 2, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(693, 709, 180, 220, 'RFID readers', 'RFID readers', 0, 0, 4, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(694, 687, 180, 220, 'digital camera', 'digital camera', 0, 0, 1, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(695, 689, 180, 220, 'MICR', 'MICR', 0, 0, 3, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(696, 688, 180, 220, 'scanner', 'scanner', 1, 1, 2, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(697, 658, 181, 212, 'Google', 'Google', 1, 1, 2, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(698, 659, 181, 212, 'Nokia', 'Nokia', 0, 0, 3, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(699, 830, 181, 212, 'No company', 'No company', 0, 0, 4, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(700, 657, 181, 212, 'Apple', 'Apple', 0, 0, 1, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(701, 307, 182, 95, 'You cannot find the square root of a negative number', 'You cannot find the square root of a negative number', 0, 0, 2, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(702, 306, 182, 95, '12i', '12i', 1, 1, 1, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(703, 1064, 182, 95, '-12i', '-12i', 0, 0, 4, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(704, 308, 182, 95, '-12', '-12', 0, 0, 3, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(705, 357, 183, 112, '10', '10', 0, 0, 1, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(706, 358, 183, 112, '15', '15', 0, 0, 2, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(707, 1081, 183, 112, '8', '8', 0, 0, 4, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(708, 359, 183, 112, '2100', '2100', 1, 1, 3, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(709, 664, 184, 214, 'Windows kernel', 'Windows kernel', 0, 0, 2, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(710, 832, 184, 214, 'Hybrid kernel', 'Hybrid kernel', 0, 0, 4, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(711, 663, 184, 214, 'Linux kernel', 'Linux kernel', 1, 1, 1, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(712, 665, 184, 214, 'MAC kernel', 'MAC kernel', 0, 0, 3, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(713, 1091, 185, 285, 'π', 'π', 1, 1, 4, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(714, 1090, 185, 285, '4 π', '4 π', 0, 0, 3, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(715, 1088, 185, 285, '4 π <sup>2</sup>', '4 π <sup>2</sup>', 0, 0, 1, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(716, 1089, 185, 285, '2 π', '2 π', 0, 0, 2, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(717, 442, 186, 140, 'Reference type', 'Reference type', 0, 0, 2, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(718, 1016, 186, 140, 'Object', 'Object', 0, 0, 4, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(719, 443, 186, 140, 'Variable', 'Variable', 1, 1, 3, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(720, 441, 186, 140, 'Constant', 'Constant', 0, 0, 1, '2019-08-31 22:09:26', '2019-08-31 22:12:32'),
(721, 988, 187, 270, '45', '45', 0, 0, 2, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(722, 989, 187, 270, '25', '25', 0, 0, 3, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(723, 987, 187, 270, '35', '35', 1, 1, 1, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(724, 401, 188, 126, 'TextBox control', 'TextBox control', 0, 0, 3, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(725, 399, 188, 126, 'CheckListBox control', 'CheckListBox control', 0, 0, 1, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(726, 400, 188, 126, 'ListBox control', 'ListBox control', 1, 1, 2, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(727, 932, 189, 144, '20', '20', 0, 0, 4, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(728, 455, 189, 144, '3', '3', 0, 0, 3, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(729, 453, 189, 144, '10', '10', 0, 0, 1, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(730, 454, 189, 144, '5', '5', 1, 1, 2, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(731, 486, 190, 155, '4', '4', 1, 1, 1, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(732, 943, 190, 155, '7', '7', 0, 0, 4, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(733, 488, 190, 155, '6', '6', 0, 0, 3, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(734, 487, 190, 155, '5', '5', 0, 0, 2, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(735, 175, 191, 51, '8', '8', 0, 0, 2, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(736, 911, 191, 51, 'Runtime error', 'Runtime error', 0, 0, 4, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(737, 174, 191, 51, '9', '9', 0, 0, 1, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(738, 176, 191, 51, 'Compilation error', 'Compilation error', 1, 1, 3, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(739, 852, 192, 246, 'res/', 'res/', 0, 0, 1, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(740, 854, 192, 246, 'src/', 'src/', 1, 1, 3, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(741, 855, 192, 246, 'bin/', 'bin/', 0, 0, 4, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(742, 853, 192, 246, 'assets/', 'assets/', 0, 0, 2, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(743, 138, 193, 39, 'null', 'null', 0, 0, 1, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(744, 139, 193, 39, '0', '0', 0, 0, 2, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(745, 140, 193, 39, 'Depends upon the type of variable', 'Depends upon the type of variable', 1, 1, 3, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(746, 906, 193, 39, 'Not assigned', 'Not assigned', 0, 0, 4, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(747, 1068, 194, 99, '4.753', '4.753', 0, 0, 4, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(748, 318, 194, 99, '6.25', '6.25', 0, 0, 1, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(749, 319, 194, 99, '1.756', '1.756', 0, 0, 2, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(750, 320, 194, 99, '2.322', '2.322', 1, 1, 3, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(751, 1022, 195, 275, 'Several catch blocks for a try block, arranged in order starting with Exception and ending with the most specific exception.', 'Several catch blocks for a try block, arranged in order starting with Exception and ending with the most specific exception.', 0, 0, 2, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(752, 1024, 195, 275, 'The catch blocks should be used only when a finally block is not used.', 'The catch blocks should be used only when a finally block is not used.', 0, 0, 4, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(753, 1023, 195, 275, 'Several catch blocks within one try block, arranged starting with the most specific exception and ending with Exception.', 'Several catch blocks within one try block, arranged starting with the most specific exception and ending with Exception.', 1, 1, 3, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(754, 1021, 195, 275, 'Only one catch block for each try block.', 'Only one catch block for each try block.', 0, 0, 1, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(755, 204, 196, 61, 'heap space', 'heap space', 1, 1, 1, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(756, 205, 196, 61, 'stack space', 'stack space', 0, 0, 2, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(757, 920, 196, 61, 'first generation memory', 'first generation memory', 0, 0, 4, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(758, 206, 196, 61, 'heap space and stack space', 'heap space and stack space', 0, 0, 3, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(759, 415, 197, 131, 'Enable()', 'Enable()', 0, 0, 2, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(760, 414, 197, 131, 'Get()', 'Get()', 0, 0, 1, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(761, 416, 197, 131, 'Show()', 'Show()', 1, 1, 3, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(762, 146, 198, 41, 'public static void main(String[] args)', 'public static void main(String[] args)', 1, 1, 3, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(763, 145, 198, 41, 'public int main(String[] args)', 'public int main(String[] args)', 0, 0, 2, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(764, 144, 198, 41, 'public static int main(String[] args)', 'public static int main(String[] args)', 0, 0, 1, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(765, 468, 199, 149, '{1, 2, 6, 1}', '{1, 2, 6, 1}', 0, 0, 1, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(766, 469, 199, 149, '{1, 2, 5, 6}', '{1, 2, 5, 6}', 1, 1, 2, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(767, 470, 199, 149, '{1, 2, 1, 2}', '{1, 2, 1, 2}', 0, 0, 3, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(768, 937, 199, 149, '{1, 5, 6, 3}', '{1, 5, 6, 3}', 0, 0, 4, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(769, 680, 200, 70, '[[#img31]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/VNrzOvOE3LpeuWi9ciBQDVlGrXxObvbfnI3kfNS4.png\" width=\"150\" height=\"150\" />', 0, 0, 4, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(770, 231, 200, 70, '[[#img28]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/jkL1TWHhQQMAtCTbSz6HtJyZn8zhXmtgMQYX3Zpo.png\" width=\"150\" height=\"150\" />', 1, 1, 1, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(771, 233, 200, 70, '[[#img30]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/5CGn3NoMP2AFTNnuWdi3jGe97XfkU7ydkF3PldTA.png\" width=\"150\" height=\"150\" />', 0, 0, 3, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(772, 232, 200, 70, '[[#img29]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/Cf9qY75IYjLpUVFWsICWK07cAwLtqRPDIO6JjLqT.png\" width=\"150\" height=\"150\" />', 0, 0, 2, '2019-08-31 22:09:27', '2019-08-31 22:12:32'),
(773, 629, 201, 202, 'Mobile Operating System', 'Mobile Operating System', 1, 1, 3, '2019-09-01 23:29:57', '2019-09-01 23:41:02'),
(774, 628, 201, 202, 'Programming Language', 'Programming Language', 0, 0, 2, '2019-09-01 23:29:57', '2019-09-01 23:41:02'),
(775, 627, 201, 202, 'Desktop Operatng System', 'Desktop Operatng System', 0, 0, 1, '2019-09-01 23:29:57', '2019-09-01 23:41:02'),
(776, 820, 201, 202, 'Database', 'Database', 0, 0, 4, '2019-09-01 23:29:57', '2019-09-01 23:41:02'),
(777, 307, 202, 95, 'You cannot find the square root of a negative number', 'You cannot find the square root of a negative number', 0, 0, 2, '2019-09-01 23:29:57', '2019-09-01 23:41:02'),
(778, 306, 202, 95, '12i', '12i', 1, 1, 1, '2019-09-01 23:29:57', '2019-09-01 23:41:02'),
(779, 1064, 202, 95, '-12i', '-12i', 0, 0, 4, '2019-09-01 23:29:57', '2019-09-01 23:41:02'),
(780, 308, 202, 95, '-12', '-12', 0, 0, 3, '2019-09-01 23:29:57', '2019-09-01 23:41:02'),
(781, 449, 203, 142, '{1, 2, 5, 9}', '{1, 2, 5, 9}', 0, 0, 3, '2019-09-01 23:29:57', '2019-09-01 23:41:02'),
(782, 448, 203, 142, '{1, 3, 5, 7, 9}', '{1, 3, 5, 7, 9}', 1, 1, 2, '2019-09-01 23:29:57', '2019-09-01 23:41:02'),
(783, 447, 203, 142, '{1, 2, 3}', '{1, 2, 3}', 0, 0, 1, '2019-09-01 23:29:57', '2019-09-01 23:41:02'),
(784, 930, 203, 142, '{1, 5, 7, 9, 11}', '{1, 5, 7, 9, 11}', 0, 0, 4, '2019-09-01 23:29:57', '2019-09-01 23:41:02'),
(785, 712, 204, 89, 'None of them', 'None of them', 0, 0, 4, '2019-09-01 23:29:57', '2019-09-01 23:41:02'),
(786, 288, 204, 89, 'Virtual private network', 'Virtual private network', 0, 0, 1, '2019-09-01 23:29:57', '2019-09-01 23:41:02'),
(787, 289, 204, 89, 'Virtual memory', 'Virtual memory', 1, 1, 2, '2019-09-01 23:29:57', '2019-09-01 23:41:02'),
(788, 290, 204, 89, 'Virtual Machine', 'Virtual Machine', 0, 0, 3, '2019-09-01 23:29:57', '2019-09-01 23:41:02'),
(789, 355, 205, 111, '(π/2 , π)', '(π/2 , π)', 1, 1, 2, '2019-09-01 23:29:57', '2019-09-01 23:41:02'),
(790, 356, 205, 111, '(π , 3 π / 2)', '(π , 3 π / 2)', 0, 0, 3, '2019-09-01 23:29:57', '2019-09-01 23:41:02'),
(791, 354, 205, 111, '(0 , π/2)', '(0 , π/2)', 0, 0, 1, '2019-09-01 23:29:57', '2019-09-01 23:41:02'),
(792, 1080, 205, 111, '(3 π / 2 , 2 π)', '(3 π / 2 , 2 π)', 0, 0, 4, '2019-09-01 23:29:57', '2019-09-01 23:41:02'),
(793, 686, 206, 219, 'Modem', 'Modem', 1, 1, 3, '2019-09-01 23:29:57', '2019-09-01 23:41:02'),
(794, 710, 206, 219, 'Wireless access point', 'Wireless access point', 0, 0, 4, '2019-09-01 23:29:57', '2019-09-01 23:41:02'),
(795, 685, 206, 219, 'Switch', 'Switch', 0, 0, 2, '2019-09-01 23:29:57', '2019-09-01 23:41:02'),
(796, 684, 206, 219, 'Repeater', 'Repeater', 0, 0, 1, '2019-09-01 23:29:57', '2019-09-01 23:41:02'),
(797, 117, 207, 32, 'abstract', 'abstract', 0, 0, 1, '2019-09-01 23:29:57', '2019-09-01 23:41:02'),
(798, 900, 207, 32, 'All of the choices', 'All of the choices', 1, 1, 4, '2019-09-01 23:29:57', '2019-09-01 23:41:02'),
(799, 118, 207, 32, 'as', 'as', 0, 0, 2, '2019-09-01 23:29:57', '2019-09-01 23:41:02'),
(800, 119, 207, 32, 'foreach', 'foreach', 0, 0, 3, '2019-09-01 23:29:57', '2019-09-01 23:41:02'),
(801, 679, 208, 68, '[[#img26]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/tBuCNpani0PgWIFN01ztVOAj4FS4CBDAiTW9J8lB.png\" width=\"150\" height=\"150\" />', 0, 0, 4, '2019-09-01 23:29:57', '2019-09-01 23:41:02'),
(802, 225, 208, 68, '[[#img23]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/IyLDJJaUUQ0aIZOMyEjh4JO72W4HpXtPj2CfMKZL.png\" width=\"150\" height=\"150\" />', 1, 1, 1, '2019-09-01 23:29:57', '2019-09-01 23:41:02'),
(803, 226, 208, 68, '[[#img24]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/nVLwXww7AT2RBfzhH1tPQMxdLPF1iWuunHzErZRh.png\" width=\"150\" height=\"150\" />', 0, 0, 2, '2019-09-01 23:29:57', '2019-09-01 23:41:02'),
(804, 227, 208, 68, '[[#img25]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/rDh656ehodyPQmn7CxxjGK2H29sx2bh6LDz9INfN.png\" width=\"150\" height=\"150\" />', 0, 0, 3, '2019-09-01 23:29:57', '2019-09-01 23:41:02'),
(805, 707, 209, 225, '44', '44', 0, 0, 3, '2019-09-01 23:29:57', '2019-09-01 23:41:02'),
(806, 705, 209, 225, '531', '531', 0, 0, 1, '2019-09-01 23:29:57', '2019-09-01 23:41:02'),
(807, 714, 209, 225, '135', '135', 0, 0, 4, '2019-09-01 23:29:57', '2019-09-01 23:41:02'),
(808, 706, 209, 225, '127', '127', 1, 1, 2, '2019-09-01 23:29:57', '2019-09-01 23:41:02'),
(809, 471, 210, 150, '{1, 2}', '{1, 2}', 1, 1, 1, '2019-09-01 23:29:57', '2019-09-01 23:41:02'),
(810, 938, 210, 150, '{1, 6}', '{1, 6}', 0, 0, 4, '2019-09-01 23:29:57', '2019-09-01 23:41:02'),
(811, 473, 210, 150, '{2, 5}', '{2, 5}', 0, 0, 3, '2019-09-01 23:29:57', '2019-09-01 23:41:02'),
(812, 472, 210, 150, '{5, 6}', '{5, 6}', 0, 0, 2, '2019-09-01 23:29:57', '2019-09-01 23:41:02'),
(813, 1029, 211, 277, 'The code will generate an error because it lacks a catch block.', 'The code will generate an error because it lacks a catch block.', 0, 0, 1, '2019-09-01 23:29:57', '2019-09-01 23:41:02'),
(814, 1031, 211, 277, 'The code will generate an error because the finally block is placed immediately after the try block.', 'The code will generate an error because the finally block is placed immediately after the try block.', 0, 0, 3, '2019-09-01 23:29:57', '2019-09-01 23:41:02'),
(815, 1030, 211, 277, 'The code will generate an error because it lacks a throw statement.', 'The code will generate an error because it lacks a throw statement.', 0, 0, 2, '2019-09-01 23:29:57', '2019-09-01 23:41:02'),
(816, 1032, 211, 277, 'The code will compile without an error.', 'The code will compile without an error.', 1, 1, 4, '2019-09-01 23:29:57', '2019-09-01 23:41:02'),
(817, 1095, 212, 286, '0', '0', 0, 0, 4, '2019-09-01 23:29:57', '2019-09-01 23:41:02'),
(818, 1094, 212, 286, '0.001', '0.001', 0, 0, 3, '2019-09-01 23:29:57', '2019-09-01 23:41:02'),
(819, 1092, 212, 286, '0.057', '0.057', 1, 1, 1, '2019-09-01 23:29:57', '2019-09-01 23:41:02'),
(820, 1093, 212, 286, '0.478', '0.478', 0, 0, 2, '2019-09-01 23:29:57', '2019-09-01 23:41:02'),
(821, 142, 213, 40, 'object.', 'object.', 0, 0, 2, '2019-09-01 23:29:57', '2019-09-01 23:41:02'),
(822, 141, 213, 40, 'type.', 'type.', 1, 1, 1, '2019-09-01 23:29:57', '2019-09-01 23:41:02'),
(823, 143, 213, 40, 'Both of the above.', 'Both of the above.', 0, 0, 3, '2019-09-01 23:29:58', '2019-09-01 23:41:02'),
(824, 1035, 214, 278, 'Message1\nMessage3\nMessage4', 'Message1<br />\nMessage3<br />\nMessage4', 1, 1, 3, '2019-09-01 23:29:58', '2019-09-01 23:41:02'),
(825, 1033, 214, 278, 'Message1\nMessage4', 'Message1<br />\nMessage4', 0, 0, 1, '2019-09-01 23:29:58', '2019-09-01 23:41:02'),
(826, 1034, 214, 278, 'Message1\nMessage2\nMessage3\nMessage4', 'Message1<br />\nMessage2<br />\nMessage3<br />\nMessage4', 0, 0, 2, '2019-09-01 23:29:58', '2019-09-01 23:41:02'),
(827, 1036, 214, 278, 'Message1\nMessage3\nMessage2\nMessage4', 'Message1<br />\nMessage3<br />\nMessage2<br />\nMessage4', 0, 0, 4, '2019-09-01 23:29:58', '2019-09-01 23:41:02'),
(828, 219, 215, 66, '121', '121', 0, 0, 1, '2019-09-01 23:29:58', '2019-09-01 23:41:02'),
(829, 676, 215, 66, '212', '212', 0, 0, 4, '2019-09-01 23:29:58', '2019-09-01 23:41:02'),
(830, 221, 215, 66, '199', '199', 0, 0, 3, '2019-09-01 23:29:58', '2019-09-01 23:41:02'),
(831, 220, 215, 66, '163', '163', 1, 1, 2, '2019-09-01 23:29:58', '2019-09-01 23:41:02'),
(832, 1005, 216, 122, 'Assignment opeartors', 'Assignment opeartors', 0, 0, 4, '2019-09-01 23:29:58', '2019-09-01 23:41:02'),
(833, 389, 216, 122, 'Logical operators', 'Logical operators', 0, 0, 3, '2019-09-01 23:29:58', '2019-09-01 23:41:02'),
(834, 388, 216, 122, 'Binary operators', 'Binary operators', 0, 0, 2, '2019-09-01 23:29:58', '2019-09-01 23:41:02'),
(835, 387, 216, 122, 'unary operators', 'unary operators', 1, 1, 1, '2019-09-01 23:29:58', '2019-09-01 23:41:02'),
(836, 452, 217, 143, 'Zero', 'Zero', 0, 0, 3, '2019-09-01 23:29:58', '2019-09-01 23:41:02'),
(837, 450, 217, 143, 'One', 'One', 1, 1, 1, '2019-09-01 23:29:58', '2019-09-01 23:41:02'),
(838, 931, 217, 143, 'Three', 'Three', 0, 0, 4, '2019-09-01 23:29:58', '2019-09-01 23:41:02'),
(839, 451, 217, 143, 'Two', 'Two', 0, 0, 2, '2019-09-01 23:29:58', '2019-09-01 23:41:02'),
(840, 410, 218, 129, 'ListView Control', 'ListView Control', 0, 0, 3, '2019-09-01 23:29:58', '2019-09-01 23:41:02'),
(841, 409, 218, 129, 'LinkLabel control', 'LinkLabel control', 1, 1, 2, '2019-09-01 23:29:58', '2019-09-01 23:41:02'),
(842, 408, 218, 129, 'GroupBox control', 'GroupBox control', 0, 0, 1, '2019-09-01 23:29:58', '2019-09-01 23:41:02'),
(843, 231, 219, 70, '[[#img28]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/jkL1TWHhQQMAtCTbSz6HtJyZn8zhXmtgMQYX3Zpo.png\" width=\"150\" height=\"150\" />', 1, 1, 1, '2019-09-01 23:29:58', '2019-09-01 23:41:02'),
(844, 232, 219, 70, '[[#img29]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/Cf9qY75IYjLpUVFWsICWK07cAwLtqRPDIO6JjLqT.png\" width=\"150\" height=\"150\" />', 0, 0, 2, '2019-09-01 23:29:58', '2019-09-01 23:41:02'),
(845, 680, 219, 70, '[[#img31]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/VNrzOvOE3LpeuWi9ciBQDVlGrXxObvbfnI3kfNS4.png\" width=\"150\" height=\"150\" />', 0, 0, 4, '2019-09-01 23:29:58', '2019-09-01 23:41:02'),
(846, 233, 219, 70, '[[#img30]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/5CGn3NoMP2AFTNnuWdi3jGe97XfkU7ydkF3PldTA.png\" width=\"150\" height=\"150\" />', 0, 0, 3, '2019-09-01 23:29:58', '2019-09-01 23:41:02'),
(847, 829, 220, 211, 'Opera', 'Opera', 0, 0, 4, '2019-09-01 23:29:58', '2019-09-01 23:41:02'),
(848, 655, 220, 211, 'Firefox', 'Firefox', 0, 0, 2, '2019-09-01 23:29:58', '2019-09-01 23:41:02'),
(849, 656, 220, 211, 'Open source Webkit', 'Open source Webkit', 1, 1, 3, '2019-09-01 23:29:58', '2019-09-01 23:41:02'),
(850, 654, 220, 211, 'Chrome', 'Chrome', 0, 0, 1, '2019-09-01 23:29:58', '2019-09-01 23:41:02'),
(851, 642, 221, 207, 'Android Debug Bridge', 'Android Debug Bridge', 1, 1, 1, '2019-09-01 23:29:58', '2019-09-01 23:41:02'),
(852, 643, 221, 207, 'Application Debug Bridge', 'Application Debug Bridge', 0, 0, 2, '2019-09-01 23:29:58', '2019-09-01 23:41:02'),
(853, 825, 221, 207, 'Application data bridge', 'Application data bridge', 0, 0, 4, '2019-09-01 23:29:58', '2019-09-01 23:41:02'),
(854, 644, 221, 207, 'Android data bridge', 'Android data bridge', 0, 0, 3, '2019-09-01 23:29:58', '2019-09-01 23:41:02'),
(855, 1081, 222, 112, '8', '8', 0, 0, 4, '2019-09-01 23:29:58', '2019-09-01 23:41:02'),
(856, 357, 222, 112, '10', '10', 0, 0, 1, '2019-09-01 23:29:58', '2019-09-01 23:41:02'),
(857, 359, 222, 112, '2100', '2100', 1, 1, 3, '2019-09-01 23:29:58', '2019-09-01 23:41:02'),
(858, 358, 222, 112, '15', '15', 0, 0, 2, '2019-09-01 23:29:58', '2019-09-01 23:41:02'),
(859, 320, 223, 99, '2.322', '2.322', 1, 1, 3, '2019-09-01 23:29:58', '2019-09-01 23:41:02'),
(860, 319, 223, 99, '1.756', '1.756', 0, 0, 2, '2019-09-01 23:29:58', '2019-09-01 23:41:02'),
(861, 318, 223, 99, '6.25', '6.25', 0, 0, 1, '2019-09-01 23:29:58', '2019-09-01 23:41:02'),
(862, 1068, 223, 99, '4.753', '4.753', 0, 0, 4, '2019-09-01 23:29:58', '2019-09-01 23:41:02'),
(863, 464, 224, 147, 'Subset', 'Subset', 0, 0, 3, '2019-09-01 23:29:58', '2019-09-01 23:41:02'),
(864, 935, 224, 147, 'Empty', 'Empty', 0, 0, 4, '2019-09-01 23:29:58', '2019-09-01 23:41:02'),
(865, 462, 224, 147, 'Infinite', 'Infinite', 1, 1, 1, '2019-09-01 23:29:58', '2019-09-01 23:41:02'),
(866, 463, 224, 147, 'Finite', 'Finite', 0, 0, 2, '2019-09-01 23:29:58', '2019-09-01 23:41:02');
INSERT INTO `answer_sheet_test_question_choices` (`id`, `choice_id`, `answer_sheet_test_question_id`, `test_question_id`, `body`, `body_html`, `is_correct`, `is_selected`, `pos_order`, `created_at`, `updated_at`) VALUES
(867, 953, 225, 260, '30', '30', 0, 0, 3, '2019-09-01 23:29:58', '2019-09-01 23:41:02'),
(868, 954, 225, 260, '10', '10', 0, 0, 4, '2019-09-01 23:29:58', '2019-09-01 23:41:03'),
(869, 951, 225, 260, '35', '35', 1, 1, 1, '2019-09-01 23:29:58', '2019-09-01 23:41:03'),
(870, 952, 225, 260, '20', '20', 0, 0, 2, '2019-09-01 23:29:58', '2019-09-01 23:41:02'),
(871, 454, 226, 144, '5', '5', 1, 1, 2, '2019-09-01 23:29:58', '2019-09-01 23:41:03'),
(872, 932, 226, 144, '20', '20', 0, 0, 4, '2019-09-01 23:29:58', '2019-09-01 23:41:03'),
(873, 453, 226, 144, '10', '10', 0, 0, 1, '2019-09-01 23:29:58', '2019-09-01 23:41:03'),
(874, 455, 226, 144, '3', '3', 0, 0, 3, '2019-09-01 23:29:58', '2019-09-01 23:41:03'),
(875, 860, 227, 248, 'To send the data from an application to another application', 'To send the data from an application to another application', 0, 0, 1, '2019-09-01 23:29:58', '2019-09-01 23:41:03'),
(876, 863, 227, 248, 'none of the choices', 'none of the choices', 0, 0, 4, '2019-09-01 23:29:58', '2019-09-01 23:41:03'),
(877, 862, 227, 248, 'To share the data between applications', 'To share the data between applications', 1, 1, 3, '2019-09-01 23:29:58', '2019-09-01 23:41:03'),
(878, 861, 227, 248, 'To store the data in a database', 'To store the data in a database', 0, 0, 2, '2019-09-01 23:29:58', '2019-09-01 23:41:03'),
(879, 198, 228, 59, '3', '3', 0, 0, 1, '2019-09-01 23:29:58', '2019-09-01 23:41:03'),
(880, 918, 228, 59, '1', '1', 1, 1, 4, '2019-09-01 23:29:58', '2019-09-01 23:41:03'),
(881, 199, 228, 59, '0', '0', 0, 0, 2, '2019-09-01 23:29:58', '2019-09-01 23:41:03'),
(882, 200, 228, 59, '6', '6', 0, 0, 3, '2019-09-01 23:29:58', '2019-09-01 23:41:03'),
(883, 293, 229, 90, 'kilobyte', 'kilobyte', 0, 0, 3, '2019-09-01 23:29:58', '2019-09-01 23:41:03'),
(884, 292, 229, 90, 'byte', 'byte', 1, 1, 2, '2019-09-01 23:29:58', '2019-09-01 23:41:03'),
(885, 291, 229, 90, 'bit', 'bit', 0, 0, 1, '2019-09-01 23:29:58', '2019-09-01 23:41:03'),
(886, 711, 229, 90, 'megabyte', 'megabyte', 0, 0, 4, '2019-09-01 23:29:58', '2019-09-01 23:41:03'),
(887, 343, 230, 107, '48', '48', 0, 0, 2, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(888, 344, 230, 107, '-12', '-12', 0, 0, 3, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(889, 1076, 230, 107, '22', '22', 1, 1, 4, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(890, 342, 230, 107, '11', '11', 0, 0, 1, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(891, 980, 231, 267, 'smallest following integer', 'smallest following integer', 0, 0, 3, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(892, 979, 231, 267, 'greatest previous integer', 'greatest previous integer', 1, 1, 2, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(893, 978, 231, 267, 'smallest previous integer', 'smallest previous integer', 0, 0, 1, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(894, 943, 232, 155, '7', '7', 0, 0, 4, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(895, 488, 232, 155, '6', '6', 0, 0, 3, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(896, 486, 232, 155, '4', '4', 1, 1, 1, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(897, 487, 232, 155, '5', '5', 0, 0, 2, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(898, 402, 233, 127, 'Radio Button', 'Radio Button', 0, 0, 1, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(899, 403, 233, 127, 'Textbox control', 'Textbox control', 0, 0, 2, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(900, 404, 233, 127, 'Button control', 'Button control', 1, 1, 3, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(901, 346, 234, 108, '1 852 000', '1 852 000', 0, 0, 2, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(902, 347, 234, 108, '1 000 000', '1 000 000', 0, 0, 3, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(903, 345, 234, 108, '1 846 000', '1 846 000', 1, 1, 1, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(904, 1077, 234, 108, '1 500 000', '1 500 000', 0, 0, 4, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(905, 852, 235, 246, 'res/', 'res/', 0, 0, 1, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(906, 855, 235, 246, 'bin/', 'bin/', 0, 1, 4, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(907, 854, 235, 246, 'src/', 'src/', 1, 0, 3, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(908, 853, 235, 246, 'assets/', 'assets/', 0, 0, 2, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(909, 144, 236, 41, 'public static int main(String[] args)', 'public static int main(String[] args)', 0, 0, 1, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(910, 145, 236, 41, 'public int main(String[] args)', 'public int main(String[] args)', 0, 0, 2, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(911, 146, 236, 41, 'public static void main(String[] args)', 'public static void main(String[] args)', 1, 1, 3, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(912, 730, 237, 74, 'CPU', 'CPU', 0, 0, 4, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(913, 244, 237, 74, 'Motherboard', 'Motherboard', 0, 0, 2, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(914, 243, 237, 74, 'Operating System', 'Operating System', 0, 0, 1, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(915, 245, 237, 74, 'Computer', 'Computer', 1, 1, 3, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(916, 1106, 238, 289, '6', '6', 0, 0, 3, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(917, 1104, 238, 289, '5', '5', 0, 0, 1, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(918, 1105, 238, 289, '7', '7', 1, 1, 2, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(919, 1107, 238, 289, '8', '8', 0, 0, 4, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(920, 386, 239, 121, 'Logical operators', 'Logical operators', 1, 1, 3, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(921, 384, 239, 121, 'RElational operators', 'RElational operators', 0, 0, 1, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(922, 1004, 239, 121, 'Assignment Operators', 'Assignment Operators', 0, 0, 4, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(923, 385, 239, 121, 'Bitwise operators', 'Bitwise operators', 0, 0, 2, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(924, 631, 240, 203, 'MPEG', 'MPEG', 0, 0, 2, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(925, 821, 240, 203, 'MIDI', 'MIDI', 0, 0, 4, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(926, 632, 240, 203, 'AVI', 'AVI', 1, 1, 3, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(927, 630, 240, 203, 'MP4', 'MP4', 0, 0, 1, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(928, 1085, 241, 116, 'even and odd', 'even and odd', 0, 0, 4, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(929, 371, 241, 116, 'neither odd nor even', 'neither odd nor even', 0, 0, 3, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(930, 370, 241, 116, 'an even function', 'an even function', 1, 1, 2, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(931, 369, 241, 116, 'an odd function', 'an odd function', 0, 0, 1, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(932, 2, 242, 1, 'x = 4', 'x = 4', 0, 0, 2, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(933, 1, 242, 1, 'x = 1', 'x = 1', 1, 1, 1, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(934, 3, 242, 1, 'x = 2', 'x = 2', 0, 0, 3, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(935, 361, 243, 113, '3!', '3!', 1, 1, 2, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(936, 362, 243, 113, '2!', '2!', 0, 0, 3, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(937, 360, 243, 113, '5!', '5!', 0, 0, 1, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(938, 1082, 243, 113, '3! * 2!', '3! * 2!', 0, 0, 4, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(939, 123, 244, 34, 'sizeof', 'sizeof', 1, 1, 1, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(940, 124, 244, 34, 'typeof', 'typeof', 0, 0, 2, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(941, 902, 244, 34, '*', '*', 0, 0, 4, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(942, 125, 244, 34, '&</a>', '&</a>', 0, 0, 3, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(943, 1089, 245, 285, '2 π', '2 π', 0, 0, 2, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(944, 1091, 245, 285, 'π', 'π', 1, 1, 4, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(945, 1090, 245, 285, '4 π', '4 π', 0, 0, 3, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(946, 1088, 245, 285, '4 π <sup>2</sup>', '4 π <sup>2</sup>', 0, 0, 1, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(947, 249, 246, 76, 'spooling', 'spooling', 0, 0, 1, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(948, 251, 246, 76, 'virtual memory', 'virtual memory', 0, 0, 3, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(949, 728, 246, 76, 'back up', 'back up', 1, 1, 4, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(950, 250, 246, 76, 'buffering', 'buffering', 0, 0, 2, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(951, 1062, 247, 93, 'x ≤ -5', 'x ≤ -5', 0, 0, 4, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(952, 302, 247, 93, 'x ≥ -5', 'x ≥ -5', 0, 0, 3, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(953, 300, 247, 93, 'x ≤ 5', 'x ≤ 5', 0, 0, 1, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(954, 301, 247, 93, 'x ≥ 5', 'x ≥ 5', 1, 1, 2, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(955, 1055, 248, 283, 'Set the CausesValidation property of the Help button to false.', 'Set the CausesValidation property of the Help button to false.', 1, 1, 3, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(956, 1056, 248, 283, 'Set the CausesValidation property of the Help button to true.', 'Set the CausesValidation property of the Help button to true.', 0, 0, 4, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(957, 1054, 248, 283, 'Set the CausesValidation property of the text box to true.', 'Set the CausesValidation property of the text box to true.', 0, 0, 2, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(958, 1053, 248, 283, 'Set the CausesValidation property of the text box to false.', 'Set the CausesValidation property of the text box to false.', 0, 0, 1, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(959, 718, 249, 223, '100100', '100100', 0, 0, 4, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(960, 701, 249, 223, '110100', '110100', 1, 1, 3, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(961, 699, 249, 223, '110011', '110011', 0, 0, 1, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(962, 700, 249, 223, '100001', '100001', 0, 0, 2, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(963, 165, 250, 48, 'JRE is a java based GUI application.', 'JRE is a java based GUI application.', 0, 0, 1, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(964, 167, 250, 48, 'JRE is an implementation of the Java Virtual Machine which executes Java programs.', 'JRE is an implementation of the Java Virtual Machine which executes Java programs.', 1, 1, 3, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(965, 166, 250, 48, 'JRE is an application development framework.', 'JRE is an application development framework.', 0, 0, 2, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(966, 948, 251, 160, 'B', 'B', 0, 0, 4, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(967, 501, 251, 160, 'A‘ (Complement of A)', 'A‘ (Complement of A)', 0, 0, 1, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(968, 502, 251, 160, 'A U B -B', 'A U B -B', 1, 1, 2, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(969, 503, 251, 160, 'A ∩ B', 'A ∩ B', 0, 0, 3, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(970, 149, 252, 42, 'void', 'void', 0, 0, 3, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(971, 148, 252, 42, 'Boolean', 'Boolean', 1, 1, 2, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(972, 907, 252, 42, 'private', 'private', 0, 0, 4, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(973, 147, 252, 42, 'static', 'static', 0, 0, 1, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(974, 911, 253, 51, 'Runtime error', 'Runtime error', 0, 0, 4, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(975, 175, 253, 51, '8', '8', 0, 0, 2, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(976, 174, 253, 51, '9', '9', 0, 0, 1, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(977, 176, 253, 51, 'Compilation error', 'Compilation error', 1, 1, 3, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(978, 668, 254, 215, '2.6', '2.6', 0, 0, 3, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(979, 833, 254, 215, '2.2 (Froyo)', '2.2 (Froyo)', 0, 0, 4, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(980, 667, 254, 215, '2.3 (Gingerbread)', '2.3 (Gingerbread)', 1, 1, 2, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(981, 666, 254, 215, '3.0 (Honeycomb)', '3.0 (Honeycomb)', 0, 0, 1, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(982, 508, 255, 162, 'n( B U C)=0', 'n( B U C)=0', 0, 0, 2, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(983, 507, 255, 162, 'n(A U B)=0', 'n(A U B)=0', 0, 0, 1, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(984, 950, 255, 162, 'All of the mentioned', 'All of the mentioned', 1, 1, 4, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(985, 509, 255, 162, 'n( A U B U C)=90', 'n( A U B U C)=90', 0, 0, 3, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(986, 936, 256, 148, '9', '9', 0, 0, 4, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(987, 466, 256, 148, '6', '6', 0, 0, 2, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(988, 465, 256, 148, '8', '8', 1, 1, 1, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(989, 467, 256, 148, '7', '7', 0, 0, 3, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(990, 282, 257, 87, 'fetch, execute, store and decode', 'fetch, execute, store and decode', 0, 0, 1, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(991, 283, 257, 87, 'decode, execute, store and fetch', 'decode, execute, store and fetch', 0, 0, 2, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(992, 715, 257, 87, 'fetch, decode, execute and store', 'fetch, decode, execute and store', 1, 1, 4, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(993, 284, 257, 87, 'decode, fetch, store and execute', 'decode, fetch, store and execute', 0, 0, 3, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(994, 335, 258, 104, '(x+7)<sup>2</sup> -8', '(x+7)<sup>2</sup> -8', 0, 0, 3, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(995, 334, 258, 104, '(x+5)<sup>2</sup> +16', '(x+5)<sup>2</sup> +16', 1, 1, 2, '2019-09-01 23:29:59', '2019-09-01 23:41:04'),
(996, 333, 258, 104, '(x-7)<sup>2</sup> +8', '(x-7)<sup>2</sup> +8', 0, 0, 1, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(997, 1073, 258, 104, '(x+5)<sup>2</sup> -16', '(x+5)<sup>2</sup> -16', 0, 0, 4, '2019-09-01 23:29:59', '2019-09-01 23:41:03'),
(998, 1007, 259, 124, 'Explicit Types', 'Explicit Types', 0, 0, 4, '2019-09-01 23:29:59', '2019-09-01 23:41:04'),
(999, 394, 259, 124, 'Value types', 'Value types', 0, 0, 2, '2019-09-01 23:29:59', '2019-09-01 23:41:04'),
(1000, 395, 259, 124, 'Data Type', 'Data Type', 0, 0, 3, '2019-09-01 23:29:59', '2019-09-01 23:41:04'),
(1001, 393, 259, 124, 'Reference type', 'Reference type', 1, 1, 1, '2019-09-01 23:29:59', '2019-09-01 23:41:04'),
(1002, 138, 260, 39, 'null', 'null', 0, 0, 1, '2019-09-01 23:29:59', '2019-09-01 23:41:04'),
(1003, 139, 260, 39, '0', '0', 0, 0, 2, '2019-09-01 23:29:59', '2019-09-01 23:41:04'),
(1004, 140, 260, 39, 'Depends upon the type of variable', 'Depends upon the type of variable', 1, 1, 3, '2019-09-01 23:29:59', '2019-09-01 23:41:04'),
(1005, 906, 260, 39, 'Not assigned', 'Not assigned', 0, 0, 4, '2019-09-01 23:29:59', '2019-09-01 23:41:04'),
(1006, 434, 261, 137, 'Have different return types and arguments than the parent class', 'Have different return types and arguments than the parent class', 0, 0, 3, '2019-09-01 23:29:59', '2019-09-01 23:41:04'),
(1007, 433, 261, 137, 'Maintain the same return type and arguments as the parent class, but implement it differently', 'Maintain the same return type and arguments as the parent class, but implement it differently', 1, 1, 2, '2019-09-01 23:29:59', '2019-09-01 23:41:04'),
(1008, 1013, 261, 137, 'Are Virtual', 'Are Virtual', 0, 0, 4, '2019-09-01 23:29:59', '2019-09-01 23:41:04'),
(1009, 432, 261, 137, 'Override the parent class methods but maintain the implementation', 'Override the parent class methods but maintain the implementation', 0, 0, 1, '2019-09-01 23:29:59', '2019-09-01 23:41:04'),
(1010, 171, 262, 50, 'Thread returns to the ready state.', 'Thread returns to the ready state.', 1, 1, 1, '2019-09-01 23:29:59', '2019-09-01 23:41:04'),
(1011, 172, 262, 50, 'Thread returns to the waiting state.', 'Thread returns to the waiting state.', 0, 0, 2, '2019-09-01 23:29:59', '2019-09-01 23:41:04'),
(1012, 173, 262, 50, 'Thread starts running.', 'Thread starts running.', 0, 0, 3, '2019-09-01 23:29:59', '2019-09-01 23:41:04'),
(1013, 399, 263, 126, 'CheckListBox control', 'CheckListBox control', 0, 0, 1, '2019-09-01 23:29:59', '2019-09-01 23:41:04'),
(1014, 400, 263, 126, 'ListBox control', 'ListBox control', 1, 1, 2, '2019-09-01 23:29:59', '2019-09-01 23:41:04'),
(1015, 401, 263, 126, 'TextBox control', 'TextBox control', 0, 0, 3, '2019-09-01 23:29:59', '2019-09-01 23:41:04'),
(1016, 845, 264, 244, 'updates()', 'updates()', 0, 0, 2, '2019-09-01 23:29:59', '2019-09-01 23:41:04'),
(1017, 844, 264, 244, 'commitUpdates()', 'commitUpdates()', 1, 1, 1, '2019-09-01 23:29:59', '2019-09-01 23:41:04'),
(1018, 847, 264, 244, 'none of these', 'none of these', 0, 0, 4, '2019-09-01 23:29:59', '2019-09-01 23:41:04'),
(1019, 846, 264, 244, 'commit()', 'commit()', 0, 0, 3, '2019-09-01 23:29:59', '2019-09-01 23:41:04'),
(1020, 314, 265, 97, 'i - 12', 'i - 12', 1, 1, 3, '2019-09-01 23:29:59', '2019-09-01 23:41:04'),
(1021, 1066, 265, 97, '3i - 10', '3i - 10', 0, 0, 4, '2019-09-01 23:29:59', '2019-09-01 23:41:04'),
(1022, 312, 265, 97, 'i - 5', 'i - 5', 0, 0, 1, '2019-09-01 23:29:59', '2019-09-01 23:41:04'),
(1023, 313, 265, 97, '7 - 3i', '7 - 3i', 0, 0, 2, '2019-09-01 23:29:59', '2019-09-01 23:41:04'),
(1024, 901, 266, 33, 'ToInt32', 'ToInt32', 0, 0, 4, '2019-09-01 23:29:59', '2019-09-01 23:41:04'),
(1025, 121, 266, 33, 'ToDouble', 'ToDouble', 1, 1, 2, '2019-09-01 23:29:59', '2019-09-01 23:41:04'),
(1026, 122, 266, 33, 'ToInt16', 'ToInt16', 0, 0, 3, '2019-09-01 23:29:59', '2019-09-01 23:41:04'),
(1027, 120, 266, 33, 'ToDecimal', 'ToDecimal', 0, 0, 1, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1028, 490, 267, 156, '8, 12', '8, 12', 1, 1, 2, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1029, 491, 267, 156, '4, 12', '4, 12', 0, 0, 3, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1030, 489, 267, 156, '4, 8', '4, 8', 0, 0, 1, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1031, 944, 267, 156, 'None of the choices', 'None of the choices', 0, 0, 4, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1032, 1014, 268, 138, 'a and b', 'a and b', 0, 0, 4, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1033, 437, 268, 138, 'Throws', 'Throws', 1, 1, 3, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1034, 435, 268, 138, 'Trys', 'Trys', 0, 0, 1, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1035, 436, 268, 138, 'Catches', 'Catches', 0, 0, 2, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1036, 689, 269, 220, 'MICR', 'MICR', 0, 0, 3, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1037, 709, 269, 220, 'RFID readers', 'RFID readers', 0, 1, 4, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1038, 688, 269, 220, 'scanner', 'scanner', 1, 0, 2, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1039, 687, 269, 220, 'digital camera', 'digital camera', 0, 0, 1, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1040, 917, 270, 58, '1 2 3 4 5 6 7 8 9 10', '1 2 3 4 5 6 7 8 9 10', 0, 0, 4, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1041, 196, 270, 58, '1 3 5 7 9', '1 3 5 7 9', 0, 0, 2, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1042, 197, 270, 58, '0 1 2 3 4 5 6 7 8 9', '0 1 2 3 4 5 6 7 8 9', 0, 0, 3, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1043, 195, 270, 58, '0 2 4 6 8', '0 2 4 6 8', 1, 1, 1, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1044, 192, 271, 57, 'Row', 'Row', 1, 1, 1, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1045, 193, 271, 57, 'Column', 'Column', 0, 0, 2, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1046, 194, 271, 57, 'Both Row and Column', 'Both Row and Column', 0, 0, 3, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1047, 469, 272, 149, '{1, 2, 5, 6}', '{1, 2, 5, 6}', 1, 1, 2, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1048, 937, 272, 149, '{1, 5, 6, 3}', '{1, 5, 6, 3}', 0, 0, 4, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1049, 470, 272, 149, '{1, 2, 1, 2}', '{1, 2, 1, 2}', 0, 0, 3, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1050, 468, 272, 149, '{1, 2, 6, 1}', '{1, 2, 6, 1}', 0, 0, 1, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1051, 441, 273, 140, 'Constant', 'Constant', 0, 0, 1, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1052, 1016, 273, 140, 'Object', 'Object', 0, 0, 4, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1053, 442, 273, 140, 'Reference type', 'Reference type', 0, 0, 2, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1054, 443, 273, 140, 'Variable', 'Variable', 1, 1, 3, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1055, 912, 274, 52, '100', '100', 0, 0, 4, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1056, 177, 274, 52, '12', '12', 0, 0, 1, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1057, 178, 274, 52, '200', '200', 1, 1, 2, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1058, 179, 274, 52, '400', '400', 0, 0, 3, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1059, 832, 275, 214, 'Hybrid kernel', 'Hybrid kernel', 0, 0, 4, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1060, 664, 275, 214, 'Windows kernel', 'Windows kernel', 0, 0, 2, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1061, 663, 275, 214, 'Linux kernel', 'Linux kernel', 1, 1, 1, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1062, 665, 275, 214, 'MAC kernel', 'MAC kernel', 0, 0, 3, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1063, 379, 276, 119, 'do while', 'do while', 0, 0, 2, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1064, 380, 276, 119, 'while', 'while', 0, 0, 3, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1065, 1002, 276, 119, 'for loop', 'for loop', 1, 1, 4, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1066, 378, 276, 119, 'forEach loop', 'forEach loop', 0, 0, 1, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1067, 987, 277, 270, '35', '35', 1, 1, 1, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1068, 988, 277, 270, '45', '45', 0, 0, 2, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1069, 989, 277, 270, '25', '25', 0, 0, 3, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1070, 878, 278, 252, 'A mandatory class in android', 'A mandatory class in android', 0, 0, 3, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1071, 876, 278, 252, 'A class used to hold states and objects', 'A class used to hold states and objects', 1, 1, 1, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1072, 879, 278, 252, 'None of the above', 'None of the above', 0, 0, 4, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1073, 877, 278, 252, 'A bean class can be passed from one activity to another.', 'A bean class can be passed from one activity to another.', 0, 0, 2, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1074, 415, 279, 131, 'Enable()', 'Enable()', 0, 0, 2, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1075, 414, 279, 131, 'Get()', 'Get()', 0, 0, 1, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1076, 416, 279, 131, 'Show()', 'Show()', 1, 1, 3, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1077, 431, 280, 136, 'instantiates button control', 'instantiates button control', 0, 0, 3, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1078, 429, 280, 136, 'creates a button control', 'creates a button control', 0, 0, 1, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1079, 1012, 280, 136, 'a and c', 'a and c', 1, 1, 4, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1080, 430, 280, 136, 'initializes a button control', 'initializes a button control', 0, 0, 2, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1081, 1021, 281, 275, 'Only one catch block for each try block.', 'Only one catch block for each try block.', 0, 0, 1, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1082, 1024, 281, 275, 'The catch blocks should be used only when a finally block is not used.', 'The catch blocks should be used only when a finally block is not used.', 0, 0, 4, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1083, 1022, 281, 275, 'Several catch blocks for a try block, arranged in order starting with Exception and ending with the most specific exception.', 'Several catch blocks for a try block, arranged in order starting with Exception and ending with the most specific exception.', 0, 0, 2, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1084, 1023, 281, 275, 'Several catch blocks within one try block, arranged starting with the most specific exception and ending with Exception.', 'Several catch blocks within one try block, arranged starting with the most specific exception and ending with Exception.', 1, 1, 3, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1085, 419, 282, 132, 'For', 'For', 0, 0, 3, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1086, 418, 282, 132, 'Switch', 'Switch', 1, 1, 2, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1087, 417, 282, 132, 'If', 'If', 0, 0, 1, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1088, 1009, 282, 132, 'While', 'While', 0, 0, 4, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1089, 254, 283, 77, 'run time error', 'run time error', 0, 0, 3, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1090, 252, 283, 77, 'logic error', 'logic error', 1, 1, 1, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1091, 253, 283, 77, 'syntax error', 'syntax error', 0, 0, 2, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1092, 727, 283, 77, 'linker error', 'linker error', 0, 0, 4, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1093, 269, 284, 82, '-7', '-7', 0, 0, 3, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1094, 722, 284, 82, '22', '22', 0, 0, 4, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1095, 267, 284, 82, '-23', '-23', 0, 0, 1, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1096, 268, 284, 82, '-9', '-9', 1, 1, 2, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1097, 657, 285, 212, 'Apple', 'Apple', 0, 0, 1, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1098, 830, 285, 212, 'No company', 'No company', 0, 0, 4, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1099, 659, 285, 212, 'Nokia', 'Nokia', 0, 0, 3, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1100, 658, 285, 212, 'Google', 'Google', 1, 1, 2, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1101, 843, 286, 243, 'application', 'application', 0, 0, 4, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1102, 841, 286, 243, 'X.style', 'X.style', 0, 0, 2, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1103, 840, 286, 243, 'R.style', 'R.style', 1, 1, 1, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1104, 842, 286, 243, 'manifest.XML', 'manifest.XML', 0, 0, 3, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1105, 933, 287, 145, '{(1, 1), (a, a), (2, a), (1, b)}', '{(1, 1), (a, a), (2, a), (1, b)}', 0, 0, 4, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1106, 458, 287, 145, '{(1, a), (2, a), (1, b), (2, b)}', '{(1, a), (2, a), (1, b), (2, b)}', 1, 1, 3, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1107, 456, 287, 145, '{(1, a), (1, b), (2, a), (b, b)}', '{(1, a), (1, b), (2, a), (b, b)}', 0, 0, 1, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1108, 457, 287, 145, '{(1, 1), (2, 2), (a, a), (b, b)}', '{(1, 1), (2, 2), (a, a), (b, b)}', 0, 0, 2, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1109, 298, 288, 92, 'x > 1', 'x > 1', 0, 0, 2, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1110, 297, 288, 92, 'x < 6', 'x < 6', 0, 0, 1, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1111, 1061, 288, 92, 'x > 6', 'x > 6', 0, 0, 4, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1112, 299, 288, 92, 'x < -1', 'x < -1', 1, 1, 3, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1113, 255, 289, 78, 'ASCII', 'ASCII', 0, 0, 1, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1114, 256, 289, 78, 'Unicode', 'Unicode', 1, 1, 2, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1115, 257, 289, 78, 'EBCDIC', 'EBCDIC', 0, 0, 3, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1116, 726, 289, 78, 'ANSI', 'ANSI', 0, 0, 4, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1117, 635, 290, 204, 'Video calling', 'Video calling', 0, 0, 3, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1118, 822, 290, 204, 'All of the choices', 'All of the choices', 1, 1, 4, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1119, 633, 290, 204, 'Multitasking', 'Multitasking', 0, 0, 1, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1120, 634, 290, 204, 'Bluetooth', 'Bluetooth', 0, 0, 2, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1121, 135, 291, 38, 'A try block identifies a block of code for which particular exceptions is activated.', 'A try block identifies a block of code for which particular exceptions is activated.', 0, 0, 1, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1122, 137, 291, 38, 'A and B', 'A and B', 1, 1, 3, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1123, 136, 291, 38, 'It is followed by one or more catch blocks.', 'It is followed by one or more catch blocks.', 0, 0, 2, '2019-09-01 23:30:00', '2019-09-01 23:41:04'),
(1124, 895, 292, 256, 'Cursor is used to store data permanently.', 'Cursor is used to store data permanently.', 0, 0, 4, '2019-09-01 23:30:00', '2019-09-01 23:41:05'),
(1125, 893, 292, 256, 'Cursor is used to store the temporary result.', 'Cursor is used to store the temporary result.', 0, 0, 2, '2019-09-01 23:30:00', '2019-09-01 23:41:05'),
(1126, 894, 292, 256, 'A & B', 'A & B', 1, 1, 3, '2019-09-01 23:30:00', '2019-09-01 23:41:05'),
(1127, 892, 292, 256, 'Content values are key pair values, which are updated or inserted in the database', 'Content values are key pair values, which are updated or inserted in the database', 0, 0, 1, '2019-09-01 23:30:00', '2019-09-01 23:41:05'),
(1128, 637, 293, 205, 'Video Driver', 'Video Driver', 0, 0, 2, '2019-09-01 23:30:00', '2019-09-01 23:41:05'),
(1129, 638, 293, 205, 'WiFi driver', 'WiFi driver', 1, 1, 3, '2019-09-01 23:30:00', '2019-09-01 23:41:05'),
(1130, 636, 293, 205, 'Device Driver', 'Device Driver', 0, 0, 1, '2019-09-01 23:30:00', '2019-09-01 23:41:05'),
(1131, 823, 293, 205, 'Bluetooth driver', 'Bluetooth driver', 0, 0, 4, '2019-09-01 23:30:00', '2019-09-01 23:41:05'),
(1132, 238, 294, 72, 'Utility software', 'Utility software', 1, 1, 2, '2019-09-01 23:30:00', '2019-09-01 23:41:05'),
(1133, 732, 294, 72, 'Disk optimization software', 'Disk optimization software', 0, 0, 4, '2019-09-01 23:30:00', '2019-09-01 23:41:05'),
(1134, 239, 294, 72, 'Anti-virus software', 'Anti-virus software', 0, 0, 3, '2019-09-01 23:30:00', '2019-09-01 23:41:05'),
(1135, 237, 294, 72, 'Operating system software', 'Operating system software', 0, 0, 1, '2019-09-01 23:30:00', '2019-09-01 23:41:05'),
(1136, 115, 295, 31, '20', '20', 1, 1, 2, '2019-09-01 23:30:00', '2019-09-01 23:41:05'),
(1137, 114, 295, 31, '10', '10', 0, 0, 1, '2019-09-01 23:30:00', '2019-09-01 23:41:05'),
(1138, 116, 295, 31, '12', '12', 0, 0, 3, '2019-09-01 23:30:00', '2019-09-01 23:41:05'),
(1139, 475, 296, 151, 'Difference', 'Difference', 0, 0, 2, '2019-09-01 23:30:00', '2019-09-01 23:41:05'),
(1140, 474, 296, 151, 'Union', 'Union', 0, 0, 1, '2019-09-01 23:30:00', '2019-09-01 23:41:05'),
(1141, 939, 296, 151, 'Complement', 'Complement', 0, 0, 4, '2019-09-01 23:30:00', '2019-09-01 23:41:05'),
(1142, 476, 296, 151, 'Intersection', 'Intersection', 1, 1, 3, '2019-09-01 23:30:00', '2019-09-01 23:41:05'),
(1143, 920, 297, 61, 'first generation memory', 'first generation memory', 0, 0, 4, '2019-09-01 23:30:00', '2019-09-01 23:41:05'),
(1144, 205, 297, 61, 'stack space', 'stack space', 0, 0, 2, '2019-09-01 23:30:00', '2019-09-01 23:41:05'),
(1145, 206, 297, 61, 'heap space and stack space', 'heap space and stack space', 0, 0, 3, '2019-09-01 23:30:00', '2019-09-01 23:41:05'),
(1146, 204, 297, 61, 'heap space', 'heap space', 1, 1, 1, '2019-09-01 23:30:00', '2019-09-01 23:41:05'),
(1147, 725, 298, 79, 'Primary Storage', 'Primary Storage', 1, 1, 4, '2019-09-01 23:30:00', '2019-09-01 23:41:05'),
(1148, 259, 298, 79, 'ALU', 'ALU', 0, 0, 2, '2019-09-01 23:30:00', '2019-09-01 23:41:05'),
(1149, 260, 298, 79, 'Registers', 'Registers', 0, 0, 3, '2019-09-01 23:30:00', '2019-09-01 23:41:05'),
(1150, 258, 298, 79, 'Control unit', 'Control unit', 0, 0, 1, '2019-09-01 23:30:00', '2019-09-01 23:41:05'),
(1151, 886, 299, 254, 'Authentication management', 'Authentication management', 0, 0, 3, '2019-09-01 23:30:00', '2019-09-01 23:41:05'),
(1152, 884, 299, 254, 'httprequest(get/post) and returns response from the server', 'httprequest(get/post) and returns response from the server', 1, 1, 1, '2019-09-01 23:30:00', '2019-09-01 23:41:05'),
(1153, 887, 299, 254, 'None of the above', 'None of the above', 0, 0, 4, '2019-09-01 23:30:00', '2019-09-01 23:41:05'),
(1154, 885, 299, 254, 'Cookies management', 'Cookies management', 0, 0, 2, '2019-09-01 23:30:00', '2019-09-01 23:41:05'),
(1155, 364, 300, 114, 'mean = 10 , standard deviation = 6', 'mean = 10 , standard deviation = 6', 0, 0, 2, '2019-09-01 23:30:00', '2019-09-01 23:41:05'),
(1156, 363, 300, 114, 'mean = 15 , standard deviation = 6', 'mean = 15 , standard deviation = 6', 0, 0, 1, '2019-09-01 23:30:00', '2019-09-01 23:41:05'),
(1157, 1083, 300, 114, 'mean = 10 , standard deviation = 1', 'mean = 10 , standard deviation = 1', 0, 0, 4, '2019-09-01 23:30:00', '2019-09-01 23:41:05'),
(1158, 365, 300, 114, 'mean = 15 , standard deviation = 1', 'mean = 15 , standard deviation = 1', 1, 1, 3, '2019-09-01 23:30:00', '2019-09-01 23:41:05'),
(1159, 408, 301, 129, 'GroupBox control', 'GroupBox control', 0, 1, 1, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1160, 409, 301, 129, 'LinkLabel control', 'LinkLabel control', 1, 0, 2, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1161, 410, 301, 129, 'ListView Control', 'ListView Control', 0, 0, 3, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1162, 319, 302, 99, '1.756', '1.756', 0, 0, 2, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1163, 318, 302, 99, '6.25', '6.25', 0, 0, 1, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1164, 1068, 302, 99, '4.753', '4.753', 0, 0, 4, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1165, 320, 302, 99, '2.322', '2.322', 1, 1, 3, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1166, 980, 303, 267, 'smallest following integer', 'smallest following integer', 0, 0, 3, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1167, 979, 303, 267, 'greatest previous integer', 'greatest previous integer', 1, 0, 2, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1168, 978, 303, 267, 'smallest previous integer', 'smallest previous integer', 0, 1, 1, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1169, 847, 304, 244, 'none of these', 'none of these', 0, 0, 4, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1170, 844, 304, 244, 'commitUpdates()', 'commitUpdates()', 1, 1, 1, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1171, 846, 304, 244, 'commit()', 'commit()', 0, 0, 3, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1172, 845, 304, 244, 'updates()', 'updates()', 0, 0, 2, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1173, 656, 305, 211, 'Open source Webkit', 'Open source Webkit', 1, 0, 3, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1174, 654, 305, 211, 'Chrome', 'Chrome', 0, 1, 1, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1175, 655, 305, 211, 'Firefox', 'Firefox', 0, 0, 2, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1176, 829, 305, 211, 'Opera', 'Opera', 0, 0, 4, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1177, 245, 306, 74, 'Computer', 'Computer', 1, 0, 3, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1178, 244, 306, 74, 'Motherboard', 'Motherboard', 0, 1, 2, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1179, 730, 306, 74, 'CPU', 'CPU', 0, 0, 4, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1180, 243, 306, 74, 'Operating System', 'Operating System', 0, 0, 1, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1181, 686, 307, 219, 'Modem', 'Modem', 1, 0, 3, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1182, 710, 307, 219, 'Wireless access point', 'Wireless access point', 0, 1, 4, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1183, 685, 307, 219, 'Switch', 'Switch', 0, 0, 2, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1184, 684, 307, 219, 'Repeater', 'Repeater', 0, 0, 1, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1185, 953, 308, 260, '30', '30', 0, 0, 3, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1186, 952, 308, 260, '20', '20', 0, 1, 2, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1187, 951, 308, 260, '35', '35', 1, 0, 1, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1188, 954, 308, 260, '10', '10', 0, 0, 4, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1189, 347, 309, 108, '1 000 000', '1 000 000', 0, 0, 3, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1190, 346, 309, 108, '1 852 000', '1 852 000', 0, 0, 2, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1191, 1077, 309, 108, '1 500 000', '1 500 000', 0, 0, 4, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1192, 345, 309, 108, '1 846 000', '1 846 000', 1, 1, 1, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1193, 488, 310, 155, '6', '6', 0, 0, 3, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1194, 486, 310, 155, '4', '4', 1, 0, 1, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1195, 487, 310, 155, '5', '5', 0, 1, 2, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1196, 943, 310, 155, '7', '7', 0, 0, 4, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1197, 384, 311, 121, 'RElational operators', 'RElational operators', 0, 1, 1, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1198, 1004, 311, 121, 'Assignment Operators', 'Assignment Operators', 0, 0, 4, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1199, 385, 311, 121, 'Bitwise operators', 'Bitwise operators', 0, 0, 2, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1200, 386, 311, 121, 'Logical operators', 'Logical operators', 1, 0, 3, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1201, 250, 312, 76, 'buffering', 'buffering', 0, 0, 2, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1202, 249, 312, 76, 'spooling', 'spooling', 0, 0, 1, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1203, 251, 312, 76, 'virtual memory', 'virtual memory', 0, 0, 3, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1204, 728, 312, 76, 'back up', 'back up', 1, 1, 4, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1205, 629, 313, 202, 'Mobile Operating System', 'Mobile Operating System', 1, 0, 3, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1206, 820, 313, 202, 'Database', 'Database', 0, 0, 4, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1207, 627, 313, 202, 'Desktop Operatng System', 'Desktop Operatng System', 0, 1, 1, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1208, 628, 313, 202, 'Programming Language', 'Programming Language', 0, 0, 2, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1209, 906, 314, 39, 'Not assigned', 'Not assigned', 0, 0, 4, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1210, 139, 314, 39, '0', '0', 0, 0, 2, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1211, 138, 314, 39, 'null', 'null', 0, 1, 1, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1212, 140, 314, 39, 'Depends upon the type of variable', 'Depends upon the type of variable', 1, 0, 3, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1213, 141, 315, 40, 'type.', 'type.', 1, 0, 1, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1214, 142, 315, 40, 'object.', 'object.', 0, 0, 2, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1215, 143, 315, 40, 'Both of the above.', 'Both of the above.', 0, 1, 3, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1216, 1055, 316, 283, 'Set the CausesValidation property of the Help button to false.', 'Set the CausesValidation property of the Help button to false.', 1, 0, 3, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1217, 1054, 316, 283, 'Set the CausesValidation property of the text box to true.', 'Set the CausesValidation property of the text box to true.', 0, 1, 2, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1218, 1053, 316, 283, 'Set the CausesValidation property of the text box to false.', 'Set the CausesValidation property of the text box to false.', 0, 0, 1, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1219, 1056, 316, 283, 'Set the CausesValidation property of the Help button to true.', 'Set the CausesValidation property of the Help button to true.', 0, 0, 4, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1220, 1106, 317, 289, '6', '6', 0, 0, 3, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1221, 1104, 317, 289, '5', '5', 0, 0, 1, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1222, 1105, 317, 289, '7', '7', 1, 1, 2, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1223, 1107, 317, 289, '8', '8', 0, 0, 4, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1224, 447, 318, 142, '{1, 2, 3}', '{1, 2, 3}', 0, 0, 1, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1225, 448, 318, 142, '{1, 3, 5, 7, 9}', '{1, 3, 5, 7, 9}', 1, 1, 2, '2019-09-01 23:44:16', '2019-09-01 23:54:17'),
(1226, 930, 318, 142, '{1, 5, 7, 9, 11}', '{1, 5, 7, 9, 11}', 0, 0, 4, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1227, 449, 318, 142, '{1, 2, 5, 9}', '{1, 2, 5, 9}', 0, 0, 3, '2019-09-01 23:44:16', '2019-09-01 23:54:16'),
(1228, 433, 319, 137, 'Maintain the same return type and arguments as the parent class, but implement it differently', 'Maintain the same return type and arguments as the parent class, but implement it differently', 1, 0, 2, '2019-09-01 23:44:16', '2019-09-01 23:54:17'),
(1229, 432, 319, 137, 'Override the parent class methods but maintain the implementation', 'Override the parent class methods but maintain the implementation', 0, 0, 1, '2019-09-01 23:44:16', '2019-09-01 23:54:17'),
(1230, 434, 319, 137, 'Have different return types and arguments than the parent class', 'Have different return types and arguments than the parent class', 0, 1, 3, '2019-09-01 23:44:16', '2019-09-01 23:54:17'),
(1231, 1013, 319, 137, 'Are Virtual', 'Are Virtual', 0, 0, 4, '2019-09-01 23:44:16', '2019-09-01 23:54:17'),
(1232, 283, 320, 87, 'decode, execute, store and fetch', 'decode, execute, store and fetch', 0, 0, 2, '2019-09-01 23:44:16', '2019-09-01 23:54:17'),
(1233, 282, 320, 87, 'fetch, execute, store and decode', 'fetch, execute, store and decode', 0, 1, 1, '2019-09-01 23:44:16', '2019-09-01 23:54:17'),
(1234, 715, 320, 87, 'fetch, decode, execute and store', 'fetch, decode, execute and store', 1, 0, 4, '2019-09-01 23:44:16', '2019-09-01 23:54:17'),
(1235, 284, 320, 87, 'decode, fetch, store and execute', 'decode, fetch, store and execute', 0, 0, 3, '2019-09-01 23:44:16', '2019-09-01 23:54:17'),
(1236, 378, 321, 119, 'forEach loop', 'forEach loop', 0, 1, 1, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1237, 1002, 321, 119, 'for loop', 'for loop', 1, 0, 4, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1238, 380, 321, 119, 'while', 'while', 0, 0, 3, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1239, 379, 321, 119, 'do while', 'do while', 0, 0, 2, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1240, 1088, 322, 285, '4 π <sup>2</sup>', '4 π <sup>2</sup>', 0, 0, 1, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1241, 1089, 322, 285, '2 π', '2 π', 0, 1, 2, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1242, 1090, 322, 285, '4 π', '4 π', 0, 0, 3, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1243, 1091, 322, 285, 'π', 'π', 1, 0, 4, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1244, 268, 323, 82, '-9', '-9', 1, 0, 2, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1245, 267, 323, 82, '-23', '-23', 0, 1, 1, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1246, 269, 323, 82, '-7', '-7', 0, 0, 3, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1247, 722, 323, 82, '22', '22', 0, 0, 4, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1248, 206, 324, 61, 'heap space and stack space', 'heap space and stack space', 0, 0, 3, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1249, 920, 324, 61, 'first generation memory', 'first generation memory', 0, 1, 4, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1250, 204, 324, 61, 'heap space', 'heap space', 1, 0, 1, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1251, 205, 324, 61, 'stack space', 'stack space', 0, 0, 2, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1252, 714, 325, 225, '135', '135', 0, 0, 4, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1253, 707, 325, 225, '44', '44', 0, 0, 3, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1254, 705, 325, 225, '531', '531', 0, 1, 1, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1255, 706, 325, 225, '127', '127', 1, 0, 2, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1256, 148, 326, 42, 'Boolean', 'Boolean', 1, 1, 2, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1257, 907, 326, 42, 'private', 'private', 0, 0, 4, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1258, 147, 326, 42, 'static', 'static', 0, 0, 1, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1259, 149, 326, 42, 'void', 'void', 0, 0, 3, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1260, 393, 327, 124, 'Reference type', 'Reference type', 1, 0, 1, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1261, 1007, 327, 124, 'Explicit Types', 'Explicit Types', 0, 0, 4, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1262, 394, 327, 124, 'Value types', 'Value types', 0, 1, 2, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1263, 395, 327, 124, 'Data Type', 'Data Type', 0, 0, 3, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1264, 825, 328, 207, 'Application data bridge', 'Application data bridge', 0, 0, 4, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1265, 644, 328, 207, 'Android data bridge', 'Android data bridge', 0, 1, 3, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1266, 642, 328, 207, 'Android Debug Bridge', 'Android Debug Bridge', 1, 0, 1, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1267, 643, 328, 207, 'Application Debug Bridge', 'Application Debug Bridge', 0, 0, 2, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1268, 1036, 329, 278, 'Message1\nMessage3\nMessage2\nMessage4', 'Message1<br />\nMessage3<br />\nMessage2<br />\nMessage4', 0, 0, 4, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1269, 1035, 329, 278, 'Message1\nMessage3\nMessage4', 'Message1<br />\nMessage3<br />\nMessage4', 1, 0, 3, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1270, 1034, 329, 278, 'Message1\nMessage2\nMessage3\nMessage4', 'Message1<br />\nMessage2<br />\nMessage3<br />\nMessage4', 0, 1, 2, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1271, 1033, 329, 278, 'Message1\nMessage4', 'Message1<br />\nMessage4', 0, 0, 1, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1272, 509, 330, 162, 'n( A U B U C)=90', 'n( A U B U C)=90', 0, 0, 3, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1273, 950, 330, 162, 'All of the mentioned', 'All of the mentioned', 1, 0, 4, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1274, 507, 330, 162, 'n(A U B)=0', 'n(A U B)=0', 0, 1, 1, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1275, 508, 330, 162, 'n( B U C)=0', 'n( B U C)=0', 0, 0, 2, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1276, 307, 331, 95, 'You cannot find the square root of a negative number', 'You cannot find the square root of a negative number', 0, 1, 2, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1277, 308, 331, 95, '-12', '-12', 0, 0, 3, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1278, 1064, 331, 95, '-12i', '-12i', 0, 0, 4, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1279, 306, 331, 95, '12i', '12i', 1, 0, 1, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1280, 948, 332, 160, 'B', 'B', 0, 0, 4, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1281, 502, 332, 160, 'A U B -B', 'A U B -B', 1, 0, 2, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1282, 501, 332, 160, 'A‘ (Complement of A)', 'A‘ (Complement of A)', 0, 1, 1, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1283, 503, 332, 160, 'A ∩ B', 'A ∩ B', 0, 0, 3, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1284, 879, 333, 252, 'None of the above', 'None of the above', 0, 0, 4, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1285, 877, 333, 252, 'A bean class can be passed from one activity to another.', 'A bean class can be passed from one activity to another.', 0, 0, 2, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1286, 878, 333, 252, 'A mandatory class in android', 'A mandatory class in android', 0, 1, 3, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1287, 876, 333, 252, 'A class used to hold states and objects', 'A class used to hold states and objects', 1, 0, 1, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1288, 343, 334, 107, '48', '48', 0, 0, 2, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1289, 344, 334, 107, '-12', '-12', 0, 0, 3, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1290, 342, 334, 107, '11', '11', 0, 1, 1, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1291, 1076, 334, 107, '22', '22', 1, 0, 4, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1292, 118, 335, 32, 'as', 'as', 0, 0, 2, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1293, 900, 335, 32, 'All of the choices', 'All of the choices', 1, 1, 4, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1294, 119, 335, 32, 'foreach', 'foreach', 0, 0, 3, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1295, 117, 335, 32, 'abstract', 'abstract', 0, 0, 1, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1296, 633, 336, 204, 'Multitasking', 'Multitasking', 0, 0, 1, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1297, 634, 336, 204, 'Bluetooth', 'Bluetooth', 0, 0, 2, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1298, 635, 336, 204, 'Video calling', 'Video calling', 0, 1, 3, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1299, 822, 336, 204, 'All of the choices', 'All of the choices', 1, 0, 4, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1300, 931, 337, 143, 'Three', 'Three', 0, 0, 4, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1301, 450, 337, 143, 'One', 'One', 1, 0, 1, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1302, 451, 337, 143, 'Two', 'Two', 0, 0, 2, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1303, 452, 337, 143, 'Zero', 'Zero', 0, 1, 3, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1304, 468, 338, 149, '{1, 2, 6, 1}', '{1, 2, 6, 1}', 0, 0, 1, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1305, 470, 338, 149, '{1, 2, 1, 2}', '{1, 2, 1, 2}', 0, 1, 3, '2019-09-01 23:44:17', '2019-09-01 23:54:17');
INSERT INTO `answer_sheet_test_question_choices` (`id`, `choice_id`, `answer_sheet_test_question_id`, `test_question_id`, `body`, `body_html`, `is_correct`, `is_selected`, `pos_order`, `created_at`, `updated_at`) VALUES
(1306, 469, 338, 149, '{1, 2, 5, 6}', '{1, 2, 5, 6}', 1, 0, 2, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1307, 937, 338, 149, '{1, 5, 6, 3}', '{1, 5, 6, 3}', 0, 0, 4, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1308, 371, 339, 116, 'neither odd nor even', 'neither odd nor even', 0, 0, 3, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1309, 369, 339, 116, 'an odd function', 'an odd function', 0, 1, 1, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1310, 370, 339, 116, 'an even function', 'an even function', 1, 0, 2, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1311, 1085, 339, 116, 'even and odd', 'even and odd', 0, 0, 4, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1312, 852, 340, 246, 'res/', 'res/', 0, 0, 1, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1313, 853, 340, 246, 'assets/', 'assets/', 0, 0, 2, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1314, 855, 340, 246, 'bin/', 'bin/', 0, 0, 4, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1315, 854, 340, 246, 'src/', 'src/', 1, 1, 3, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1316, 453, 341, 144, '10', '10', 0, 0, 1, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1317, 454, 341, 144, '5', '5', 1, 0, 2, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1318, 455, 341, 144, '3', '3', 0, 0, 3, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1319, 932, 341, 144, '20', '20', 0, 1, 4, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1320, 403, 342, 127, 'Textbox control', 'Textbox control', 0, 0, 2, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1321, 404, 342, 127, 'Button control', 'Button control', 1, 0, 3, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1322, 402, 342, 127, 'Radio Button', 'Radio Button', 0, 1, 1, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1323, 667, 343, 215, '2.3 (Gingerbread)', '2.3 (Gingerbread)', 1, 1, 2, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1324, 833, 343, 215, '2.2 (Froyo)', '2.2 (Froyo)', 0, 0, 4, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1325, 666, 343, 215, '3.0 (Honeycomb)', '3.0 (Honeycomb)', 0, 0, 1, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1326, 668, 343, 215, '2.6', '2.6', 0, 0, 3, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1327, 895, 344, 256, 'Cursor is used to store data permanently.', 'Cursor is used to store data permanently.', 0, 0, 4, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1328, 894, 344, 256, 'A & B', 'A & B', 1, 1, 3, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1329, 893, 344, 256, 'Cursor is used to store the temporary result.', 'Cursor is used to store the temporary result.', 0, 0, 2, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1330, 892, 344, 256, 'Content values are key pair values, which are updated or inserted in the database', 'Content values are key pair values, which are updated or inserted in the database', 0, 0, 1, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1331, 254, 345, 77, 'run time error', 'run time error', 0, 0, 3, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1332, 253, 345, 77, 'syntax error', 'syntax error', 0, 0, 2, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1333, 727, 345, 77, 'linker error', 'linker error', 0, 1, 4, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1334, 252, 345, 77, 'logic error', 'logic error', 1, 0, 1, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1335, 1073, 346, 104, '(x+5)<sup>2</sup> -16', '(x+5)<sup>2</sup> -16', 0, 0, 4, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1336, 333, 346, 104, '(x-7)<sup>2</sup> +8', '(x-7)<sup>2</sup> +8', 0, 0, 1, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1337, 335, 346, 104, '(x+7)<sup>2</sup> -8', '(x+7)<sup>2</sup> -8', 0, 1, 3, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1338, 334, 346, 104, '(x+5)<sup>2</sup> +16', '(x+5)<sup>2</sup> +16', 1, 0, 2, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1339, 400, 347, 126, 'ListBox control', 'ListBox control', 1, 0, 2, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1340, 399, 347, 126, 'CheckListBox control', 'CheckListBox control', 0, 1, 1, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1341, 401, 347, 126, 'TextBox control', 'TextBox control', 0, 0, 3, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1342, 175, 348, 51, '8', '8', 0, 0, 2, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1343, 174, 348, 51, '9', '9', 0, 0, 1, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1344, 176, 348, 51, 'Compilation error', 'Compilation error', 1, 1, 3, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1345, 911, 348, 51, 'Runtime error', 'Runtime error', 0, 0, 4, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1346, 227, 349, 68, '[[#img25]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/rDh656ehodyPQmn7CxxjGK2H29sx2bh6LDz9INfN.png\" width=\"150\" height=\"150\" />', 0, 0, 3, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1347, 679, 349, 68, '[[#img26]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/tBuCNpani0PgWIFN01ztVOAj4FS4CBDAiTW9J8lB.png\" width=\"150\" height=\"150\" />', 0, 0, 4, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1348, 225, 349, 68, '[[#img23]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/IyLDJJaUUQ0aIZOMyEjh4JO72W4HpXtPj2CfMKZL.png\" width=\"150\" height=\"150\" />', 1, 1, 1, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1349, 226, 349, 68, '[[#img24]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/nVLwXww7AT2RBfzhH1tPQMxdLPF1iWuunHzErZRh.png\" width=\"150\" height=\"150\" />', 0, 0, 2, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1350, 1023, 350, 275, 'Several catch blocks within one try block, arranged starting with the most specific exception and ending with Exception.', 'Several catch blocks within one try block, arranged starting with the most specific exception and ending with Exception.', 1, 0, 3, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1351, 1024, 350, 275, 'The catch blocks should be used only when a finally block is not used.', 'The catch blocks should be used only when a finally block is not used.', 0, 0, 4, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1352, 1022, 350, 275, 'Several catch blocks for a try block, arranged in order starting with Exception and ending with the most specific exception.', 'Several catch blocks for a try block, arranged in order starting with Exception and ending with the most specific exception.', 0, 1, 2, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1353, 1021, 350, 275, 'Only one catch block for each try block.', 'Only one catch block for each try block.', 0, 0, 1, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1354, 457, 351, 145, '{(1, 1), (2, 2), (a, a), (b, b)}', '{(1, 1), (2, 2), (a, a), (b, b)}', 0, 0, 2, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1355, 458, 351, 145, '{(1, a), (2, a), (1, b), (2, b)}', '{(1, a), (2, a), (1, b), (2, b)}', 1, 0, 3, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1356, 933, 351, 145, '{(1, 1), (a, a), (2, a), (1, b)}', '{(1, 1), (a, a), (2, a), (1, b)}', 0, 1, 4, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1357, 456, 351, 145, '{(1, a), (1, b), (2, a), (b, b)}', '{(1, a), (1, b), (2, a), (b, b)}', 0, 0, 1, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1358, 431, 352, 136, 'instantiates button control', 'instantiates button control', 0, 0, 3, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1359, 1012, 352, 136, 'a and c', 'a and c', 1, 0, 4, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1360, 429, 352, 136, 'creates a button control', 'creates a button control', 0, 0, 1, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1361, 430, 352, 136, 'initializes a button control', 'initializes a button control', 0, 1, 2, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1362, 179, 353, 52, '400', '400', 0, 0, 3, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1363, 177, 353, 52, '12', '12', 0, 1, 1, '2019-09-01 23:44:17', '2019-09-01 23:54:17'),
(1364, 912, 353, 52, '100', '100', 0, 0, 4, '2019-09-01 23:44:18', '2019-09-01 23:54:17'),
(1365, 178, 353, 52, '200', '200', 1, 0, 2, '2019-09-01 23:44:18', '2019-09-01 23:54:17'),
(1366, 630, 354, 203, 'MP4', 'MP4', 0, 0, 1, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1367, 631, 354, 203, 'MPEG', 'MPEG', 0, 0, 2, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1368, 632, 354, 203, 'AVI', 'AVI', 1, 1, 3, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1369, 821, 354, 203, 'MIDI', 'MIDI', 0, 0, 4, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1370, 137, 355, 38, 'A and B', 'A and B', 1, 0, 3, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1371, 135, 355, 38, 'A try block identifies a block of code for which particular exceptions is activated.', 'A try block identifies a block of code for which particular exceptions is activated.', 0, 1, 1, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1372, 136, 355, 38, 'It is followed by one or more catch blocks.', 'It is followed by one or more catch blocks.', 0, 0, 2, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1373, 200, 356, 59, '6', '6', 0, 1, 3, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1374, 918, 356, 59, '1', '1', 1, 0, 4, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1375, 199, 356, 59, '0', '0', 0, 0, 2, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1376, 198, 356, 59, '3', '3', 0, 0, 1, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1377, 463, 357, 147, 'Finite', 'Finite', 0, 0, 2, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1378, 462, 357, 147, 'Infinite', 'Infinite', 1, 0, 1, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1379, 935, 357, 147, 'Empty', 'Empty', 0, 1, 4, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1380, 464, 357, 147, 'Subset', 'Subset', 0, 0, 3, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1381, 700, 358, 223, '100001', '100001', 0, 0, 2, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1382, 718, 358, 223, '100100', '100100', 0, 0, 4, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1383, 699, 358, 223, '110011', '110011', 0, 0, 1, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1384, 701, 358, 223, '110100', '110100', 1, 1, 3, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1385, 687, 359, 220, 'digital camera', 'digital camera', 0, 0, 1, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1386, 689, 359, 220, 'MICR', 'MICR', 0, 0, 3, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1387, 709, 359, 220, 'RFID readers', 'RFID readers', 0, 0, 4, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1388, 688, 359, 220, 'scanner', 'scanner', 1, 1, 2, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1389, 901, 360, 33, 'ToInt32', 'ToInt32', 0, 0, 4, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1390, 122, 360, 33, 'ToInt16', 'ToInt16', 0, 0, 3, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1391, 120, 360, 33, 'ToDecimal', 'ToDecimal', 0, 1, 1, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1392, 121, 360, 33, 'ToDouble', 'ToDouble', 1, 0, 2, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1393, 362, 361, 113, '2!', '2!', 0, 1, 3, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1394, 361, 361, 113, '3!', '3!', 1, 0, 2, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1395, 1082, 361, 113, '3! * 2!', '3! * 2!', 0, 0, 4, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1396, 360, 361, 113, '5!', '5!', 0, 0, 1, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1397, 166, 362, 48, 'JRE is an application development framework.', 'JRE is an application development framework.', 0, 0, 2, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1398, 165, 362, 48, 'JRE is a java based GUI application.', 'JRE is a java based GUI application.', 0, 1, 1, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1399, 167, 362, 48, 'JRE is an implementation of the Java Virtual Machine which executes Java programs.', 'JRE is an implementation of the Java Virtual Machine which executes Java programs.', 1, 0, 3, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1400, 193, 363, 57, 'Column', 'Column', 0, 0, 2, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1401, 192, 363, 57, 'Row', 'Row', 1, 1, 1, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1402, 194, 363, 57, 'Both Row and Column', 'Both Row and Column', 0, 0, 3, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1403, 638, 364, 205, 'WiFi driver', 'WiFi driver', 1, 1, 3, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1404, 636, 364, 205, 'Device Driver', 'Device Driver', 0, 0, 1, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1405, 823, 364, 205, 'Bluetooth driver', 'Bluetooth driver', 0, 0, 4, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1406, 637, 364, 205, 'Video Driver', 'Video Driver', 0, 0, 2, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1407, 221, 365, 66, '199', '199', 0, 0, 3, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1408, 676, 365, 66, '212', '212', 0, 0, 4, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1409, 219, 365, 66, '121', '121', 0, 0, 1, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1410, 220, 365, 66, '163', '163', 1, 1, 2, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1411, 443, 366, 140, 'Variable', 'Variable', 1, 0, 3, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1412, 441, 366, 140, 'Constant', 'Constant', 0, 0, 1, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1413, 1016, 366, 140, 'Object', 'Object', 0, 1, 4, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1414, 442, 366, 140, 'Reference type', 'Reference type', 0, 0, 2, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1415, 363, 367, 114, 'mean = 15 , standard deviation = 6', 'mean = 15 , standard deviation = 6', 0, 0, 1, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1416, 364, 367, 114, 'mean = 10 , standard deviation = 6', 'mean = 10 , standard deviation = 6', 0, 1, 2, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1417, 365, 367, 114, 'mean = 15 , standard deviation = 1', 'mean = 15 , standard deviation = 1', 1, 0, 3, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1418, 1083, 367, 114, 'mean = 10 , standard deviation = 1', 'mean = 10 , standard deviation = 1', 0, 0, 4, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1419, 255, 368, 78, 'ASCII', 'ASCII', 0, 0, 1, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1420, 257, 368, 78, 'EBCDIC', 'EBCDIC', 0, 0, 3, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1421, 726, 368, 78, 'ANSI', 'ANSI', 0, 0, 4, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1422, 256, 368, 78, 'Unicode', 'Unicode', 1, 1, 2, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1423, 887, 369, 254, 'None of the above', 'None of the above', 0, 0, 4, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1424, 884, 369, 254, 'httprequest(get/post) and returns response from the server', 'httprequest(get/post) and returns response from the server', 1, 1, 1, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1425, 886, 369, 254, 'Authentication management', 'Authentication management', 0, 0, 3, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1426, 885, 369, 254, 'Cookies management', 'Cookies management', 0, 0, 2, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1427, 259, 370, 79, 'ALU', 'ALU', 0, 0, 2, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1428, 725, 370, 79, 'Primary Storage', 'Primary Storage', 1, 0, 4, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1429, 260, 370, 79, 'Registers', 'Registers', 0, 1, 3, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1430, 258, 370, 79, 'Control unit', 'Control unit', 0, 0, 1, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1431, 466, 371, 148, '6', '6', 0, 0, 2, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1432, 936, 371, 148, '9', '9', 0, 1, 4, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1433, 465, 371, 148, '8', '8', 1, 0, 1, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1434, 467, 371, 148, '7', '7', 0, 0, 3, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1435, 356, 372, 111, '(π , 3 π / 2)', '(π , 3 π / 2)', 0, 0, 3, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1436, 355, 372, 111, '(π/2 , π)', '(π/2 , π)', 1, 0, 2, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1437, 354, 372, 111, '(0 , π/2)', '(0 , π/2)', 0, 1, 1, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1438, 1080, 372, 111, '(3 π / 2 , 2 π)', '(3 π / 2 , 2 π)', 0, 0, 4, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1439, 124, 373, 34, 'typeof', 'typeof', 0, 0, 2, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1440, 902, 373, 34, '*', '*', 0, 0, 4, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1441, 125, 373, 34, '&</a>', '&</a>', 0, 0, 3, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1442, 123, 373, 34, 'sizeof', 'sizeof', 1, 1, 1, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1443, 436, 374, 138, 'Catches', 'Catches', 0, 1, 2, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1444, 1014, 374, 138, 'a and b', 'a and b', 0, 0, 4, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1445, 435, 374, 138, 'Trys', 'Trys', 0, 0, 1, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1446, 437, 374, 138, 'Throws', 'Throws', 1, 0, 3, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1447, 299, 375, 92, 'x < -1', 'x < -1', 1, 0, 3, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1448, 297, 375, 92, 'x < 6', 'x < 6', 0, 1, 1, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1449, 298, 375, 92, 'x > 1', 'x > 1', 0, 0, 2, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1450, 1061, 375, 92, 'x > 6', 'x > 6', 0, 0, 4, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1451, 300, 376, 93, 'x ≤ 5', 'x ≤ 5', 0, 0, 1, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1452, 302, 376, 93, 'x ≥ -5', 'x ≥ -5', 0, 0, 3, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1453, 301, 376, 93, 'x ≥ 5', 'x ≥ 5', 1, 0, 2, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1454, 1062, 376, 93, 'x ≤ -5', 'x ≤ -5', 0, 1, 4, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1455, 3, 377, 1, 'x = 2', 'x = 2', 0, 0, 3, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1456, 2, 377, 1, 'x = 4', 'x = 4', 0, 1, 2, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1457, 1, 377, 1, 'x = 1', 'x = 1', 1, 0, 1, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1458, 146, 378, 41, 'public static void main(String[] args)', 'public static void main(String[] args)', 1, 1, 3, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1459, 144, 378, 41, 'public static int main(String[] args)', 'public static int main(String[] args)', 0, 0, 1, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1460, 145, 378, 41, 'public int main(String[] args)', 'public int main(String[] args)', 0, 0, 2, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1461, 1009, 379, 132, 'While', 'While', 0, 0, 4, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1462, 417, 379, 132, 'If', 'If', 0, 0, 1, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1463, 419, 379, 132, 'For', 'For', 0, 1, 3, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1464, 418, 379, 132, 'Switch', 'Switch', 1, 0, 2, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1465, 472, 380, 150, '{5, 6}', '{5, 6}', 0, 0, 2, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1466, 938, 380, 150, '{1, 6}', '{1, 6}', 0, 0, 4, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1467, 471, 380, 150, '{1, 2}', '{1, 2}', 1, 0, 1, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1468, 473, 380, 150, '{2, 5}', '{2, 5}', 0, 1, 3, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1469, 830, 381, 212, 'No company', 'No company', 0, 0, 4, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1470, 657, 381, 212, 'Apple', 'Apple', 0, 0, 1, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1471, 659, 381, 212, 'Nokia', 'Nokia', 0, 0, 3, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1472, 658, 381, 212, 'Google', 'Google', 1, 1, 2, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1473, 231, 382, 70, '[[#img28]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/jkL1TWHhQQMAtCTbSz6HtJyZn8zhXmtgMQYX3Zpo.png\" width=\"150\" height=\"150\" />', 1, 1, 1, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1474, 680, 382, 70, '[[#img31]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/VNrzOvOE3LpeuWi9ciBQDVlGrXxObvbfnI3kfNS4.png\" width=\"150\" height=\"150\" />', 0, 0, 4, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1475, 232, 382, 70, '[[#img29]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/Cf9qY75IYjLpUVFWsICWK07cAwLtqRPDIO6JjLqT.png\" width=\"150\" height=\"150\" />', 0, 0, 2, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1476, 233, 382, 70, '[[#img30]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/5CGn3NoMP2AFTNnuWdi3jGe97XfkU7ydkF3PldTA.png\" width=\"150\" height=\"150\" />', 0, 0, 3, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1477, 237, 383, 72, 'Operating system software', 'Operating system software', 0, 0, 1, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1478, 238, 383, 72, 'Utility software', 'Utility software', 1, 0, 2, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1479, 732, 383, 72, 'Disk optimization software', 'Disk optimization software', 0, 1, 4, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1480, 239, 383, 72, 'Anti-virus software', 'Anti-virus software', 0, 0, 3, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1481, 115, 384, 31, '20', '20', 1, 1, 2, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1482, 114, 384, 31, '10', '10', 0, 0, 1, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1483, 116, 384, 31, '12', '12', 0, 0, 3, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1484, 842, 385, 243, 'manifest.XML', 'manifest.XML', 0, 0, 3, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1485, 840, 385, 243, 'R.style', 'R.style', 1, 1, 1, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1486, 843, 385, 243, 'application', 'application', 0, 0, 4, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1487, 841, 385, 243, 'X.style', 'X.style', 0, 0, 2, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1488, 195, 386, 58, '0 2 4 6 8', '0 2 4 6 8', 1, 1, 1, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1489, 196, 386, 58, '1 3 5 7 9', '1 3 5 7 9', 0, 0, 2, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1490, 917, 386, 58, '1 2 3 4 5 6 7 8 9 10', '1 2 3 4 5 6 7 8 9 10', 0, 0, 4, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1491, 197, 386, 58, '0 1 2 3 4 5 6 7 8 9', '0 1 2 3 4 5 6 7 8 9', 0, 0, 3, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1492, 171, 387, 50, 'Thread returns to the ready state.', 'Thread returns to the ready state.', 1, 1, 1, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1493, 172, 387, 50, 'Thread returns to the waiting state.', 'Thread returns to the waiting state.', 0, 0, 2, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1494, 173, 387, 50, 'Thread starts running.', 'Thread starts running.', 0, 0, 3, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1495, 1032, 388, 277, 'The code will compile without an error.', 'The code will compile without an error.', 1, 0, 4, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1496, 1031, 388, 277, 'The code will generate an error because the finally block is placed immediately after the try block.', 'The code will generate an error because the finally block is placed immediately after the try block.', 0, 1, 3, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1497, 1030, 388, 277, 'The code will generate an error because it lacks a throw statement.', 'The code will generate an error because it lacks a throw statement.', 0, 0, 2, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1498, 1029, 388, 277, 'The code will generate an error because it lacks a catch block.', 'The code will generate an error because it lacks a catch block.', 0, 0, 1, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1499, 358, 389, 112, '15', '15', 0, 1, 2, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1500, 1081, 389, 112, '8', '8', 0, 0, 4, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1501, 359, 389, 112, '2100', '2100', 1, 0, 3, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1502, 357, 389, 112, '10', '10', 0, 0, 1, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1503, 293, 390, 90, 'kilobyte', 'kilobyte', 0, 0, 3, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1504, 711, 390, 90, 'megabyte', 'megabyte', 0, 0, 4, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1505, 292, 390, 90, 'byte', 'byte', 1, 0, 2, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1506, 291, 390, 90, 'bit', 'bit', 0, 1, 1, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1507, 490, 391, 156, '8, 12', '8, 12', 1, 0, 2, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1508, 944, 391, 156, 'None of the choices', 'None of the choices', 0, 1, 4, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1509, 489, 391, 156, '4, 8', '4, 8', 0, 0, 1, '2019-09-01 23:44:18', '2019-09-01 23:54:18'),
(1510, 491, 391, 156, '4, 12', '4, 12', 0, 0, 3, '2019-09-01 23:44:19', '2019-09-01 23:54:18'),
(1511, 832, 392, 214, 'Hybrid kernel', 'Hybrid kernel', 0, 0, 4, '2019-09-01 23:44:19', '2019-09-01 23:54:19'),
(1512, 664, 392, 214, 'Windows kernel', 'Windows kernel', 0, 0, 2, '2019-09-01 23:44:19', '2019-09-01 23:54:19'),
(1513, 665, 392, 214, 'MAC kernel', 'MAC kernel', 0, 0, 3, '2019-09-01 23:44:19', '2019-09-01 23:54:19'),
(1514, 663, 392, 214, 'Linux kernel', 'Linux kernel', 1, 1, 1, '2019-09-01 23:44:19', '2019-09-01 23:54:19'),
(1515, 312, 393, 97, 'i - 5', 'i - 5', 0, 0, 1, '2019-09-01 23:44:19', '2019-09-01 23:54:19'),
(1516, 1066, 393, 97, '3i - 10', '3i - 10', 0, 0, 4, '2019-09-01 23:44:19', '2019-09-01 23:54:19'),
(1517, 313, 393, 97, '7 - 3i', '7 - 3i', 0, 1, 2, '2019-09-01 23:44:19', '2019-09-01 23:54:19'),
(1518, 314, 393, 97, 'i - 12', 'i - 12', 1, 0, 3, '2019-09-01 23:44:19', '2019-09-01 23:54:19'),
(1519, 988, 394, 270, '45', '45', 0, 0, 2, '2019-09-01 23:44:19', '2019-09-01 23:54:19'),
(1520, 989, 394, 270, '25', '25', 0, 0, 3, '2019-09-01 23:44:19', '2019-09-01 23:54:19'),
(1521, 987, 394, 270, '35', '35', 1, 1, 1, '2019-09-01 23:44:19', '2019-09-01 23:54:19'),
(1522, 414, 395, 131, 'Get()', 'Get()', 0, 0, 1, '2019-09-01 23:44:19', '2019-09-01 23:54:19'),
(1523, 416, 395, 131, 'Show()', 'Show()', 1, 0, 3, '2019-09-01 23:44:19', '2019-09-01 23:54:19'),
(1524, 415, 395, 131, 'Enable()', 'Enable()', 0, 1, 2, '2019-09-01 23:44:19', '2019-09-01 23:54:19'),
(1525, 476, 396, 151, 'Intersection', 'Intersection', 1, 1, 3, '2019-09-01 23:44:19', '2019-09-01 23:54:19'),
(1526, 939, 396, 151, 'Complement', 'Complement', 0, 0, 4, '2019-09-01 23:44:19', '2019-09-01 23:54:19'),
(1527, 474, 396, 151, 'Union', 'Union', 0, 0, 1, '2019-09-01 23:44:19', '2019-09-01 23:54:19'),
(1528, 475, 396, 151, 'Difference', 'Difference', 0, 0, 2, '2019-09-01 23:44:19', '2019-09-01 23:54:19'),
(1529, 289, 397, 89, 'Virtual memory', 'Virtual memory', 1, 0, 2, '2019-09-01 23:44:19', '2019-09-01 23:54:19'),
(1530, 712, 397, 89, 'None of them', 'None of them', 0, 1, 4, '2019-09-01 23:44:19', '2019-09-01 23:54:19'),
(1531, 290, 397, 89, 'Virtual Machine', 'Virtual Machine', 0, 0, 3, '2019-09-01 23:44:19', '2019-09-01 23:54:19'),
(1532, 288, 397, 89, 'Virtual private network', 'Virtual private network', 0, 0, 1, '2019-09-01 23:44:19', '2019-09-01 23:54:19'),
(1533, 1095, 398, 286, '0', '0', 0, 1, 4, '2019-09-01 23:44:19', '2019-09-01 23:54:19'),
(1534, 1093, 398, 286, '0.478', '0.478', 0, 0, 2, '2019-09-01 23:44:19', '2019-09-01 23:54:19'),
(1535, 1092, 398, 286, '0.057', '0.057', 1, 0, 1, '2019-09-01 23:44:19', '2019-09-01 23:54:19'),
(1536, 1094, 398, 286, '0.001', '0.001', 0, 0, 3, '2019-09-01 23:44:19', '2019-09-01 23:54:19'),
(1537, 387, 399, 122, 'unary operators', 'unary operators', 1, 0, 1, '2019-09-01 23:44:19', '2019-09-01 23:54:19'),
(1538, 389, 399, 122, 'Logical operators', 'Logical operators', 0, 1, 3, '2019-09-01 23:44:19', '2019-09-01 23:54:19'),
(1539, 1005, 399, 122, 'Assignment opeartors', 'Assignment opeartors', 0, 0, 4, '2019-09-01 23:44:19', '2019-09-01 23:54:19'),
(1540, 388, 399, 122, 'Binary operators', 'Binary operators', 0, 0, 2, '2019-09-01 23:44:19', '2019-09-01 23:54:19'),
(1541, 862, 400, 248, 'To share the data between applications', 'To share the data between applications', 1, 1, 3, '2019-09-01 23:44:19', '2019-09-01 23:54:19'),
(1542, 861, 400, 248, 'To store the data in a database', 'To store the data in a database', 0, 0, 2, '2019-09-01 23:44:19', '2019-09-01 23:54:19'),
(1543, 863, 400, 248, 'none of the choices', 'none of the choices', 0, 0, 4, '2019-09-01 23:44:19', '2019-09-01 23:54:19'),
(1544, 860, 400, 248, 'To send the data from an application to another application', 'To send the data from an application to another application', 0, 0, 1, '2019-09-01 23:44:19', '2019-09-01 23:54:19'),
(1545, 257, 401, 78, 'EBCDIC', 'EBCDIC', 0, 0, 3, '2019-09-02 02:20:02', '2019-09-02 02:25:15'),
(1546, 255, 401, 78, 'ASCII', 'ASCII', 0, 0, 1, '2019-09-02 02:20:02', '2019-09-02 02:25:15'),
(1547, 726, 401, 78, 'ANSI', 'ANSI', 0, 1, 4, '2019-09-02 02:20:02', '2019-09-02 02:25:15'),
(1548, 256, 401, 78, 'Unicode', 'Unicode', 1, 0, 2, '2019-09-02 02:20:02', '2019-09-02 02:25:15'),
(1549, 627, 402, 202, 'Desktop Operatng System', 'Desktop Operatng System', 0, 0, 1, '2019-09-02 02:20:02', '2019-09-02 02:25:15'),
(1550, 629, 402, 202, 'Mobile Operating System', 'Mobile Operating System', 1, 1, 3, '2019-09-02 02:20:02', '2019-09-02 02:25:15'),
(1551, 820, 402, 202, 'Database', 'Database', 0, 0, 4, '2019-09-02 02:20:02', '2019-09-02 02:25:15'),
(1552, 628, 402, 202, 'Programming Language', 'Programming Language', 0, 0, 2, '2019-09-02 02:20:02', '2019-09-02 02:25:15'),
(1553, 878, 403, 252, 'A mandatory class in android', 'A mandatory class in android', 0, 0, 3, '2019-09-02 02:20:02', '2019-09-02 02:25:15'),
(1554, 876, 403, 252, 'A class used to hold states and objects', 'A class used to hold states and objects', 1, 1, 1, '2019-09-02 02:20:02', '2019-09-02 02:25:15'),
(1555, 879, 403, 252, 'None of the above', 'None of the above', 0, 0, 4, '2019-09-02 02:20:02', '2019-09-02 02:25:15'),
(1556, 877, 403, 252, 'A bean class can be passed from one activity to another.', 'A bean class can be passed from one activity to another.', 0, 0, 2, '2019-09-02 02:20:02', '2019-09-02 02:25:15'),
(1557, 140, 404, 39, 'Depends upon the type of variable', 'Depends upon the type of variable', 1, 1, 3, '2019-09-02 02:20:02', '2019-09-02 02:25:15'),
(1558, 139, 404, 39, '0', '0', 0, 0, 2, '2019-09-02 02:20:02', '2019-09-02 02:25:15'),
(1559, 906, 404, 39, 'Not assigned', 'Not assigned', 0, 0, 4, '2019-09-02 02:20:02', '2019-09-02 02:25:15'),
(1560, 138, 404, 39, 'null', 'null', 0, 0, 1, '2019-09-02 02:20:02', '2019-09-02 02:25:15'),
(1561, 268, 405, 82, '-9', '-9', 1, 0, 2, '2019-09-02 02:20:02', '2019-09-02 02:25:15'),
(1562, 267, 405, 82, '-23', '-23', 0, 1, 1, '2019-09-02 02:20:02', '2019-09-02 02:25:15'),
(1563, 269, 405, 82, '-7', '-7', 0, 0, 3, '2019-09-02 02:20:02', '2019-09-02 02:25:15'),
(1564, 722, 405, 82, '22', '22', 0, 0, 4, '2019-09-02 02:20:02', '2019-09-02 02:25:15'),
(1565, 727, 406, 77, 'linker error', 'linker error', 0, 0, 4, '2019-09-02 02:20:02', '2019-09-02 02:25:15'),
(1566, 254, 406, 77, 'run time error', 'run time error', 0, 0, 3, '2019-09-02 02:20:02', '2019-09-02 02:25:15'),
(1567, 253, 406, 77, 'syntax error', 'syntax error', 0, 0, 2, '2019-09-02 02:20:02', '2019-09-02 02:25:15'),
(1568, 252, 406, 77, 'logic error', 'logic error', 1, 1, 1, '2019-09-02 02:20:02', '2019-09-02 02:25:15'),
(1569, 282, 407, 87, 'fetch, execute, store and decode', 'fetch, execute, store and decode', 0, 0, 1, '2019-09-02 02:20:02', '2019-09-02 02:25:15'),
(1570, 284, 407, 87, 'decode, fetch, store and execute', 'decode, fetch, store and execute', 0, 1, 3, '2019-09-02 02:20:02', '2019-09-02 02:25:15'),
(1571, 283, 407, 87, 'decode, execute, store and fetch', 'decode, execute, store and fetch', 0, 0, 2, '2019-09-02 02:20:02', '2019-09-02 02:25:15'),
(1572, 715, 407, 87, 'fetch, decode, execute and store', 'fetch, decode, execute and store', 1, 0, 4, '2019-09-02 02:20:02', '2019-09-02 02:25:15'),
(1573, 380, 408, 119, 'while', 'while', 0, 0, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1574, 378, 408, 119, 'forEach loop', 'forEach loop', 0, 0, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1575, 1002, 408, 119, 'for loop', 'for loop', 1, 1, 4, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1576, 379, 408, 119, 'do while', 'do while', 0, 0, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1577, 143, 409, 40, 'Both of the above.', 'Both of the above.', 0, 0, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1578, 142, 409, 40, 'object.', 'object.', 0, 0, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1579, 141, 409, 40, 'type.', 'type.', 1, 1, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1580, 220, 410, 66, '163', '163', 1, 1, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1581, 221, 410, 66, '199', '199', 0, 0, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1582, 219, 410, 66, '121', '121', 0, 0, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1583, 676, 410, 66, '212', '212', 0, 0, 4, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1584, 433, 411, 137, 'Maintain the same return type and arguments as the parent class, but implement it differently', 'Maintain the same return type and arguments as the parent class, but implement it differently', 1, 1, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1585, 432, 411, 137, 'Override the parent class methods but maintain the implementation', 'Override the parent class methods but maintain the implementation', 0, 0, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1586, 1013, 411, 137, 'Are Virtual', 'Are Virtual', 0, 0, 4, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1587, 434, 411, 137, 'Have different return types and arguments than the parent class', 'Have different return types and arguments than the parent class', 0, 0, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1588, 365, 412, 114, 'mean = 15 , standard deviation = 1', 'mean = 15 , standard deviation = 1', 1, 0, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1589, 1083, 412, 114, 'mean = 10 , standard deviation = 1', 'mean = 10 , standard deviation = 1', 0, 1, 4, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1590, 364, 412, 114, 'mean = 10 , standard deviation = 6', 'mean = 10 , standard deviation = 6', 0, 0, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1591, 363, 412, 114, 'mean = 15 , standard deviation = 6', 'mean = 15 , standard deviation = 6', 0, 0, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1592, 369, 413, 116, 'an odd function', 'an odd function', 0, 0, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1593, 370, 413, 116, 'an even function', 'an even function', 1, 0, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1594, 371, 413, 116, 'neither odd nor even', 'neither odd nor even', 0, 1, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1595, 1085, 413, 116, 'even and odd', 'even and odd', 0, 0, 4, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1596, 361, 414, 113, '3!', '3!', 1, 0, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1597, 360, 414, 113, '5!', '5!', 0, 1, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1598, 362, 414, 113, '2!', '2!', 0, 0, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1599, 1082, 414, 113, '3! * 2!', '3! * 2!', 0, 0, 4, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1600, 931, 415, 143, 'Three', 'Three', 0, 0, 4, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1601, 450, 415, 143, 'One', 'One', 1, 1, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1602, 452, 415, 143, 'Zero', 'Zero', 0, 0, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1603, 451, 415, 143, 'Two', 'Two', 0, 0, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1604, 1092, 416, 286, '0.057', '0.057', 1, 0, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1605, 1095, 416, 286, '0', '0', 0, 1, 4, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1606, 1094, 416, 286, '0.001', '0.001', 0, 0, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1607, 1093, 416, 286, '0.478', '0.478', 0, 0, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1608, 136, 417, 38, 'It is followed by one or more catch blocks.', 'It is followed by one or more catch blocks.', 0, 0, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1609, 135, 417, 38, 'A try block identifies a block of code for which particular exceptions is activated.', 'A try block identifies a block of code for which particular exceptions is activated.', 0, 1, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1610, 137, 417, 38, 'A and B', 'A and B', 1, 0, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1611, 414, 418, 131, 'Get()', 'Get()', 0, 0, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1612, 416, 418, 131, 'Show()', 'Show()', 1, 1, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1613, 415, 418, 131, 'Enable()', 'Enable()', 0, 0, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1614, 663, 419, 214, 'Linux kernel', 'Linux kernel', 1, 1, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1615, 832, 419, 214, 'Hybrid kernel', 'Hybrid kernel', 0, 0, 4, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1616, 664, 419, 214, 'Windows kernel', 'Windows kernel', 0, 0, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1617, 665, 419, 214, 'MAC kernel', 'MAC kernel', 0, 0, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1618, 167, 420, 48, 'JRE is an implementation of the Java Virtual Machine which executes Java programs.', 'JRE is an implementation of the Java Virtual Machine which executes Java programs.', 1, 1, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1619, 166, 420, 48, 'JRE is an application development framework.', 'JRE is an application development framework.', 0, 0, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1620, 165, 420, 48, 'JRE is a java based GUI application.', 'JRE is a java based GUI application.', 0, 0, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1621, 842, 421, 243, 'manifest.XML', 'manifest.XML', 0, 0, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1622, 841, 421, 243, 'X.style', 'X.style', 0, 0, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1623, 840, 421, 243, 'R.style', 'R.style', 1, 1, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1624, 843, 421, 243, 'application', 'application', 0, 0, 4, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1625, 308, 422, 95, '-12', '-12', 0, 0, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1626, 306, 422, 95, '12i', '12i', 1, 1, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1627, 1064, 422, 95, '-12i', '-12i', 0, 0, 4, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1628, 307, 422, 95, 'You cannot find the square root of a negative number', 'You cannot find the square root of a negative number', 0, 0, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1629, 148, 423, 42, 'Boolean', 'Boolean', 1, 0, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1630, 147, 423, 42, 'static', 'static', 0, 0, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1631, 907, 423, 42, 'private', 'private', 0, 1, 4, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1632, 149, 423, 42, 'void', 'void', 0, 0, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1633, 1080, 424, 111, '(3 π / 2 , 2 π)', '(3 π / 2 , 2 π)', 0, 0, 4, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1634, 356, 424, 111, '(π , 3 π / 2)', '(π , 3 π / 2)', 0, 0, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1635, 354, 424, 111, '(0 , π/2)', '(0 , π/2)', 0, 0, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1636, 355, 424, 111, '(π/2 , π)', '(π/2 , π)', 1, 1, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1637, 710, 425, 219, 'Wireless access point', 'Wireless access point', 0, 0, 4, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1638, 684, 425, 219, 'Repeater', 'Repeater', 0, 0, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1639, 685, 425, 219, 'Switch', 'Switch', 0, 1, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1640, 686, 425, 219, 'Modem', 'Modem', 1, 0, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1641, 706, 426, 225, '127', '127', 1, 1, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1642, 714, 426, 225, '135', '135', 0, 0, 4, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1643, 707, 426, 225, '44', '44', 0, 0, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1644, 705, 426, 225, '531', '531', 0, 0, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:15'),
(1645, 145, 427, 41, 'public int main(String[] args)', 'public int main(String[] args)', 0, 0, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1646, 146, 427, 41, 'public static void main(String[] args)', 'public static void main(String[] args)', 1, 1, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1647, 144, 427, 41, 'public static int main(String[] args)', 'public static int main(String[] args)', 0, 0, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1648, 115, 428, 31, '20', '20', 1, 0, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1649, 114, 428, 31, '10', '10', 0, 1, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1650, 116, 428, 31, '12', '12', 0, 0, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1651, 313, 429, 97, '7 - 3i', '7 - 3i', 0, 0, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1652, 1066, 429, 97, '3i - 10', '3i - 10', 0, 0, 4, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1653, 312, 429, 97, 'i - 5', 'i - 5', 0, 0, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1654, 314, 429, 97, 'i - 12', 'i - 12', 1, 1, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1655, 320, 430, 99, '2.322', '2.322', 1, 1, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1656, 319, 430, 99, '1.756', '1.756', 0, 0, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1657, 318, 430, 99, '6.25', '6.25', 0, 0, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1658, 1068, 430, 99, '4.753', '4.753', 0, 0, 4, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1659, 490, 431, 156, '8, 12', '8, 12', 1, 1, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1660, 944, 431, 156, 'None of the choices', 'None of the choices', 0, 0, 4, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1661, 489, 431, 156, '4, 8', '4, 8', 0, 0, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1662, 491, 431, 156, '4, 12', '4, 12', 0, 0, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1663, 171, 432, 50, 'Thread returns to the ready state.', 'Thread returns to the ready state.', 1, 0, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1664, 173, 432, 50, 'Thread starts running.', 'Thread starts running.', 0, 1, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1665, 172, 432, 50, 'Thread returns to the waiting state.', 'Thread returns to the waiting state.', 0, 0, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1666, 1091, 433, 285, 'π', 'π', 1, 1, 4, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1667, 1088, 433, 285, '4 π <sup>2</sup>', '4 π <sup>2</sup>', 0, 0, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1668, 1089, 433, 285, '2 π', '2 π', 0, 0, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1669, 1090, 433, 285, '4 π', '4 π', 0, 0, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1670, 122, 434, 33, 'ToInt16', 'ToInt16', 0, 0, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1671, 121, 434, 33, 'ToDouble', 'ToDouble', 1, 0, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1672, 901, 434, 33, 'ToInt32', 'ToInt32', 0, 1, 4, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1673, 120, 434, 33, 'ToDecimal', 'ToDecimal', 0, 0, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1674, 345, 435, 108, '1 846 000', '1 846 000', 1, 0, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1675, 347, 435, 108, '1 000 000', '1 000 000', 0, 0, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1676, 1077, 435, 108, '1 500 000', '1 500 000', 0, 1, 4, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1677, 346, 435, 108, '1 852 000', '1 852 000', 0, 0, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1678, 448, 436, 142, '{1, 3, 5, 7, 9}', '{1, 3, 5, 7, 9}', 1, 1, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1679, 447, 436, 142, '{1, 2, 3}', '{1, 2, 3}', 0, 0, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1680, 449, 436, 142, '{1, 2, 5, 9}', '{1, 2, 5, 9}', 0, 0, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1681, 930, 436, 142, '{1, 5, 7, 9, 11}', '{1, 5, 7, 9, 11}', 0, 0, 4, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1682, 455, 437, 144, '3', '3', 0, 0, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1683, 453, 437, 144, '10', '10', 0, 0, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1684, 454, 437, 144, '5', '5', 1, 1, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1685, 932, 437, 144, '20', '20', 0, 0, 4, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1686, 179, 438, 52, '400', '400', 0, 0, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1687, 178, 438, 52, '200', '200', 1, 1, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1688, 912, 438, 52, '100', '100', 0, 0, 4, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1689, 177, 438, 52, '12', '12', 0, 0, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1690, 644, 439, 207, 'Android data bridge', 'Android data bridge', 0, 0, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1691, 642, 439, 207, 'Android Debug Bridge', 'Android Debug Bridge', 1, 1, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1692, 643, 439, 207, 'Application Debug Bridge', 'Application Debug Bridge', 0, 0, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1693, 825, 439, 207, 'Application data bridge', 'Application data bridge', 0, 0, 4, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1694, 887, 440, 254, 'None of the above', 'None of the above', 0, 0, 4, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1695, 884, 440, 254, 'httprequest(get/post) and returns response from the server', 'httprequest(get/post) and returns response from the server', 1, 1, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1696, 885, 440, 254, 'Cookies management', 'Cookies management', 0, 0, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1697, 886, 440, 254, 'Authentication management', 'Authentication management', 0, 0, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1698, 853, 441, 246, 'assets/', 'assets/', 0, 0, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1699, 854, 441, 246, 'src/', 'src/', 1, 1, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1700, 855, 441, 246, 'bin/', 'bin/', 0, 0, 4, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1701, 852, 441, 246, 'res/', 'res/', 0, 0, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1702, 462, 442, 147, 'Infinite', 'Infinite', 1, 1, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1703, 464, 442, 147, 'Subset', 'Subset', 0, 0, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1704, 463, 442, 147, 'Finite', 'Finite', 0, 0, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1705, 935, 442, 147, 'Empty', 'Empty', 0, 0, 4, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1706, 509, 443, 162, 'n( A U B U C)=90', 'n( A U B U C)=90', 0, 0, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1707, 950, 443, 162, 'All of the mentioned', 'All of the mentioned', 1, 1, 4, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1708, 508, 443, 162, 'n( B U C)=0', 'n( B U C)=0', 0, 0, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1709, 507, 443, 162, 'n(A U B)=0', 'n(A U B)=0', 0, 0, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1710, 1033, 444, 278, 'Message1\nMessage4', 'Message1<br />\nMessage4', 0, 0, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1711, 1036, 444, 278, 'Message1\nMessage3\nMessage2\nMessage4', 'Message1<br />\nMessage3<br />\nMessage2<br />\nMessage4', 0, 0, 4, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1712, 1035, 444, 278, 'Message1\nMessage3\nMessage4', 'Message1<br />\nMessage3<br />\nMessage4', 1, 1, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1713, 1034, 444, 278, 'Message1\nMessage2\nMessage3\nMessage4', 'Message1<br />\nMessage2<br />\nMessage3<br />\nMessage4', 0, 0, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1714, 298, 445, 92, 'x > 1', 'x > 1', 0, 0, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1715, 1061, 445, 92, 'x > 6', 'x > 6', 0, 1, 4, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1716, 297, 445, 92, 'x < 6', 'x < 6', 0, 0, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1717, 299, 445, 92, 'x < -1', 'x < -1', 1, 0, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1718, 408, 446, 129, 'GroupBox control', 'GroupBox control', 0, 0, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1719, 410, 446, 129, 'ListView Control', 'ListView Control', 0, 0, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1720, 409, 446, 129, 'LinkLabel control', 'LinkLabel control', 1, 1, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1721, 861, 447, 248, 'To store the data in a database', 'To store the data in a database', 0, 0, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1722, 863, 447, 248, 'none of the choices', 'none of the choices', 0, 0, 4, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1723, 860, 447, 248, 'To send the data from an application to another application', 'To send the data from an application to another application', 0, 0, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1724, 862, 447, 248, 'To share the data between applications', 'To share the data between applications', 1, 1, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1725, 437, 448, 138, 'Throws', 'Throws', 1, 1, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1726, 436, 448, 138, 'Catches', 'Catches', 0, 0, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1727, 1014, 448, 138, 'a and b', 'a and b', 0, 0, 4, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1728, 435, 448, 138, 'Trys', 'Trys', 0, 0, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1729, 846, 449, 244, 'commit()', 'commit()', 0, 0, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1730, 845, 449, 244, 'updates()', 'updates()', 0, 0, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1731, 847, 449, 244, 'none of these', 'none of these', 0, 0, 4, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1732, 844, 449, 244, 'commitUpdates()', 'commitUpdates()', 1, 1, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1733, 469, 450, 149, '{1, 2, 5, 6}', '{1, 2, 5, 6}', 1, 1, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1734, 937, 450, 149, '{1, 5, 6, 3}', '{1, 5, 6, 3}', 0, 0, 4, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1735, 468, 450, 149, '{1, 2, 6, 1}', '{1, 2, 6, 1}', 0, 0, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1736, 470, 450, 149, '{1, 2, 1, 2}', '{1, 2, 1, 2}', 0, 0, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:16');
INSERT INTO `answer_sheet_test_question_choices` (`id`, `choice_id`, `answer_sheet_test_question_id`, `test_question_id`, `body`, `body_html`, `is_correct`, `is_selected`, `pos_order`, `created_at`, `updated_at`) VALUES
(1737, 244, 451, 74, 'Motherboard', 'Motherboard', 0, 0, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1738, 245, 451, 74, 'Computer', 'Computer', 1, 1, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1739, 243, 451, 74, 'Operating System', 'Operating System', 0, 0, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1740, 730, 451, 74, 'CPU', 'CPU', 0, 0, 4, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1741, 635, 452, 204, 'Video calling', 'Video calling', 0, 0, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1742, 633, 452, 204, 'Multitasking', 'Multitasking', 0, 0, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1743, 822, 452, 204, 'All of the choices', 'All of the choices', 1, 1, 4, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1744, 634, 452, 204, 'Bluetooth', 'Bluetooth', 0, 0, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1745, 689, 453, 220, 'MICR', 'MICR', 0, 0, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1746, 709, 453, 220, 'RFID readers', 'RFID readers', 0, 0, 4, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1747, 688, 453, 220, 'scanner', 'scanner', 1, 1, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1748, 687, 453, 220, 'digital camera', 'digital camera', 0, 0, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1749, 1021, 454, 275, 'Only one catch block for each try block.', 'Only one catch block for each try block.', 0, 0, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1750, 1024, 454, 275, 'The catch blocks should be used only when a finally block is not used.', 'The catch blocks should be used only when a finally block is not used.', 0, 0, 4, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1751, 1023, 454, 275, 'Several catch blocks within one try block, arranged starting with the most specific exception and ending with Exception.', 'Several catch blocks within one try block, arranged starting with the most specific exception and ending with Exception.', 1, 1, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1752, 1022, 454, 275, 'Several catch blocks for a try block, arranged in order starting with Exception and ending with the most specific exception.', 'Several catch blocks for a try block, arranged in order starting with Exception and ending with the most specific exception.', 0, 0, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1753, 259, 455, 79, 'ALU', 'ALU', 0, 0, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1754, 260, 455, 79, 'Registers', 'Registers', 0, 0, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1755, 258, 455, 79, 'Control unit', 'Control unit', 0, 0, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1756, 725, 455, 79, 'Primary Storage', 'Primary Storage', 1, 1, 4, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1757, 231, 456, 70, '[[#img28]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/jkL1TWHhQQMAtCTbSz6HtJyZn8zhXmtgMQYX3Zpo.png\" width=\"150\" height=\"150\" />', 1, 1, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1758, 233, 456, 70, '[[#img30]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/5CGn3NoMP2AFTNnuWdi3jGe97XfkU7ydkF3PldTA.png\" width=\"150\" height=\"150\" />', 0, 0, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1759, 232, 456, 70, '[[#img29]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/Cf9qY75IYjLpUVFWsICWK07cAwLtqRPDIO6JjLqT.png\" width=\"150\" height=\"150\" />', 0, 0, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1760, 680, 456, 70, '[[#img31]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/VNrzOvOE3LpeuWi9ciBQDVlGrXxObvbfnI3kfNS4.png\" width=\"150\" height=\"150\" />', 0, 0, 4, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1761, 954, 457, 260, '10', '10', 0, 0, 4, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1762, 953, 457, 260, '30', '30', 0, 0, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1763, 952, 457, 260, '20', '20', 0, 0, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1764, 951, 457, 260, '35', '35', 1, 1, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1765, 456, 458, 145, '{(1, a), (1, b), (2, a), (b, b)}', '{(1, a), (1, b), (2, a), (b, b)}', 0, 0, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1766, 457, 458, 145, '{(1, 1), (2, 2), (a, a), (b, b)}', '{(1, 1), (2, 2), (a, a), (b, b)}', 0, 0, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1767, 458, 458, 145, '{(1, a), (2, a), (1, b), (2, b)}', '{(1, a), (2, a), (1, b), (2, b)}', 1, 1, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1768, 933, 458, 145, '{(1, 1), (a, a), (2, a), (1, b)}', '{(1, 1), (a, a), (2, a), (1, b)}', 0, 0, 4, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1769, 657, 459, 212, 'Apple', 'Apple', 0, 0, 1, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1770, 659, 459, 212, 'Nokia', 'Nokia', 0, 0, 3, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1771, 658, 459, 212, 'Google', 'Google', 1, 1, 2, '2019-09-02 02:20:03', '2019-09-02 02:25:16'),
(1772, 830, 459, 212, 'No company', 'No company', 0, 0, 4, '2019-09-02 02:20:04', '2019-09-02 02:25:16'),
(1773, 334, 460, 104, '(x+5)<sup>2</sup> +16', '(x+5)<sup>2</sup> +16', 1, 1, 2, '2019-09-02 02:20:04', '2019-09-02 02:25:16'),
(1774, 335, 460, 104, '(x+7)<sup>2</sup> -8', '(x+7)<sup>2</sup> -8', 0, 0, 3, '2019-09-02 02:20:04', '2019-09-02 02:25:16'),
(1775, 333, 460, 104, '(x-7)<sup>2</sup> +8', '(x-7)<sup>2</sup> +8', 0, 0, 1, '2019-09-02 02:20:04', '2019-09-02 02:25:16'),
(1776, 1073, 460, 104, '(x+5)<sup>2</sup> -16', '(x+5)<sup>2</sup> -16', 0, 0, 4, '2019-09-02 02:20:04', '2019-09-02 02:25:16'),
(1777, 636, 461, 205, 'Device Driver', 'Device Driver', 0, 0, 1, '2019-09-02 02:20:04', '2019-09-02 02:25:16'),
(1778, 637, 461, 205, 'Video Driver', 'Video Driver', 0, 0, 2, '2019-09-02 02:20:04', '2019-09-02 02:25:16'),
(1779, 823, 461, 205, 'Bluetooth driver', 'Bluetooth driver', 0, 0, 4, '2019-09-02 02:20:04', '2019-09-02 02:25:16'),
(1780, 638, 461, 205, 'WiFi driver', 'WiFi driver', 1, 1, 3, '2019-09-02 02:20:04', '2019-09-02 02:25:16'),
(1781, 302, 462, 93, 'x ≥ -5', 'x ≥ -5', 0, 0, 3, '2019-09-02 02:20:04', '2019-09-02 02:25:16'),
(1782, 300, 462, 93, 'x ≤ 5', 'x ≤ 5', 0, 0, 1, '2019-09-02 02:20:04', '2019-09-02 02:25:16'),
(1783, 301, 462, 93, 'x ≥ 5', 'x ≥ 5', 1, 1, 2, '2019-09-02 02:20:04', '2019-09-02 02:25:16'),
(1784, 1062, 462, 93, 'x ≤ -5', 'x ≤ -5', 0, 0, 4, '2019-09-02 02:20:04', '2019-09-02 02:25:16'),
(1785, 1076, 463, 107, '22', '22', 1, 0, 4, '2019-09-02 02:20:04', '2019-09-02 02:25:16'),
(1786, 343, 463, 107, '48', '48', 0, 0, 2, '2019-09-02 02:20:04', '2019-09-02 02:25:16'),
(1787, 342, 463, 107, '11', '11', 0, 0, 1, '2019-09-02 02:20:04', '2019-09-02 02:25:16'),
(1788, 344, 463, 107, '-12', '-12', 0, 1, 3, '2019-09-02 02:20:04', '2019-09-02 02:25:16'),
(1789, 978, 464, 267, 'smallest previous integer', 'smallest previous integer', 0, 0, 1, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1790, 980, 464, 267, 'smallest following integer', 'smallest following integer', 0, 0, 3, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1791, 979, 464, 267, 'greatest previous integer', 'greatest previous integer', 1, 1, 2, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1792, 668, 465, 215, '2.6', '2.6', 0, 0, 3, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1793, 833, 465, 215, '2.2 (Froyo)', '2.2 (Froyo)', 0, 0, 4, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1794, 666, 465, 215, '3.0 (Honeycomb)', '3.0 (Honeycomb)', 0, 0, 1, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1795, 667, 465, 215, '2.3 (Gingerbread)', '2.3 (Gingerbread)', 1, 1, 2, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1796, 631, 466, 203, 'MPEG', 'MPEG', 0, 0, 2, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1797, 821, 466, 203, 'MIDI', 'MIDI', 0, 0, 4, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1798, 630, 466, 203, 'MP4', 'MP4', 0, 0, 1, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1799, 632, 466, 203, 'AVI', 'AVI', 1, 1, 3, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1800, 419, 467, 132, 'For', 'For', 0, 0, 3, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1801, 1009, 467, 132, 'While', 'While', 0, 0, 4, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1802, 417, 467, 132, 'If', 'If', 0, 0, 1, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1803, 418, 467, 132, 'Switch', 'Switch', 1, 1, 2, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1804, 237, 468, 72, 'Operating system software', 'Operating system software', 0, 0, 1, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1805, 239, 468, 72, 'Anti-virus software', 'Anti-virus software', 0, 0, 3, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1806, 732, 468, 72, 'Disk optimization software', 'Disk optimization software', 0, 0, 4, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1807, 238, 468, 72, 'Utility software', 'Utility software', 1, 1, 2, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1808, 1, 469, 1, 'x = 1', 'x = 1', 1, 1, 1, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1809, 3, 469, 1, 'x = 2', 'x = 2', 0, 0, 3, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1810, 2, 469, 1, 'x = 4', 'x = 4', 0, 0, 2, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1811, 288, 470, 89, 'Virtual private network', 'Virtual private network', 0, 0, 1, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1812, 712, 470, 89, 'None of them', 'None of them', 0, 0, 4, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1813, 289, 470, 89, 'Virtual memory', 'Virtual memory', 1, 1, 2, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1814, 290, 470, 89, 'Virtual Machine', 'Virtual Machine', 0, 0, 3, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1815, 200, 471, 59, '6', '6', 0, 0, 3, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1816, 199, 471, 59, '0', '0', 0, 0, 2, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1817, 198, 471, 59, '3', '3', 0, 0, 1, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1818, 918, 471, 59, '1', '1', 1, 1, 4, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1819, 938, 472, 150, '{1, 6}', '{1, 6}', 0, 0, 4, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1820, 473, 472, 150, '{2, 5}', '{2, 5}', 0, 0, 3, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1821, 472, 472, 150, '{5, 6}', '{5, 6}', 0, 0, 2, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1822, 471, 472, 150, '{1, 2}', '{1, 2}', 1, 1, 1, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1823, 902, 473, 34, '*', '*', 0, 0, 4, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1824, 124, 473, 34, 'typeof', 'typeof', 0, 1, 2, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1825, 123, 473, 34, 'sizeof', 'sizeof', 1, 0, 1, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1826, 125, 473, 34, '&</a>', '&</a>', 0, 0, 3, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1827, 1081, 474, 112, '8', '8', 0, 0, 4, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1828, 357, 474, 112, '10', '10', 0, 0, 1, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1829, 358, 474, 112, '15', '15', 0, 0, 2, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1830, 359, 474, 112, '2100', '2100', 1, 1, 3, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1831, 1016, 475, 140, 'Object', 'Object', 0, 0, 4, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1832, 443, 475, 140, 'Variable', 'Variable', 1, 1, 3, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1833, 442, 475, 140, 'Reference type', 'Reference type', 0, 0, 2, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1834, 441, 475, 140, 'Constant', 'Constant', 0, 0, 1, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1835, 656, 476, 211, 'Open source Webkit', 'Open source Webkit', 1, 1, 3, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1836, 829, 476, 211, 'Opera', 'Opera', 0, 0, 4, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1837, 655, 476, 211, 'Firefox', 'Firefox', 0, 0, 2, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1838, 654, 476, 211, 'Chrome', 'Chrome', 0, 0, 1, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1839, 1055, 477, 283, 'Set the CausesValidation property of the Help button to false.', 'Set the CausesValidation property of the Help button to false.', 1, 1, 3, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1840, 1054, 477, 283, 'Set the CausesValidation property of the text box to true.', 'Set the CausesValidation property of the text box to true.', 0, 0, 2, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1841, 1053, 477, 283, 'Set the CausesValidation property of the text box to false.', 'Set the CausesValidation property of the text box to false.', 0, 0, 1, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1842, 1056, 477, 283, 'Set the CausesValidation property of the Help button to true.', 'Set the CausesValidation property of the Help button to true.', 0, 0, 4, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1843, 920, 478, 61, 'first generation memory', 'first generation memory', 0, 0, 4, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1844, 206, 478, 61, 'heap space and stack space', 'heap space and stack space', 0, 0, 3, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1845, 204, 478, 61, 'heap space', 'heap space', 1, 0, 1, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1846, 205, 478, 61, 'stack space', 'stack space', 0, 1, 2, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1847, 196, 479, 58, '1 3 5 7 9', '1 3 5 7 9', 0, 0, 2, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1848, 917, 479, 58, '1 2 3 4 5 6 7 8 9 10', '1 2 3 4 5 6 7 8 9 10', 0, 0, 4, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1849, 197, 479, 58, '0 1 2 3 4 5 6 7 8 9', '0 1 2 3 4 5 6 7 8 9', 0, 1, 3, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1850, 195, 479, 58, '0 2 4 6 8', '0 2 4 6 8', 1, 0, 1, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1851, 467, 480, 148, '7', '7', 0, 0, 3, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1852, 936, 480, 148, '9', '9', 0, 0, 4, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1853, 466, 480, 148, '6', '6', 0, 0, 2, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1854, 465, 480, 148, '8', '8', 1, 1, 1, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1855, 476, 481, 151, 'Intersection', 'Intersection', 1, 1, 3, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1856, 475, 481, 151, 'Difference', 'Difference', 0, 0, 2, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1857, 939, 481, 151, 'Complement', 'Complement', 0, 0, 4, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1858, 474, 481, 151, 'Union', 'Union', 0, 0, 1, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1859, 728, 482, 76, 'back up', 'back up', 1, 1, 4, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1860, 250, 482, 76, 'buffering', 'buffering', 0, 0, 2, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1861, 251, 482, 76, 'virtual memory', 'virtual memory', 0, 0, 3, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1862, 249, 482, 76, 'spooling', 'spooling', 0, 0, 1, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1863, 501, 483, 160, 'A‘ (Complement of A)', 'A‘ (Complement of A)', 0, 0, 1, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1864, 503, 483, 160, 'A ∩ B', 'A ∩ B', 0, 0, 3, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1865, 502, 483, 160, 'A U B -B', 'A U B -B', 1, 1, 2, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1866, 948, 483, 160, 'B', 'B', 0, 0, 4, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1867, 1031, 484, 277, 'The code will generate an error because the finally block is placed immediately after the try block.', 'The code will generate an error because the finally block is placed immediately after the try block.', 0, 0, 3, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1868, 1032, 484, 277, 'The code will compile without an error.', 'The code will compile without an error.', 1, 1, 4, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1869, 1030, 484, 277, 'The code will generate an error because it lacks a throw statement.', 'The code will generate an error because it lacks a throw statement.', 0, 0, 2, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1870, 1029, 484, 277, 'The code will generate an error because it lacks a catch block.', 'The code will generate an error because it lacks a catch block.', 0, 0, 1, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1871, 388, 485, 122, 'Binary operators', 'Binary operators', 0, 0, 2, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1872, 387, 485, 122, 'unary operators', 'unary operators', 1, 1, 1, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1873, 389, 485, 122, 'Logical operators', 'Logical operators', 0, 0, 3, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1874, 1005, 485, 122, 'Assignment opeartors', 'Assignment opeartors', 0, 0, 4, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1875, 699, 486, 223, '110011', '110011', 0, 0, 1, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1876, 718, 486, 223, '100100', '100100', 0, 0, 4, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1877, 700, 486, 223, '100001', '100001', 0, 0, 2, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1878, 701, 486, 223, '110100', '110100', 1, 1, 3, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1879, 192, 487, 57, 'Row', 'Row', 1, 1, 1, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1880, 193, 487, 57, 'Column', 'Column', 0, 0, 2, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1881, 194, 487, 57, 'Both Row and Column', 'Both Row and Column', 0, 0, 3, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1882, 987, 488, 270, '35', '35', 1, 1, 1, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1883, 988, 488, 270, '45', '45', 0, 0, 2, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1884, 989, 488, 270, '25', '25', 0, 0, 3, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1885, 386, 489, 121, 'Logical operators', 'Logical operators', 1, 1, 3, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1886, 385, 489, 121, 'Bitwise operators', 'Bitwise operators', 0, 0, 2, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1887, 1004, 489, 121, 'Assignment Operators', 'Assignment Operators', 0, 0, 4, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1888, 384, 489, 121, 'RElational operators', 'RElational operators', 0, 0, 1, '2019-09-02 02:20:04', '2019-09-02 02:25:17'),
(1889, 1105, 490, 289, '7', '7', 1, 1, 2, '2019-09-02 02:20:05', '2019-09-02 02:25:17'),
(1890, 1104, 490, 289, '5', '5', 0, 0, 1, '2019-09-02 02:20:05', '2019-09-02 02:25:17'),
(1891, 1107, 490, 289, '8', '8', 0, 0, 4, '2019-09-02 02:20:05', '2019-09-02 02:25:17'),
(1892, 1106, 490, 289, '6', '6', 0, 0, 3, '2019-09-02 02:20:05', '2019-09-02 02:25:17'),
(1893, 894, 491, 256, 'A & B', 'A & B', 1, 1, 3, '2019-09-02 02:20:05', '2019-09-02 02:25:17'),
(1894, 893, 491, 256, 'Cursor is used to store the temporary result.', 'Cursor is used to store the temporary result.', 0, 0, 2, '2019-09-02 02:20:05', '2019-09-02 02:25:17'),
(1895, 892, 491, 256, 'Content values are key pair values, which are updated or inserted in the database', 'Content values are key pair values, which are updated or inserted in the database', 0, 0, 1, '2019-09-02 02:20:05', '2019-09-02 02:25:17'),
(1896, 895, 491, 256, 'Cursor is used to store data permanently.', 'Cursor is used to store data permanently.', 0, 0, 4, '2019-09-02 02:20:05', '2019-09-02 02:25:17'),
(1897, 403, 492, 127, 'Textbox control', 'Textbox control', 0, 0, 2, '2019-09-02 02:20:05', '2019-09-02 02:25:17'),
(1898, 402, 492, 127, 'Radio Button', 'Radio Button', 0, 0, 1, '2019-09-02 02:20:05', '2019-09-02 02:25:17'),
(1899, 404, 492, 127, 'Button control', 'Button control', 1, 1, 3, '2019-09-02 02:20:05', '2019-09-02 02:25:17'),
(1900, 174, 493, 51, '9', '9', 0, 0, 1, '2019-09-02 02:20:05', '2019-09-02 02:25:17'),
(1901, 175, 493, 51, '8', '8', 0, 0, 2, '2019-09-02 02:20:05', '2019-09-02 02:25:17'),
(1902, 911, 493, 51, 'Runtime error', 'Runtime error', 0, 0, 4, '2019-09-02 02:20:05', '2019-09-02 02:25:17'),
(1903, 176, 493, 51, 'Compilation error', 'Compilation error', 1, 1, 3, '2019-09-02 02:20:05', '2019-09-02 02:25:17'),
(1904, 118, 494, 32, 'as', 'as', 0, 0, 2, '2019-09-02 02:20:05', '2019-09-02 02:25:17'),
(1905, 900, 494, 32, 'All of the choices', 'All of the choices', 1, 1, 4, '2019-09-02 02:20:05', '2019-09-02 02:25:17'),
(1906, 119, 494, 32, 'foreach', 'foreach', 0, 0, 3, '2019-09-02 02:20:05', '2019-09-02 02:25:17'),
(1907, 117, 494, 32, 'abstract', 'abstract', 0, 0, 1, '2019-09-02 02:20:05', '2019-09-02 02:25:17'),
(1908, 400, 495, 126, 'ListBox control', 'ListBox control', 1, 1, 2, '2019-09-02 02:20:05', '2019-09-02 02:25:17'),
(1909, 401, 495, 126, 'TextBox control', 'TextBox control', 0, 0, 3, '2019-09-02 02:20:05', '2019-09-02 02:25:17'),
(1910, 399, 495, 126, 'CheckListBox control', 'CheckListBox control', 0, 0, 1, '2019-09-02 02:20:05', '2019-09-02 02:25:17'),
(1911, 679, 496, 68, '[[#img26]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/tBuCNpani0PgWIFN01ztVOAj4FS4CBDAiTW9J8lB.png\" width=\"150\" height=\"150\" />', 0, 1, 4, '2019-09-02 02:20:05', '2019-09-02 02:25:17'),
(1912, 225, 496, 68, '[[#img23]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/IyLDJJaUUQ0aIZOMyEjh4JO72W4HpXtPj2CfMKZL.png\" width=\"150\" height=\"150\" />', 1, 0, 1, '2019-09-02 02:20:05', '2019-09-02 02:25:17'),
(1913, 227, 496, 68, '[[#img25]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/rDh656ehodyPQmn7CxxjGK2H29sx2bh6LDz9INfN.png\" width=\"150\" height=\"150\" />', 0, 0, 3, '2019-09-02 02:20:05', '2019-09-02 02:25:17'),
(1914, 226, 496, 68, '[[#img24]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/nVLwXww7AT2RBfzhH1tPQMxdLPF1iWuunHzErZRh.png\" width=\"150\" height=\"150\" />', 0, 0, 2, '2019-09-02 02:20:05', '2019-09-02 02:25:17'),
(1915, 395, 497, 124, 'Data Type', 'Data Type', 0, 0, 3, '2019-09-02 02:20:05', '2019-09-02 02:25:17'),
(1916, 394, 497, 124, 'Value types', 'Value types', 0, 0, 2, '2019-09-02 02:20:05', '2019-09-02 02:25:17'),
(1917, 393, 497, 124, 'Reference type', 'Reference type', 1, 1, 1, '2019-09-02 02:20:05', '2019-09-02 02:25:17'),
(1918, 1007, 497, 124, 'Explicit Types', 'Explicit Types', 0, 0, 4, '2019-09-02 02:20:05', '2019-09-02 02:25:17'),
(1919, 430, 498, 136, 'initializes a button control', 'initializes a button control', 0, 0, 2, '2019-09-02 02:20:05', '2019-09-02 02:25:17'),
(1920, 1012, 498, 136, 'a and c', 'a and c', 1, 1, 4, '2019-09-02 02:20:05', '2019-09-02 02:25:17'),
(1921, 429, 498, 136, 'creates a button control', 'creates a button control', 0, 0, 1, '2019-09-02 02:20:05', '2019-09-02 02:25:17'),
(1922, 431, 498, 136, 'instantiates button control', 'instantiates button control', 0, 0, 3, '2019-09-02 02:20:05', '2019-09-02 02:25:17'),
(1923, 293, 499, 90, 'kilobyte', 'kilobyte', 0, 0, 3, '2019-09-02 02:20:05', '2019-09-02 02:25:17'),
(1924, 291, 499, 90, 'bit', 'bit', 0, 0, 1, '2019-09-02 02:20:05', '2019-09-02 02:25:17'),
(1925, 711, 499, 90, 'megabyte', 'megabyte', 0, 0, 4, '2019-09-02 02:20:05', '2019-09-02 02:25:17'),
(1926, 292, 499, 90, 'byte', 'byte', 1, 1, 2, '2019-09-02 02:20:05', '2019-09-02 02:25:17'),
(1927, 486, 500, 155, '4', '4', 1, 1, 1, '2019-09-02 02:20:05', '2019-09-02 02:25:18'),
(1928, 943, 500, 155, '7', '7', 0, 0, 4, '2019-09-02 02:20:05', '2019-09-02 02:25:17'),
(1929, 488, 500, 155, '6', '6', 0, 0, 3, '2019-09-02 02:20:05', '2019-09-02 02:25:17'),
(1930, 487, 500, 155, '5', '5', 0, 0, 2, '2019-09-02 02:20:05', '2019-09-02 02:25:17'),
(1931, 360, 501, 113, '5!', '5!', 0, 0, 1, '2019-09-02 02:28:58', '2019-09-02 02:33:31'),
(1932, 362, 501, 113, '2!', '2!', 0, 0, 3, '2019-09-02 02:28:58', '2019-09-02 02:33:31'),
(1933, 361, 501, 113, '3!', '3!', 1, 1, 2, '2019-09-02 02:28:58', '2019-09-02 02:33:31'),
(1934, 1082, 501, 113, '3! * 2!', '3! * 2!', 0, 0, 4, '2019-09-02 02:28:58', '2019-09-02 02:33:31'),
(1935, 260, 502, 79, 'Registers', 'Registers', 0, 0, 3, '2019-09-02 02:28:59', '2019-09-02 02:33:31'),
(1936, 258, 502, 79, 'Control unit', 'Control unit', 0, 0, 1, '2019-09-02 02:28:59', '2019-09-02 02:33:31'),
(1937, 725, 502, 79, 'Primary Storage', 'Primary Storage', 1, 1, 4, '2019-09-02 02:28:59', '2019-09-02 02:33:31'),
(1938, 259, 502, 79, 'ALU', 'ALU', 0, 0, 2, '2019-09-02 02:28:59', '2019-09-02 02:33:31'),
(1939, 855, 503, 246, 'bin/', 'bin/', 0, 0, 4, '2019-09-02 02:28:59', '2019-09-02 02:33:31'),
(1940, 854, 503, 246, 'src/', 'src/', 1, 1, 3, '2019-09-02 02:28:59', '2019-09-02 02:33:31'),
(1941, 852, 503, 246, 'res/', 'res/', 0, 0, 1, '2019-09-02 02:28:59', '2019-09-02 02:33:31'),
(1942, 853, 503, 246, 'assets/', 'assets/', 0, 0, 2, '2019-09-02 02:28:59', '2019-09-02 02:33:31'),
(1943, 688, 504, 220, 'scanner', 'scanner', 1, 1, 2, '2019-09-02 02:28:59', '2019-09-02 02:33:31'),
(1944, 709, 504, 220, 'RFID readers', 'RFID readers', 0, 0, 4, '2019-09-02 02:28:59', '2019-09-02 02:33:31'),
(1945, 689, 504, 220, 'MICR', 'MICR', 0, 0, 3, '2019-09-02 02:28:59', '2019-09-02 02:33:31'),
(1946, 687, 504, 220, 'digital camera', 'digital camera', 0, 0, 1, '2019-09-02 02:28:59', '2019-09-02 02:33:31'),
(1947, 1068, 505, 99, '4.753', '4.753', 0, 0, 4, '2019-09-02 02:28:59', '2019-09-02 02:33:31'),
(1948, 320, 505, 99, '2.322', '2.322', 1, 0, 3, '2019-09-02 02:28:59', '2019-09-02 02:33:31'),
(1949, 319, 505, 99, '1.756', '1.756', 0, 1, 2, '2019-09-02 02:28:59', '2019-09-02 02:33:31'),
(1950, 318, 505, 99, '6.25', '6.25', 0, 0, 1, '2019-09-02 02:28:59', '2019-09-02 02:33:31'),
(1951, 173, 506, 50, 'Thread starts running.', 'Thread starts running.', 0, 0, 3, '2019-09-02 02:28:59', '2019-09-02 02:33:31'),
(1952, 171, 506, 50, 'Thread returns to the ready state.', 'Thread returns to the ready state.', 1, 1, 1, '2019-09-02 02:28:59', '2019-09-02 02:33:31'),
(1953, 172, 506, 50, 'Thread returns to the waiting state.', 'Thread returns to the waiting state.', 0, 0, 2, '2019-09-02 02:28:59', '2019-09-02 02:33:31'),
(1954, 706, 507, 225, '127', '127', 1, 1, 2, '2019-09-02 02:28:59', '2019-09-02 02:33:31'),
(1955, 714, 507, 225, '135', '135', 0, 0, 4, '2019-09-02 02:28:59', '2019-09-02 02:33:31'),
(1956, 707, 507, 225, '44', '44', 0, 0, 3, '2019-09-02 02:28:59', '2019-09-02 02:33:31'),
(1957, 705, 507, 225, '531', '531', 0, 0, 1, '2019-09-02 02:28:59', '2019-09-02 02:33:31'),
(1958, 833, 508, 215, '2.2 (Froyo)', '2.2 (Froyo)', 0, 0, 4, '2019-09-02 02:28:59', '2019-09-02 02:33:31'),
(1959, 668, 508, 215, '2.6', '2.6', 0, 0, 3, '2019-09-02 02:28:59', '2019-09-02 02:33:31'),
(1960, 667, 508, 215, '2.3 (Gingerbread)', '2.3 (Gingerbread)', 1, 1, 2, '2019-09-02 02:28:59', '2019-09-02 02:33:31'),
(1961, 666, 508, 215, '3.0 (Honeycomb)', '3.0 (Honeycomb)', 0, 0, 1, '2019-09-02 02:28:59', '2019-09-02 02:33:31'),
(1962, 474, 509, 151, 'Union', 'Union', 0, 0, 1, '2019-09-02 02:28:59', '2019-09-02 02:33:31'),
(1963, 476, 509, 151, 'Intersection', 'Intersection', 1, 1, 3, '2019-09-02 02:28:59', '2019-09-02 02:33:31'),
(1964, 475, 509, 151, 'Difference', 'Difference', 0, 0, 2, '2019-09-02 02:28:59', '2019-09-02 02:33:31'),
(1965, 939, 509, 151, 'Complement', 'Complement', 0, 0, 4, '2019-09-02 02:28:59', '2019-09-02 02:33:31'),
(1966, 204, 510, 61, 'heap space', 'heap space', 1, 1, 1, '2019-09-02 02:28:59', '2019-09-02 02:33:31'),
(1967, 206, 510, 61, 'heap space and stack space', 'heap space and stack space', 0, 0, 3, '2019-09-02 02:28:59', '2019-09-02 02:33:31'),
(1968, 205, 510, 61, 'stack space', 'stack space', 0, 0, 2, '2019-09-02 02:28:59', '2019-09-02 02:33:31'),
(1969, 920, 510, 61, 'first generation memory', 'first generation memory', 0, 0, 4, '2019-09-02 02:28:59', '2019-09-02 02:33:31'),
(1970, 727, 511, 77, 'linker error', 'linker error', 0, 0, 4, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(1971, 254, 511, 77, 'run time error', 'run time error', 0, 0, 3, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(1972, 253, 511, 77, 'syntax error', 'syntax error', 0, 0, 2, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(1973, 252, 511, 77, 'logic error', 'logic error', 1, 1, 1, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(1974, 443, 512, 140, 'Variable', 'Variable', 1, 1, 3, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(1975, 442, 512, 140, 'Reference type', 'Reference type', 0, 0, 2, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(1976, 1016, 512, 140, 'Object', 'Object', 0, 0, 4, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(1977, 441, 512, 140, 'Constant', 'Constant', 0, 0, 1, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(1978, 472, 513, 150, '{5, 6}', '{5, 6}', 0, 0, 2, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(1979, 473, 513, 150, '{2, 5}', '{2, 5}', 0, 0, 3, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(1980, 471, 513, 150, '{1, 2}', '{1, 2}', 1, 0, 1, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(1981, 938, 513, 150, '{1, 6}', '{1, 6}', 0, 1, 4, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(1982, 892, 514, 256, 'Content values are key pair values, which are updated or inserted in the database', 'Content values are key pair values, which are updated or inserted in the database', 0, 0, 1, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(1983, 894, 514, 256, 'A & B', 'A & B', 1, 1, 3, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(1984, 893, 514, 256, 'Cursor is used to store the temporary result.', 'Cursor is used to store the temporary result.', 0, 0, 2, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(1985, 895, 514, 256, 'Cursor is used to store data permanently.', 'Cursor is used to store data permanently.', 0, 0, 4, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(1986, 663, 515, 214, 'Linux kernel', 'Linux kernel', 1, 0, 1, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(1987, 664, 515, 214, 'Windows kernel', 'Windows kernel', 0, 0, 2, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(1988, 832, 515, 214, 'Hybrid kernel', 'Hybrid kernel', 0, 0, 4, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(1989, 665, 515, 214, 'MAC kernel', 'MAC kernel', 0, 1, 3, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(1990, 2, 516, 1, 'x = 4', 'x = 4', 0, 0, 2, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(1991, 3, 516, 1, 'x = 2', 'x = 2', 0, 1, 3, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(1992, 1, 516, 1, 'x = 1', 'x = 1', 1, 0, 1, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(1993, 378, 517, 119, 'forEach loop', 'forEach loop', 0, 0, 1, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(1994, 380, 517, 119, 'while', 'while', 0, 1, 3, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(1995, 1002, 517, 119, 'for loop', 'for loop', 1, 0, 4, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(1996, 379, 517, 119, 'do while', 'do while', 0, 0, 2, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(1997, 860, 518, 248, 'To send the data from an application to another application', 'To send the data from an application to another application', 0, 0, 1, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(1998, 861, 518, 248, 'To store the data in a database', 'To store the data in a database', 0, 0, 2, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(1999, 862, 518, 248, 'To share the data between applications', 'To share the data between applications', 1, 1, 3, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(2000, 863, 518, 248, 'none of the choices', 'none of the choices', 0, 0, 4, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(2001, 116, 519, 31, '12', '12', 0, 0, 3, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(2002, 114, 519, 31, '10', '10', 0, 0, 1, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(2003, 115, 519, 31, '20', '20', 1, 1, 2, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(2004, 178, 520, 52, '200', '200', 1, 1, 2, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(2005, 912, 520, 52, '100', '100', 0, 0, 4, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(2006, 177, 520, 52, '12', '12', 0, 0, 1, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(2007, 179, 520, 52, '400', '400', 0, 0, 3, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(2008, 364, 521, 114, 'mean = 10 , standard deviation = 6', 'mean = 10 , standard deviation = 6', 0, 0, 2, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(2009, 1083, 521, 114, 'mean = 10 , standard deviation = 1', 'mean = 10 , standard deviation = 1', 0, 1, 4, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(2010, 363, 521, 114, 'mean = 15 , standard deviation = 6', 'mean = 15 , standard deviation = 6', 0, 0, 1, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(2011, 365, 521, 114, 'mean = 15 , standard deviation = 1', 'mean = 15 , standard deviation = 1', 1, 0, 3, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(2012, 314, 522, 97, 'i - 12', 'i - 12', 1, 0, 3, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(2013, 313, 522, 97, '7 - 3i', '7 - 3i', 0, 1, 2, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(2014, 312, 522, 97, 'i - 5', 'i - 5', 0, 0, 1, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(2015, 1066, 522, 97, '3i - 10', '3i - 10', 0, 0, 4, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(2016, 219, 523, 66, '121', '121', 0, 0, 1, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(2017, 221, 523, 66, '199', '199', 0, 0, 3, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(2018, 676, 523, 66, '212', '212', 0, 0, 4, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(2019, 220, 523, 66, '163', '163', 1, 1, 2, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(2020, 877, 524, 252, 'A bean class can be passed from one activity to another.', 'A bean class can be passed from one activity to another.', 0, 0, 2, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(2021, 878, 524, 252, 'A mandatory class in android', 'A mandatory class in android', 0, 0, 3, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(2022, 876, 524, 252, 'A class used to hold states and objects', 'A class used to hold states and objects', 1, 0, 1, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(2023, 879, 524, 252, 'None of the above', 'None of the above', 0, 1, 4, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(2024, 1092, 525, 286, '0.057', '0.057', 1, 1, 1, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(2025, 1094, 525, 286, '0.001', '0.001', 0, 0, 3, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(2026, 1095, 525, 286, '0', '0', 0, 0, 4, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(2027, 1093, 525, 286, '0.478', '0.478', 0, 0, 2, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(2028, 715, 526, 87, 'fetch, decode, execute and store', 'fetch, decode, execute and store', 1, 1, 4, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(2029, 282, 526, 87, 'fetch, execute, store and decode', 'fetch, execute, store and decode', 0, 0, 1, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(2030, 284, 526, 87, 'decode, fetch, store and execute', 'decode, fetch, store and execute', 0, 0, 3, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(2031, 283, 526, 87, 'decode, execute, store and fetch', 'decode, execute, store and fetch', 0, 0, 2, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(2032, 389, 527, 122, 'Logical operators', 'Logical operators', 0, 0, 3, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(2033, 388, 527, 122, 'Binary operators', 'Binary operators', 0, 0, 2, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(2034, 387, 527, 122, 'unary operators', 'unary operators', 1, 1, 1, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(2035, 1005, 527, 122, 'Assignment opeartors', 'Assignment opeartors', 0, 0, 4, '2019-09-02 02:28:59', '2019-09-02 02:33:32'),
(2036, 256, 528, 78, 'Unicode', 'Unicode', 1, 1, 2, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2037, 257, 528, 78, 'EBCDIC', 'EBCDIC', 0, 0, 3, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2038, 255, 528, 78, 'ASCII', 'ASCII', 0, 0, 1, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2039, 726, 528, 78, 'ANSI', 'ANSI', 0, 0, 4, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2040, 932, 529, 144, '20', '20', 0, 0, 4, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2041, 455, 529, 144, '3', '3', 0, 0, 3, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2042, 453, 529, 144, '10', '10', 0, 0, 1, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2043, 454, 529, 144, '5', '5', 1, 1, 2, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2044, 840, 530, 243, 'R.style', 'R.style', 1, 0, 1, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2045, 841, 530, 243, 'X.style', 'X.style', 0, 0, 2, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2046, 843, 530, 243, 'application', 'application', 0, 1, 4, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2047, 842, 530, 243, 'manifest.XML', 'manifest.XML', 0, 0, 3, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2048, 1053, 531, 283, 'Set the CausesValidation property of the text box to false.', 'Set the CausesValidation property of the text box to false.', 0, 0, 1, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2049, 1054, 531, 283, 'Set the CausesValidation property of the text box to true.', 'Set the CausesValidation property of the text box to true.', 0, 0, 2, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2050, 1055, 531, 283, 'Set the CausesValidation property of the Help button to false.', 'Set the CausesValidation property of the Help button to false.', 1, 1, 3, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2051, 1056, 531, 283, 'Set the CausesValidation property of the Help button to true.', 'Set the CausesValidation property of the Help button to true.', 0, 0, 4, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2052, 469, 532, 149, '{1, 2, 5, 6}', '{1, 2, 5, 6}', 1, 1, 2, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2053, 470, 532, 149, '{1, 2, 1, 2}', '{1, 2, 1, 2}', 0, 0, 3, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2054, 468, 532, 149, '{1, 2, 6, 1}', '{1, 2, 6, 1}', 0, 0, 1, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2055, 937, 532, 149, '{1, 5, 6, 3}', '{1, 5, 6, 3}', 0, 0, 4, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2056, 823, 533, 205, 'Bluetooth driver', 'Bluetooth driver', 0, 0, 4, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2057, 637, 533, 205, 'Video Driver', 'Video Driver', 0, 0, 2, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2058, 636, 533, 205, 'Device Driver', 'Device Driver', 0, 0, 1, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2059, 638, 533, 205, 'WiFi driver', 'WiFi driver', 1, 1, 3, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2060, 1085, 534, 116, 'even and odd', 'even and odd', 0, 0, 4, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2061, 369, 534, 116, 'an odd function', 'an odd function', 0, 0, 1, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2062, 371, 534, 116, 'neither odd nor even', 'neither odd nor even', 0, 1, 3, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2063, 370, 534, 116, 'an even function', 'an even function', 1, 0, 2, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2064, 954, 535, 260, '10', '10', 0, 0, 4, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2065, 952, 535, 260, '20', '20', 0, 1, 2, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2066, 951, 535, 260, '35', '35', 1, 0, 1, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2067, 953, 535, 260, '30', '30', 0, 0, 3, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2068, 298, 536, 92, 'x > 1', 'x > 1', 0, 0, 2, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2069, 1061, 536, 92, 'x > 6', 'x > 6', 0, 1, 4, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2070, 297, 536, 92, 'x < 6', 'x < 6', 0, 0, 1, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2071, 299, 536, 92, 'x < -1', 'x < -1', 1, 0, 3, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2072, 306, 537, 95, '12i', '12i', 1, 1, 1, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2073, 307, 537, 95, 'You cannot find the square root of a negative number', 'You cannot find the square root of a negative number', 0, 0, 2, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2074, 308, 537, 95, '-12', '-12', 0, 0, 3, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2075, 1064, 537, 95, '-12i', '-12i', 0, 0, 4, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2076, 490, 538, 156, '8, 12', '8, 12', 1, 1, 2, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2077, 491, 538, 156, '4, 12', '4, 12', 0, 0, 3, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2078, 944, 538, 156, 'None of the choices', 'None of the choices', 0, 0, 4, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2079, 489, 538, 156, '4, 8', '4, 8', 0, 0, 1, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2080, 233, 539, 70, '[[#img30]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/5CGn3NoMP2AFTNnuWdi3jGe97XfkU7ydkF3PldTA.png\" width=\"150\" height=\"150\" />', 0, 0, 3, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2081, 680, 539, 70, '[[#img31]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/VNrzOvOE3LpeuWi9ciBQDVlGrXxObvbfnI3kfNS4.png\" width=\"150\" height=\"150\" />', 0, 0, 4, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2082, 232, 539, 70, '[[#img29]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/Cf9qY75IYjLpUVFWsICWK07cAwLtqRPDIO6JjLqT.png\" width=\"150\" height=\"150\" />', 0, 0, 2, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2083, 231, 539, 70, '[[#img28]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/jkL1TWHhQQMAtCTbSz6HtJyZn8zhXmtgMQYX3Zpo.png\" width=\"150\" height=\"150\" />', 1, 1, 1, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2084, 143, 540, 40, 'Both of the above.', 'Both of the above.', 0, 0, 3, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2085, 142, 540, 40, 'object.', 'object.', 0, 0, 2, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2086, 141, 540, 40, 'type.', 'type.', 1, 1, 1, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2087, 847, 541, 244, 'none of these', 'none of these', 0, 0, 4, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2088, 846, 541, 244, 'commit()', 'commit()', 0, 0, 3, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2089, 844, 541, 244, 'commitUpdates()', 'commitUpdates()', 1, 1, 1, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2090, 845, 541, 244, 'updates()', 'updates()', 0, 0, 2, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2091, 419, 542, 132, 'For', 'For', 0, 0, 3, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2092, 417, 542, 132, 'If', 'If', 0, 0, 1, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2093, 1009, 542, 132, 'While', 'While', 0, 0, 4, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2094, 418, 542, 132, 'Switch', 'Switch', 1, 1, 2, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2095, 435, 543, 138, 'Trys', 'Trys', 0, 0, 1, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2096, 436, 543, 138, 'Catches', 'Catches', 0, 1, 2, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2097, 437, 543, 138, 'Throws', 'Throws', 1, 0, 3, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2098, 1014, 543, 138, 'a and b', 'a and b', 0, 0, 4, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2099, 347, 544, 108, '1 000 000', '1 000 000', 0, 0, 3, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2100, 345, 544, 108, '1 846 000', '1 846 000', 1, 1, 1, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2101, 1077, 544, 108, '1 500 000', '1 500 000', 0, 0, 4, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2102, 346, 544, 108, '1 852 000', '1 852 000', 0, 0, 2, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2103, 147, 545, 42, 'static', 'static', 0, 0, 1, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2104, 148, 545, 42, 'Boolean', 'Boolean', 1, 1, 2, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2105, 907, 545, 42, 'private', 'private', 0, 0, 4, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2106, 149, 545, 42, 'void', 'void', 0, 0, 3, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2107, 989, 546, 270, '25', '25', 0, 0, 3, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2108, 987, 546, 270, '35', '35', 1, 0, 1, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2109, 988, 546, 270, '45', '45', 0, 1, 2, '2019-09-02 02:29:00', '2019-09-02 02:33:32'),
(2110, 830, 547, 212, 'No company', 'No company', 0, 0, 4, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2111, 657, 547, 212, 'Apple', 'Apple', 0, 0, 1, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2112, 659, 547, 212, 'Nokia', 'Nokia', 0, 0, 3, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2113, 658, 547, 212, 'Google', 'Google', 1, 1, 2, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2114, 644, 548, 207, 'Android data bridge', 'Android data bridge', 0, 0, 3, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2115, 642, 548, 207, 'Android Debug Bridge', 'Android Debug Bridge', 1, 1, 1, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2116, 825, 548, 207, 'Application data bridge', 'Application data bridge', 0, 0, 4, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2117, 643, 548, 207, 'Application Debug Bridge', 'Application Debug Bridge', 0, 0, 2, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2118, 355, 549, 111, '(π/2 , π)', '(π/2 , π)', 1, 1, 2, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2119, 1080, 549, 111, '(3 π / 2 , 2 π)', '(3 π / 2 , 2 π)', 0, 0, 4, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2120, 354, 549, 111, '(0 , π/2)', '(0 , π/2)', 0, 0, 1, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2121, 356, 549, 111, '(π , 3 π / 2)', '(π , 3 π / 2)', 0, 0, 3, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2122, 1090, 550, 285, '4 π', '4 π', 0, 0, 3, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2123, 1091, 550, 285, 'π', 'π', 1, 1, 4, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2124, 1089, 550, 285, '2 π', '2 π', 0, 0, 2, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2125, 1088, 550, 285, '4 π <sup>2</sup>', '4 π <sup>2</sup>', 0, 0, 1, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2126, 1029, 551, 277, 'The code will generate an error because it lacks a catch block.', 'The code will generate an error because it lacks a catch block.', 0, 1, 1, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2127, 1030, 551, 277, 'The code will generate an error because it lacks a throw statement.', 'The code will generate an error because it lacks a throw statement.', 0, 0, 2, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2128, 1031, 551, 277, 'The code will generate an error because the finally block is placed immediately after the try block.', 'The code will generate an error because the finally block is placed immediately after the try block.', 0, 0, 3, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2129, 1032, 551, 277, 'The code will compile without an error.', 'The code will compile without an error.', 1, 0, 4, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2130, 293, 552, 90, 'kilobyte', 'kilobyte', 0, 0, 3, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2131, 292, 552, 90, 'byte', 'byte', 1, 1, 2, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2132, 291, 552, 90, 'bit', 'bit', 0, 0, 1, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2133, 711, 552, 90, 'megabyte', 'megabyte', 0, 0, 4, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2134, 822, 553, 204, 'All of the choices', 'All of the choices', 1, 1, 4, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2135, 634, 553, 204, 'Bluetooth', 'Bluetooth', 0, 0, 2, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2136, 635, 553, 204, 'Video calling', 'Video calling', 0, 0, 3, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2137, 633, 553, 204, 'Multitasking', 'Multitasking', 0, 0, 1, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2138, 1013, 554, 137, 'Are Virtual', 'Are Virtual', 0, 0, 4, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2139, 432, 554, 137, 'Override the parent class methods but maintain the implementation', 'Override the parent class methods but maintain the implementation', 0, 0, 1, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2140, 433, 554, 137, 'Maintain the same return type and arguments as the parent class, but implement it differently', 'Maintain the same return type and arguments as the parent class, but implement it differently', 1, 1, 2, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2141, 434, 554, 137, 'Have different return types and arguments than the parent class', 'Have different return types and arguments than the parent class', 0, 0, 3, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2142, 629, 555, 202, 'Mobile Operating System', 'Mobile Operating System', 1, 1, 3, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2143, 820, 555, 202, 'Database', 'Database', 0, 0, 4, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2144, 628, 555, 202, 'Programming Language', 'Programming Language', 0, 0, 2, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2145, 627, 555, 202, 'Desktop Operatng System', 'Desktop Operatng System', 0, 0, 1, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2146, 464, 556, 147, 'Subset', 'Subset', 0, 0, 3, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2147, 935, 556, 147, 'Empty', 'Empty', 0, 0, 4, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2148, 463, 556, 147, 'Finite', 'Finite', 0, 0, 2, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2149, 462, 556, 147, 'Infinite', 'Infinite', 1, 1, 1, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2150, 342, 557, 107, '11', '11', 0, 0, 1, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2151, 343, 557, 107, '48', '48', 0, 0, 2, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2152, 1076, 557, 107, '22', '22', 1, 1, 4, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2153, 344, 557, 107, '-12', '-12', 0, 0, 3, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2154, 139, 558, 39, '0', '0', 0, 0, 2, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2155, 906, 558, 39, 'Not assigned', 'Not assigned', 0, 0, 4, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2156, 140, 558, 39, 'Depends upon the type of variable', 'Depends upon the type of variable', 1, 1, 3, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2157, 138, 558, 39, 'null', 'null', 0, 0, 1, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2158, 1081, 559, 112, '8', '8', 0, 0, 4, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2159, 358, 559, 112, '15', '15', 0, 1, 2, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2160, 357, 559, 112, '10', '10', 0, 0, 1, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2161, 359, 559, 112, '2100', '2100', 1, 0, 3, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2162, 166, 560, 48, 'JRE is an application development framework.', 'JRE is an application development framework.', 0, 0, 2, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2163, 165, 560, 48, 'JRE is a java based GUI application.', 'JRE is a java based GUI application.', 0, 0, 1, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2164, 167, 560, 48, 'JRE is an implementation of the Java Virtual Machine which executes Java programs.', 'JRE is an implementation of the Java Virtual Machine which executes Java programs.', 1, 1, 3, '2019-09-02 02:29:00', '2019-09-02 02:33:33');
INSERT INTO `answer_sheet_test_question_choices` (`id`, `choice_id`, `answer_sheet_test_question_id`, `test_question_id`, `body`, `body_html`, `is_correct`, `is_selected`, `pos_order`, `created_at`, `updated_at`) VALUES
(2165, 174, 561, 51, '9', '9', 0, 0, 1, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2166, 176, 561, 51, 'Compilation error', 'Compilation error', 1, 1, 3, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2167, 175, 561, 51, '8', '8', 0, 0, 2, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2168, 911, 561, 51, 'Runtime error', 'Runtime error', 0, 0, 4, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2169, 1073, 562, 104, '(x+5)<sup>2</sup> -16', '(x+5)<sup>2</sup> -16', 0, 0, 4, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2170, 335, 562, 104, '(x+7)<sup>2</sup> -8', '(x+7)<sup>2</sup> -8', 0, 0, 3, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2171, 333, 562, 104, '(x-7)<sup>2</sup> +8', '(x-7)<sup>2</sup> +8', 0, 1, 1, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2172, 334, 562, 104, '(x+5)<sup>2</sup> +16', '(x+5)<sup>2</sup> +16', 1, 0, 2, '2019-09-02 02:29:00', '2019-09-02 02:33:33'),
(2173, 451, 563, 143, 'Two', 'Two', 0, 0, 2, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2174, 450, 563, 143, 'One', 'One', 1, 1, 1, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2175, 452, 563, 143, 'Zero', 'Zero', 0, 0, 3, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2176, 931, 563, 143, 'Three', 'Three', 0, 0, 4, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2177, 404, 564, 127, 'Button control', 'Button control', 1, 1, 3, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2178, 402, 564, 127, 'Radio Button', 'Radio Button', 0, 0, 1, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2179, 403, 564, 127, 'Textbox control', 'Textbox control', 0, 0, 2, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2180, 901, 565, 33, 'ToInt32', 'ToInt32', 0, 0, 4, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2181, 122, 565, 33, 'ToInt16', 'ToInt16', 0, 0, 3, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2182, 121, 565, 33, 'ToDouble', 'ToDouble', 1, 1, 2, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2183, 120, 565, 33, 'ToDecimal', 'ToDecimal', 0, 0, 1, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2184, 655, 566, 211, 'Firefox', 'Firefox', 0, 0, 2, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2185, 829, 566, 211, 'Opera', 'Opera', 0, 0, 4, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2186, 656, 566, 211, 'Open source Webkit', 'Open source Webkit', 1, 1, 3, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2187, 654, 566, 211, 'Chrome', 'Chrome', 0, 0, 1, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2188, 730, 567, 74, 'CPU', 'CPU', 0, 0, 4, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2189, 244, 567, 74, 'Motherboard', 'Motherboard', 0, 0, 2, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2190, 243, 567, 74, 'Operating System', 'Operating System', 0, 0, 1, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2191, 245, 567, 74, 'Computer', 'Computer', 1, 1, 3, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2192, 502, 568, 160, 'A U B -B', 'A U B -B', 1, 1, 2, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2193, 503, 568, 160, 'A ∩ B', 'A ∩ B', 0, 0, 3, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2194, 948, 568, 160, 'B', 'B', 0, 0, 4, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2195, 501, 568, 160, 'A‘ (Complement of A)', 'A‘ (Complement of A)', 0, 0, 1, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2196, 386, 569, 121, 'Logical operators', 'Logical operators', 1, 0, 3, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2197, 1004, 569, 121, 'Assignment Operators', 'Assignment Operators', 0, 1, 4, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2198, 384, 569, 121, 'RElational operators', 'RElational operators', 0, 0, 1, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2199, 385, 569, 121, 'Bitwise operators', 'Bitwise operators', 0, 0, 2, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2200, 137, 570, 38, 'A and B', 'A and B', 1, 1, 3, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2201, 135, 570, 38, 'A try block identifies a block of code for which particular exceptions is activated.', 'A try block identifies a block of code for which particular exceptions is activated.', 0, 0, 1, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2202, 136, 570, 38, 'It is followed by one or more catch blocks.', 'It is followed by one or more catch blocks.', 0, 0, 2, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2203, 194, 571, 57, 'Both Row and Column', 'Both Row and Column', 0, 0, 3, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2204, 192, 571, 57, 'Row', 'Row', 1, 1, 1, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2205, 193, 571, 57, 'Column', 'Column', 0, 0, 2, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2206, 146, 572, 41, 'public static void main(String[] args)', 'public static void main(String[] args)', 1, 0, 3, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2207, 144, 572, 41, 'public static int main(String[] args)', 'public static int main(String[] args)', 0, 0, 1, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2208, 145, 572, 41, 'public int main(String[] args)', 'public int main(String[] args)', 0, 1, 2, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2209, 448, 573, 142, '{1, 3, 5, 7, 9}', '{1, 3, 5, 7, 9}', 1, 1, 2, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2210, 930, 573, 142, '{1, 5, 7, 9, 11}', '{1, 5, 7, 9, 11}', 0, 0, 4, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2211, 449, 573, 142, '{1, 2, 5, 9}', '{1, 2, 5, 9}', 0, 0, 3, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2212, 447, 573, 142, '{1, 2, 3}', '{1, 2, 3}', 0, 0, 1, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2213, 267, 574, 82, '-23', '-23', 0, 0, 1, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2214, 268, 574, 82, '-9', '-9', 1, 1, 2, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2215, 269, 574, 82, '-7', '-7', 0, 0, 3, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2216, 722, 574, 82, '22', '22', 0, 0, 4, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2217, 936, 575, 148, '9', '9', 0, 0, 4, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2218, 465, 575, 148, '8', '8', 1, 1, 1, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2219, 466, 575, 148, '6', '6', 0, 0, 2, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2220, 467, 575, 148, '7', '7', 0, 0, 3, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2221, 679, 576, 68, '[[#img26]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/tBuCNpani0PgWIFN01ztVOAj4FS4CBDAiTW9J8lB.png\" width=\"150\" height=\"150\" />', 0, 0, 4, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2222, 227, 576, 68, '[[#img25]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/rDh656ehodyPQmn7CxxjGK2H29sx2bh6LDz9INfN.png\" width=\"150\" height=\"150\" />', 0, 0, 3, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2223, 225, 576, 68, '[[#img23]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/IyLDJJaUUQ0aIZOMyEjh4JO72W4HpXtPj2CfMKZL.png\" width=\"150\" height=\"150\" />', 1, 1, 1, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2224, 226, 576, 68, '[[#img24]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/nVLwXww7AT2RBfzhH1tPQMxdLPF1iWuunHzErZRh.png\" width=\"150\" height=\"150\" />', 0, 0, 2, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2225, 416, 577, 131, 'Show()', 'Show()', 1, 0, 3, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2226, 415, 577, 131, 'Enable()', 'Enable()', 0, 0, 2, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2227, 414, 577, 131, 'Get()', 'Get()', 0, 1, 1, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2228, 125, 578, 34, '&</a>', '&</a>', 0, 0, 3, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2229, 123, 578, 34, 'sizeof', 'sizeof', 1, 1, 1, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2230, 902, 578, 34, '*', '*', 0, 0, 4, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2231, 124, 578, 34, 'typeof', 'typeof', 0, 0, 2, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2232, 1105, 579, 289, '7', '7', 1, 1, 2, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2233, 1107, 579, 289, '8', '8', 0, 0, 4, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2234, 1106, 579, 289, '6', '6', 0, 0, 3, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2235, 1104, 579, 289, '5', '5', 0, 0, 1, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2236, 950, 580, 162, 'All of the mentioned', 'All of the mentioned', 1, 1, 4, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2237, 508, 580, 162, 'n( B U C)=0', 'n( B U C)=0', 0, 0, 2, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2238, 507, 580, 162, 'n(A U B)=0', 'n(A U B)=0', 0, 0, 1, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2239, 509, 580, 162, 'n( A U B U C)=90', 'n( A U B U C)=90', 0, 0, 3, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2240, 237, 581, 72, 'Operating system software', 'Operating system software', 0, 0, 1, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2241, 239, 581, 72, 'Anti-virus software', 'Anti-virus software', 0, 0, 3, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2242, 238, 581, 72, 'Utility software', 'Utility software', 1, 1, 2, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2243, 732, 581, 72, 'Disk optimization software', 'Disk optimization software', 0, 0, 4, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2244, 630, 582, 203, 'MP4', 'MP4', 0, 0, 1, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2245, 821, 582, 203, 'MIDI', 'MIDI', 0, 0, 4, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2246, 631, 582, 203, 'MPEG', 'MPEG', 0, 0, 2, '2019-09-02 02:29:01', '2019-09-02 02:33:33'),
(2247, 632, 582, 203, 'AVI', 'AVI', 1, 1, 3, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2248, 1007, 583, 124, 'Explicit Types', 'Explicit Types', 0, 0, 4, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2249, 394, 583, 124, 'Value types', 'Value types', 0, 1, 2, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2250, 393, 583, 124, 'Reference type', 'Reference type', 1, 0, 1, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2251, 395, 583, 124, 'Data Type', 'Data Type', 0, 0, 3, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2252, 200, 584, 59, '6', '6', 0, 0, 3, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2253, 198, 584, 59, '3', '3', 0, 0, 1, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2254, 199, 584, 59, '0', '0', 0, 1, 2, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2255, 918, 584, 59, '1', '1', 1, 0, 4, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2256, 886, 585, 254, 'Authentication management', 'Authentication management', 0, 0, 3, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2257, 885, 585, 254, 'Cookies management', 'Cookies management', 0, 0, 2, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2258, 887, 585, 254, 'None of the above', 'None of the above', 0, 0, 4, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2259, 884, 585, 254, 'httprequest(get/post) and returns response from the server', 'httprequest(get/post) and returns response from the server', 1, 1, 1, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2260, 399, 586, 126, 'CheckListBox control', 'CheckListBox control', 0, 0, 1, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2261, 400, 586, 126, 'ListBox control', 'ListBox control', 1, 0, 2, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2262, 401, 586, 126, 'TextBox control', 'TextBox control', 0, 1, 3, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2263, 685, 587, 219, 'Switch', 'Switch', 0, 0, 2, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2264, 710, 587, 219, 'Wireless access point', 'Wireless access point', 0, 0, 4, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2265, 684, 587, 219, 'Repeater', 'Repeater', 0, 0, 1, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2266, 686, 587, 219, 'Modem', 'Modem', 1, 1, 3, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2267, 290, 588, 89, 'Virtual Machine', 'Virtual Machine', 0, 0, 3, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2268, 288, 588, 89, 'Virtual private network', 'Virtual private network', 0, 0, 1, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2269, 289, 588, 89, 'Virtual memory', 'Virtual memory', 1, 1, 2, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2270, 712, 588, 89, 'None of them', 'None of them', 0, 0, 4, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2271, 718, 589, 223, '100100', '100100', 0, 0, 4, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2272, 700, 589, 223, '100001', '100001', 0, 0, 2, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2273, 699, 589, 223, '110011', '110011', 0, 0, 1, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2274, 701, 589, 223, '110100', '110100', 1, 1, 3, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2275, 486, 590, 155, '4', '4', 1, 1, 1, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2276, 487, 590, 155, '5', '5', 0, 0, 2, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2277, 943, 590, 155, '7', '7', 0, 0, 4, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2278, 488, 590, 155, '6', '6', 0, 0, 3, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2279, 119, 591, 32, 'foreach', 'foreach', 0, 0, 3, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2280, 900, 591, 32, 'All of the choices', 'All of the choices', 1, 1, 4, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2281, 117, 591, 32, 'abstract', 'abstract', 0, 0, 1, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2282, 118, 591, 32, 'as', 'as', 0, 0, 2, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2283, 410, 592, 129, 'ListView Control', 'ListView Control', 0, 0, 3, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2284, 408, 592, 129, 'GroupBox control', 'GroupBox control', 0, 0, 1, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2285, 409, 592, 129, 'LinkLabel control', 'LinkLabel control', 1, 1, 2, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2286, 429, 593, 136, 'creates a button control', 'creates a button control', 0, 0, 1, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2287, 1012, 593, 136, 'a and c', 'a and c', 1, 0, 4, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2288, 430, 593, 136, 'initializes a button control', 'initializes a button control', 0, 1, 2, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2289, 431, 593, 136, 'instantiates button control', 'instantiates button control', 0, 0, 3, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2290, 197, 594, 58, '0 1 2 3 4 5 6 7 8 9', '0 1 2 3 4 5 6 7 8 9', 0, 0, 3, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2291, 917, 594, 58, '1 2 3 4 5 6 7 8 9 10', '1 2 3 4 5 6 7 8 9 10', 0, 0, 4, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2292, 196, 594, 58, '1 3 5 7 9', '1 3 5 7 9', 0, 0, 2, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2293, 195, 594, 58, '0 2 4 6 8', '0 2 4 6 8', 1, 1, 1, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2294, 978, 595, 267, 'smallest previous integer', 'smallest previous integer', 0, 0, 1, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2295, 979, 595, 267, 'greatest previous integer', 'greatest previous integer', 1, 1, 2, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2296, 980, 595, 267, 'smallest following integer', 'smallest following integer', 0, 0, 3, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2297, 251, 596, 76, 'virtual memory', 'virtual memory', 0, 0, 3, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2298, 728, 596, 76, 'back up', 'back up', 1, 1, 4, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2299, 249, 596, 76, 'spooling', 'spooling', 0, 0, 1, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2300, 250, 596, 76, 'buffering', 'buffering', 0, 0, 2, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2301, 456, 597, 145, '{(1, a), (1, b), (2, a), (b, b)}', '{(1, a), (1, b), (2, a), (b, b)}', 0, 0, 1, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2302, 458, 597, 145, '{(1, a), (2, a), (1, b), (2, b)}', '{(1, a), (2, a), (1, b), (2, b)}', 1, 1, 3, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2303, 933, 597, 145, '{(1, 1), (a, a), (2, a), (1, b)}', '{(1, 1), (a, a), (2, a), (1, b)}', 0, 0, 4, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2304, 457, 597, 145, '{(1, 1), (2, 2), (a, a), (b, b)}', '{(1, 1), (2, 2), (a, a), (b, b)}', 0, 0, 2, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2305, 1033, 598, 278, 'Message1\nMessage4', 'Message1<br />\nMessage4', 0, 0, 1, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2306, 1036, 598, 278, 'Message1\nMessage3\nMessage2\nMessage4', 'Message1<br />\nMessage3<br />\nMessage2<br />\nMessage4', 0, 0, 4, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2307, 1034, 598, 278, 'Message1\nMessage2\nMessage3\nMessage4', 'Message1<br />\nMessage2<br />\nMessage3<br />\nMessage4', 0, 0, 2, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2308, 1035, 598, 278, 'Message1\nMessage3\nMessage4', 'Message1<br />\nMessage3<br />\nMessage4', 1, 1, 3, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2309, 1021, 599, 275, 'Only one catch block for each try block.', 'Only one catch block for each try block.', 0, 0, 1, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2310, 1022, 599, 275, 'Several catch blocks for a try block, arranged in order starting with Exception and ending with the most specific exception.', 'Several catch blocks for a try block, arranged in order starting with Exception and ending with the most specific exception.', 0, 0, 2, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2311, 1024, 599, 275, 'The catch blocks should be used only when a finally block is not used.', 'The catch blocks should be used only when a finally block is not used.', 0, 0, 4, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2312, 1023, 599, 275, 'Several catch blocks within one try block, arranged starting with the most specific exception and ending with Exception.', 'Several catch blocks within one try block, arranged starting with the most specific exception and ending with Exception.', 1, 1, 3, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2313, 300, 600, 93, 'x ≤ 5', 'x ≤ 5', 0, 0, 1, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2314, 1062, 600, 93, 'x ≤ -5', 'x ≤ -5', 0, 0, 4, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2315, 301, 600, 93, 'x ≥ 5', 'x ≥ 5', 1, 1, 2, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2316, 302, 600, 93, 'x ≥ -5', 'x ≥ -5', 0, 0, 3, '2019-09-02 02:29:01', '2019-09-02 02:33:34'),
(2317, 841, 601, 243, 'X.style', 'X.style', 0, 0, 2, '2019-09-02 02:34:27', '2019-09-02 02:39:34'),
(2318, 842, 601, 243, 'manifest.XML', 'manifest.XML', 0, 0, 3, '2019-09-02 02:34:27', '2019-09-02 02:39:34'),
(2319, 843, 601, 243, 'application', 'application', 0, 0, 4, '2019-09-02 02:34:27', '2019-09-02 02:39:34'),
(2320, 840, 601, 243, 'R.style', 'R.style', 1, 1, 1, '2019-09-02 02:34:27', '2019-09-02 02:39:34'),
(2321, 679, 602, 68, '[[#img26]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/tBuCNpani0PgWIFN01ztVOAj4FS4CBDAiTW9J8lB.png\" width=\"150\" height=\"150\" />', 0, 0, 4, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2322, 226, 602, 68, '[[#img24]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/nVLwXww7AT2RBfzhH1tPQMxdLPF1iWuunHzErZRh.png\" width=\"150\" height=\"150\" />', 0, 0, 2, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2323, 225, 602, 68, '[[#img23]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/IyLDJJaUUQ0aIZOMyEjh4JO72W4HpXtPj2CfMKZL.png\" width=\"150\" height=\"150\" />', 1, 1, 1, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2324, 227, 602, 68, '[[#img25]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/rDh656ehodyPQmn7CxxjGK2H29sx2bh6LDz9INfN.png\" width=\"150\" height=\"150\" />', 0, 0, 3, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2325, 845, 603, 244, 'updates()', 'updates()', 0, 0, 2, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2326, 846, 603, 244, 'commit()', 'commit()', 0, 0, 3, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2327, 844, 603, 244, 'commitUpdates()', 'commitUpdates()', 1, 1, 1, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2328, 847, 603, 244, 'none of these', 'none of these', 0, 0, 4, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2329, 711, 604, 90, 'megabyte', 'megabyte', 0, 0, 4, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2330, 291, 604, 90, 'bit', 'bit', 0, 0, 1, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2331, 292, 604, 90, 'byte', 'byte', 1, 1, 2, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2332, 293, 604, 90, 'kilobyte', 'kilobyte', 0, 0, 3, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2333, 289, 605, 89, 'Virtual memory', 'Virtual memory', 1, 1, 2, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2334, 712, 605, 89, 'None of them', 'None of them', 0, 0, 4, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2335, 290, 605, 89, 'Virtual Machine', 'Virtual Machine', 0, 0, 3, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2336, 288, 605, 89, 'Virtual private network', 'Virtual private network', 0, 0, 1, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2337, 435, 606, 138, 'Trys', 'Trys', 0, 0, 1, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2338, 1014, 606, 138, 'a and b', 'a and b', 0, 0, 4, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2339, 436, 606, 138, 'Catches', 'Catches', 0, 0, 2, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2340, 437, 606, 138, 'Throws', 'Throws', 1, 1, 3, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2341, 878, 607, 252, 'A mandatory class in android', 'A mandatory class in android', 0, 0, 3, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2342, 879, 607, 252, 'None of the above', 'None of the above', 0, 0, 4, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2343, 876, 607, 252, 'A class used to hold states and objects', 'A class used to hold states and objects', 1, 1, 1, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2344, 877, 607, 252, 'A bean class can be passed from one activity to another.', 'A bean class can be passed from one activity to another.', 0, 0, 2, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2345, 852, 608, 246, 'res/', 'res/', 0, 0, 1, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2346, 855, 608, 246, 'bin/', 'bin/', 0, 0, 4, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2347, 853, 608, 246, 'assets/', 'assets/', 0, 0, 2, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2348, 854, 608, 246, 'src/', 'src/', 1, 1, 3, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2349, 401, 609, 126, 'TextBox control', 'TextBox control', 0, 0, 3, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2350, 400, 609, 126, 'ListBox control', 'ListBox control', 1, 1, 2, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2351, 399, 609, 126, 'CheckListBox control', 'CheckListBox control', 0, 0, 1, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2352, 239, 610, 72, 'Anti-virus software', 'Anti-virus software', 0, 0, 3, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2353, 732, 610, 72, 'Disk optimization software', 'Disk optimization software', 0, 0, 4, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2354, 237, 610, 72, 'Operating system software', 'Operating system software', 0, 0, 1, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2355, 238, 610, 72, 'Utility software', 'Utility software', 1, 1, 2, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2356, 628, 611, 202, 'Programming Language', 'Programming Language', 0, 0, 2, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2357, 627, 611, 202, 'Desktop Operatng System', 'Desktop Operatng System', 0, 0, 1, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2358, 820, 611, 202, 'Database', 'Database', 0, 1, 4, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2359, 629, 611, 202, 'Mobile Operating System', 'Mobile Operating System', 1, 0, 3, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2360, 664, 612, 214, 'Windows kernel', 'Windows kernel', 0, 0, 2, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2361, 663, 612, 214, 'Linux kernel', 'Linux kernel', 1, 1, 1, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2362, 665, 612, 214, 'MAC kernel', 'MAC kernel', 0, 0, 3, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2363, 832, 612, 214, 'Hybrid kernel', 'Hybrid kernel', 0, 0, 4, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2364, 689, 613, 220, 'MICR', 'MICR', 0, 0, 3, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2365, 709, 613, 220, 'RFID readers', 'RFID readers', 0, 0, 4, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2366, 688, 613, 220, 'scanner', 'scanner', 1, 1, 2, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2367, 687, 613, 220, 'digital camera', 'digital camera', 0, 0, 1, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2368, 657, 614, 212, 'Apple', 'Apple', 0, 0, 1, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2369, 830, 614, 212, 'No company', 'No company', 0, 0, 4, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2370, 659, 614, 212, 'Nokia', 'Nokia', 0, 0, 3, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2371, 658, 614, 212, 'Google', 'Google', 1, 1, 2, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2372, 1021, 615, 275, 'Only one catch block for each try block.', 'Only one catch block for each try block.', 0, 0, 1, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2373, 1023, 615, 275, 'Several catch blocks within one try block, arranged starting with the most specific exception and ending with Exception.', 'Several catch blocks within one try block, arranged starting with the most specific exception and ending with Exception.', 1, 1, 3, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2374, 1024, 615, 275, 'The catch blocks should be used only when a finally block is not used.', 'The catch blocks should be used only when a finally block is not used.', 0, 0, 4, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2375, 1022, 615, 275, 'Several catch blocks for a try block, arranged in order starting with Exception and ending with the most specific exception.', 'Several catch blocks for a try block, arranged in order starting with Exception and ending with the most specific exception.', 0, 0, 2, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2376, 176, 616, 51, 'Compilation error', 'Compilation error', 1, 1, 3, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2377, 175, 616, 51, '8', '8', 0, 0, 2, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2378, 911, 616, 51, 'Runtime error', 'Runtime error', 0, 0, 4, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2379, 174, 616, 51, '9', '9', 0, 0, 1, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2380, 166, 617, 48, 'JRE is an application development framework.', 'JRE is an application development framework.', 0, 0, 2, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2381, 165, 617, 48, 'JRE is a java based GUI application.', 'JRE is a java based GUI application.', 0, 0, 1, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2382, 167, 617, 48, 'JRE is an implementation of the Java Virtual Machine which executes Java programs.', 'JRE is an implementation of the Java Virtual Machine which executes Java programs.', 1, 1, 3, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2383, 699, 618, 223, '110011', '110011', 0, 0, 1, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2384, 718, 618, 223, '100100', '100100', 0, 0, 4, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2385, 701, 618, 223, '110100', '110100', 1, 1, 3, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2386, 700, 618, 223, '100001', '100001', 0, 0, 2, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2387, 988, 619, 270, '45', '45', 0, 0, 2, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2388, 989, 619, 270, '25', '25', 0, 1, 3, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2389, 987, 619, 270, '35', '35', 1, 0, 1, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2390, 470, 620, 149, '{1, 2, 1, 2}', '{1, 2, 1, 2}', 0, 0, 3, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2391, 469, 620, 149, '{1, 2, 5, 6}', '{1, 2, 5, 6}', 1, 0, 2, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2392, 468, 620, 149, '{1, 2, 6, 1}', '{1, 2, 6, 1}', 0, 1, 1, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2393, 937, 620, 149, '{1, 5, 6, 3}', '{1, 5, 6, 3}', 0, 0, 4, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2394, 393, 621, 124, 'Reference type', 'Reference type', 1, 1, 1, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2395, 1007, 621, 124, 'Explicit Types', 'Explicit Types', 0, 0, 4, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2396, 395, 621, 124, 'Data Type', 'Data Type', 0, 0, 3, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2397, 394, 621, 124, 'Value types', 'Value types', 0, 0, 2, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2398, 631, 622, 203, 'MPEG', 'MPEG', 0, 0, 2, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2399, 632, 622, 203, 'AVI', 'AVI', 1, 1, 3, '2019-09-02 02:34:27', '2019-09-02 02:39:35'),
(2400, 630, 622, 203, 'MP4', 'MP4', 0, 0, 1, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2401, 821, 622, 203, 'MIDI', 'MIDI', 0, 0, 4, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2402, 144, 623, 41, 'public static int main(String[] args)', 'public static int main(String[] args)', 0, 0, 1, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2403, 145, 623, 41, 'public int main(String[] args)', 'public int main(String[] args)', 0, 0, 2, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2404, 146, 623, 41, 'public static void main(String[] args)', 'public static void main(String[] args)', 1, 1, 3, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2405, 258, 624, 79, 'Control unit', 'Control unit', 0, 0, 1, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2406, 260, 624, 79, 'Registers', 'Registers', 0, 0, 3, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2407, 259, 624, 79, 'ALU', 'ALU', 0, 0, 2, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2408, 725, 624, 79, 'Primary Storage', 'Primary Storage', 1, 1, 4, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2409, 449, 625, 142, '{1, 2, 5, 9}', '{1, 2, 5, 9}', 0, 0, 3, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2410, 447, 625, 142, '{1, 2, 3}', '{1, 2, 3}', 0, 0, 1, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2411, 930, 625, 142, '{1, 5, 7, 9, 11}', '{1, 5, 7, 9, 11}', 0, 1, 4, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2412, 448, 625, 142, '{1, 3, 5, 7, 9}', '{1, 3, 5, 7, 9}', 1, 0, 2, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2413, 245, 626, 74, 'Computer', 'Computer', 1, 1, 3, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2414, 730, 626, 74, 'CPU', 'CPU', 0, 0, 4, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2415, 243, 626, 74, 'Operating System', 'Operating System', 0, 0, 1, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2416, 244, 626, 74, 'Motherboard', 'Motherboard', 0, 0, 2, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2417, 1104, 627, 289, '5', '5', 0, 0, 1, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2418, 1106, 627, 289, '6', '6', 0, 0, 3, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2419, 1107, 627, 289, '8', '8', 0, 0, 4, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2420, 1105, 627, 289, '7', '7', 1, 1, 2, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2421, 1088, 628, 285, '4 π <sup>2</sup>', '4 π <sup>2</sup>', 0, 0, 1, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2422, 1090, 628, 285, '4 π', '4 π', 0, 0, 3, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2423, 1089, 628, 285, '2 π', '2 π', 0, 0, 2, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2424, 1091, 628, 285, 'π', 'π', 1, 1, 4, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2425, 442, 629, 140, 'Reference type', 'Reference type', 0, 0, 2, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2426, 1016, 629, 140, 'Object', 'Object', 0, 0, 4, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2427, 441, 629, 140, 'Constant', 'Constant', 0, 0, 1, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2428, 443, 629, 140, 'Variable', 'Variable', 1, 1, 3, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2429, 415, 630, 131, 'Enable()', 'Enable()', 0, 0, 2, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2430, 416, 630, 131, 'Show()', 'Show()', 1, 1, 3, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2431, 414, 630, 131, 'Get()', 'Get()', 0, 0, 1, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2432, 380, 631, 119, 'while', 'while', 0, 0, 3, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2433, 379, 631, 119, 'do while', 'do while', 0, 1, 2, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2434, 378, 631, 119, 'forEach loop', 'forEach loop', 0, 0, 1, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2435, 1002, 631, 119, 'for loop', 'for loop', 1, 0, 4, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2436, 360, 632, 113, '5!', '5!', 0, 0, 1, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2437, 362, 632, 113, '2!', '2!', 0, 0, 3, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2438, 1082, 632, 113, '3! * 2!', '3! * 2!', 0, 0, 4, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2439, 361, 632, 113, '3!', '3!', 1, 1, 2, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2440, 906, 633, 39, 'Not assigned', 'Not assigned', 0, 0, 4, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2441, 139, 633, 39, '0', '0', 0, 0, 2, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2442, 140, 633, 39, 'Depends upon the type of variable', 'Depends upon the type of variable', 1, 1, 3, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2443, 138, 633, 39, 'null', 'null', 0, 0, 1, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2444, 1092, 634, 286, '0.057', '0.057', 1, 1, 1, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2445, 1095, 634, 286, '0', '0', 0, 0, 4, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2446, 1093, 634, 286, '0.478', '0.478', 0, 0, 2, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2447, 1094, 634, 286, '0.001', '0.001', 0, 0, 3, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2448, 502, 635, 160, 'A U B -B', 'A U B -B', 1, 0, 2, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2449, 948, 635, 160, 'B', 'B', 0, 1, 4, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2450, 503, 635, 160, 'A ∩ B', 'A ∩ B', 0, 0, 3, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2451, 501, 635, 160, 'A‘ (Complement of A)', 'A‘ (Complement of A)', 0, 0, 1, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2452, 364, 636, 114, 'mean = 10 , standard deviation = 6', 'mean = 10 , standard deviation = 6', 0, 0, 2, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2453, 1083, 636, 114, 'mean = 10 , standard deviation = 1', 'mean = 10 , standard deviation = 1', 0, 0, 4, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2454, 363, 636, 114, 'mean = 15 , standard deviation = 6', 'mean = 15 , standard deviation = 6', 0, 0, 1, '2019-09-02 02:34:28', '2019-09-02 02:39:35'),
(2455, 365, 636, 114, 'mean = 15 , standard deviation = 1', 'mean = 15 , standard deviation = 1', 1, 1, 3, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2456, 173, 637, 50, 'Thread starts running.', 'Thread starts running.', 0, 0, 3, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2457, 172, 637, 50, 'Thread returns to the waiting state.', 'Thread returns to the waiting state.', 0, 0, 2, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2458, 171, 637, 50, 'Thread returns to the ready state.', 'Thread returns to the ready state.', 1, 1, 1, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2459, 667, 638, 215, '2.3 (Gingerbread)', '2.3 (Gingerbread)', 1, 1, 2, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2460, 666, 638, 215, '3.0 (Honeycomb)', '3.0 (Honeycomb)', 0, 0, 1, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2461, 833, 638, 215, '2.2 (Froyo)', '2.2 (Froyo)', 0, 0, 4, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2462, 668, 638, 215, '2.6', '2.6', 0, 0, 3, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2463, 206, 639, 61, 'heap space and stack space', 'heap space and stack space', 0, 0, 3, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2464, 920, 639, 61, 'first generation memory', 'first generation memory', 0, 0, 4, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2465, 205, 639, 61, 'stack space', 'stack space', 0, 0, 2, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2466, 204, 639, 61, 'heap space', 'heap space', 1, 1, 1, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2467, 1034, 640, 278, 'Message1\nMessage2\nMessage3\nMessage4', 'Message1<br />\nMessage2<br />\nMessage3<br />\nMessage4', 0, 0, 2, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2468, 1036, 640, 278, 'Message1\nMessage3\nMessage2\nMessage4', 'Message1<br />\nMessage3<br />\nMessage2<br />\nMessage4', 0, 0, 4, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2469, 1035, 640, 278, 'Message1\nMessage3\nMessage4', 'Message1<br />\nMessage3<br />\nMessage4', 1, 0, 3, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2470, 1033, 640, 278, 'Message1\nMessage4', 'Message1<br />\nMessage4', 0, 1, 1, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2471, 509, 641, 162, 'n( A U B U C)=90', 'n( A U B U C)=90', 0, 0, 3, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2472, 507, 641, 162, 'n(A U B)=0', 'n(A U B)=0', 0, 0, 1, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2473, 950, 641, 162, 'All of the mentioned', 'All of the mentioned', 1, 0, 4, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2474, 508, 641, 162, 'n( B U C)=0', 'n( B U C)=0', 0, 1, 2, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2475, 284, 642, 87, 'decode, fetch, store and execute', 'decode, fetch, store and execute', 0, 0, 3, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2476, 283, 642, 87, 'decode, execute, store and fetch', 'decode, execute, store and fetch', 0, 0, 2, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2477, 282, 642, 87, 'fetch, execute, store and decode', 'fetch, execute, store and decode', 0, 0, 1, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2478, 715, 642, 87, 'fetch, decode, execute and store', 'fetch, decode, execute and store', 1, 1, 4, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2479, 179, 643, 52, '400', '400', 0, 0, 3, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2480, 912, 643, 52, '100', '100', 0, 0, 4, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2481, 178, 643, 52, '200', '200', 1, 1, 2, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2482, 177, 643, 52, '12', '12', 0, 0, 1, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2483, 199, 644, 59, '0', '0', 0, 0, 2, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2484, 200, 644, 59, '6', '6', 0, 0, 3, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2485, 918, 644, 59, '1', '1', 1, 1, 4, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2486, 198, 644, 59, '3', '3', 0, 0, 1, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2487, 488, 645, 155, '6', '6', 0, 0, 3, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2488, 486, 645, 155, '4', '4', 1, 0, 1, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2489, 943, 645, 155, '7', '7', 0, 1, 4, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2490, 487, 645, 155, '5', '5', 0, 0, 2, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2491, 253, 646, 77, 'syntax error', 'syntax error', 0, 0, 2, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2492, 727, 646, 77, 'linker error', 'linker error', 0, 0, 4, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2493, 254, 646, 77, 'run time error', 'run time error', 0, 0, 3, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2494, 252, 646, 77, 'logic error', 'logic error', 1, 1, 1, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2495, 298, 647, 92, 'x > 1', 'x > 1', 0, 0, 2, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2496, 297, 647, 92, 'x < 6', 'x < 6', 0, 0, 1, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2497, 1061, 647, 92, 'x > 6', 'x > 6', 0, 0, 4, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2498, 299, 647, 92, 'x < -1', 'x < -1', 1, 1, 3, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2499, 1056, 648, 283, 'Set the CausesValidation property of the Help button to true.', 'Set the CausesValidation property of the Help button to true.', 0, 0, 4, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2500, 1053, 648, 283, 'Set the CausesValidation property of the text box to false.', 'Set the CausesValidation property of the text box to false.', 0, 0, 1, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2501, 1054, 648, 283, 'Set the CausesValidation property of the text box to true.', 'Set the CausesValidation property of the text box to true.', 0, 1, 2, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2502, 1055, 648, 283, 'Set the CausesValidation property of the Help button to false.', 'Set the CausesValidation property of the Help button to false.', 1, 0, 3, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2503, 710, 649, 219, 'Wireless access point', 'Wireless access point', 0, 0, 4, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2504, 686, 649, 219, 'Modem', 'Modem', 1, 1, 3, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2505, 685, 649, 219, 'Switch', 'Switch', 0, 0, 2, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2506, 684, 649, 219, 'Repeater', 'Repeater', 0, 0, 1, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2507, 714, 650, 225, '135', '135', 0, 0, 4, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2508, 707, 650, 225, '44', '44', 0, 0, 3, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2509, 705, 650, 225, '531', '531', 0, 0, 1, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2510, 706, 650, 225, '127', '127', 1, 1, 2, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2511, 643, 651, 207, 'Application Debug Bridge', 'Application Debug Bridge', 0, 0, 2, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2512, 642, 651, 207, 'Android Debug Bridge', 'Android Debug Bridge', 1, 1, 1, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2513, 644, 651, 207, 'Android data bridge', 'Android data bridge', 0, 0, 3, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2514, 825, 651, 207, 'Application data bridge', 'Application data bridge', 0, 0, 4, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2515, 471, 652, 150, '{1, 2}', '{1, 2}', 1, 0, 1, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2516, 473, 652, 150, '{2, 5}', '{2, 5}', 0, 1, 3, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2517, 472, 652, 150, '{5, 6}', '{5, 6}', 0, 0, 2, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2518, 938, 652, 150, '{1, 6}', '{1, 6}', 0, 0, 4, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2519, 136, 653, 38, 'It is followed by one or more catch blocks.', 'It is followed by one or more catch blocks.', 0, 0, 2, '2019-09-02 02:34:28', '2019-09-02 02:39:36'),
(2520, 137, 653, 38, 'A and B', 'A and B', 1, 1, 3, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2521, 135, 653, 38, 'A try block identifies a block of code for which particular exceptions is activated.', 'A try block identifies a block of code for which particular exceptions is activated.', 0, 0, 1, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2522, 454, 654, 144, '5', '5', 1, 1, 2, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2523, 453, 654, 144, '10', '10', 0, 0, 1, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2524, 455, 654, 144, '3', '3', 0, 0, 3, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2525, 932, 654, 144, '20', '20', 0, 0, 4, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2526, 1077, 655, 108, '1 500 000', '1 500 000', 0, 0, 4, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2527, 346, 655, 108, '1 852 000', '1 852 000', 0, 0, 2, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2528, 347, 655, 108, '1 000 000', '1 000 000', 0, 0, 3, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2529, 345, 655, 108, '1 846 000', '1 846 000', 1, 1, 1, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2530, 895, 656, 256, 'Cursor is used to store data permanently.', 'Cursor is used to store data permanently.', 0, 0, 4, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2531, 893, 656, 256, 'Cursor is used to store the temporary result.', 'Cursor is used to store the temporary result.', 0, 0, 2, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2532, 892, 656, 256, 'Content values are key pair values, which are updated or inserted in the database', 'Content values are key pair values, which are updated or inserted in the database', 0, 0, 1, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2533, 894, 656, 256, 'A & B', 'A & B', 1, 1, 3, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2534, 318, 657, 99, '6.25', '6.25', 0, 0, 1, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2535, 1068, 657, 99, '4.753', '4.753', 0, 0, 4, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2536, 319, 657, 99, '1.756', '1.756', 0, 0, 2, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2537, 320, 657, 99, '2.322', '2.322', 1, 1, 3, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2538, 312, 658, 97, 'i - 5', 'i - 5', 0, 0, 1, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2539, 313, 658, 97, '7 - 3i', '7 - 3i', 0, 0, 2, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2540, 314, 658, 97, 'i - 12', 'i - 12', 1, 1, 3, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2541, 1066, 658, 97, '3i - 10', '3i - 10', 0, 0, 4, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2542, 308, 659, 95, '-12', '-12', 0, 0, 3, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2543, 1064, 659, 95, '-12i', '-12i', 0, 0, 4, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2544, 306, 659, 95, '12i', '12i', 1, 1, 1, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2545, 307, 659, 95, 'You cannot find the square root of a negative number', 'You cannot find the square root of a negative number', 0, 0, 2, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2546, 267, 660, 82, '-23', '-23', 0, 0, 1, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2547, 269, 660, 82, '-7', '-7', 0, 0, 3, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2548, 268, 660, 82, '-9', '-9', 1, 1, 2, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2549, 722, 660, 82, '22', '22', 0, 0, 4, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2550, 433, 661, 137, 'Maintain the same return type and arguments as the parent class, but implement it differently', 'Maintain the same return type and arguments as the parent class, but implement it differently', 1, 0, 2, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2551, 434, 661, 137, 'Have different return types and arguments than the parent class', 'Have different return types and arguments than the parent class', 0, 0, 3, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2552, 1013, 661, 137, 'Are Virtual', 'Are Virtual', 0, 1, 4, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2553, 432, 661, 137, 'Override the parent class methods but maintain the implementation', 'Override the parent class methods but maintain the implementation', 0, 0, 1, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2554, 939, 662, 151, 'Complement', 'Complement', 0, 0, 4, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2555, 474, 662, 151, 'Union', 'Union', 0, 0, 1, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2556, 476, 662, 151, 'Intersection', 'Intersection', 1, 1, 3, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2557, 475, 662, 151, 'Difference', 'Difference', 0, 0, 2, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2558, 886, 663, 254, 'Authentication management', 'Authentication management', 0, 0, 3, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2559, 884, 663, 254, 'httprequest(get/post) and returns response from the server', 'httprequest(get/post) and returns response from the server', 1, 1, 1, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2560, 887, 663, 254, 'None of the above', 'None of the above', 0, 0, 4, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2561, 885, 663, 254, 'Cookies management', 'Cookies management', 0, 0, 2, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2562, 450, 664, 143, 'One', 'One', 1, 0, 1, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2563, 452, 664, 143, 'Zero', 'Zero', 0, 1, 3, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2564, 931, 664, 143, 'Three', 'Three', 0, 0, 4, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2565, 451, 664, 143, 'Two', 'Two', 0, 0, 2, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2566, 458, 665, 145, '{(1, a), (2, a), (1, b), (2, b)}', '{(1, a), (2, a), (1, b), (2, b)}', 1, 0, 3, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2567, 933, 665, 145, '{(1, 1), (a, a), (2, a), (1, b)}', '{(1, 1), (a, a), (2, a), (1, b)}', 0, 1, 4, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2568, 456, 665, 145, '{(1, a), (1, b), (2, a), (b, b)}', '{(1, a), (1, b), (2, a), (b, b)}', 0, 0, 1, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2569, 457, 665, 145, '{(1, 1), (2, 2), (a, a), (b, b)}', '{(1, 1), (2, 2), (a, a), (b, b)}', 0, 0, 2, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2570, 255, 666, 78, 'ASCII', 'ASCII', 0, 0, 1, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2571, 257, 666, 78, 'EBCDIC', 'EBCDIC', 0, 0, 3, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2572, 726, 666, 78, 'ANSI', 'ANSI', 0, 0, 4, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2573, 256, 666, 78, 'Unicode', 'Unicode', 1, 1, 2, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2574, 124, 667, 34, 'typeof', 'typeof', 0, 0, 2, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2575, 125, 667, 34, '&</a>', '&</a>', 0, 0, 3, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2576, 123, 667, 34, 'sizeof', 'sizeof', 1, 1, 1, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2577, 902, 667, 34, '*', '*', 0, 0, 4, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2578, 403, 668, 127, 'Textbox control', 'Textbox control', 0, 0, 2, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2579, 402, 668, 127, 'Radio Button', 'Radio Button', 0, 1, 1, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2580, 404, 668, 127, 'Button control', 'Button control', 1, 0, 3, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2581, 384, 669, 121, 'RElational operators', 'RElational operators', 0, 0, 1, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2582, 1004, 669, 121, 'Assignment Operators', 'Assignment Operators', 0, 0, 4, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2583, 385, 669, 121, 'Bitwise operators', 'Bitwise operators', 0, 1, 2, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2584, 386, 669, 121, 'Logical operators', 'Logical operators', 1, 0, 3, '2019-09-02 02:34:29', '2019-09-02 02:39:36'),
(2585, 301, 670, 93, 'x ≥ 5', 'x ≥ 5', 1, 1, 2, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2586, 300, 670, 93, 'x ≤ 5', 'x ≤ 5', 0, 0, 1, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2587, 1062, 670, 93, 'x ≤ -5', 'x ≤ -5', 0, 0, 4, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2588, 302, 670, 93, 'x ≥ -5', 'x ≥ -5', 0, 0, 3, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2589, 192, 671, 57, 'Row', 'Row', 1, 1, 1, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2590, 194, 671, 57, 'Both Row and Column', 'Both Row and Column', 0, 0, 3, '2019-09-02 02:34:29', '2019-09-02 02:39:37');
INSERT INTO `answer_sheet_test_question_choices` (`id`, `choice_id`, `answer_sheet_test_question_id`, `test_question_id`, `body`, `body_html`, `is_correct`, `is_selected`, `pos_order`, `created_at`, `updated_at`) VALUES
(2591, 193, 671, 57, 'Column', 'Column', 0, 0, 2, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2592, 491, 672, 156, '4, 12', '4, 12', 0, 0, 3, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2593, 944, 672, 156, 'None of the choices', 'None of the choices', 0, 0, 4, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2594, 490, 672, 156, '8, 12', '8, 12', 1, 1, 2, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2595, 489, 672, 156, '4, 8', '4, 8', 0, 0, 1, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2596, 417, 673, 132, 'If', 'If', 0, 0, 1, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2597, 418, 673, 132, 'Switch', 'Switch', 1, 0, 2, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2598, 419, 673, 132, 'For', 'For', 0, 0, 3, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2599, 1009, 673, 132, 'While', 'While', 0, 1, 4, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2600, 656, 674, 211, 'Open source Webkit', 'Open source Webkit', 1, 1, 3, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2601, 655, 674, 211, 'Firefox', 'Firefox', 0, 0, 2, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2602, 829, 674, 211, 'Opera', 'Opera', 0, 0, 4, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2603, 654, 674, 211, 'Chrome', 'Chrome', 0, 0, 1, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2604, 120, 675, 33, 'ToDecimal', 'ToDecimal', 0, 0, 1, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2605, 122, 675, 33, 'ToInt16', 'ToInt16', 0, 0, 3, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2606, 121, 675, 33, 'ToDouble', 'ToDouble', 1, 1, 2, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2607, 901, 675, 33, 'ToInt32', 'ToInt32', 0, 0, 4, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2608, 2, 676, 1, 'x = 4', 'x = 4', 0, 0, 2, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2609, 1, 676, 1, 'x = 1', 'x = 1', 1, 1, 1, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2610, 3, 676, 1, 'x = 2', 'x = 2', 0, 0, 3, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2611, 633, 677, 204, 'Multitasking', 'Multitasking', 0, 0, 1, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2612, 822, 677, 204, 'All of the choices', 'All of the choices', 1, 1, 4, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2613, 634, 677, 204, 'Bluetooth', 'Bluetooth', 0, 0, 2, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2614, 635, 677, 204, 'Video calling', 'Video calling', 0, 0, 3, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2615, 467, 678, 148, '7', '7', 0, 0, 3, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2616, 936, 678, 148, '9', '9', 0, 0, 4, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2617, 466, 678, 148, '6', '6', 0, 0, 2, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2618, 465, 678, 148, '8', '8', 1, 1, 1, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2619, 954, 679, 260, '10', '10', 0, 0, 4, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2620, 952, 679, 260, '20', '20', 0, 0, 2, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2621, 951, 679, 260, '35', '35', 1, 1, 1, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2622, 953, 679, 260, '30', '30', 0, 0, 3, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2623, 142, 680, 40, 'object.', 'object.', 0, 0, 2, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2624, 141, 680, 40, 'type.', 'type.', 1, 1, 1, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2625, 143, 680, 40, 'Both of the above.', 'Both of the above.', 0, 0, 3, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2626, 1005, 681, 122, 'Assignment opeartors', 'Assignment opeartors', 0, 0, 4, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2627, 388, 681, 122, 'Binary operators', 'Binary operators', 0, 0, 2, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2628, 387, 681, 122, 'unary operators', 'unary operators', 1, 0, 1, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2629, 389, 681, 122, 'Logical operators', 'Logical operators', 0, 1, 3, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2630, 408, 682, 129, 'GroupBox control', 'GroupBox control', 0, 0, 1, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2631, 409, 682, 129, 'LinkLabel control', 'LinkLabel control', 1, 0, 2, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2632, 410, 682, 129, 'ListView Control', 'ListView Control', 0, 1, 3, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2633, 119, 683, 32, 'foreach', 'foreach', 0, 0, 3, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2634, 900, 683, 32, 'All of the choices', 'All of the choices', 1, 1, 4, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2635, 117, 683, 32, 'abstract', 'abstract', 0, 0, 1, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2636, 118, 683, 32, 'as', 'as', 0, 0, 2, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2637, 116, 684, 31, '12', '12', 0, 0, 3, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2638, 115, 684, 31, '20', '20', 1, 1, 2, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2639, 114, 684, 31, '10', '10', 0, 0, 1, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2640, 195, 685, 58, '0 2 4 6 8', '0 2 4 6 8', 1, 1, 1, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2641, 196, 685, 58, '1 3 5 7 9', '1 3 5 7 9', 0, 0, 2, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2642, 197, 685, 58, '0 1 2 3 4 5 6 7 8 9', '0 1 2 3 4 5 6 7 8 9', 0, 0, 3, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2643, 917, 685, 58, '1 2 3 4 5 6 7 8 9 10', '1 2 3 4 5 6 7 8 9 10', 0, 0, 4, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2644, 979, 686, 267, 'greatest previous integer', 'greatest previous integer', 1, 1, 2, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2645, 980, 686, 267, 'smallest following integer', 'smallest following integer', 0, 0, 3, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2646, 978, 686, 267, 'smallest previous integer', 'smallest previous integer', 0, 0, 1, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2647, 148, 687, 42, 'Boolean', 'Boolean', 1, 1, 2, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2648, 147, 687, 42, 'static', 'static', 0, 0, 1, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2649, 149, 687, 42, 'void', 'void', 0, 0, 3, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2650, 907, 687, 42, 'private', 'private', 0, 0, 4, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2651, 636, 688, 205, 'Device Driver', 'Device Driver', 0, 0, 1, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2652, 637, 688, 205, 'Video Driver', 'Video Driver', 0, 0, 2, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2653, 823, 688, 205, 'Bluetooth driver', 'Bluetooth driver', 0, 0, 4, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2654, 638, 688, 205, 'WiFi driver', 'WiFi driver', 1, 1, 3, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2655, 860, 689, 248, 'To send the data from an application to another application', 'To send the data from an application to another application', 0, 0, 1, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2656, 861, 689, 248, 'To store the data in a database', 'To store the data in a database', 0, 0, 2, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2657, 862, 689, 248, 'To share the data between applications', 'To share the data between applications', 1, 1, 3, '2019-09-02 02:34:29', '2019-09-02 02:39:37'),
(2658, 863, 689, 248, 'none of the choices', 'none of the choices', 0, 0, 4, '2019-09-02 02:34:30', '2019-09-02 02:39:37'),
(2659, 1030, 690, 277, 'The code will generate an error because it lacks a throw statement.', 'The code will generate an error because it lacks a throw statement.', 0, 1, 2, '2019-09-02 02:34:30', '2019-09-02 02:39:37'),
(2660, 1031, 690, 277, 'The code will generate an error because the finally block is placed immediately after the try block.', 'The code will generate an error because the finally block is placed immediately after the try block.', 0, 0, 3, '2019-09-02 02:34:30', '2019-09-02 02:39:37'),
(2661, 1032, 690, 277, 'The code will compile without an error.', 'The code will compile without an error.', 1, 0, 4, '2019-09-02 02:34:30', '2019-09-02 02:39:37'),
(2662, 1029, 690, 277, 'The code will generate an error because it lacks a catch block.', 'The code will generate an error because it lacks a catch block.', 0, 0, 1, '2019-09-02 02:34:30', '2019-09-02 02:39:37'),
(2663, 249, 691, 76, 'spooling', 'spooling', 0, 0, 1, '2019-09-02 02:34:30', '2019-09-02 02:39:37'),
(2664, 250, 691, 76, 'buffering', 'buffering', 0, 0, 2, '2019-09-02 02:34:30', '2019-09-02 02:39:37'),
(2665, 251, 691, 76, 'virtual memory', 'virtual memory', 0, 0, 3, '2019-09-02 02:34:30', '2019-09-02 02:39:37'),
(2666, 728, 691, 76, 'back up', 'back up', 1, 1, 4, '2019-09-02 02:34:30', '2019-09-02 02:39:37'),
(2667, 231, 692, 70, '[[#img28]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/jkL1TWHhQQMAtCTbSz6HtJyZn8zhXmtgMQYX3Zpo.png\" width=\"150\" height=\"150\" />', 1, 1, 1, '2019-09-02 02:34:30', '2019-09-02 02:39:37'),
(2668, 233, 692, 70, '[[#img30]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/5CGn3NoMP2AFTNnuWdi3jGe97XfkU7ydkF3PldTA.png\" width=\"150\" height=\"150\" />', 0, 0, 3, '2019-09-02 02:34:30', '2019-09-02 02:39:37'),
(2669, 680, 692, 70, '[[#img31]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/VNrzOvOE3LpeuWi9ciBQDVlGrXxObvbfnI3kfNS4.png\" width=\"150\" height=\"150\" />', 0, 0, 4, '2019-09-02 02:34:30', '2019-09-02 02:39:37'),
(2670, 232, 692, 70, '[[#img29]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/Cf9qY75IYjLpUVFWsICWK07cAwLtqRPDIO6JjLqT.png\" width=\"150\" height=\"150\" />', 0, 0, 2, '2019-09-02 02:34:30', '2019-09-02 02:39:37'),
(2671, 676, 693, 66, '212', '212', 0, 0, 4, '2019-09-02 02:34:30', '2019-09-02 02:39:37'),
(2672, 219, 693, 66, '121', '121', 0, 0, 1, '2019-09-02 02:34:30', '2019-09-02 02:39:37'),
(2673, 221, 693, 66, '199', '199', 0, 0, 3, '2019-09-02 02:34:30', '2019-09-02 02:39:37'),
(2674, 220, 693, 66, '163', '163', 1, 1, 2, '2019-09-02 02:34:30', '2019-09-02 02:39:37'),
(2675, 935, 694, 147, 'Empty', 'Empty', 0, 0, 4, '2019-09-02 02:34:30', '2019-09-02 02:39:37'),
(2676, 463, 694, 147, 'Finite', 'Finite', 0, 0, 2, '2019-09-02 02:34:30', '2019-09-02 02:39:37'),
(2677, 464, 694, 147, 'Subset', 'Subset', 0, 0, 3, '2019-09-02 02:34:30', '2019-09-02 02:39:37'),
(2678, 462, 694, 147, 'Infinite', 'Infinite', 1, 1, 1, '2019-09-02 02:34:30', '2019-09-02 02:39:37'),
(2679, 430, 695, 136, 'initializes a button control', 'initializes a button control', 0, 0, 2, '2019-09-02 02:34:30', '2019-09-02 02:39:37'),
(2680, 431, 695, 136, 'instantiates button control', 'instantiates button control', 0, 0, 3, '2019-09-02 02:34:30', '2019-09-02 02:39:37'),
(2681, 429, 695, 136, 'creates a button control', 'creates a button control', 0, 1, 1, '2019-09-02 02:34:30', '2019-09-02 02:39:37'),
(2682, 1012, 695, 136, 'a and c', 'a and c', 1, 0, 4, '2019-09-02 02:34:30', '2019-09-02 02:39:37'),
(2683, 335, 696, 104, '(x+7)<sup>2</sup> -8', '(x+7)<sup>2</sup> -8', 0, 0, 3, '2019-09-02 02:34:30', '2019-09-02 02:39:37'),
(2684, 333, 696, 104, '(x-7)<sup>2</sup> +8', '(x-7)<sup>2</sup> +8', 0, 0, 1, '2019-09-02 02:34:30', '2019-09-02 02:39:37'),
(2685, 1073, 696, 104, '(x+5)<sup>2</sup> -16', '(x+5)<sup>2</sup> -16', 0, 0, 4, '2019-09-02 02:34:30', '2019-09-02 02:39:37'),
(2686, 334, 696, 104, '(x+5)<sup>2</sup> +16', '(x+5)<sup>2</sup> +16', 1, 1, 2, '2019-09-02 02:34:30', '2019-09-02 02:39:37'),
(2687, 1076, 697, 107, '22', '22', 1, 1, 4, '2019-09-02 02:34:30', '2019-09-02 02:39:37'),
(2688, 342, 697, 107, '11', '11', 0, 0, 1, '2019-09-02 02:34:30', '2019-09-02 02:39:37'),
(2689, 343, 697, 107, '48', '48', 0, 0, 2, '2019-09-02 02:34:30', '2019-09-02 02:39:37'),
(2690, 344, 697, 107, '-12', '-12', 0, 0, 3, '2019-09-02 02:34:30', '2019-09-02 02:39:37'),
(2691, 1085, 698, 116, 'even and odd', 'even and odd', 0, 0, 4, '2019-09-02 02:34:30', '2019-09-02 02:39:37'),
(2692, 370, 698, 116, 'an even function', 'an even function', 1, 1, 2, '2019-09-02 02:34:30', '2019-09-02 02:39:37'),
(2693, 369, 698, 116, 'an odd function', 'an odd function', 0, 0, 1, '2019-09-02 02:34:30', '2019-09-02 02:39:37'),
(2694, 371, 698, 116, 'neither odd nor even', 'neither odd nor even', 0, 0, 3, '2019-09-02 02:34:30', '2019-09-02 02:39:37'),
(2695, 1081, 699, 112, '8', '8', 0, 0, 4, '2019-09-02 02:34:30', '2019-09-02 02:39:37'),
(2696, 357, 699, 112, '10', '10', 0, 0, 1, '2019-09-02 02:34:30', '2019-09-02 02:39:37'),
(2697, 358, 699, 112, '15', '15', 0, 0, 2, '2019-09-02 02:34:30', '2019-09-02 02:39:37'),
(2698, 359, 699, 112, '2100', '2100', 1, 1, 3, '2019-09-02 02:34:30', '2019-09-02 02:39:37'),
(2699, 355, 700, 111, '(π/2 , π)', '(π/2 , π)', 1, 1, 2, '2019-09-02 02:34:30', '2019-09-02 02:39:37'),
(2700, 354, 700, 111, '(0 , π/2)', '(0 , π/2)', 0, 0, 1, '2019-09-02 02:34:30', '2019-09-02 02:39:37'),
(2701, 356, 700, 111, '(π , 3 π / 2)', '(π , 3 π / 2)', 0, 0, 3, '2019-09-02 02:34:30', '2019-09-02 02:39:37'),
(2702, 1080, 700, 111, '(3 π / 2 , 2 π)', '(3 π / 2 , 2 π)', 0, 0, 4, '2019-09-02 02:34:30', '2019-09-02 02:39:37'),
(2703, 629, 701, 202, 'Mobile Operating System', 'Mobile Operating System', 1, 0, 3, '2019-09-02 02:40:58', '2019-09-02 02:48:47'),
(2704, 820, 701, 202, 'Database', 'Database', 0, 0, 4, '2019-09-02 02:40:58', '2019-09-02 02:48:47'),
(2705, 628, 701, 202, 'Programming Language', 'Programming Language', 0, 0, 2, '2019-09-02 02:40:58', '2019-09-02 02:48:47'),
(2706, 627, 701, 202, 'Desktop Operatng System', 'Desktop Operatng System', 0, 1, 1, '2019-09-02 02:40:58', '2019-09-02 02:48:47'),
(2707, 347, 702, 108, '1 000 000', '1 000 000', 0, 0, 3, '2019-09-02 02:40:58', '2019-09-02 02:48:47'),
(2708, 345, 702, 108, '1 846 000', '1 846 000', 1, 0, 1, '2019-09-02 02:40:58', '2019-09-02 02:48:47'),
(2709, 346, 702, 108, '1 852 000', '1 852 000', 0, 1, 2, '2019-09-02 02:40:58', '2019-09-02 02:48:47'),
(2710, 1077, 702, 108, '1 500 000', '1 500 000', 0, 0, 4, '2019-09-02 02:40:58', '2019-09-02 02:48:47'),
(2711, 147, 703, 42, 'static', 'static', 0, 0, 1, '2019-09-02 02:40:58', '2019-09-02 02:48:47'),
(2712, 148, 703, 42, 'Boolean', 'Boolean', 1, 0, 2, '2019-09-02 02:40:58', '2019-09-02 02:48:47'),
(2713, 907, 703, 42, 'private', 'private', 0, 1, 4, '2019-09-02 02:40:58', '2019-09-02 02:48:47'),
(2714, 149, 703, 42, 'void', 'void', 0, 0, 3, '2019-09-02 02:40:58', '2019-09-02 02:48:47'),
(2715, 335, 704, 104, '(x+7)<sup>2</sup> -8', '(x+7)<sup>2</sup> -8', 0, 0, 3, '2019-09-02 02:40:58', '2019-09-02 02:48:47'),
(2716, 1073, 704, 104, '(x+5)<sup>2</sup> -16', '(x+5)<sup>2</sup> -16', 0, 0, 4, '2019-09-02 02:40:58', '2019-09-02 02:48:47'),
(2717, 334, 704, 104, '(x+5)<sup>2</sup> +16', '(x+5)<sup>2</sup> +16', 1, 0, 2, '2019-09-02 02:40:58', '2019-09-02 02:48:47'),
(2718, 333, 704, 104, '(x-7)<sup>2</sup> +8', '(x-7)<sup>2</sup> +8', 0, 1, 1, '2019-09-02 02:40:58', '2019-09-02 02:48:47'),
(2719, 192, 705, 57, 'Row', 'Row', 1, 0, 1, '2019-09-02 02:40:58', '2019-09-02 02:48:47'),
(2720, 194, 705, 57, 'Both Row and Column', 'Both Row and Column', 0, 1, 3, '2019-09-02 02:40:58', '2019-09-02 02:48:47'),
(2721, 193, 705, 57, 'Column', 'Column', 0, 0, 2, '2019-09-02 02:40:58', '2019-09-02 02:48:47'),
(2722, 394, 706, 124, 'Value types', 'Value types', 0, 0, 2, '2019-09-02 02:40:58', '2019-09-02 02:48:47'),
(2723, 1007, 706, 124, 'Explicit Types', 'Explicit Types', 0, 0, 4, '2019-09-02 02:40:58', '2019-09-02 02:48:47'),
(2724, 393, 706, 124, 'Reference type', 'Reference type', 1, 1, 1, '2019-09-02 02:40:58', '2019-09-02 02:48:47'),
(2725, 395, 706, 124, 'Data Type', 'Data Type', 0, 0, 3, '2019-09-02 02:40:58', '2019-09-02 02:48:47'),
(2726, 119, 707, 32, 'foreach', 'foreach', 0, 0, 3, '2019-09-02 02:40:58', '2019-09-02 02:48:47'),
(2727, 118, 707, 32, 'as', 'as', 0, 1, 2, '2019-09-02 02:40:58', '2019-09-02 02:48:47'),
(2728, 117, 707, 32, 'abstract', 'abstract', 0, 0, 1, '2019-09-02 02:40:58', '2019-09-02 02:48:47'),
(2729, 900, 707, 32, 'All of the choices', 'All of the choices', 1, 0, 4, '2019-09-02 02:40:58', '2019-09-02 02:48:47'),
(2730, 456, 708, 145, '{(1, a), (1, b), (2, a), (b, b)}', '{(1, a), (1, b), (2, a), (b, b)}', 0, 1, 1, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2731, 933, 708, 145, '{(1, 1), (a, a), (2, a), (1, b)}', '{(1, 1), (a, a), (2, a), (1, b)}', 0, 0, 4, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2732, 457, 708, 145, '{(1, 1), (2, 2), (a, a), (b, b)}', '{(1, 1), (2, 2), (a, a), (b, b)}', 0, 0, 2, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2733, 458, 708, 145, '{(1, a), (2, a), (1, b), (2, b)}', '{(1, a), (2, a), (1, b), (2, b)}', 1, 0, 3, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2734, 979, 709, 267, 'greatest previous integer', 'greatest previous integer', 1, 0, 2, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2735, 978, 709, 267, 'smallest previous integer', 'smallest previous integer', 0, 1, 1, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2736, 980, 709, 267, 'smallest following integer', 'smallest following integer', 0, 0, 3, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2737, 1031, 710, 277, 'The code will generate an error because the finally block is placed immediately after the try block.', 'The code will generate an error because the finally block is placed immediately after the try block.', 0, 1, 3, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2738, 1029, 710, 277, 'The code will generate an error because it lacks a catch block.', 'The code will generate an error because it lacks a catch block.', 0, 0, 1, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2739, 1030, 710, 277, 'The code will generate an error because it lacks a throw statement.', 'The code will generate an error because it lacks a throw statement.', 0, 0, 2, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2740, 1032, 710, 277, 'The code will compile without an error.', 'The code will compile without an error.', 1, 0, 4, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2741, 449, 711, 142, '{1, 2, 5, 9}', '{1, 2, 5, 9}', 0, 0, 3, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2742, 448, 711, 142, '{1, 3, 5, 7, 9}', '{1, 3, 5, 7, 9}', 1, 0, 2, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2743, 930, 711, 142, '{1, 5, 7, 9, 11}', '{1, 5, 7, 9, 11}', 0, 1, 4, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2744, 447, 711, 142, '{1, 2, 3}', '{1, 2, 3}', 0, 0, 1, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2745, 842, 712, 243, 'manifest.XML', 'manifest.XML', 0, 0, 3, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2746, 840, 712, 243, 'R.style', 'R.style', 1, 0, 1, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2747, 841, 712, 243, 'X.style', 'X.style', 0, 1, 2, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2748, 843, 712, 243, 'application', 'application', 0, 0, 4, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2749, 136, 713, 38, 'It is followed by one or more catch blocks.', 'It is followed by one or more catch blocks.', 0, 1, 2, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2750, 135, 713, 38, 'A try block identifies a block of code for which particular exceptions is activated.', 'A try block identifies a block of code for which particular exceptions is activated.', 0, 0, 1, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2751, 137, 713, 38, 'A and B', 'A and B', 1, 0, 3, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2752, 684, 714, 219, 'Repeater', 'Repeater', 0, 0, 1, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2753, 686, 714, 219, 'Modem', 'Modem', 1, 1, 3, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2754, 710, 714, 219, 'Wireless access point', 'Wireless access point', 0, 0, 4, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2755, 685, 714, 219, 'Switch', 'Switch', 0, 0, 2, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2756, 902, 715, 34, '*', '*', 0, 1, 4, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2757, 124, 715, 34, 'typeof', 'typeof', 0, 0, 2, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2758, 125, 715, 34, '&</a>', '&</a>', 0, 0, 3, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2759, 123, 715, 34, 'sizeof', 'sizeof', 1, 0, 1, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2760, 291, 716, 90, 'bit', 'bit', 0, 0, 1, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2761, 711, 716, 90, 'megabyte', 'megabyte', 0, 0, 4, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2762, 293, 716, 90, 'kilobyte', 'kilobyte', 0, 0, 3, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2763, 292, 716, 90, 'byte', 'byte', 1, 1, 2, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2764, 282, 717, 87, 'fetch, execute, store and decode', 'fetch, execute, store and decode', 0, 0, 1, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2765, 284, 717, 87, 'decode, fetch, store and execute', 'decode, fetch, store and execute', 0, 0, 3, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2766, 283, 717, 87, 'decode, execute, store and fetch', 'decode, execute, store and fetch', 0, 0, 2, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2767, 715, 717, 87, 'fetch, decode, execute and store', 'fetch, decode, execute and store', 1, 1, 4, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2768, 1055, 718, 283, 'Set the CausesValidation property of the Help button to false.', 'Set the CausesValidation property of the Help button to false.', 1, 0, 3, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2769, 1053, 718, 283, 'Set the CausesValidation property of the text box to false.', 'Set the CausesValidation property of the text box to false.', 0, 1, 1, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2770, 1056, 718, 283, 'Set the CausesValidation property of the Help button to true.', 'Set the CausesValidation property of the Help button to true.', 0, 0, 4, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2771, 1054, 718, 283, 'Set the CausesValidation property of the text box to true.', 'Set the CausesValidation property of the text box to true.', 0, 0, 2, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2772, 387, 719, 122, 'unary operators', 'unary operators', 1, 0, 1, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2773, 1005, 719, 122, 'Assignment opeartors', 'Assignment opeartors', 0, 0, 4, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2774, 388, 719, 122, 'Binary operators', 'Binary operators', 0, 1, 2, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2775, 389, 719, 122, 'Logical operators', 'Logical operators', 0, 0, 3, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2776, 1089, 720, 285, '2 π', '2 π', 0, 0, 2, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2777, 1091, 720, 285, 'π', 'π', 1, 0, 4, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2778, 1090, 720, 285, '4 π', '4 π', 0, 0, 3, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2779, 1088, 720, 285, '4 π <sup>2</sup>', '4 π <sup>2</sup>', 0, 1, 1, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2780, 386, 721, 121, 'Logical operators', 'Logical operators', 1, 0, 3, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2781, 385, 721, 121, 'Bitwise operators', 'Bitwise operators', 0, 0, 2, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2782, 1004, 721, 121, 'Assignment Operators', 'Assignment Operators', 0, 0, 4, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2783, 384, 721, 121, 'RElational operators', 'RElational operators', 0, 1, 1, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2784, 362, 722, 113, '2!', '2!', 0, 0, 3, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2785, 1082, 722, 113, '3! * 2!', '3! * 2!', 0, 1, 4, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2786, 360, 722, 113, '5!', '5!', 0, 0, 1, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2787, 361, 722, 113, '3!', '3!', 1, 0, 2, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2788, 441, 723, 140, 'Constant', 'Constant', 0, 1, 1, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2789, 1016, 723, 140, 'Object', 'Object', 0, 0, 4, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2790, 443, 723, 140, 'Variable', 'Variable', 1, 0, 3, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2791, 442, 723, 140, 'Reference type', 'Reference type', 0, 0, 2, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2792, 259, 724, 79, 'ALU', 'ALU', 0, 0, 2, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2793, 725, 724, 79, 'Primary Storage', 'Primary Storage', 1, 1, 4, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2794, 260, 724, 79, 'Registers', 'Registers', 0, 0, 3, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2795, 258, 724, 79, 'Control unit', 'Control unit', 0, 0, 1, '2019-09-02 02:40:59', '2019-09-02 02:48:47'),
(2796, 508, 725, 162, 'n( B U C)=0', 'n( B U C)=0', 0, 0, 2, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2797, 509, 725, 162, 'n( A U B U C)=90', 'n( A U B U C)=90', 0, 0, 3, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2798, 507, 725, 162, 'n(A U B)=0', 'n(A U B)=0', 0, 0, 1, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2799, 950, 725, 162, 'All of the mentioned', 'All of the mentioned', 1, 1, 4, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2800, 657, 726, 212, 'Apple', 'Apple', 0, 0, 1, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2801, 658, 726, 212, 'Google', 'Google', 1, 0, 2, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2802, 830, 726, 212, 'No company', 'No company', 0, 0, 4, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2803, 659, 726, 212, 'Nokia', 'Nokia', 0, 1, 3, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2804, 953, 727, 260, '30', '30', 0, 0, 3, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2805, 952, 727, 260, '20', '20', 0, 1, 2, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2806, 951, 727, 260, '35', '35', 1, 0, 1, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2807, 954, 727, 260, '10', '10', 0, 0, 4, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2808, 402, 728, 127, 'Radio Button', 'Radio Button', 0, 1, 1, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2809, 404, 728, 127, 'Button control', 'Button control', 1, 0, 3, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2810, 403, 728, 127, 'Textbox control', 'Textbox control', 0, 0, 2, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2811, 320, 729, 99, '2.322', '2.322', 1, 0, 3, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2812, 318, 729, 99, '6.25', '6.25', 0, 0, 1, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2813, 319, 729, 99, '1.756', '1.756', 0, 0, 2, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2814, 1068, 729, 99, '4.753', '4.753', 0, 1, 4, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2815, 308, 730, 95, '-12', '-12', 0, 1, 3, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2816, 307, 730, 95, 'You cannot find the square root of a negative number', 'You cannot find the square root of a negative number', 0, 0, 2, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2817, 1064, 730, 95, '-12i', '-12i', 0, 0, 4, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2818, 306, 730, 95, '12i', '12i', 1, 0, 1, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2819, 1095, 731, 286, '0', '0', 0, 0, 4, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2820, 1093, 731, 286, '0.478', '0.478', 0, 1, 2, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2821, 1094, 731, 286, '0.001', '0.001', 0, 0, 3, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2822, 1092, 731, 286, '0.057', '0.057', 1, 0, 1, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2823, 416, 732, 131, 'Show()', 'Show()', 1, 0, 3, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2824, 415, 732, 131, 'Enable()', 'Enable()', 0, 0, 2, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2825, 414, 732, 131, 'Get()', 'Get()', 0, 1, 1, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2826, 989, 733, 270, '25', '25', 0, 0, 3, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2827, 987, 733, 270, '35', '35', 1, 1, 1, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2828, 988, 733, 270, '45', '45', 0, 0, 2, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2829, 437, 734, 138, 'Throws', 'Throws', 1, 0, 3, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2830, 436, 734, 138, 'Catches', 'Catches', 0, 1, 2, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2831, 435, 734, 138, 'Trys', 'Trys', 0, 0, 1, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2832, 1014, 734, 138, 'a and b', 'a and b', 0, 0, 4, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2833, 863, 735, 248, 'none of the choices', 'none of the choices', 0, 0, 4, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2834, 860, 735, 248, 'To send the data from an application to another application', 'To send the data from an application to another application', 0, 0, 1, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2835, 862, 735, 248, 'To share the data between applications', 'To share the data between applications', 1, 0, 3, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2836, 861, 735, 248, 'To store the data in a database', 'To store the data in a database', 0, 1, 2, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2837, 1105, 736, 289, '7', '7', 1, 0, 2, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2838, 1107, 736, 289, '8', '8', 0, 0, 4, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2839, 1106, 736, 289, '6', '6', 0, 0, 3, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2840, 1104, 736, 289, '5', '5', 0, 1, 1, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2841, 847, 737, 244, 'none of these', 'none of these', 0, 0, 4, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2842, 846, 737, 244, 'commit()', 'commit()', 0, 1, 3, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2843, 845, 737, 244, 'updates()', 'updates()', 0, 0, 2, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2844, 844, 737, 244, 'commitUpdates()', 'commitUpdates()', 1, 0, 1, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2845, 288, 738, 89, 'Virtual private network', 'Virtual private network', 0, 1, 1, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2846, 289, 738, 89, 'Virtual memory', 'Virtual memory', 1, 0, 2, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2847, 290, 738, 89, 'Virtual Machine', 'Virtual Machine', 0, 0, 3, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2848, 712, 738, 89, 'None of them', 'None of them', 0, 0, 4, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2849, 722, 739, 82, '22', '22', 0, 0, 4, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2850, 267, 739, 82, '-23', '-23', 0, 0, 1, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2851, 269, 739, 82, '-7', '-7', 0, 1, 3, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2852, 268, 739, 82, '-9', '-9', 1, 0, 2, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2853, 901, 740, 33, 'ToInt32', 'ToInt32', 0, 1, 4, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2854, 120, 740, 33, 'ToDecimal', 'ToDecimal', 0, 0, 1, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2855, 121, 740, 33, 'ToDouble', 'ToDouble', 1, 0, 2, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2856, 122, 740, 33, 'ToInt16', 'ToInt16', 0, 0, 3, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2857, 178, 741, 52, '200', '200', 1, 0, 2, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2858, 179, 741, 52, '400', '400', 0, 0, 3, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2859, 912, 741, 52, '100', '100', 0, 0, 4, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2860, 177, 741, 52, '12', '12', 0, 1, 1, '2019-09-02 02:40:59', '2019-09-02 02:48:48'),
(2861, 357, 742, 112, '10', '10', 0, 0, 1, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2862, 358, 742, 112, '15', '15', 0, 1, 2, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2863, 359, 742, 112, '2100', '2100', 1, 0, 3, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2864, 1081, 742, 112, '8', '8', 0, 0, 4, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2865, 718, 743, 223, '100100', '100100', 0, 0, 4, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2866, 700, 743, 223, '100001', '100001', 0, 1, 2, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2867, 699, 743, 223, '110011', '110011', 0, 0, 1, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2868, 701, 743, 223, '110100', '110100', 1, 0, 3, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2869, 668, 744, 215, '2.6', '2.6', 0, 0, 3, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2870, 666, 744, 215, '3.0 (Honeycomb)', '3.0 (Honeycomb)', 0, 0, 1, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2871, 833, 744, 215, '2.2 (Froyo)', '2.2 (Froyo)', 0, 1, 4, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2872, 667, 744, 215, '2.3 (Gingerbread)', '2.3 (Gingerbread)', 1, 0, 2, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2873, 906, 745, 39, 'Not assigned', 'Not assigned', 0, 0, 4, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2874, 138, 745, 39, 'null', 'null', 0, 1, 1, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2875, 139, 745, 39, '0', '0', 0, 0, 2, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2876, 140, 745, 39, 'Depends upon the type of variable', 'Depends upon the type of variable', 1, 0, 3, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2877, 1012, 746, 136, 'a and c', 'a and c', 1, 1, 4, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2878, 429, 746, 136, 'creates a button control', 'creates a button control', 0, 0, 1, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2879, 430, 746, 136, 'initializes a button control', 'initializes a button control', 0, 0, 2, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2880, 431, 746, 136, 'instantiates button control', 'instantiates button control', 0, 0, 3, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2881, 688, 747, 220, 'scanner', 'scanner', 1, 0, 2, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2882, 689, 747, 220, 'MICR', 'MICR', 0, 0, 3, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2883, 709, 747, 220, 'RFID readers', 'RFID readers', 0, 1, 4, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2884, 687, 747, 220, 'digital camera', 'digital camera', 0, 0, 1, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2885, 198, 748, 59, '3', '3', 0, 1, 1, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2886, 200, 748, 59, '6', '6', 0, 0, 3, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2887, 918, 748, 59, '1', '1', 1, 0, 4, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2888, 199, 748, 59, '0', '0', 0, 0, 2, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2889, 204, 749, 61, 'heap space', 'heap space', 1, 1, 1, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2890, 920, 749, 61, 'first generation memory', 'first generation memory', 0, 0, 4, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2891, 205, 749, 61, 'stack space', 'stack space', 0, 0, 2, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2892, 206, 749, 61, 'heap space and stack space', 'heap space and stack space', 0, 0, 3, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2893, 1066, 750, 97, '3i - 10', '3i - 10', 0, 0, 4, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2894, 313, 750, 97, '7 - 3i', '7 - 3i', 0, 0, 2, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2895, 314, 750, 97, 'i - 12', 'i - 12', 1, 0, 3, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2896, 312, 750, 97, 'i - 5', 'i - 5', 0, 1, 1, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2897, 1, 751, 1, 'x = 1', 'x = 1', 1, 0, 1, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2898, 2, 751, 1, 'x = 4', 'x = 4', 0, 0, 2, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2899, 3, 751, 1, 'x = 2', 'x = 2', 0, 1, 3, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2900, 630, 752, 203, 'MP4', 'MP4', 0, 0, 1, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2901, 821, 752, 203, 'MIDI', 'MIDI', 0, 1, 4, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2902, 631, 752, 203, 'MPEG', 'MPEG', 0, 0, 2, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2903, 632, 752, 203, 'AVI', 'AVI', 1, 0, 3, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2904, 664, 753, 214, 'Windows kernel', 'Windows kernel', 0, 0, 2, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2905, 665, 753, 214, 'MAC kernel', 'MAC kernel', 0, 1, 3, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2906, 663, 753, 214, 'Linux kernel', 'Linux kernel', 1, 0, 1, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2907, 832, 753, 214, 'Hybrid kernel', 'Hybrid kernel', 0, 0, 4, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2908, 1013, 754, 137, 'Are Virtual', 'Are Virtual', 0, 0, 4, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2909, 433, 754, 137, 'Maintain the same return type and arguments as the parent class, but implement it differently', 'Maintain the same return type and arguments as the parent class, but implement it differently', 1, 0, 2, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2910, 434, 754, 137, 'Have different return types and arguments than the parent class', 'Have different return types and arguments than the parent class', 0, 0, 3, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2911, 432, 754, 137, 'Override the parent class methods but maintain the implementation', 'Override the parent class methods but maintain the implementation', 0, 1, 1, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2912, 680, 755, 70, '[[#img31]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/VNrzOvOE3LpeuWi9ciBQDVlGrXxObvbfnI3kfNS4.png\" width=\"150\" height=\"150\" />', 0, 1, 4, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2913, 231, 755, 70, '[[#img28]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/jkL1TWHhQQMAtCTbSz6HtJyZn8zhXmtgMQYX3Zpo.png\" width=\"150\" height=\"150\" />', 1, 0, 1, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2914, 233, 755, 70, '[[#img30]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/5CGn3NoMP2AFTNnuWdi3jGe97XfkU7ydkF3PldTA.png\" width=\"150\" height=\"150\" />', 0, 0, 3, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2915, 232, 755, 70, '[[#img29]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/Cf9qY75IYjLpUVFWsICWK07cAwLtqRPDIO6JjLqT.png\" width=\"150\" height=\"150\" />', 0, 0, 2, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2916, 167, 756, 48, 'JRE is an implementation of the Java Virtual Machine which executes Java programs.', 'JRE is an implementation of the Java Virtual Machine which executes Java programs.', 1, 0, 3, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2917, 165, 756, 48, 'JRE is a java based GUI application.', 'JRE is a java based GUI application.', 0, 1, 1, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2918, 166, 756, 48, 'JRE is an application development framework.', 'JRE is an application development framework.', 0, 0, 2, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2919, 243, 757, 74, 'Operating System', 'Operating System', 0, 0, 1, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2920, 244, 757, 74, 'Motherboard', 'Motherboard', 0, 1, 2, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2921, 245, 757, 74, 'Computer', 'Computer', 1, 0, 3, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2922, 730, 757, 74, 'CPU', 'CPU', 0, 0, 4, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2923, 892, 758, 256, 'Content values are key pair values, which are updated or inserted in the database', 'Content values are key pair values, which are updated or inserted in the database', 0, 1, 1, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2924, 895, 758, 256, 'Cursor is used to store data permanently.', 'Cursor is used to store data permanently.', 0, 0, 4, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2925, 894, 758, 256, 'A & B', 'A & B', 1, 0, 3, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2926, 893, 758, 256, 'Cursor is used to store the temporary result.', 'Cursor is used to store the temporary result.', 0, 0, 2, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2927, 171, 759, 50, 'Thread returns to the ready state.', 'Thread returns to the ready state.', 1, 0, 1, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2928, 172, 759, 50, 'Thread returns to the waiting state.', 'Thread returns to the waiting state.', 0, 1, 2, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2929, 173, 759, 50, 'Thread starts running.', 'Thread starts running.', 0, 0, 3, '2019-09-02 02:41:00', '2019-09-02 02:48:48'),
(2930, 727, 760, 77, 'linker error', 'linker error', 0, 0, 4, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2931, 254, 760, 77, 'run time error', 'run time error', 0, 0, 3, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2932, 253, 760, 77, 'syntax error', 'syntax error', 0, 1, 2, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2933, 252, 760, 77, 'logic error', 'logic error', 1, 0, 1, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2934, 371, 761, 116, 'neither odd nor even', 'neither odd nor even', 0, 0, 3, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2935, 370, 761, 116, 'an even function', 'an even function', 1, 0, 2, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2936, 369, 761, 116, 'an odd function', 'an odd function', 0, 1, 1, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2937, 1085, 761, 116, 'even and odd', 'even and odd', 0, 0, 4, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2938, 825, 762, 207, 'Application data bridge', 'Application data bridge', 0, 0, 4, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2939, 642, 762, 207, 'Android Debug Bridge', 'Android Debug Bridge', 1, 0, 1, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2940, 644, 762, 207, 'Android data bridge', 'Android data bridge', 0, 1, 3, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2941, 643, 762, 207, 'Application Debug Bridge', 'Application Debug Bridge', 0, 0, 2, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2942, 141, 763, 40, 'type.', 'type.', 1, 1, 1, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2943, 143, 763, 40, 'Both of the above.', 'Both of the above.', 0, 0, 3, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2944, 142, 763, 40, 'object.', 'object.', 0, 0, 2, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2945, 1024, 764, 275, 'The catch blocks should be used only when a finally block is not used.', 'The catch blocks should be used only when a finally block is not used.', 0, 0, 4, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2946, 1022, 764, 275, 'Several catch blocks for a try block, arranged in order starting with Exception and ending with the most specific exception.', 'Several catch blocks for a try block, arranged in order starting with Exception and ending with the most specific exception.', 0, 0, 2, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2947, 1023, 764, 275, 'Several catch blocks within one try block, arranged starting with the most specific exception and ending with Exception.', 'Several catch blocks within one try block, arranged starting with the most specific exception and ending with Exception.', 1, 0, 3, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2948, 1021, 764, 275, 'Only one catch block for each try block.', 'Only one catch block for each try block.', 0, 1, 1, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2949, 466, 765, 148, '6', '6', 0, 0, 2, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2950, 936, 765, 148, '9', '9', 0, 0, 4, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2951, 465, 765, 148, '8', '8', 1, 0, 1, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2952, 467, 765, 148, '7', '7', 0, 1, 3, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2953, 705, 766, 225, '531', '531', 0, 0, 1, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2954, 706, 766, 225, '127', '127', 1, 0, 2, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2955, 707, 766, 225, '44', '44', 0, 1, 3, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2956, 714, 766, 225, '135', '135', 0, 0, 4, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2957, 1033, 767, 278, 'Message1\nMessage4', 'Message1<br />\nMessage4', 0, 0, 1, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2958, 1034, 767, 278, 'Message1\nMessage2\nMessage3\nMessage4', 'Message1<br />\nMessage2<br />\nMessage3<br />\nMessage4', 0, 0, 2, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2959, 1036, 767, 278, 'Message1\nMessage3\nMessage2\nMessage4', 'Message1<br />\nMessage3<br />\nMessage2<br />\nMessage4', 0, 1, 4, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2960, 1035, 767, 278, 'Message1\nMessage3\nMessage4', 'Message1<br />\nMessage3<br />\nMessage4', 1, 0, 3, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2961, 469, 768, 149, '{1, 2, 5, 6}', '{1, 2, 5, 6}', 1, 0, 2, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2962, 937, 768, 149, '{1, 5, 6, 3}', '{1, 5, 6, 3}', 0, 0, 4, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2963, 468, 768, 149, '{1, 2, 6, 1}', '{1, 2, 6, 1}', 0, 1, 1, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2964, 470, 768, 149, '{1, 2, 1, 2}', '{1, 2, 1, 2}', 0, 0, 3, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2965, 452, 769, 143, 'Zero', 'Zero', 0, 0, 3, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2966, 451, 769, 143, 'Two', 'Two', 0, 0, 2, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2967, 931, 769, 143, 'Three', 'Three', 0, 1, 4, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2968, 450, 769, 143, 'One', 'One', 1, 0, 1, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2969, 853, 770, 246, 'assets/', 'assets/', 0, 0, 2, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2970, 852, 770, 246, 'res/', 'res/', 0, 0, 1, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2971, 855, 770, 246, 'bin/', 'bin/', 0, 1, 4, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2972, 854, 770, 246, 'src/', 'src/', 1, 0, 3, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2973, 146, 771, 41, 'public static void main(String[] args)', 'public static void main(String[] args)', 1, 1, 3, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2974, 145, 771, 41, 'public int main(String[] args)', 'public int main(String[] args)', 0, 0, 2, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2975, 144, 771, 41, 'public static int main(String[] args)', 'public static int main(String[] args)', 0, 0, 1, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2976, 115, 772, 31, '20', '20', 1, 0, 2, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2977, 116, 772, 31, '12', '12', 0, 1, 3, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2978, 114, 772, 31, '10', '10', 0, 0, 1, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2979, 878, 773, 252, 'A mandatory class in android', 'A mandatory class in android', 0, 0, 3, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2980, 876, 773, 252, 'A class used to hold states and objects', 'A class used to hold states and objects', 1, 0, 1, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2981, 877, 773, 252, 'A bean class can be passed from one activity to another.', 'A bean class can be passed from one activity to another.', 0, 1, 2, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2982, 879, 773, 252, 'None of the above', 'None of the above', 0, 0, 4, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2983, 342, 774, 107, '11', '11', 0, 0, 1, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2984, 343, 774, 107, '48', '48', 0, 0, 2, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2985, 344, 774, 107, '-12', '-12', 0, 1, 3, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2986, 1076, 774, 107, '22', '22', 1, 0, 4, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2987, 1062, 775, 93, 'x ≤ -5', 'x ≤ -5', 0, 0, 4, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2988, 302, 775, 93, 'x ≥ -5', 'x ≥ -5', 0, 1, 3, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2989, 301, 775, 93, 'x ≥ 5', 'x ≥ 5', 1, 0, 2, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2990, 300, 775, 93, 'x ≤ 5', 'x ≤ 5', 0, 0, 1, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2991, 939, 776, 151, 'Complement', 'Complement', 0, 0, 4, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2992, 474, 776, 151, 'Union', 'Union', 0, 0, 1, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2993, 476, 776, 151, 'Intersection', 'Intersection', 1, 1, 3, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2994, 475, 776, 151, 'Difference', 'Difference', 0, 0, 2, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2995, 409, 777, 129, 'LinkLabel control', 'LinkLabel control', 1, 1, 2, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2996, 408, 777, 129, 'GroupBox control', 'GroupBox control', 0, 0, 1, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2997, 410, 777, 129, 'ListView Control', 'ListView Control', 0, 0, 3, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2998, 486, 778, 155, '4', '4', 1, 0, 1, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(2999, 487, 778, 155, '5', '5', 0, 0, 2, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(3000, 943, 778, 155, '7', '7', 0, 0, 4, '2019-09-02 02:41:00', '2019-09-02 02:48:49'),
(3001, 488, 778, 155, '6', '6', 0, 1, 3, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3002, 239, 779, 72, 'Anti-virus software', 'Anti-virus software', 0, 0, 3, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3003, 237, 779, 72, 'Operating system software', 'Operating system software', 0, 1, 1, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3004, 238, 779, 72, 'Utility software', 'Utility software', 1, 0, 2, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3005, 732, 779, 72, 'Disk optimization software', 'Disk optimization software', 0, 0, 4, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3006, 226, 780, 68, '[[#img24]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/nVLwXww7AT2RBfzhH1tPQMxdLPF1iWuunHzErZRh.png\" width=\"150\" height=\"150\" />', 0, 1, 2, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3007, 227, 780, 68, '[[#img25]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/rDh656ehodyPQmn7CxxjGK2H29sx2bh6LDz9INfN.png\" width=\"150\" height=\"150\" />', 0, 0, 3, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3008, 679, 780, 68, '[[#img26]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/tBuCNpani0PgWIFN01ztVOAj4FS4CBDAiTW9J8lB.png\" width=\"150\" height=\"150\" />', 0, 0, 4, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3009, 225, 780, 68, '[[#img23]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/IyLDJJaUUQ0aIZOMyEjh4JO72W4HpXtPj2CfMKZL.png\" width=\"150\" height=\"150\" />', 1, 0, 1, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3010, 196, 781, 58, '1 3 5 7 9', '1 3 5 7 9', 0, 0, 2, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3011, 917, 781, 58, '1 2 3 4 5 6 7 8 9 10', '1 2 3 4 5 6 7 8 9 10', 0, 0, 4, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3012, 197, 781, 58, '0 1 2 3 4 5 6 7 8 9', '0 1 2 3 4 5 6 7 8 9', 0, 1, 3, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3013, 195, 781, 58, '0 2 4 6 8', '0 2 4 6 8', 1, 0, 1, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3014, 175, 782, 51, '8', '8', 0, 0, 2, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3015, 911, 782, 51, 'Runtime error', 'Runtime error', 0, 0, 4, '2019-09-02 02:41:01', '2019-09-02 02:48:49');
INSERT INTO `answer_sheet_test_question_choices` (`id`, `choice_id`, `answer_sheet_test_question_id`, `test_question_id`, `body`, `body_html`, `is_correct`, `is_selected`, `pos_order`, `created_at`, `updated_at`) VALUES
(3016, 174, 782, 51, '9', '9', 0, 1, 1, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3017, 176, 782, 51, 'Compilation error', 'Compilation error', 1, 0, 3, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3018, 887, 783, 254, 'None of the above', 'None of the above', 0, 1, 4, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3019, 885, 783, 254, 'Cookies management', 'Cookies management', 0, 0, 2, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3020, 884, 783, 254, 'httprequest(get/post) and returns response from the server', 'httprequest(get/post) and returns response from the server', 1, 0, 1, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3021, 886, 783, 254, 'Authentication management', 'Authentication management', 0, 0, 3, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3022, 462, 784, 147, 'Infinite', 'Infinite', 1, 0, 1, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3023, 463, 784, 147, 'Finite', 'Finite', 0, 0, 2, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3024, 464, 784, 147, 'Subset', 'Subset', 0, 0, 3, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3025, 935, 784, 147, 'Empty', 'Empty', 0, 1, 4, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3026, 932, 785, 144, '20', '20', 0, 0, 4, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3027, 455, 785, 144, '3', '3', 0, 0, 3, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3028, 453, 785, 144, '10', '10', 0, 1, 1, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3029, 454, 785, 144, '5', '5', 1, 0, 2, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3030, 638, 786, 205, 'WiFi driver', 'WiFi driver', 1, 0, 3, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3031, 823, 786, 205, 'Bluetooth driver', 'Bluetooth driver', 0, 0, 4, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3032, 637, 786, 205, 'Video Driver', 'Video Driver', 0, 1, 2, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3033, 636, 786, 205, 'Device Driver', 'Device Driver', 0, 0, 1, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3034, 219, 787, 66, '121', '121', 0, 0, 1, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3035, 676, 787, 66, '212', '212', 0, 0, 4, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3036, 220, 787, 66, '163', '163', 1, 1, 2, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3037, 221, 787, 66, '199', '199', 0, 0, 3, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3038, 417, 788, 132, 'If', 'If', 0, 0, 1, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3039, 419, 788, 132, 'For', 'For', 0, 1, 3, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3040, 418, 788, 132, 'Switch', 'Switch', 1, 0, 2, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3041, 1009, 788, 132, 'While', 'While', 0, 0, 4, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3042, 502, 789, 160, 'A U B -B', 'A U B -B', 1, 0, 2, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3043, 501, 789, 160, 'A‘ (Complement of A)', 'A‘ (Complement of A)', 0, 1, 1, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3044, 948, 789, 160, 'B', 'B', 0, 0, 4, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3045, 503, 789, 160, 'A ∩ B', 'A ∩ B', 0, 0, 3, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3046, 472, 790, 150, '{5, 6}', '{5, 6}', 0, 0, 2, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3047, 471, 790, 150, '{1, 2}', '{1, 2}', 1, 0, 1, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3048, 938, 790, 150, '{1, 6}', '{1, 6}', 0, 0, 4, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3049, 473, 790, 150, '{2, 5}', '{2, 5}', 0, 1, 3, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3050, 654, 791, 211, 'Chrome', 'Chrome', 0, 0, 1, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3051, 656, 791, 211, 'Open source Webkit', 'Open source Webkit', 1, 0, 3, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3052, 829, 791, 211, 'Opera', 'Opera', 0, 1, 4, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3053, 655, 791, 211, 'Firefox', 'Firefox', 0, 0, 2, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3054, 1083, 792, 114, 'mean = 10 , standard deviation = 1', 'mean = 10 , standard deviation = 1', 0, 0, 4, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3055, 365, 792, 114, 'mean = 15 , standard deviation = 1', 'mean = 15 , standard deviation = 1', 1, 1, 3, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3056, 363, 792, 114, 'mean = 15 , standard deviation = 6', 'mean = 15 , standard deviation = 6', 0, 0, 1, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3057, 364, 792, 114, 'mean = 10 , standard deviation = 6', 'mean = 10 , standard deviation = 6', 0, 0, 2, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3058, 728, 793, 76, 'back up', 'back up', 1, 1, 4, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3059, 249, 793, 76, 'spooling', 'spooling', 0, 0, 1, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3060, 250, 793, 76, 'buffering', 'buffering', 0, 0, 2, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3061, 251, 793, 76, 'virtual memory', 'virtual memory', 0, 0, 3, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3062, 944, 794, 156, 'None of the choices', 'None of the choices', 0, 0, 4, '2019-09-02 02:41:01', '2019-09-02 02:48:50'),
(3063, 491, 794, 156, '4, 12', '4, 12', 0, 0, 3, '2019-09-02 02:41:01', '2019-09-02 02:48:50'),
(3064, 490, 794, 156, '8, 12', '8, 12', 1, 0, 2, '2019-09-02 02:41:01', '2019-09-02 02:48:49'),
(3065, 489, 794, 156, '4, 8', '4, 8', 0, 1, 1, '2019-09-02 02:41:01', '2019-09-02 02:48:50'),
(3066, 380, 795, 119, 'while', 'while', 0, 0, 3, '2019-09-02 02:41:01', '2019-09-02 02:48:50'),
(3067, 1002, 795, 119, 'for loop', 'for loop', 1, 0, 4, '2019-09-02 02:41:01', '2019-09-02 02:48:50'),
(3068, 378, 795, 119, 'forEach loop', 'forEach loop', 0, 1, 1, '2019-09-02 02:41:01', '2019-09-02 02:48:50'),
(3069, 379, 795, 119, 'do while', 'do while', 0, 0, 2, '2019-09-02 02:41:01', '2019-09-02 02:48:50'),
(3070, 401, 796, 126, 'TextBox control', 'TextBox control', 0, 0, 3, '2019-09-02 02:41:01', '2019-09-02 02:48:50'),
(3071, 399, 796, 126, 'CheckListBox control', 'CheckListBox control', 0, 0, 1, '2019-09-02 02:41:01', '2019-09-02 02:48:50'),
(3072, 400, 796, 126, 'ListBox control', 'ListBox control', 1, 1, 2, '2019-09-02 02:41:01', '2019-09-02 02:48:50'),
(3073, 633, 797, 204, 'Multitasking', 'Multitasking', 0, 0, 1, '2019-09-02 02:41:01', '2019-09-02 02:48:50'),
(3074, 635, 797, 204, 'Video calling', 'Video calling', 0, 0, 3, '2019-09-02 02:41:01', '2019-09-02 02:48:50'),
(3075, 822, 797, 204, 'All of the choices', 'All of the choices', 1, 1, 4, '2019-09-02 02:41:01', '2019-09-02 02:48:50'),
(3076, 634, 797, 204, 'Bluetooth', 'Bluetooth', 0, 0, 2, '2019-09-02 02:41:01', '2019-09-02 02:48:50'),
(3077, 354, 798, 111, '(0 , π/2)', '(0 , π/2)', 0, 0, 1, '2019-09-02 02:41:01', '2019-09-02 02:48:50'),
(3078, 355, 798, 111, '(π/2 , π)', '(π/2 , π)', 1, 1, 2, '2019-09-02 02:41:01', '2019-09-02 02:48:50'),
(3079, 356, 798, 111, '(π , 3 π / 2)', '(π , 3 π / 2)', 0, 0, 3, '2019-09-02 02:41:01', '2019-09-02 02:48:50'),
(3080, 1080, 798, 111, '(3 π / 2 , 2 π)', '(3 π / 2 , 2 π)', 0, 0, 4, '2019-09-02 02:41:01', '2019-09-02 02:48:50'),
(3081, 255, 799, 78, 'ASCII', 'ASCII', 0, 0, 1, '2019-09-02 02:41:01', '2019-09-02 02:48:50'),
(3082, 726, 799, 78, 'ANSI', 'ANSI', 0, 0, 4, '2019-09-02 02:41:01', '2019-09-02 02:48:50'),
(3083, 257, 799, 78, 'EBCDIC', 'EBCDIC', 0, 0, 3, '2019-09-02 02:41:01', '2019-09-02 02:48:50'),
(3084, 256, 799, 78, 'Unicode', 'Unicode', 1, 1, 2, '2019-09-02 02:41:01', '2019-09-02 02:48:50'),
(3085, 298, 800, 92, 'x > 1', 'x > 1', 0, 0, 2, '2019-09-02 02:41:01', '2019-09-02 02:48:50'),
(3086, 1061, 800, 92, 'x > 6', 'x > 6', 0, 0, 4, '2019-09-02 02:41:01', '2019-09-02 02:48:50'),
(3087, 297, 800, 92, 'x < 6', 'x < 6', 0, 0, 1, '2019-09-02 02:41:01', '2019-09-02 02:48:50'),
(3088, 299, 800, 92, 'x < -1', 'x < -1', 1, 1, 3, '2019-09-02 02:41:01', '2019-09-02 02:48:50'),
(3089, 635, 801, 204, 'Video calling', 'Video calling', 0, 0, 3, '2019-09-02 02:50:23', '2019-09-02 02:55:16'),
(3090, 822, 801, 204, 'All of the choices', 'All of the choices', 1, 1, 4, '2019-09-02 02:50:23', '2019-09-02 02:55:16'),
(3091, 633, 801, 204, 'Multitasking', 'Multitasking', 0, 0, 1, '2019-09-02 02:50:23', '2019-09-02 02:55:16'),
(3092, 634, 801, 204, 'Bluetooth', 'Bluetooth', 0, 0, 2, '2019-09-02 02:50:23', '2019-09-02 02:55:16'),
(3093, 320, 802, 99, '2.322', '2.322', 1, 0, 3, '2019-09-02 02:50:23', '2019-09-02 02:55:16'),
(3094, 319, 802, 99, '1.756', '1.756', 0, 1, 2, '2019-09-02 02:50:23', '2019-09-02 02:55:16'),
(3095, 1068, 802, 99, '4.753', '4.753', 0, 0, 4, '2019-09-02 02:50:23', '2019-09-02 02:55:16'),
(3096, 318, 802, 99, '6.25', '6.25', 0, 0, 1, '2019-09-02 02:50:23', '2019-09-02 02:55:16'),
(3097, 852, 803, 246, 'res/', 'res/', 0, 0, 1, '2019-09-02 02:50:23', '2019-09-02 02:55:16'),
(3098, 854, 803, 246, 'src/', 'src/', 1, 1, 3, '2019-09-02 02:50:23', '2019-09-02 02:55:16'),
(3099, 855, 803, 246, 'bin/', 'bin/', 0, 0, 4, '2019-09-02 02:50:23', '2019-09-02 02:55:16'),
(3100, 853, 803, 246, 'assets/', 'assets/', 0, 0, 2, '2019-09-02 02:50:23', '2019-09-02 02:55:16'),
(3101, 120, 804, 33, 'ToDecimal', 'ToDecimal', 0, 1, 1, '2019-09-02 02:50:24', '2019-09-02 02:55:16'),
(3102, 121, 804, 33, 'ToDouble', 'ToDouble', 1, 0, 2, '2019-09-02 02:50:24', '2019-09-02 02:55:16'),
(3103, 122, 804, 33, 'ToInt16', 'ToInt16', 0, 0, 3, '2019-09-02 02:50:24', '2019-09-02 02:55:16'),
(3104, 901, 804, 33, 'ToInt32', 'ToInt32', 0, 0, 4, '2019-09-02 02:50:24', '2019-09-02 02:55:16'),
(3105, 358, 805, 112, '15', '15', 0, 0, 2, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3106, 359, 805, 112, '2100', '2100', 1, 0, 3, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3107, 1081, 805, 112, '8', '8', 0, 0, 4, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3108, 357, 805, 112, '10', '10', 0, 1, 1, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3109, 251, 806, 76, 'virtual memory', 'virtual memory', 0, 0, 3, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3110, 249, 806, 76, 'spooling', 'spooling', 0, 0, 1, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3111, 728, 806, 76, 'back up', 'back up', 1, 1, 4, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3112, 250, 806, 76, 'buffering', 'buffering', 0, 0, 2, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3113, 363, 807, 114, 'mean = 15 , standard deviation = 6', 'mean = 15 , standard deviation = 6', 0, 1, 1, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3114, 365, 807, 114, 'mean = 15 , standard deviation = 1', 'mean = 15 , standard deviation = 1', 1, 0, 3, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3115, 364, 807, 114, 'mean = 10 , standard deviation = 6', 'mean = 10 , standard deviation = 6', 0, 0, 2, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3116, 1083, 807, 114, 'mean = 10 , standard deviation = 1', 'mean = 10 , standard deviation = 1', 0, 0, 4, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3117, 887, 808, 254, 'None of the above', 'None of the above', 0, 0, 4, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3118, 884, 808, 254, 'httprequest(get/post) and returns response from the server', 'httprequest(get/post) and returns response from the server', 1, 1, 1, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3119, 885, 808, 254, 'Cookies management', 'Cookies management', 0, 0, 2, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3120, 886, 808, 254, 'Authentication management', 'Authentication management', 0, 0, 3, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3121, 3, 809, 1, 'x = 2', 'x = 2', 0, 0, 3, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3122, 2, 809, 1, 'x = 4', 'x = 4', 0, 1, 2, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3123, 1, 809, 1, 'x = 1', 'x = 1', 1, 0, 1, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3124, 238, 810, 72, 'Utility software', 'Utility software', 1, 0, 2, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3125, 732, 810, 72, 'Disk optimization software', 'Disk optimization software', 0, 1, 4, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3126, 237, 810, 72, 'Operating system software', 'Operating system software', 0, 0, 1, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3127, 239, 810, 72, 'Anti-virus software', 'Anti-virus software', 0, 0, 3, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3128, 1073, 811, 104, '(x+5)<sup>2</sup> -16', '(x+5)<sup>2</sup> -16', 0, 1, 4, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3129, 333, 811, 104, '(x-7)<sup>2</sup> +8', '(x-7)<sup>2</sup> +8', 0, 0, 1, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3130, 334, 811, 104, '(x+5)<sup>2</sup> +16', '(x+5)<sup>2</sup> +16', 1, 0, 2, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3131, 335, 811, 104, '(x+7)<sup>2</sup> -8', '(x+7)<sup>2</sup> -8', 0, 0, 3, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3132, 284, 812, 87, 'decode, fetch, store and execute', 'decode, fetch, store and execute', 0, 0, 3, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3133, 715, 812, 87, 'fetch, decode, execute and store', 'fetch, decode, execute and store', 1, 0, 4, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3134, 283, 812, 87, 'decode, execute, store and fetch', 'decode, execute, store and fetch', 0, 0, 2, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3135, 282, 812, 87, 'fetch, execute, store and decode', 'fetch, execute, store and decode', 0, 1, 1, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3136, 1002, 813, 119, 'for loop', 'for loop', 1, 0, 4, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3137, 379, 813, 119, 'do while', 'do while', 0, 0, 2, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3138, 378, 813, 119, 'forEach loop', 'forEach loop', 0, 1, 1, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3139, 380, 813, 119, 'while', 'while', 0, 0, 3, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3140, 141, 814, 40, 'type.', 'type.', 1, 0, 1, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3141, 143, 814, 40, 'Both of the above.', 'Both of the above.', 0, 0, 3, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3142, 142, 814, 40, 'object.', 'object.', 0, 1, 2, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3143, 509, 815, 162, 'n( A U B U C)=90', 'n( A U B U C)=90', 0, 0, 3, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3144, 507, 815, 162, 'n(A U B)=0', 'n(A U B)=0', 0, 0, 1, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3145, 950, 815, 162, 'All of the mentioned', 'All of the mentioned', 1, 1, 4, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3146, 508, 815, 162, 'n( B U C)=0', 'n( B U C)=0', 0, 0, 2, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3147, 1089, 816, 285, '2 π', '2 π', 0, 0, 2, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3148, 1088, 816, 285, '4 π <sup>2</sup>', '4 π <sup>2</sup>', 0, 0, 1, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3149, 1091, 816, 285, 'π', 'π', 1, 1, 4, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3150, 1090, 816, 285, '4 π', '4 π', 0, 0, 3, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3151, 430, 817, 136, 'initializes a button control', 'initializes a button control', 0, 0, 2, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3152, 1012, 817, 136, 'a and c', 'a and c', 1, 1, 4, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3153, 431, 817, 136, 'instantiates button control', 'instantiates button control', 0, 0, 3, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3154, 429, 817, 136, 'creates a button control', 'creates a button control', 0, 0, 1, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3155, 658, 818, 212, 'Google', 'Google', 1, 1, 2, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3156, 830, 818, 212, 'No company', 'No company', 0, 0, 4, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3157, 659, 818, 212, 'Nokia', 'Nokia', 0, 0, 3, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3158, 657, 818, 212, 'Apple', 'Apple', 0, 0, 1, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3159, 243, 819, 74, 'Operating System', 'Operating System', 0, 0, 1, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3160, 730, 819, 74, 'CPU', 'CPU', 0, 1, 4, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3161, 245, 819, 74, 'Computer', 'Computer', 1, 0, 3, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3162, 244, 819, 74, 'Motherboard', 'Motherboard', 0, 0, 2, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3163, 894, 820, 256, 'A & B', 'A & B', 1, 1, 3, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3164, 892, 820, 256, 'Content values are key pair values, which are updated or inserted in the database', 'Content values are key pair values, which are updated or inserted in the database', 0, 0, 1, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3165, 895, 820, 256, 'Cursor is used to store data permanently.', 'Cursor is used to store data permanently.', 0, 0, 4, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3166, 893, 820, 256, 'Cursor is used to store the temporary result.', 'Cursor is used to store the temporary result.', 0, 0, 2, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3167, 474, 821, 151, 'Union', 'Union', 0, 0, 1, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3168, 475, 821, 151, 'Difference', 'Difference', 0, 0, 2, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3169, 476, 821, 151, 'Intersection', 'Intersection', 1, 1, 3, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3170, 939, 821, 151, 'Complement', 'Complement', 0, 0, 4, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3171, 1107, 822, 289, '8', '8', 0, 0, 4, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3172, 1105, 822, 289, '7', '7', 1, 1, 2, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3173, 1104, 822, 289, '5', '5', 0, 0, 1, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3174, 1106, 822, 289, '6', '6', 0, 0, 3, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3175, 842, 823, 243, 'manifest.XML', 'manifest.XML', 0, 0, 3, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3176, 840, 823, 243, 'R.style', 'R.style', 1, 1, 1, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3177, 843, 823, 243, 'application', 'application', 0, 0, 4, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3178, 841, 823, 243, 'X.style', 'X.style', 0, 0, 2, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3179, 471, 824, 150, '{1, 2}', '{1, 2}', 1, 1, 1, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3180, 938, 824, 150, '{1, 6}', '{1, 6}', 0, 0, 4, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3181, 472, 824, 150, '{5, 6}', '{5, 6}', 0, 0, 2, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3182, 473, 824, 150, '{2, 5}', '{2, 5}', 0, 0, 3, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3183, 233, 825, 70, '[[#img30]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/5CGn3NoMP2AFTNnuWdi3jGe97XfkU7ydkF3PldTA.png\" width=\"150\" height=\"150\" />', 0, 0, 3, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3184, 680, 825, 70, '[[#img31]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/VNrzOvOE3LpeuWi9ciBQDVlGrXxObvbfnI3kfNS4.png\" width=\"150\" height=\"150\" />', 0, 0, 4, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3185, 232, 825, 70, '[[#img29]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/Cf9qY75IYjLpUVFWsICWK07cAwLtqRPDIO6JjLqT.png\" width=\"150\" height=\"150\" />', 0, 1, 2, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3186, 231, 825, 70, '[[#img28]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/jkL1TWHhQQMAtCTbSz6HtJyZn8zhXmtgMQYX3Zpo.png\" width=\"150\" height=\"150\" />', 1, 0, 1, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3187, 948, 826, 160, 'B', 'B', 0, 0, 4, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3188, 502, 826, 160, 'A U B -B', 'A U B -B', 1, 1, 2, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3189, 503, 826, 160, 'A ∩ B', 'A ∩ B', 0, 0, 3, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3190, 501, 826, 160, 'A‘ (Complement of A)', 'A‘ (Complement of A)', 0, 0, 1, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3191, 289, 827, 89, 'Virtual memory', 'Virtual memory', 1, 1, 2, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3192, 288, 827, 89, 'Virtual private network', 'Virtual private network', 0, 0, 1, '2019-09-02 02:50:24', '2019-09-02 02:55:17'),
(3193, 712, 827, 89, 'None of them', 'None of them', 0, 0, 4, '2019-09-02 02:50:25', '2019-09-02 02:55:17'),
(3194, 290, 827, 89, 'Virtual Machine', 'Virtual Machine', 0, 0, 3, '2019-09-02 02:50:25', '2019-09-02 02:55:17'),
(3195, 931, 828, 143, 'Three', 'Three', 0, 0, 4, '2019-09-02 02:50:25', '2019-09-02 02:55:17'),
(3196, 452, 828, 143, 'Zero', 'Zero', 0, 0, 3, '2019-09-02 02:50:25', '2019-09-02 02:55:17'),
(3197, 451, 828, 143, 'Two', 'Two', 0, 0, 2, '2019-09-02 02:50:25', '2019-09-02 02:55:17'),
(3198, 450, 828, 143, 'One', 'One', 1, 1, 1, '2019-09-02 02:50:25', '2019-09-02 02:55:17'),
(3199, 167, 829, 48, 'JRE is an implementation of the Java Virtual Machine which executes Java programs.', 'JRE is an implementation of the Java Virtual Machine which executes Java programs.', 1, 0, 3, '2019-09-02 02:50:25', '2019-09-02 02:55:17'),
(3200, 165, 829, 48, 'JRE is a java based GUI application.', 'JRE is a java based GUI application.', 0, 1, 1, '2019-09-02 02:50:25', '2019-09-02 02:55:17'),
(3201, 166, 829, 48, 'JRE is an application development framework.', 'JRE is an application development framework.', 0, 0, 2, '2019-09-02 02:50:25', '2019-09-02 02:55:17'),
(3202, 987, 830, 270, '35', '35', 1, 1, 1, '2019-09-02 02:50:25', '2019-09-02 02:55:17'),
(3203, 988, 830, 270, '45', '45', 0, 0, 2, '2019-09-02 02:50:25', '2019-09-02 02:55:17'),
(3204, 989, 830, 270, '25', '25', 0, 0, 3, '2019-09-02 02:50:25', '2019-09-02 02:55:17'),
(3205, 700, 831, 223, '100001', '100001', 0, 0, 2, '2019-09-02 02:50:25', '2019-09-02 02:55:17'),
(3206, 699, 831, 223, '110011', '110011', 0, 0, 1, '2019-09-02 02:50:25', '2019-09-02 02:55:17'),
(3207, 718, 831, 223, '100100', '100100', 0, 0, 4, '2019-09-02 02:50:25', '2019-09-02 02:55:17'),
(3208, 701, 831, 223, '110100', '110100', 1, 1, 3, '2019-09-02 02:50:25', '2019-09-02 02:55:17'),
(3209, 414, 832, 131, 'Get()', 'Get()', 0, 0, 1, '2019-09-02 02:50:25', '2019-09-02 02:55:17'),
(3210, 415, 832, 131, 'Enable()', 'Enable()', 0, 0, 2, '2019-09-02 02:50:25', '2019-09-02 02:55:17'),
(3211, 416, 832, 131, 'Show()', 'Show()', 1, 1, 3, '2019-09-02 02:50:25', '2019-09-02 02:55:17'),
(3212, 344, 833, 107, '-12', '-12', 0, 0, 3, '2019-09-02 02:50:25', '2019-09-02 02:55:17'),
(3213, 1076, 833, 107, '22', '22', 1, 1, 4, '2019-09-02 02:50:25', '2019-09-02 02:55:17'),
(3214, 343, 833, 107, '48', '48', 0, 0, 2, '2019-09-02 02:50:25', '2019-09-02 02:55:17'),
(3215, 342, 833, 107, '11', '11', 0, 0, 1, '2019-09-02 02:50:25', '2019-09-02 02:55:17'),
(3216, 979, 834, 267, 'greatest previous integer', 'greatest previous integer', 1, 1, 2, '2019-09-02 02:50:25', '2019-09-02 02:55:17'),
(3217, 978, 834, 267, 'smallest previous integer', 'smallest previous integer', 0, 0, 1, '2019-09-02 02:50:25', '2019-09-02 02:55:17'),
(3218, 980, 834, 267, 'smallest following integer', 'smallest following integer', 0, 0, 3, '2019-09-02 02:50:25', '2019-09-02 02:55:17'),
(3219, 487, 835, 155, '5', '5', 0, 0, 2, '2019-09-02 02:50:25', '2019-09-02 02:55:17'),
(3220, 488, 835, 155, '6', '6', 0, 0, 3, '2019-09-02 02:50:25', '2019-09-02 02:55:17'),
(3221, 943, 835, 155, '7', '7', 0, 1, 4, '2019-09-02 02:50:25', '2019-09-02 02:55:17'),
(3222, 486, 835, 155, '4', '4', 1, 0, 1, '2019-09-02 02:50:25', '2019-09-02 02:55:17'),
(3223, 1095, 836, 286, '0', '0', 0, 0, 4, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3224, 1093, 836, 286, '0.478', '0.478', 0, 0, 2, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3225, 1094, 836, 286, '0.001', '0.001', 0, 0, 3, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3226, 1092, 836, 286, '0.057', '0.057', 1, 1, 1, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3227, 292, 837, 90, 'byte', 'byte', 1, 1, 2, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3228, 711, 837, 90, 'megabyte', 'megabyte', 0, 0, 4, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3229, 291, 837, 90, 'bit', 'bit', 0, 0, 1, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3230, 293, 837, 90, 'kilobyte', 'kilobyte', 0, 0, 3, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3231, 1082, 838, 113, '3! * 2!', '3! * 2!', 0, 0, 4, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3232, 362, 838, 113, '2!', '2!', 0, 0, 3, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3233, 361, 838, 113, '3!', '3!', 1, 1, 2, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3234, 360, 838, 113, '5!', '5!', 0, 0, 1, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3235, 136, 839, 38, 'It is followed by one or more catch blocks.', 'It is followed by one or more catch blocks.', 0, 1, 2, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3236, 135, 839, 38, 'A try block identifies a block of code for which particular exceptions is activated.', 'A try block identifies a block of code for which particular exceptions is activated.', 0, 0, 1, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3237, 137, 839, 38, 'A and B', 'A and B', 1, 0, 3, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3238, 935, 840, 147, 'Empty', 'Empty', 0, 1, 4, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3239, 462, 840, 147, 'Infinite', 'Infinite', 1, 0, 1, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3240, 463, 840, 147, 'Finite', 'Finite', 0, 0, 2, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3241, 464, 840, 147, 'Subset', 'Subset', 0, 0, 3, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3242, 911, 841, 51, 'Runtime error', 'Runtime error', 0, 0, 4, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3243, 176, 841, 51, 'Compilation error', 'Compilation error', 1, 0, 3, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3244, 175, 841, 51, '8', '8', 0, 1, 2, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3245, 174, 841, 51, '9', '9', 0, 0, 1, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3246, 258, 842, 79, 'Control unit', 'Control unit', 0, 0, 1, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3247, 259, 842, 79, 'ALU', 'ALU', 0, 0, 2, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3248, 260, 842, 79, 'Registers', 'Registers', 0, 0, 3, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3249, 725, 842, 79, 'Primary Storage', 'Primary Storage', 1, 1, 4, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3250, 1034, 843, 278, 'Message1\nMessage2\nMessage3\nMessage4', 'Message1<br />\nMessage2<br />\nMessage3<br />\nMessage4', 0, 0, 2, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3251, 1036, 843, 278, 'Message1\nMessage3\nMessage2\nMessage4', 'Message1<br />\nMessage3<br />\nMessage2<br />\nMessage4', 0, 0, 4, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3252, 1033, 843, 278, 'Message1\nMessage4', 'Message1<br />\nMessage4', 0, 1, 1, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3253, 1035, 843, 278, 'Message1\nMessage3\nMessage4', 'Message1<br />\nMessage3<br />\nMessage4', 1, 0, 3, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3254, 403, 844, 127, 'Textbox control', 'Textbox control', 0, 0, 2, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3255, 402, 844, 127, 'Radio Button', 'Radio Button', 0, 1, 1, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3256, 404, 844, 127, 'Button control', 'Button control', 1, 0, 3, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3257, 627, 845, 202, 'Desktop Operatng System', 'Desktop Operatng System', 0, 0, 1, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3258, 628, 845, 202, 'Programming Language', 'Programming Language', 0, 0, 2, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3259, 629, 845, 202, 'Mobile Operating System', 'Mobile Operating System', 1, 1, 3, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3260, 820, 845, 202, 'Database', 'Database', 0, 0, 4, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3261, 847, 846, 244, 'none of these', 'none of these', 0, 0, 4, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3262, 845, 846, 244, 'updates()', 'updates()', 0, 0, 2, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3263, 844, 846, 244, 'commitUpdates()', 'commitUpdates()', 1, 1, 1, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3264, 846, 846, 244, 'commit()', 'commit()', 0, 0, 3, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3265, 644, 847, 207, 'Android data bridge', 'Android data bridge', 0, 0, 3, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3266, 643, 847, 207, 'Application Debug Bridge', 'Application Debug Bridge', 0, 0, 2, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3267, 642, 847, 207, 'Android Debug Bridge', 'Android Debug Bridge', 1, 1, 1, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3268, 825, 847, 207, 'Application data bridge', 'Application data bridge', 0, 0, 4, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3269, 937, 848, 149, '{1, 5, 6, 3}', '{1, 5, 6, 3}', 0, 0, 4, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3270, 468, 848, 149, '{1, 2, 6, 1}', '{1, 2, 6, 1}', 0, 1, 1, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3271, 469, 848, 149, '{1, 2, 5, 6}', '{1, 2, 5, 6}', 1, 0, 2, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3272, 470, 848, 149, '{1, 2, 1, 2}', '{1, 2, 1, 2}', 0, 0, 3, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3273, 307, 849, 95, 'You cannot find the square root of a negative number', 'You cannot find the square root of a negative number', 0, 0, 2, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3274, 1064, 849, 95, '-12i', '-12i', 0, 0, 4, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3275, 308, 849, 95, '-12', '-12', 0, 0, 3, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3276, 306, 849, 95, '12i', '12i', 1, 1, 1, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3277, 205, 850, 61, 'stack space', 'stack space', 0, 0, 2, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3278, 920, 850, 61, 'first generation memory', 'first generation memory', 0, 1, 4, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3279, 206, 850, 61, 'heap space and stack space', 'heap space and stack space', 0, 0, 3, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3280, 204, 850, 61, 'heap space', 'heap space', 1, 0, 1, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3281, 489, 851, 156, '4, 8', '4, 8', 0, 0, 1, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3282, 491, 851, 156, '4, 12', '4, 12', 0, 1, 3, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3283, 490, 851, 156, '8, 12', '8, 12', 1, 0, 2, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3284, 944, 851, 156, 'None of the choices', 'None of the choices', 0, 0, 4, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3285, 685, 852, 219, 'Switch', 'Switch', 0, 0, 2, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3286, 710, 852, 219, 'Wireless access point', 'Wireless access point', 0, 0, 4, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3287, 684, 852, 219, 'Repeater', 'Repeater', 0, 0, 1, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3288, 686, 852, 219, 'Modem', 'Modem', 1, 1, 3, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3289, 301, 853, 93, 'x ≥ 5', 'x ≥ 5', 1, 1, 2, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3290, 1062, 853, 93, 'x ≤ -5', 'x ≤ -5', 0, 0, 4, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3291, 300, 853, 93, 'x ≤ 5', 'x ≤ 5', 0, 0, 1, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3292, 302, 853, 93, 'x ≥ -5', 'x ≥ -5', 0, 0, 3, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3293, 631, 854, 203, 'MPEG', 'MPEG', 0, 0, 2, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3294, 632, 854, 203, 'AVI', 'AVI', 1, 1, 3, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3295, 821, 854, 203, 'MIDI', 'MIDI', 0, 0, 4, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3296, 630, 854, 203, 'MP4', 'MP4', 0, 0, 1, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3297, 900, 855, 32, 'All of the choices', 'All of the choices', 1, 0, 4, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3298, 118, 855, 32, 'as', 'as', 0, 0, 2, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3299, 119, 855, 32, 'foreach', 'foreach', 0, 1, 3, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3300, 117, 855, 32, 'abstract', 'abstract', 0, 0, 1, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3301, 199, 856, 59, '0', '0', 0, 0, 2, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3302, 198, 856, 59, '3', '3', 0, 1, 1, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3303, 200, 856, 59, '6', '6', 0, 0, 3, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3304, 918, 856, 59, '1', '1', 1, 0, 4, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3305, 664, 857, 214, 'Windows kernel', 'Windows kernel', 0, 0, 2, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3306, 663, 857, 214, 'Linux kernel', 'Linux kernel', 1, 1, 1, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3307, 832, 857, 214, 'Hybrid kernel', 'Hybrid kernel', 0, 0, 4, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3308, 665, 857, 214, 'MAC kernel', 'MAC kernel', 0, 0, 3, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3309, 197, 858, 58, '0 1 2 3 4 5 6 7 8 9', '0 1 2 3 4 5 6 7 8 9', 0, 0, 3, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3310, 195, 858, 58, '0 2 4 6 8', '0 2 4 6 8', 1, 0, 1, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3311, 917, 858, 58, '1 2 3 4 5 6 7 8 9 10', '1 2 3 4 5 6 7 8 9 10', 0, 1, 4, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3312, 196, 858, 58, '1 3 5 7 9', '1 3 5 7 9', 0, 0, 2, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3313, 833, 859, 215, '2.2 (Froyo)', '2.2 (Froyo)', 0, 0, 4, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3314, 668, 859, 215, '2.6', '2.6', 0, 0, 3, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3315, 666, 859, 215, '3.0 (Honeycomb)', '3.0 (Honeycomb)', 0, 0, 1, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3316, 667, 859, 215, '2.3 (Gingerbread)', '2.3 (Gingerbread)', 1, 1, 2, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3317, 1014, 860, 138, 'a and b', 'a and b', 0, 0, 4, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3318, 436, 860, 138, 'Catches', 'Catches', 0, 0, 2, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3319, 435, 860, 138, 'Trys', 'Trys', 0, 0, 1, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3320, 437, 860, 138, 'Throws', 'Throws', 1, 1, 3, '2019-09-02 02:50:25', '2019-09-02 02:55:18'),
(3321, 467, 861, 148, '7', '7', 0, 0, 3, '2019-09-02 02:50:26', '2019-09-02 02:55:18'),
(3322, 936, 861, 148, '9', '9', 0, 0, 4, '2019-09-02 02:50:26', '2019-09-02 02:55:18'),
(3323, 466, 861, 148, '6', '6', 0, 1, 2, '2019-09-02 02:50:26', '2019-09-02 02:55:18'),
(3324, 465, 861, 148, '8', '8', 1, 0, 1, '2019-09-02 02:50:26', '2019-09-02 02:55:18'),
(3325, 933, 862, 145, '{(1, 1), (a, a), (2, a), (1, b)}', '{(1, 1), (a, a), (2, a), (1, b)}', 0, 0, 4, '2019-09-02 02:50:26', '2019-09-02 02:55:18'),
(3326, 458, 862, 145, '{(1, a), (2, a), (1, b), (2, b)}', '{(1, a), (2, a), (1, b), (2, b)}', 1, 0, 3, '2019-09-02 02:50:26', '2019-09-02 02:55:18'),
(3327, 457, 862, 145, '{(1, 1), (2, 2), (a, a), (b, b)}', '{(1, 1), (2, 2), (a, a), (b, b)}', 0, 1, 2, '2019-09-02 02:50:26', '2019-09-02 02:55:18'),
(3328, 456, 862, 145, '{(1, a), (1, b), (2, a), (b, b)}', '{(1, a), (1, b), (2, a), (b, b)}', 0, 0, 1, '2019-09-02 02:50:26', '2019-09-02 02:55:18'),
(3329, 313, 863, 97, '7 - 3i', '7 - 3i', 0, 0, 2, '2019-09-02 02:50:26', '2019-09-02 02:55:18'),
(3330, 314, 863, 97, 'i - 12', 'i - 12', 1, 1, 3, '2019-09-02 02:50:26', '2019-09-02 02:55:18'),
(3331, 312, 863, 97, 'i - 5', 'i - 5', 0, 0, 1, '2019-09-02 02:50:26', '2019-09-02 02:55:18'),
(3332, 1066, 863, 97, '3i - 10', '3i - 10', 0, 0, 4, '2019-09-02 02:50:26', '2019-09-02 02:55:18'),
(3333, 401, 864, 126, 'TextBox control', 'TextBox control', 0, 0, 3, '2019-09-02 02:50:26', '2019-09-02 02:55:18'),
(3334, 400, 864, 126, 'ListBox control', 'ListBox control', 1, 1, 2, '2019-09-02 02:50:26', '2019-09-02 02:55:18'),
(3335, 399, 864, 126, 'CheckListBox control', 'CheckListBox control', 0, 0, 1, '2019-09-02 02:50:26', '2019-09-02 02:55:18'),
(3336, 345, 865, 108, '1 846 000', '1 846 000', 1, 0, 1, '2019-09-02 02:50:26', '2019-09-02 02:55:18'),
(3337, 346, 865, 108, '1 852 000', '1 852 000', 0, 1, 2, '2019-09-02 02:50:26', '2019-09-02 02:55:18'),
(3338, 1077, 865, 108, '1 500 000', '1 500 000', 0, 0, 4, '2019-09-02 02:50:26', '2019-09-02 02:55:18'),
(3339, 347, 865, 108, '1 000 000', '1 000 000', 0, 0, 3, '2019-09-02 02:50:26', '2019-09-02 02:55:18'),
(3340, 148, 866, 42, 'Boolean', 'Boolean', 1, 0, 2, '2019-09-02 02:50:26', '2019-09-02 02:55:18'),
(3341, 907, 866, 42, 'private', 'private', 0, 1, 4, '2019-09-02 02:50:26', '2019-09-02 02:55:18'),
(3342, 149, 866, 42, 'void', 'void', 0, 0, 3, '2019-09-02 02:50:26', '2019-09-02 02:55:18'),
(3343, 147, 866, 42, 'static', 'static', 0, 0, 1, '2019-09-02 02:50:26', '2019-09-02 02:55:18'),
(3344, 394, 867, 124, 'Value types', 'Value types', 0, 0, 2, '2019-09-02 02:50:26', '2019-09-02 02:55:18'),
(3345, 393, 867, 124, 'Reference type', 'Reference type', 1, 1, 1, '2019-09-02 02:50:26', '2019-09-02 02:55:18'),
(3346, 1007, 867, 124, 'Explicit Types', 'Explicit Types', 0, 0, 4, '2019-09-02 02:50:26', '2019-09-02 02:55:18'),
(3347, 395, 867, 124, 'Data Type', 'Data Type', 0, 0, 3, '2019-09-02 02:50:26', '2019-09-02 02:55:18'),
(3348, 434, 868, 137, 'Have different return types and arguments than the parent class', 'Have different return types and arguments than the parent class', 0, 0, 3, '2019-09-02 02:50:26', '2019-09-02 02:55:18'),
(3349, 433, 868, 137, 'Maintain the same return type and arguments as the parent class, but implement it differently', 'Maintain the same return type and arguments as the parent class, but implement it differently', 1, 1, 2, '2019-09-02 02:50:26', '2019-09-02 02:55:18'),
(3350, 432, 868, 137, 'Override the parent class methods but maintain the implementation', 'Override the parent class methods but maintain the implementation', 0, 0, 1, '2019-09-02 02:50:26', '2019-09-02 02:55:18'),
(3351, 1013, 868, 137, 'Are Virtual', 'Are Virtual', 0, 0, 4, '2019-09-02 02:50:26', '2019-09-02 02:55:18'),
(3352, 385, 869, 121, 'Bitwise operators', 'Bitwise operators', 0, 0, 2, '2019-09-02 02:50:26', '2019-09-02 02:55:18'),
(3353, 384, 869, 121, 'RElational operators', 'RElational operators', 0, 0, 1, '2019-09-02 02:50:26', '2019-09-02 02:55:18'),
(3354, 386, 869, 121, 'Logical operators', 'Logical operators', 1, 1, 3, '2019-09-02 02:50:26', '2019-09-02 02:55:18'),
(3355, 1004, 869, 121, 'Assignment Operators', 'Assignment Operators', 0, 0, 4, '2019-09-02 02:50:26', '2019-09-02 02:55:18'),
(3356, 638, 870, 205, 'WiFi driver', 'WiFi driver', 1, 1, 3, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3357, 636, 870, 205, 'Device Driver', 'Device Driver', 0, 0, 1, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3358, 823, 870, 205, 'Bluetooth driver', 'Bluetooth driver', 0, 0, 4, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3359, 637, 870, 205, 'Video Driver', 'Video Driver', 0, 0, 2, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3360, 688, 871, 220, 'scanner', 'scanner', 1, 1, 2, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3361, 709, 871, 220, 'RFID readers', 'RFID readers', 0, 0, 4, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3362, 689, 871, 220, 'MICR', 'MICR', 0, 0, 3, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3363, 687, 871, 220, 'digital camera', 'digital camera', 0, 0, 1, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3364, 1009, 872, 132, 'While', 'While', 0, 0, 4, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3365, 419, 872, 132, 'For', 'For', 0, 0, 3, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3366, 418, 872, 132, 'Switch', 'Switch', 1, 1, 2, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3367, 417, 872, 132, 'If', 'If', 0, 0, 1, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3368, 877, 873, 252, 'A bean class can be passed from one activity to another.', 'A bean class can be passed from one activity to another.', 0, 0, 2, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3369, 878, 873, 252, 'A mandatory class in android', 'A mandatory class in android', 0, 0, 3, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3370, 876, 873, 252, 'A class used to hold states and objects', 'A class used to hold states and objects', 1, 1, 1, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3371, 879, 873, 252, 'None of the above', 'None of the above', 0, 0, 4, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3372, 443, 874, 140, 'Variable', 'Variable', 1, 1, 3, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3373, 441, 874, 140, 'Constant', 'Constant', 0, 0, 1, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3374, 442, 874, 140, 'Reference type', 'Reference type', 0, 0, 2, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3375, 1016, 874, 140, 'Object', 'Object', 0, 0, 4, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3376, 1031, 875, 277, 'The code will generate an error because the finally block is placed immediately after the try block.', 'The code will generate an error because the finally block is placed immediately after the try block.', 0, 1, 3, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3377, 1029, 875, 277, 'The code will generate an error because it lacks a catch block.', 'The code will generate an error because it lacks a catch block.', 0, 0, 1, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3378, 1030, 875, 277, 'The code will generate an error because it lacks a throw statement.', 'The code will generate an error because it lacks a throw statement.', 0, 0, 2, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3379, 1032, 875, 277, 'The code will compile without an error.', 'The code will compile without an error.', 1, 0, 4, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3380, 1022, 876, 275, 'Several catch blocks for a try block, arranged in order starting with Exception and ending with the most specific exception.', 'Several catch blocks for a try block, arranged in order starting with Exception and ending with the most specific exception.', 0, 0, 2, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3381, 1024, 876, 275, 'The catch blocks should be used only when a finally block is not used.', 'The catch blocks should be used only when a finally block is not used.', 0, 0, 4, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3382, 1023, 876, 275, 'Several catch blocks within one try block, arranged starting with the most specific exception and ending with Exception.', 'Several catch blocks within one try block, arranged starting with the most specific exception and ending with Exception.', 1, 1, 3, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3383, 1021, 876, 275, 'Only one catch block for each try block.', 'Only one catch block for each try block.', 0, 0, 1, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3384, 860, 877, 248, 'To send the data from an application to another application', 'To send the data from an application to another application', 0, 0, 1, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3385, 863, 877, 248, 'none of the choices', 'none of the choices', 0, 1, 4, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3386, 862, 877, 248, 'To share the data between applications', 'To share the data between applications', 1, 0, 3, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3387, 861, 877, 248, 'To store the data in a database', 'To store the data in a database', 0, 0, 2, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3388, 267, 878, 82, '-23', '-23', 0, 0, 1, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3389, 722, 878, 82, '22', '22', 0, 0, 4, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3390, 268, 878, 82, '-9', '-9', 1, 1, 2, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3391, 269, 878, 82, '-7', '-7', 0, 0, 3, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3392, 219, 879, 66, '121', '121', 0, 0, 1, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3393, 220, 879, 66, '163', '163', 1, 1, 2, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3394, 221, 879, 66, '199', '199', 0, 0, 3, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3395, 676, 879, 66, '212', '212', 0, 0, 4, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3396, 707, 880, 225, '44', '44', 0, 0, 3, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3397, 714, 880, 225, '135', '135', 0, 0, 4, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3398, 706, 880, 225, '127', '127', 1, 1, 2, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3399, 705, 880, 225, '531', '531', 0, 0, 1, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3400, 177, 881, 52, '12', '12', 0, 1, 1, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3401, 179, 881, 52, '400', '400', 0, 0, 3, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3402, 912, 881, 52, '100', '100', 0, 0, 4, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3403, 178, 881, 52, '200', '200', 1, 0, 2, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3404, 679, 882, 68, '[[#img26]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/tBuCNpani0PgWIFN01ztVOAj4FS4CBDAiTW9J8lB.png\" width=\"150\" height=\"150\" />', 0, 0, 4, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3405, 225, 882, 68, '[[#img23]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/IyLDJJaUUQ0aIZOMyEjh4JO72W4HpXtPj2CfMKZL.png\" width=\"150\" height=\"150\" />', 1, 1, 1, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3406, 226, 882, 68, '[[#img24]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/nVLwXww7AT2RBfzhH1tPQMxdLPF1iWuunHzErZRh.png\" width=\"150\" height=\"150\" />', 0, 0, 2, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3407, 227, 882, 68, '[[#img25]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/rDh656ehodyPQmn7CxxjGK2H29sx2bh6LDz9INfN.png\" width=\"150\" height=\"150\" />', 0, 0, 3, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3408, 355, 883, 111, '(π/2 , π)', '(π/2 , π)', 1, 0, 2, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3409, 1080, 883, 111, '(3 π / 2 , 2 π)', '(3 π / 2 , 2 π)', 0, 1, 4, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3410, 354, 883, 111, '(0 , π/2)', '(0 , π/2)', 0, 0, 1, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3411, 356, 883, 111, '(π , 3 π / 2)', '(π , 3 π / 2)', 0, 0, 3, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3412, 145, 884, 41, 'public int main(String[] args)', 'public int main(String[] args)', 0, 0, 2, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3413, 146, 884, 41, 'public static void main(String[] args)', 'public static void main(String[] args)', 1, 0, 3, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3414, 144, 884, 41, 'public static int main(String[] args)', 'public static int main(String[] args)', 0, 1, 1, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3415, 656, 885, 211, 'Open source Webkit', 'Open source Webkit', 1, 0, 3, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3416, 655, 885, 211, 'Firefox', 'Firefox', 0, 0, 2, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3417, 654, 885, 211, 'Chrome', 'Chrome', 0, 1, 1, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3418, 829, 885, 211, 'Opera', 'Opera', 0, 0, 4, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3419, 194, 886, 57, 'Both Row and Column', 'Both Row and Column', 0, 0, 3, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3420, 192, 886, 57, 'Row', 'Row', 1, 0, 1, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3421, 193, 886, 57, 'Column', 'Column', 0, 1, 2, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3422, 173, 887, 50, 'Thread starts running.', 'Thread starts running.', 0, 0, 3, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3423, 171, 887, 50, 'Thread returns to the ready state.', 'Thread returns to the ready state.', 1, 0, 1, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3424, 172, 887, 50, 'Thread returns to the waiting state.', 'Thread returns to the waiting state.', 0, 1, 2, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3425, 408, 888, 129, 'GroupBox control', 'GroupBox control', 0, 0, 1, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3426, 409, 888, 129, 'LinkLabel control', 'LinkLabel control', 1, 1, 2, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3427, 410, 888, 129, 'ListView Control', 'ListView Control', 0, 0, 3, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3428, 140, 889, 39, 'Depends upon the type of variable', 'Depends upon the type of variable', 1, 0, 3, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3429, 906, 889, 39, 'Not assigned', 'Not assigned', 0, 0, 4, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3430, 139, 889, 39, '0', '0', 0, 1, 2, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3431, 138, 889, 39, 'null', 'null', 0, 0, 1, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3432, 1055, 890, 283, 'Set the CausesValidation property of the Help button to false.', 'Set the CausesValidation property of the Help button to false.', 1, 1, 3, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3433, 1054, 890, 283, 'Set the CausesValidation property of the text box to true.', 'Set the CausesValidation property of the text box to true.', 0, 0, 2, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3434, 1053, 890, 283, 'Set the CausesValidation property of the text box to false.', 'Set the CausesValidation property of the text box to false.', 0, 0, 1, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3435, 1056, 890, 283, 'Set the CausesValidation property of the Help button to true.', 'Set the CausesValidation property of the Help button to true.', 0, 0, 4, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3436, 114, 891, 31, '10', '10', 0, 1, 1, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3437, 116, 891, 31, '12', '12', 0, 0, 3, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3438, 115, 891, 31, '20', '20', 1, 0, 2, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3439, 253, 892, 77, 'syntax error', 'syntax error', 0, 0, 2, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3440, 727, 892, 77, 'linker error', 'linker error', 0, 1, 4, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3441, 252, 892, 77, 'logic error', 'logic error', 1, 0, 1, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3442, 254, 892, 77, 'run time error', 'run time error', 0, 0, 3, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3443, 371, 893, 116, 'neither odd nor even', 'neither odd nor even', 0, 0, 3, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3444, 1085, 893, 116, 'even and odd', 'even and odd', 0, 0, 4, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3445, 369, 893, 116, 'an odd function', 'an odd function', 0, 1, 1, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3446, 370, 893, 116, 'an even function', 'an even function', 1, 0, 2, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3447, 1061, 894, 92, 'x > 6', 'x > 6', 0, 0, 4, '2019-09-02 02:50:26', '2019-09-02 02:55:19'),
(3448, 297, 894, 92, 'x < 6', 'x < 6', 0, 1, 1, '2019-09-02 02:50:26', '2019-09-02 02:55:19');
INSERT INTO `answer_sheet_test_question_choices` (`id`, `choice_id`, `answer_sheet_test_question_id`, `test_question_id`, `body`, `body_html`, `is_correct`, `is_selected`, `pos_order`, `created_at`, `updated_at`) VALUES
(3449, 298, 894, 92, 'x > 1', 'x > 1', 0, 0, 2, '2019-09-02 02:50:27', '2019-09-02 02:55:19'),
(3450, 299, 894, 92, 'x < -1', 'x < -1', 1, 0, 3, '2019-09-02 02:50:27', '2019-09-02 02:55:19'),
(3451, 455, 895, 144, '3', '3', 0, 0, 3, '2019-09-02 02:50:27', '2019-09-02 02:55:19'),
(3452, 932, 895, 144, '20', '20', 0, 0, 4, '2019-09-02 02:50:27', '2019-09-02 02:55:19'),
(3453, 454, 895, 144, '5', '5', 1, 0, 2, '2019-09-02 02:50:27', '2019-09-02 02:55:19'),
(3454, 453, 895, 144, '10', '10', 0, 1, 1, '2019-09-02 02:50:27', '2019-09-02 02:55:19'),
(3455, 125, 896, 34, '&</a>', '&</a>', 0, 0, 3, '2019-09-02 02:50:27', '2019-09-02 02:55:19'),
(3456, 902, 896, 34, '*', '*', 0, 1, 4, '2019-09-02 02:50:27', '2019-09-02 02:55:19'),
(3457, 123, 896, 34, 'sizeof', 'sizeof', 1, 0, 1, '2019-09-02 02:50:27', '2019-09-02 02:55:19'),
(3458, 124, 896, 34, 'typeof', 'typeof', 0, 0, 2, '2019-09-02 02:50:27', '2019-09-02 02:55:19'),
(3459, 257, 897, 78, 'EBCDIC', 'EBCDIC', 0, 0, 3, '2019-09-02 02:50:27', '2019-09-02 02:55:19'),
(3460, 255, 897, 78, 'ASCII', 'ASCII', 0, 0, 1, '2019-09-02 02:50:27', '2019-09-02 02:55:19'),
(3461, 256, 897, 78, 'Unicode', 'Unicode', 1, 1, 2, '2019-09-02 02:50:27', '2019-09-02 02:55:19'),
(3462, 726, 897, 78, 'ANSI', 'ANSI', 0, 0, 4, '2019-09-02 02:50:27', '2019-09-02 02:55:19'),
(3463, 388, 898, 122, 'Binary operators', 'Binary operators', 0, 0, 2, '2019-09-02 02:50:27', '2019-09-02 02:55:19'),
(3464, 1005, 898, 122, 'Assignment opeartors', 'Assignment opeartors', 0, 0, 4, '2019-09-02 02:50:27', '2019-09-02 02:55:19'),
(3465, 389, 898, 122, 'Logical operators', 'Logical operators', 0, 0, 3, '2019-09-02 02:50:27', '2019-09-02 02:55:19'),
(3466, 387, 898, 122, 'unary operators', 'unary operators', 1, 1, 1, '2019-09-02 02:50:27', '2019-09-02 02:55:19'),
(3467, 449, 899, 142, '{1, 2, 5, 9}', '{1, 2, 5, 9}', 0, 0, 3, '2019-09-02 02:50:27', '2019-09-02 02:55:20'),
(3468, 448, 899, 142, '{1, 3, 5, 7, 9}', '{1, 3, 5, 7, 9}', 1, 0, 2, '2019-09-02 02:50:27', '2019-09-02 02:55:20'),
(3469, 930, 899, 142, '{1, 5, 7, 9, 11}', '{1, 5, 7, 9, 11}', 0, 1, 4, '2019-09-02 02:50:27', '2019-09-02 02:55:20'),
(3470, 447, 899, 142, '{1, 2, 3}', '{1, 2, 3}', 0, 0, 1, '2019-09-02 02:50:27', '2019-09-02 02:55:19'),
(3471, 954, 900, 260, '10', '10', 0, 1, 4, '2019-09-02 02:50:27', '2019-09-02 02:55:20'),
(3472, 951, 900, 260, '35', '35', 1, 0, 1, '2019-09-02 02:50:27', '2019-09-02 02:55:20'),
(3473, 952, 900, 260, '20', '20', 0, 0, 2, '2019-09-02 02:50:27', '2019-09-02 02:55:20'),
(3474, 953, 900, 260, '30', '30', 0, 0, 3, '2019-09-02 02:50:27', '2019-09-02 02:55:20'),
(3475, 125, 901, 34, '&</a>', '&</a>', 0, 0, 3, '2019-09-02 02:58:10', '2019-09-02 03:09:03'),
(3476, 124, 901, 34, 'typeof', 'typeof', 0, 1, 2, '2019-09-02 02:58:10', '2019-09-02 03:09:03'),
(3477, 123, 901, 34, 'sizeof', 'sizeof', 1, 0, 1, '2019-09-02 02:58:10', '2019-09-02 03:09:03'),
(3478, 902, 901, 34, '*', '*', 0, 0, 4, '2019-09-02 02:58:10', '2019-09-02 03:09:03'),
(3479, 632, 902, 203, 'AVI', 'AVI', 1, 1, 3, '2019-09-02 02:58:10', '2019-09-02 03:09:03'),
(3480, 631, 902, 203, 'MPEG', 'MPEG', 0, 0, 2, '2019-09-02 02:58:10', '2019-09-02 03:09:03'),
(3481, 630, 902, 203, 'MP4', 'MP4', 0, 0, 1, '2019-09-02 02:58:10', '2019-09-02 03:09:03'),
(3482, 821, 902, 203, 'MIDI', 'MIDI', 0, 0, 4, '2019-09-02 02:58:10', '2019-09-02 03:09:03'),
(3483, 503, 903, 160, 'A ∩ B', 'A ∩ B', 0, 0, 3, '2019-09-02 02:58:10', '2019-09-02 03:09:03'),
(3484, 502, 903, 160, 'A U B -B', 'A U B -B', 1, 1, 2, '2019-09-02 02:58:10', '2019-09-02 03:09:03'),
(3485, 948, 903, 160, 'B', 'B', 0, 0, 4, '2019-09-02 02:58:10', '2019-09-02 03:09:03'),
(3486, 501, 903, 160, 'A‘ (Complement of A)', 'A‘ (Complement of A)', 0, 0, 1, '2019-09-02 02:58:10', '2019-09-02 03:09:03'),
(3487, 259, 904, 79, 'ALU', 'ALU', 0, 0, 2, '2019-09-02 02:58:10', '2019-09-02 03:09:03'),
(3488, 258, 904, 79, 'Control unit', 'Control unit', 0, 0, 1, '2019-09-02 02:58:10', '2019-09-02 03:09:03'),
(3489, 260, 904, 79, 'Registers', 'Registers', 0, 1, 3, '2019-09-02 02:58:10', '2019-09-02 03:09:03'),
(3490, 725, 904, 79, 'Primary Storage', 'Primary Storage', 1, 0, 4, '2019-09-02 02:58:10', '2019-09-02 03:09:03'),
(3491, 939, 905, 151, 'Complement', 'Complement', 0, 0, 4, '2019-09-02 02:58:10', '2019-09-02 03:09:03'),
(3492, 476, 905, 151, 'Intersection', 'Intersection', 1, 1, 3, '2019-09-02 02:58:10', '2019-09-02 03:09:03'),
(3493, 475, 905, 151, 'Difference', 'Difference', 0, 0, 2, '2019-09-02 02:58:10', '2019-09-02 03:09:03'),
(3494, 474, 905, 151, 'Union', 'Union', 0, 0, 1, '2019-09-02 02:58:10', '2019-09-02 03:09:03'),
(3495, 2, 906, 1, 'x = 4', 'x = 4', 0, 0, 2, '2019-09-02 02:58:10', '2019-09-02 03:09:03'),
(3496, 1, 906, 1, 'x = 1', 'x = 1', 1, 1, 1, '2019-09-02 02:58:10', '2019-09-02 03:09:03'),
(3497, 3, 906, 1, 'x = 2', 'x = 2', 0, 0, 3, '2019-09-02 02:58:10', '2019-09-02 03:09:03'),
(3498, 1095, 907, 286, '0', '0', 0, 0, 4, '2019-09-02 02:58:10', '2019-09-02 03:09:03'),
(3499, 1093, 907, 286, '0.478', '0.478', 0, 0, 2, '2019-09-02 02:58:10', '2019-09-02 03:09:03'),
(3500, 1092, 907, 286, '0.057', '0.057', 1, 1, 1, '2019-09-02 02:58:10', '2019-09-02 03:09:03'),
(3501, 1094, 907, 286, '0.001', '0.001', 0, 0, 3, '2019-09-02 02:58:10', '2019-09-02 03:09:03'),
(3502, 877, 908, 252, 'A bean class can be passed from one activity to another.', 'A bean class can be passed from one activity to another.', 0, 0, 2, '2019-09-02 02:58:10', '2019-09-02 03:09:03'),
(3503, 878, 908, 252, 'A mandatory class in android', 'A mandatory class in android', 0, 1, 3, '2019-09-02 02:58:10', '2019-09-02 03:09:03'),
(3504, 879, 908, 252, 'None of the above', 'None of the above', 0, 0, 4, '2019-09-02 02:58:10', '2019-09-02 03:09:03'),
(3505, 876, 908, 252, 'A class used to hold states and objects', 'A class used to hold states and objects', 1, 0, 1, '2019-09-02 02:58:10', '2019-09-02 03:09:03'),
(3506, 637, 909, 205, 'Video Driver', 'Video Driver', 0, 0, 2, '2019-09-02 02:58:11', '2019-09-02 03:09:03'),
(3507, 823, 909, 205, 'Bluetooth driver', 'Bluetooth driver', 0, 0, 4, '2019-09-02 02:58:11', '2019-09-02 03:09:03'),
(3508, 638, 909, 205, 'WiFi driver', 'WiFi driver', 1, 1, 3, '2019-09-02 02:58:11', '2019-09-02 03:09:03'),
(3509, 636, 909, 205, 'Device Driver', 'Device Driver', 0, 0, 1, '2019-09-02 02:58:11', '2019-09-02 03:09:03'),
(3510, 165, 910, 48, 'JRE is a java based GUI application.', 'JRE is a java based GUI application.', 0, 0, 1, '2019-09-02 02:58:11', '2019-09-02 03:09:03'),
(3511, 166, 910, 48, 'JRE is an application development framework.', 'JRE is an application development framework.', 0, 1, 2, '2019-09-02 02:58:11', '2019-09-02 03:09:03'),
(3512, 167, 910, 48, 'JRE is an implementation of the Java Virtual Machine which executes Java programs.', 'JRE is an implementation of the Java Virtual Machine which executes Java programs.', 1, 0, 3, '2019-09-02 02:58:11', '2019-09-02 03:09:03'),
(3513, 314, 911, 97, 'i - 12', 'i - 12', 1, 1, 3, '2019-09-02 02:58:11', '2019-09-02 03:09:03'),
(3514, 313, 911, 97, '7 - 3i', '7 - 3i', 0, 0, 2, '2019-09-02 02:58:11', '2019-09-02 03:09:03'),
(3515, 1066, 911, 97, '3i - 10', '3i - 10', 0, 0, 4, '2019-09-02 02:58:11', '2019-09-02 03:09:03'),
(3516, 312, 911, 97, 'i - 5', 'i - 5', 0, 0, 1, '2019-09-02 02:58:11', '2019-09-02 03:09:03'),
(3517, 267, 912, 82, '-23', '-23', 0, 0, 1, '2019-09-02 02:58:11', '2019-09-02 03:09:03'),
(3518, 268, 912, 82, '-9', '-9', 1, 1, 2, '2019-09-02 02:58:11', '2019-09-02 03:09:03'),
(3519, 722, 912, 82, '22', '22', 0, 0, 4, '2019-09-02 02:58:11', '2019-09-02 03:09:03'),
(3520, 269, 912, 82, '-7', '-7', 0, 0, 3, '2019-09-02 02:58:11', '2019-09-02 03:09:03'),
(3521, 386, 913, 121, 'Logical operators', 'Logical operators', 1, 0, 3, '2019-09-02 02:58:11', '2019-09-02 03:09:03'),
(3522, 385, 913, 121, 'Bitwise operators', 'Bitwise operators', 0, 1, 2, '2019-09-02 02:58:11', '2019-09-02 03:09:03'),
(3523, 1004, 913, 121, 'Assignment Operators', 'Assignment Operators', 0, 0, 4, '2019-09-02 02:58:11', '2019-09-02 03:09:03'),
(3524, 384, 913, 121, 'RElational operators', 'RElational operators', 0, 0, 1, '2019-09-02 02:58:11', '2019-09-02 03:09:03'),
(3525, 301, 914, 93, 'x ≥ 5', 'x ≥ 5', 1, 1, 2, '2019-09-02 02:58:11', '2019-09-02 03:09:03'),
(3526, 1062, 914, 93, 'x ≤ -5', 'x ≤ -5', 0, 0, 4, '2019-09-02 02:58:11', '2019-09-02 03:09:03'),
(3527, 300, 914, 93, 'x ≤ 5', 'x ≤ 5', 0, 0, 1, '2019-09-02 02:58:11', '2019-09-02 03:09:03'),
(3528, 302, 914, 93, 'x ≥ -5', 'x ≥ -5', 0, 0, 3, '2019-09-02 02:58:11', '2019-09-02 03:09:03'),
(3529, 308, 915, 95, '-12', '-12', 0, 0, 3, '2019-09-02 02:58:11', '2019-09-02 03:09:03'),
(3530, 306, 915, 95, '12i', '12i', 1, 1, 1, '2019-09-02 02:58:11', '2019-09-02 03:09:03'),
(3531, 307, 915, 95, 'You cannot find the square root of a negative number', 'You cannot find the square root of a negative number', 0, 0, 2, '2019-09-02 02:58:11', '2019-09-02 03:09:03'),
(3532, 1064, 915, 95, '-12i', '-12i', 0, 0, 4, '2019-09-02 02:58:11', '2019-09-02 03:09:03'),
(3533, 362, 916, 113, '2!', '2!', 0, 0, 3, '2019-09-02 02:58:11', '2019-09-02 03:09:03'),
(3534, 361, 916, 113, '3!', '3!', 1, 1, 2, '2019-09-02 02:58:11', '2019-09-02 03:09:03'),
(3535, 1082, 916, 113, '3! * 2!', '3! * 2!', 0, 0, 4, '2019-09-02 02:58:11', '2019-09-02 03:09:03'),
(3536, 360, 916, 113, '5!', '5!', 0, 0, 1, '2019-09-02 02:58:11', '2019-09-02 03:09:03'),
(3537, 462, 917, 147, 'Infinite', 'Infinite', 1, 1, 1, '2019-09-02 02:58:11', '2019-09-02 03:09:03'),
(3538, 464, 917, 147, 'Subset', 'Subset', 0, 0, 3, '2019-09-02 02:58:11', '2019-09-02 03:09:03'),
(3539, 463, 917, 147, 'Finite', 'Finite', 0, 0, 2, '2019-09-02 02:58:11', '2019-09-02 03:09:03'),
(3540, 935, 917, 147, 'Empty', 'Empty', 0, 0, 4, '2019-09-02 02:58:11', '2019-09-02 03:09:03'),
(3541, 932, 918, 144, '20', '20', 0, 0, 4, '2019-09-02 02:58:11', '2019-09-02 03:09:03'),
(3542, 455, 918, 144, '3', '3', 0, 0, 3, '2019-09-02 02:58:11', '2019-09-02 03:09:03'),
(3543, 454, 918, 144, '5', '5', 1, 1, 2, '2019-09-02 02:58:11', '2019-09-02 03:09:03'),
(3544, 453, 918, 144, '10', '10', 0, 0, 1, '2019-09-02 02:58:11', '2019-09-02 03:09:03'),
(3545, 149, 919, 42, 'void', 'void', 0, 0, 3, '2019-09-02 02:58:11', '2019-09-02 03:09:03'),
(3546, 907, 919, 42, 'private', 'private', 0, 1, 4, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3547, 147, 919, 42, 'static', 'static', 0, 0, 1, '2019-09-02 02:58:11', '2019-09-02 03:09:03'),
(3548, 148, 919, 42, 'Boolean', 'Boolean', 1, 0, 2, '2019-09-02 02:58:11', '2019-09-02 03:09:03'),
(3549, 847, 920, 244, 'none of these', 'none of these', 0, 0, 4, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3550, 844, 920, 244, 'commitUpdates()', 'commitUpdates()', 1, 1, 1, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3551, 845, 920, 244, 'updates()', 'updates()', 0, 0, 2, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3552, 846, 920, 244, 'commit()', 'commit()', 0, 0, 3, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3553, 954, 921, 260, '10', '10', 0, 0, 4, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3554, 951, 921, 260, '35', '35', 1, 1, 1, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3555, 952, 921, 260, '20', '20', 0, 0, 2, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3556, 953, 921, 260, '30', '30', 0, 0, 3, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3557, 1073, 922, 104, '(x+5)<sup>2</sup> -16', '(x+5)<sup>2</sup> -16', 0, 0, 4, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3558, 335, 922, 104, '(x+7)<sup>2</sup> -8', '(x+7)<sup>2</sup> -8', 0, 0, 3, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3559, 334, 922, 104, '(x+5)<sup>2</sup> +16', '(x+5)<sup>2</sup> +16', 1, 1, 2, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3560, 333, 922, 104, '(x-7)<sup>2</sup> +8', '(x-7)<sup>2</sup> +8', 0, 0, 1, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3561, 979, 923, 267, 'greatest previous integer', 'greatest previous integer', 1, 1, 2, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3562, 978, 923, 267, 'smallest previous integer', 'smallest previous integer', 0, 0, 1, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3563, 980, 923, 267, 'smallest following integer', 'smallest following integer', 0, 0, 3, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3564, 706, 924, 225, '127', '127', 1, 1, 2, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3565, 707, 924, 225, '44', '44', 0, 0, 3, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3566, 714, 924, 225, '135', '135', 0, 0, 4, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3567, 705, 924, 225, '531', '531', 0, 0, 1, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3568, 943, 925, 155, '7', '7', 0, 0, 4, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3569, 488, 925, 155, '6', '6', 0, 0, 3, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3570, 486, 925, 155, '4', '4', 1, 1, 1, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3571, 487, 925, 155, '5', '5', 0, 0, 2, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3572, 137, 926, 38, 'A and B', 'A and B', 1, 0, 3, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3573, 136, 926, 38, 'It is followed by one or more catch blocks.', 'It is followed by one or more catch blocks.', 0, 1, 2, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3574, 135, 926, 38, 'A try block identifies a block of code for which particular exceptions is activated.', 'A try block identifies a block of code for which particular exceptions is activated.', 0, 0, 1, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3575, 1030, 927, 277, 'The code will generate an error because it lacks a throw statement.', 'The code will generate an error because it lacks a throw statement.', 0, 1, 2, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3576, 1032, 927, 277, 'The code will compile without an error.', 'The code will compile without an error.', 1, 0, 4, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3577, 1029, 927, 277, 'The code will generate an error because it lacks a catch block.', 'The code will generate an error because it lacks a catch block.', 0, 0, 1, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3578, 1031, 927, 277, 'The code will generate an error because the finally block is placed immediately after the try block.', 'The code will generate an error because the finally block is placed immediately after the try block.', 0, 0, 3, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3579, 1105, 928, 289, '7', '7', 1, 1, 2, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3580, 1107, 928, 289, '8', '8', 0, 0, 4, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3581, 1104, 928, 289, '5', '5', 0, 0, 1, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3582, 1106, 928, 289, '6', '6', 0, 0, 3, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3583, 400, 929, 126, 'ListBox control', 'ListBox control', 1, 0, 2, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3584, 401, 929, 126, 'TextBox control', 'TextBox control', 0, 1, 3, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3585, 399, 929, 126, 'CheckListBox control', 'CheckListBox control', 0, 0, 1, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3586, 343, 930, 107, '48', '48', 0, 0, 2, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3587, 342, 930, 107, '11', '11', 0, 0, 1, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3588, 344, 930, 107, '-12', '-12', 0, 0, 3, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3589, 1076, 930, 107, '22', '22', 1, 1, 4, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3590, 842, 931, 243, 'manifest.XML', 'manifest.XML', 0, 1, 3, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3591, 843, 931, 243, 'application', 'application', 0, 0, 4, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3592, 841, 931, 243, 'X.style', 'X.style', 0, 0, 2, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3593, 840, 931, 243, 'R.style', 'R.style', 1, 0, 1, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3594, 284, 932, 87, 'decode, fetch, store and execute', 'decode, fetch, store and execute', 0, 0, 3, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3595, 715, 932, 87, 'fetch, decode, execute and store', 'fetch, decode, execute and store', 1, 0, 4, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3596, 283, 932, 87, 'decode, execute, store and fetch', 'decode, execute, store and fetch', 0, 1, 2, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3597, 282, 932, 87, 'fetch, execute, store and decode', 'fetch, execute, store and decode', 0, 0, 1, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3598, 1036, 933, 278, 'Message1\nMessage3\nMessage2\nMessage4', 'Message1<br />\nMessage3<br />\nMessage2<br />\nMessage4', 0, 1, 4, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3599, 1035, 933, 278, 'Message1\nMessage3\nMessage4', 'Message1<br />\nMessage3<br />\nMessage4', 1, 0, 3, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3600, 1034, 933, 278, 'Message1\nMessage2\nMessage3\nMessage4', 'Message1<br />\nMessage2<br />\nMessage3<br />\nMessage4', 0, 0, 2, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3601, 1033, 933, 278, 'Message1\nMessage4', 'Message1<br />\nMessage4', 0, 0, 1, '2019-09-02 02:58:11', '2019-09-02 03:09:04'),
(3602, 920, 934, 61, 'first generation memory', 'first generation memory', 0, 0, 4, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3603, 204, 934, 61, 'heap space', 'heap space', 1, 0, 1, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3604, 205, 934, 61, 'stack space', 'stack space', 0, 1, 2, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3605, 206, 934, 61, 'heap space and stack space', 'heap space and stack space', 0, 0, 3, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3606, 393, 935, 124, 'Reference type', 'Reference type', 1, 1, 1, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3607, 394, 935, 124, 'Value types', 'Value types', 0, 0, 2, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3608, 1007, 935, 124, 'Explicit Types', 'Explicit Types', 0, 0, 4, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3609, 395, 935, 124, 'Data Type', 'Data Type', 0, 0, 3, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3610, 467, 936, 148, '7', '7', 0, 0, 3, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3611, 466, 936, 148, '6', '6', 0, 0, 2, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3612, 465, 936, 148, '8', '8', 1, 1, 1, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3613, 936, 936, 148, '9', '9', 0, 0, 4, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3614, 937, 937, 149, '{1, 5, 6, 3}', '{1, 5, 6, 3}', 0, 0, 4, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3615, 470, 937, 149, '{1, 2, 1, 2}', '{1, 2, 1, 2}', 0, 0, 3, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3616, 469, 937, 149, '{1, 2, 5, 6}', '{1, 2, 5, 6}', 1, 1, 2, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3617, 468, 937, 149, '{1, 2, 6, 1}', '{1, 2, 6, 1}', 0, 0, 1, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3618, 142, 938, 40, 'object.', 'object.', 0, 0, 2, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3619, 141, 938, 40, 'type.', 'type.', 1, 0, 1, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3620, 143, 938, 40, 'Both of the above.', 'Both of the above.', 0, 1, 3, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3621, 712, 939, 89, 'None of them', 'None of them', 0, 0, 4, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3622, 290, 939, 89, 'Virtual Machine', 'Virtual Machine', 0, 0, 3, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3623, 288, 939, 89, 'Virtual private network', 'Virtual private network', 0, 1, 1, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3624, 289, 939, 89, 'Virtual memory', 'Virtual memory', 1, 0, 2, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3625, 198, 940, 59, '3', '3', 0, 0, 1, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3626, 918, 940, 59, '1', '1', 1, 1, 4, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3627, 199, 940, 59, '0', '0', 0, 0, 2, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3628, 200, 940, 59, '6', '6', 0, 0, 3, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3629, 730, 941, 74, 'CPU', 'CPU', 0, 0, 4, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3630, 243, 941, 74, 'Operating System', 'Operating System', 0, 0, 1, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3631, 244, 941, 74, 'Motherboard', 'Motherboard', 0, 0, 2, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3632, 245, 941, 74, 'Computer', 'Computer', 1, 1, 3, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3633, 473, 942, 150, '{2, 5}', '{2, 5}', 0, 0, 3, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3634, 938, 942, 150, '{1, 6}', '{1, 6}', 0, 1, 4, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3635, 472, 942, 150, '{5, 6}', '{5, 6}', 0, 0, 2, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3636, 471, 942, 150, '{1, 2}', '{1, 2}', 1, 0, 1, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3637, 175, 943, 51, '8', '8', 0, 0, 2, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3638, 174, 943, 51, '9', '9', 0, 0, 1, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3639, 911, 943, 51, 'Runtime error', 'Runtime error', 0, 0, 4, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3640, 176, 943, 51, 'Compilation error', 'Compilation error', 1, 1, 3, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3641, 830, 944, 212, 'No company', 'No company', 0, 0, 4, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3642, 659, 944, 212, 'Nokia', 'Nokia', 0, 1, 3, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3643, 657, 944, 212, 'Apple', 'Apple', 0, 0, 1, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3644, 658, 944, 212, 'Google', 'Google', 1, 0, 2, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3645, 709, 945, 220, 'RFID readers', 'RFID readers', 0, 0, 4, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3646, 688, 945, 220, 'scanner', 'scanner', 1, 0, 2, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3647, 689, 945, 220, 'MICR', 'MICR', 0, 1, 3, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3648, 687, 945, 220, 'digital camera', 'digital camera', 0, 0, 1, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3649, 416, 946, 131, 'Show()', 'Show()', 1, 1, 3, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3650, 414, 946, 131, 'Get()', 'Get()', 0, 0, 1, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3651, 415, 946, 131, 'Enable()', 'Enable()', 0, 0, 2, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3652, 1053, 947, 283, 'Set the CausesValidation property of the text box to false.', 'Set the CausesValidation property of the text box to false.', 0, 0, 1, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3653, 1055, 947, 283, 'Set the CausesValidation property of the Help button to false.', 'Set the CausesValidation property of the Help button to false.', 1, 1, 3, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3654, 1056, 947, 283, 'Set the CausesValidation property of the Help button to true.', 'Set the CausesValidation property of the Help button to true.', 0, 0, 4, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3655, 1054, 947, 283, 'Set the CausesValidation property of the text box to true.', 'Set the CausesValidation property of the text box to true.', 0, 0, 2, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3656, 403, 948, 127, 'Textbox control', 'Textbox control', 0, 0, 2, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3657, 404, 948, 127, 'Button control', 'Button control', 1, 1, 3, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3658, 402, 948, 127, 'Radio Button', 'Radio Button', 0, 0, 1, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3659, 701, 949, 223, '110100', '110100', 1, 0, 3, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3660, 700, 949, 223, '100001', '100001', 0, 0, 2, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3661, 699, 949, 223, '110011', '110011', 0, 1, 1, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3662, 718, 949, 223, '100100', '100100', 0, 0, 4, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3663, 140, 950, 39, 'Depends upon the type of variable', 'Depends upon the type of variable', 1, 1, 3, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3664, 139, 950, 39, '0', '0', 0, 0, 2, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3665, 906, 950, 39, 'Not assigned', 'Not assigned', 0, 0, 4, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3666, 138, 950, 39, 'null', 'null', 0, 0, 1, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3667, 146, 951, 41, 'public static void main(String[] args)', 'public static void main(String[] args)', 1, 1, 3, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3668, 144, 951, 41, 'public static int main(String[] args)', 'public static int main(String[] args)', 0, 0, 1, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3669, 145, 951, 41, 'public int main(String[] args)', 'public int main(String[] args)', 0, 0, 2, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3670, 933, 952, 145, '{(1, 1), (a, a), (2, a), (1, b)}', '{(1, 1), (a, a), (2, a), (1, b)}', 0, 0, 4, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3671, 457, 952, 145, '{(1, 1), (2, 2), (a, a), (b, b)}', '{(1, 1), (2, 2), (a, a), (b, b)}', 0, 0, 2, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3672, 456, 952, 145, '{(1, a), (1, b), (2, a), (b, b)}', '{(1, a), (1, b), (2, a), (b, b)}', 0, 1, 1, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3673, 458, 952, 145, '{(1, a), (2, a), (1, b), (2, b)}', '{(1, a), (2, a), (1, b), (2, b)}', 1, 0, 3, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3674, 1023, 953, 275, 'Several catch blocks within one try block, arranged starting with the most specific exception and ending with Exception.', 'Several catch blocks within one try block, arranged starting with the most specific exception and ending with Exception.', 1, 1, 3, '2019-09-02 02:58:12', '2019-09-02 03:09:05'),
(3675, 1022, 953, 275, 'Several catch blocks for a try block, arranged in order starting with Exception and ending with the most specific exception.', 'Several catch blocks for a try block, arranged in order starting with Exception and ending with the most specific exception.', 0, 0, 2, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3676, 1024, 953, 275, 'The catch blocks should be used only when a finally block is not used.', 'The catch blocks should be used only when a finally block is not used.', 0, 0, 4, '2019-09-02 02:58:12', '2019-09-02 03:09:05'),
(3677, 1021, 953, 275, 'Only one catch block for each try block.', 'Only one catch block for each try block.', 0, 0, 1, '2019-09-02 02:58:12', '2019-09-02 03:09:04'),
(3678, 193, 954, 57, 'Column', 'Column', 0, 0, 2, '2019-09-02 02:58:12', '2019-09-02 03:09:05'),
(3679, 194, 954, 57, 'Both Row and Column', 'Both Row and Column', 0, 0, 3, '2019-09-02 02:58:12', '2019-09-02 03:09:05'),
(3680, 192, 954, 57, 'Row', 'Row', 1, 1, 1, '2019-09-02 02:58:12', '2019-09-02 03:09:05'),
(3681, 507, 955, 162, 'n(A U B)=0', 'n(A U B)=0', 0, 0, 1, '2019-09-02 02:58:12', '2019-09-02 03:09:05'),
(3682, 508, 955, 162, 'n( B U C)=0', 'n( B U C)=0', 0, 1, 2, '2019-09-02 02:58:12', '2019-09-02 03:09:05'),
(3683, 509, 955, 162, 'n( A U B U C)=90', 'n( A U B U C)=90', 0, 0, 3, '2019-09-02 02:58:12', '2019-09-02 03:09:05'),
(3684, 950, 955, 162, 'All of the mentioned', 'All of the mentioned', 1, 0, 4, '2019-09-02 02:58:12', '2019-09-02 03:09:05'),
(3685, 365, 956, 114, 'mean = 15 , standard deviation = 1', 'mean = 15 , standard deviation = 1', 1, 1, 3, '2019-09-02 02:58:12', '2019-09-02 03:09:05'),
(3686, 363, 956, 114, 'mean = 15 , standard deviation = 6', 'mean = 15 , standard deviation = 6', 0, 0, 1, '2019-09-02 02:58:12', '2019-09-02 03:09:05'),
(3687, 1083, 956, 114, 'mean = 10 , standard deviation = 1', 'mean = 10 , standard deviation = 1', 0, 0, 4, '2019-09-02 02:58:12', '2019-09-02 03:09:05'),
(3688, 364, 956, 114, 'mean = 10 , standard deviation = 6', 'mean = 10 , standard deviation = 6', 0, 0, 2, '2019-09-02 02:58:12', '2019-09-02 03:09:05'),
(3689, 893, 957, 256, 'Cursor is used to store the temporary result.', 'Cursor is used to store the temporary result.', 0, 0, 2, '2019-09-02 02:58:12', '2019-09-02 03:09:05'),
(3690, 895, 957, 256, 'Cursor is used to store data permanently.', 'Cursor is used to store data permanently.', 0, 0, 4, '2019-09-02 02:58:12', '2019-09-02 03:09:05'),
(3691, 894, 957, 256, 'A & B', 'A & B', 1, 1, 3, '2019-09-02 02:58:12', '2019-09-02 03:09:05'),
(3692, 892, 957, 256, 'Content values are key pair values, which are updated or inserted in the database', 'Content values are key pair values, which are updated or inserted in the database', 0, 0, 1, '2019-09-02 02:58:12', '2019-09-02 03:09:05'),
(3693, 225, 958, 68, '[[#img23]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/IyLDJJaUUQ0aIZOMyEjh4JO72W4HpXtPj2CfMKZL.png\" width=\"150\" height=\"150\" />', 1, 0, 1, '2019-09-02 02:58:12', '2019-09-02 03:09:05'),
(3694, 227, 958, 68, '[[#img25]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/rDh656ehodyPQmn7CxxjGK2H29sx2bh6LDz9INfN.png\" width=\"150\" height=\"150\" />', 0, 0, 3, '2019-09-02 02:58:12', '2019-09-02 03:09:05'),
(3695, 226, 958, 68, '[[#img24]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/nVLwXww7AT2RBfzhH1tPQMxdLPF1iWuunHzErZRh.png\" width=\"150\" height=\"150\" />', 0, 0, 2, '2019-09-02 02:58:12', '2019-09-02 03:09:05'),
(3696, 679, 958, 68, '[[#img26]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/tBuCNpani0PgWIFN01ztVOAj4FS4CBDAiTW9J8lB.png\" width=\"150\" height=\"150\" />', 0, 1, 4, '2019-09-02 02:58:12', '2019-09-02 03:09:05'),
(3697, 434, 959, 137, 'Have different return types and arguments than the parent class', 'Have different return types and arguments than the parent class', 0, 0, 3, '2019-09-02 02:58:12', '2019-09-02 03:09:05'),
(3698, 433, 959, 137, 'Maintain the same return type and arguments as the parent class, but implement it differently', 'Maintain the same return type and arguments as the parent class, but implement it differently', 1, 1, 2, '2019-09-02 02:58:12', '2019-09-02 03:09:05'),
(3699, 1013, 959, 137, 'Are Virtual', 'Are Virtual', 0, 0, 4, '2019-09-02 02:58:12', '2019-09-02 03:09:05'),
(3700, 432, 959, 137, 'Override the parent class methods but maintain the implementation', 'Override the parent class methods but maintain the implementation', 0, 0, 1, '2019-09-02 02:58:12', '2019-09-02 03:09:05'),
(3701, 489, 960, 156, '4, 8', '4, 8', 0, 0, 1, '2019-09-02 02:58:12', '2019-09-02 03:09:05'),
(3702, 491, 960, 156, '4, 12', '4, 12', 0, 0, 3, '2019-09-02 02:58:12', '2019-09-02 03:09:05'),
(3703, 944, 960, 156, 'None of the choices', 'None of the choices', 0, 1, 4, '2019-09-02 02:58:12', '2019-09-02 03:09:05'),
(3704, 490, 960, 156, '8, 12', '8, 12', 1, 0, 2, '2019-09-02 02:58:12', '2019-09-02 03:09:05'),
(3705, 118, 961, 32, 'as', 'as', 0, 0, 2, '2019-09-02 02:58:12', '2019-09-02 03:09:05'),
(3706, 900, 961, 32, 'All of the choices', 'All of the choices', 1, 1, 4, '2019-09-02 02:58:12', '2019-09-02 03:09:05'),
(3707, 119, 961, 32, 'foreach', 'foreach', 0, 0, 3, '2019-09-02 02:58:12', '2019-09-02 03:09:05'),
(3708, 117, 961, 32, 'abstract', 'abstract', 0, 0, 1, '2019-09-02 02:58:12', '2019-09-02 03:09:05'),
(3709, 196, 962, 58, '1 3 5 7 9', '1 3 5 7 9', 0, 0, 2, '2019-09-02 02:58:12', '2019-09-02 03:09:05'),
(3710, 197, 962, 58, '0 1 2 3 4 5 6 7 8 9', '0 1 2 3 4 5 6 7 8 9', 0, 0, 3, '2019-09-02 02:58:12', '2019-09-02 03:09:05'),
(3711, 195, 962, 58, '0 2 4 6 8', '0 2 4 6 8', 1, 1, 1, '2019-09-02 02:58:12', '2019-09-02 03:09:05'),
(3712, 917, 962, 58, '1 2 3 4 5 6 7 8 9 10', '1 2 3 4 5 6 7 8 9 10', 0, 0, 4, '2019-09-02 02:58:12', '2019-09-02 03:09:05'),
(3713, 452, 963, 143, 'Zero', 'Zero', 0, 0, 3, '2019-09-02 02:58:12', '2019-09-02 03:09:05'),
(3714, 931, 963, 143, 'Three', 'Three', 0, 0, 4, '2019-09-02 02:58:12', '2019-09-02 03:09:05'),
(3715, 451, 963, 143, 'Two', 'Two', 0, 0, 2, '2019-09-02 02:58:12', '2019-09-02 03:09:05'),
(3716, 450, 963, 143, 'One', 'One', 1, 1, 1, '2019-09-02 02:58:12', '2019-09-02 03:09:05'),
(3717, 171, 964, 50, 'Thread returns to the ready state.', 'Thread returns to the ready state.', 1, 1, 1, '2019-09-02 02:58:12', '2019-09-02 03:09:05'),
(3718, 173, 964, 50, 'Thread starts running.', 'Thread starts running.', 0, 0, 3, '2019-09-02 02:58:12', '2019-09-02 03:09:05'),
(3719, 172, 964, 50, 'Thread returns to the waiting state.', 'Thread returns to the waiting state.', 0, 0, 2, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3720, 114, 965, 31, '10', '10', 0, 0, 1, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3721, 115, 965, 31, '20', '20', 1, 1, 2, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3722, 116, 965, 31, '12', '12', 0, 0, 3, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3723, 822, 966, 204, 'All of the choices', 'All of the choices', 1, 0, 4, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3724, 633, 966, 204, 'Multitasking', 'Multitasking', 0, 1, 1, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3725, 634, 966, 204, 'Bluetooth', 'Bluetooth', 0, 0, 2, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3726, 635, 966, 204, 'Video calling', 'Video calling', 0, 0, 3, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3727, 684, 967, 219, 'Repeater', 'Repeater', 0, 1, 1, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3728, 685, 967, 219, 'Switch', 'Switch', 0, 0, 2, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3729, 686, 967, 219, 'Modem', 'Modem', 1, 0, 3, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3730, 710, 967, 219, 'Wireless access point', 'Wireless access point', 0, 0, 4, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3731, 237, 968, 72, 'Operating system software', 'Operating system software', 0, 0, 1, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3732, 732, 968, 72, 'Disk optimization software', 'Disk optimization software', 0, 0, 4, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3733, 239, 968, 72, 'Anti-virus software', 'Anti-virus software', 0, 0, 3, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3734, 238, 968, 72, 'Utility software', 'Utility software', 1, 1, 2, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3735, 629, 969, 202, 'Mobile Operating System', 'Mobile Operating System', 1, 1, 3, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3736, 820, 969, 202, 'Database', 'Database', 0, 0, 4, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3737, 628, 969, 202, 'Programming Language', 'Programming Language', 0, 0, 2, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3738, 627, 969, 202, 'Desktop Operatng System', 'Desktop Operatng System', 0, 0, 1, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3739, 122, 970, 33, 'ToInt16', 'ToInt16', 0, 0, 3, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3740, 121, 970, 33, 'ToDouble', 'ToDouble', 1, 1, 2, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3741, 120, 970, 33, 'ToDecimal', 'ToDecimal', 0, 0, 1, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3742, 901, 970, 33, 'ToInt32', 'ToInt32', 0, 0, 4, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3743, 884, 971, 254, 'httprequest(get/post) and returns response from the server', 'httprequest(get/post) and returns response from the server', 1, 1, 1, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3744, 885, 971, 254, 'Cookies management', 'Cookies management', 0, 0, 2, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3745, 886, 971, 254, 'Authentication management', 'Authentication management', 0, 0, 3, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3746, 887, 971, 254, 'None of the above', 'None of the above', 0, 0, 4, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3747, 233, 972, 70, '[[#img30]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/5CGn3NoMP2AFTNnuWdi3jGe97XfkU7ydkF3PldTA.png\" width=\"150\" height=\"150\" />', 0, 0, 3, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3748, 232, 972, 70, '[[#img29]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/Cf9qY75IYjLpUVFWsICWK07cAwLtqRPDIO6JjLqT.png\" width=\"150\" height=\"150\" />', 0, 1, 2, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3749, 231, 972, 70, '[[#img28]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/jkL1TWHhQQMAtCTbSz6HtJyZn8zhXmtgMQYX3Zpo.png\" width=\"150\" height=\"150\" />', 1, 0, 1, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3750, 680, 972, 70, '[[#img31]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/VNrzOvOE3LpeuWi9ciBQDVlGrXxObvbfnI3kfNS4.png\" width=\"150\" height=\"150\" />', 0, 0, 4, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3751, 291, 973, 90, 'bit', 'bit', 0, 0, 1, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3752, 292, 973, 90, 'byte', 'byte', 1, 1, 2, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3753, 293, 973, 90, 'kilobyte', 'kilobyte', 0, 0, 3, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3754, 711, 973, 90, 'megabyte', 'megabyte', 0, 0, 4, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3755, 410, 974, 129, 'ListView Control', 'ListView Control', 0, 0, 3, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3756, 409, 974, 129, 'LinkLabel control', 'LinkLabel control', 1, 1, 2, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3757, 408, 974, 129, 'GroupBox control', 'GroupBox control', 0, 0, 1, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3758, 665, 975, 214, 'MAC kernel', 'MAC kernel', 0, 0, 3, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3759, 664, 975, 214, 'Windows kernel', 'Windows kernel', 0, 0, 2, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3760, 832, 975, 214, 'Hybrid kernel', 'Hybrid kernel', 0, 0, 4, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3761, 663, 975, 214, 'Linux kernel', 'Linux kernel', 1, 1, 1, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3762, 1089, 976, 285, '2 π', '2 π', 0, 0, 2, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3763, 1091, 976, 285, 'π', 'π', 1, 1, 4, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3764, 1088, 976, 285, '4 π <sup>2</sup>', '4 π <sup>2</sup>', 0, 0, 1, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3765, 1090, 976, 285, '4 π', '4 π', 0, 0, 3, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3766, 1081, 977, 112, '8', '8', 0, 0, 4, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3767, 358, 977, 112, '15', '15', 0, 0, 2, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3768, 357, 977, 112, '10', '10', 0, 0, 1, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3769, 359, 977, 112, '2100', '2100', 1, 1, 3, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3770, 219, 978, 66, '121', '121', 0, 0, 1, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3771, 220, 978, 66, '163', '163', 1, 1, 2, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3772, 221, 978, 66, '199', '199', 0, 0, 3, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3773, 676, 978, 66, '212', '212', 0, 0, 4, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3774, 443, 979, 140, 'Variable', 'Variable', 1, 1, 3, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3775, 441, 979, 140, 'Constant', 'Constant', 0, 0, 1, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3776, 442, 979, 140, 'Reference type', 'Reference type', 0, 0, 2, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3777, 1016, 979, 140, 'Object', 'Object', 0, 0, 4, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3778, 418, 980, 132, 'Switch', 'Switch', 1, 1, 2, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3779, 1009, 980, 132, 'While', 'While', 0, 0, 4, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3780, 419, 980, 132, 'For', 'For', 0, 0, 3, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3781, 417, 980, 132, 'If', 'If', 0, 0, 1, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3782, 257, 981, 78, 'EBCDIC', 'EBCDIC', 0, 0, 3, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3783, 726, 981, 78, 'ANSI', 'ANSI', 0, 0, 4, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3784, 255, 981, 78, 'ASCII', 'ASCII', 0, 0, 1, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3785, 256, 981, 78, 'Unicode', 'Unicode', 1, 1, 2, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3786, 852, 982, 246, 'res/', 'res/', 0, 0, 1, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3787, 853, 982, 246, 'assets/', 'assets/', 0, 0, 2, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3788, 854, 982, 246, 'src/', 'src/', 1, 1, 3, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3789, 855, 982, 246, 'bin/', 'bin/', 0, 0, 4, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3790, 829, 983, 211, 'Opera', 'Opera', 0, 0, 4, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3791, 654, 983, 211, 'Chrome', 'Chrome', 0, 0, 1, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3792, 656, 983, 211, 'Open source Webkit', 'Open source Webkit', 1, 1, 3, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3793, 655, 983, 211, 'Firefox', 'Firefox', 0, 0, 2, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3794, 369, 984, 116, 'an odd function', 'an odd function', 0, 0, 1, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3795, 1085, 984, 116, 'even and odd', 'even and odd', 0, 0, 4, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3796, 371, 984, 116, 'neither odd nor even', 'neither odd nor even', 0, 0, 3, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3797, 370, 984, 116, 'an even function', 'an even function', 1, 1, 2, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3798, 297, 985, 92, 'x < 6', 'x < 6', 0, 0, 1, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3799, 299, 985, 92, 'x < -1', 'x < -1', 1, 1, 3, '2019-09-02 02:58:13', '2019-09-02 03:09:06'),
(3800, 298, 985, 92, 'x > 1', 'x > 1', 0, 0, 2, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3801, 1061, 985, 92, 'x > 6', 'x > 6', 0, 0, 4, '2019-09-02 02:58:13', '2019-09-02 03:09:05'),
(3802, 249, 986, 76, 'spooling', 'spooling', 0, 0, 1, '2019-09-02 02:58:13', '2019-09-02 03:09:06'),
(3803, 250, 986, 76, 'buffering', 'buffering', 0, 0, 2, '2019-09-02 02:58:13', '2019-09-02 03:09:06'),
(3804, 728, 986, 76, 'back up', 'back up', 1, 1, 4, '2019-09-02 02:58:13', '2019-09-02 03:09:06'),
(3805, 251, 986, 76, 'virtual memory', 'virtual memory', 0, 0, 3, '2019-09-02 02:58:13', '2019-09-02 03:09:06'),
(3806, 863, 987, 248, 'none of the choices', 'none of the choices', 0, 0, 4, '2019-09-02 02:58:13', '2019-09-02 03:09:06'),
(3807, 861, 987, 248, 'To store the data in a database', 'To store the data in a database', 0, 1, 2, '2019-09-02 02:58:13', '2019-09-02 03:09:06'),
(3808, 860, 987, 248, 'To send the data from an application to another application', 'To send the data from an application to another application', 0, 0, 1, '2019-09-02 02:58:13', '2019-09-02 03:09:06'),
(3809, 862, 987, 248, 'To share the data between applications', 'To share the data between applications', 1, 0, 3, '2019-09-02 02:58:13', '2019-09-02 03:09:06'),
(3810, 448, 988, 142, '{1, 3, 5, 7, 9}', '{1, 3, 5, 7, 9}', 1, 0, 2, '2019-09-02 02:58:13', '2019-09-02 03:09:06'),
(3811, 449, 988, 142, '{1, 2, 5, 9}', '{1, 2, 5, 9}', 0, 1, 3, '2019-09-02 02:58:13', '2019-09-02 03:09:06'),
(3812, 930, 988, 142, '{1, 5, 7, 9, 11}', '{1, 5, 7, 9, 11}', 0, 0, 4, '2019-09-02 02:58:13', '2019-09-02 03:09:06'),
(3813, 447, 988, 142, '{1, 2, 3}', '{1, 2, 3}', 0, 0, 1, '2019-09-02 02:58:13', '2019-09-02 03:09:06'),
(3814, 345, 989, 108, '1 846 000', '1 846 000', 1, 1, 1, '2019-09-02 02:58:13', '2019-09-02 03:09:06'),
(3815, 1077, 989, 108, '1 500 000', '1 500 000', 0, 0, 4, '2019-09-02 02:58:13', '2019-09-02 03:09:06'),
(3816, 346, 989, 108, '1 852 000', '1 852 000', 0, 0, 2, '2019-09-02 02:58:13', '2019-09-02 03:09:06'),
(3817, 347, 989, 108, '1 000 000', '1 000 000', 0, 0, 3, '2019-09-02 02:58:13', '2019-09-02 03:09:06'),
(3818, 912, 990, 52, '100', '100', 0, 0, 4, '2019-09-02 02:58:13', '2019-09-02 03:09:06'),
(3819, 178, 990, 52, '200', '200', 1, 1, 2, '2019-09-02 02:58:13', '2019-09-02 03:09:06'),
(3820, 179, 990, 52, '400', '400', 0, 0, 3, '2019-09-02 02:58:13', '2019-09-02 03:09:06'),
(3821, 177, 990, 52, '12', '12', 0, 0, 1, '2019-09-02 02:58:13', '2019-09-02 03:09:06'),
(3822, 354, 991, 111, '(0 , π/2)', '(0 , π/2)', 0, 0, 1, '2019-09-02 02:58:13', '2019-09-02 03:09:06'),
(3823, 355, 991, 111, '(π/2 , π)', '(π/2 , π)', 1, 1, 2, '2019-09-02 02:58:13', '2019-09-02 03:09:06'),
(3824, 356, 991, 111, '(π , 3 π / 2)', '(π , 3 π / 2)', 0, 0, 3, '2019-09-02 02:58:13', '2019-09-02 03:09:06'),
(3825, 1080, 991, 111, '(3 π / 2 , 2 π)', '(3 π / 2 , 2 π)', 0, 0, 4, '2019-09-02 02:58:13', '2019-09-02 03:09:06'),
(3826, 380, 992, 119, 'while', 'while', 0, 0, 3, '2019-09-02 02:58:13', '2019-09-02 03:09:06'),
(3827, 1002, 992, 119, 'for loop', 'for loop', 1, 1, 4, '2019-09-02 02:58:13', '2019-09-02 03:09:06'),
(3828, 378, 992, 119, 'forEach loop', 'forEach loop', 0, 0, 1, '2019-09-02 02:58:13', '2019-09-02 03:09:06'),
(3829, 379, 992, 119, 'do while', 'do while', 0, 0, 2, '2019-09-02 02:58:13', '2019-09-02 03:09:06'),
(3830, 320, 993, 99, '2.322', '2.322', 1, 1, 3, '2019-09-02 02:58:13', '2019-09-02 03:09:06'),
(3831, 319, 993, 99, '1.756', '1.756', 0, 0, 2, '2019-09-02 02:58:13', '2019-09-02 03:09:06'),
(3832, 318, 993, 99, '6.25', '6.25', 0, 0, 1, '2019-09-02 02:58:13', '2019-09-02 03:09:06'),
(3833, 1068, 993, 99, '4.753', '4.753', 0, 0, 4, '2019-09-02 02:58:13', '2019-09-02 03:09:06'),
(3834, 388, 994, 122, 'Binary operators', 'Binary operators', 0, 0, 2, '2019-09-02 02:58:13', '2019-09-02 03:09:06'),
(3835, 1005, 994, 122, 'Assignment opeartors', 'Assignment opeartors', 0, 0, 4, '2019-09-02 02:58:13', '2019-09-02 03:09:06'),
(3836, 387, 994, 122, 'unary operators', 'unary operators', 1, 1, 1, '2019-09-02 02:58:13', '2019-09-02 03:09:06'),
(3837, 389, 994, 122, 'Logical operators', 'Logical operators', 0, 0, 3, '2019-09-02 02:58:13', '2019-09-02 03:09:06'),
(3838, 437, 995, 138, 'Throws', 'Throws', 1, 1, 3, '2019-09-02 02:58:13', '2019-09-02 03:09:06'),
(3839, 1014, 995, 138, 'a and b', 'a and b', 0, 0, 4, '2019-09-02 02:58:14', '2019-09-02 03:09:06'),
(3840, 435, 995, 138, 'Trys', 'Trys', 0, 0, 1, '2019-09-02 02:58:14', '2019-09-02 03:09:06'),
(3841, 436, 995, 138, 'Catches', 'Catches', 0, 0, 2, '2019-09-02 02:58:14', '2019-09-02 03:09:06'),
(3842, 429, 996, 136, 'creates a button control', 'creates a button control', 0, 0, 1, '2019-09-02 02:58:14', '2019-09-02 03:09:06'),
(3843, 431, 996, 136, 'instantiates button control', 'instantiates button control', 0, 0, 3, '2019-09-02 02:58:14', '2019-09-02 03:09:06'),
(3844, 430, 996, 136, 'initializes a button control', 'initializes a button control', 0, 0, 2, '2019-09-02 02:58:14', '2019-09-02 03:09:06'),
(3845, 1012, 996, 136, 'a and c', 'a and c', 1, 1, 4, '2019-09-02 02:58:14', '2019-09-02 03:09:06'),
(3846, 252, 997, 77, 'logic error', 'logic error', 1, 0, 1, '2019-09-02 02:58:14', '2019-09-02 03:09:06'),
(3847, 254, 997, 77, 'run time error', 'run time error', 0, 1, 3, '2019-09-02 02:58:14', '2019-09-02 03:09:06'),
(3848, 253, 997, 77, 'syntax error', 'syntax error', 0, 0, 2, '2019-09-02 02:58:14', '2019-09-02 03:09:06'),
(3849, 727, 997, 77, 'linker error', 'linker error', 0, 0, 4, '2019-09-02 02:58:14', '2019-09-02 03:09:06'),
(3850, 644, 998, 207, 'Android data bridge', 'Android data bridge', 0, 0, 3, '2019-09-02 02:58:14', '2019-09-02 03:09:06'),
(3851, 825, 998, 207, 'Application data bridge', 'Application data bridge', 0, 0, 4, '2019-09-02 02:58:14', '2019-09-02 03:09:06'),
(3852, 643, 998, 207, 'Application Debug Bridge', 'Application Debug Bridge', 0, 1, 2, '2019-09-02 02:58:14', '2019-09-02 03:09:06'),
(3853, 642, 998, 207, 'Android Debug Bridge', 'Android Debug Bridge', 1, 0, 1, '2019-09-02 02:58:14', '2019-09-02 03:09:06'),
(3854, 666, 999, 215, '3.0 (Honeycomb)', '3.0 (Honeycomb)', 0, 0, 1, '2019-09-02 02:58:14', '2019-09-02 03:09:06'),
(3855, 667, 999, 215, '2.3 (Gingerbread)', '2.3 (Gingerbread)', 1, 0, 2, '2019-09-02 02:58:14', '2019-09-02 03:09:06'),
(3856, 668, 999, 215, '2.6', '2.6', 0, 1, 3, '2019-09-02 02:58:14', '2019-09-02 03:09:06'),
(3857, 833, 999, 215, '2.2 (Froyo)', '2.2 (Froyo)', 0, 0, 4, '2019-09-02 02:58:14', '2019-09-02 03:09:06'),
(3858, 989, 1000, 270, '25', '25', 0, 0, 3, '2019-09-02 02:58:14', '2019-09-02 03:09:06'),
(3859, 987, 1000, 270, '35', '35', 1, 1, 1, '2019-09-02 02:58:14', '2019-09-02 03:09:06'),
(3860, 988, 1000, 270, '45', '45', 0, 0, 2, '2019-09-02 02:58:14', '2019-09-02 03:09:06'),
(3861, 345, 1001, 108, '1 846 000', '1 846 000', 1, 1, 1, '2019-09-02 03:11:31', '2019-09-02 03:18:46'),
(3862, 347, 1001, 108, '1 000 000', '1 000 000', 0, 0, 3, '2019-09-02 03:11:31', '2019-09-02 03:18:46'),
(3863, 346, 1001, 108, '1 852 000', '1 852 000', 0, 0, 2, '2019-09-02 03:11:31', '2019-09-02 03:18:46'),
(3864, 1077, 1001, 108, '1 500 000', '1 500 000', 0, 0, 4, '2019-09-02 03:11:31', '2019-09-02 03:18:46'),
(3865, 715, 1002, 87, 'fetch, decode, execute and store', 'fetch, decode, execute and store', 1, 0, 4, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3866, 282, 1002, 87, 'fetch, execute, store and decode', 'fetch, execute, store and decode', 0, 1, 1, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3867, 284, 1002, 87, 'decode, fetch, store and execute', 'decode, fetch, store and execute', 0, 0, 3, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3868, 283, 1002, 87, 'decode, execute, store and fetch', 'decode, execute, store and fetch', 0, 0, 2, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3869, 471, 1003, 150, '{1, 2}', '{1, 2}', 1, 1, 1, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3870, 938, 1003, 150, '{1, 6}', '{1, 6}', 0, 0, 4, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3871, 473, 1003, 150, '{2, 5}', '{2, 5}', 0, 0, 3, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3872, 472, 1003, 150, '{5, 6}', '{5, 6}', 0, 0, 2, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3873, 944, 1004, 156, 'None of the choices', 'None of the choices', 0, 0, 4, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3874, 490, 1004, 156, '8, 12', '8, 12', 1, 0, 2, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3875, 491, 1004, 156, '4, 12', '4, 12', 0, 1, 3, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3876, 489, 1004, 156, '4, 8', '4, 8', 0, 0, 1, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3877, 199, 1005, 59, '0', '0', 0, 0, 2, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3878, 198, 1005, 59, '3', '3', 0, 0, 1, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3879, 200, 1005, 59, '6', '6', 0, 0, 3, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3880, 918, 1005, 59, '1', '1', 1, 1, 4, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3881, 393, 1006, 124, 'Reference type', 'Reference type', 1, 1, 1, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3882, 395, 1006, 124, 'Data Type', 'Data Type', 0, 0, 3, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3883, 394, 1006, 124, 'Value types', 'Value types', 0, 0, 2, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3884, 1007, 1006, 124, 'Explicit Types', 'Explicit Types', 0, 0, 4, '2019-09-02 03:11:32', '2019-09-02 03:18:46');
INSERT INTO `answer_sheet_test_question_choices` (`id`, `choice_id`, `answer_sheet_test_question_id`, `test_question_id`, `body`, `body_html`, `is_correct`, `is_selected`, `pos_order`, `created_at`, `updated_at`) VALUES
(3885, 402, 1007, 127, 'Radio Button', 'Radio Button', 0, 0, 1, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3886, 403, 1007, 127, 'Textbox control', 'Textbox control', 0, 0, 2, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3887, 404, 1007, 127, 'Button control', 'Button control', 1, 1, 3, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3888, 447, 1008, 142, '{1, 2, 3}', '{1, 2, 3}', 0, 0, 1, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3889, 930, 1008, 142, '{1, 5, 7, 9, 11}', '{1, 5, 7, 9, 11}', 0, 1, 4, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3890, 449, 1008, 142, '{1, 2, 5, 9}', '{1, 2, 5, 9}', 0, 0, 3, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3891, 448, 1008, 142, '{1, 3, 5, 7, 9}', '{1, 3, 5, 7, 9}', 1, 0, 2, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3892, 1093, 1009, 286, '0.478', '0.478', 0, 0, 2, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3893, 1094, 1009, 286, '0.001', '0.001', 0, 0, 3, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3894, 1095, 1009, 286, '0', '0', 0, 0, 4, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3895, 1092, 1009, 286, '0.057', '0.057', 1, 1, 1, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3896, 258, 1010, 79, 'Control unit', 'Control unit', 0, 0, 1, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3897, 260, 1010, 79, 'Registers', 'Registers', 0, 0, 3, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3898, 259, 1010, 79, 'ALU', 'ALU', 0, 0, 2, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3899, 725, 1010, 79, 'Primary Storage', 'Primary Storage', 1, 1, 4, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3900, 1082, 1011, 113, '3! * 2!', '3! * 2!', 0, 0, 4, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3901, 360, 1011, 113, '5!', '5!', 0, 0, 1, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3902, 361, 1011, 113, '3!', '3!', 1, 1, 2, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3903, 362, 1011, 113, '2!', '2!', 0, 0, 3, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3904, 288, 1012, 89, 'Virtual private network', 'Virtual private network', 0, 0, 1, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3905, 289, 1012, 89, 'Virtual memory', 'Virtual memory', 1, 1, 2, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3906, 290, 1012, 89, 'Virtual Machine', 'Virtual Machine', 0, 0, 3, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3907, 712, 1012, 89, 'None of them', 'None of them', 0, 0, 4, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3908, 226, 1013, 68, '[[#img24]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/nVLwXww7AT2RBfzhH1tPQMxdLPF1iWuunHzErZRh.png\" width=\"150\" height=\"150\" />', 0, 1, 2, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3909, 227, 1013, 68, '[[#img25]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/rDh656ehodyPQmn7CxxjGK2H29sx2bh6LDz9INfN.png\" width=\"150\" height=\"150\" />', 0, 0, 3, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3910, 225, 1013, 68, '[[#img23]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/IyLDJJaUUQ0aIZOMyEjh4JO72W4HpXtPj2CfMKZL.png\" width=\"150\" height=\"150\" />', 1, 0, 1, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3911, 679, 1013, 68, '[[#img26]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/tBuCNpani0PgWIFN01ztVOAj4FS4CBDAiTW9J8lB.png\" width=\"150\" height=\"150\" />', 0, 0, 4, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3912, 987, 1014, 270, '35', '35', 1, 1, 1, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3913, 988, 1014, 270, '45', '45', 0, 0, 2, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3914, 989, 1014, 270, '25', '25', 0, 0, 3, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3915, 125, 1015, 34, '&</a>', '&</a>', 0, 0, 3, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3916, 902, 1015, 34, '*', '*', 0, 0, 4, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3917, 124, 1015, 34, 'typeof', 'typeof', 0, 0, 2, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3918, 123, 1015, 34, 'sizeof', 'sizeof', 1, 1, 1, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3919, 728, 1016, 76, 'back up', 'back up', 1, 1, 4, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3920, 249, 1016, 76, 'spooling', 'spooling', 0, 0, 1, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3921, 251, 1016, 76, 'virtual memory', 'virtual memory', 0, 0, 3, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3922, 250, 1016, 76, 'buffering', 'buffering', 0, 0, 2, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3923, 458, 1017, 145, '{(1, a), (2, a), (1, b), (2, b)}', '{(1, a), (2, a), (1, b), (2, b)}', 1, 0, 3, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3924, 457, 1017, 145, '{(1, 1), (2, 2), (a, a), (b, b)}', '{(1, 1), (2, 2), (a, a), (b, b)}', 0, 1, 2, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3925, 933, 1017, 145, '{(1, 1), (a, a), (2, a), (1, b)}', '{(1, 1), (a, a), (2, a), (1, b)}', 0, 0, 4, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3926, 456, 1017, 145, '{(1, a), (1, b), (2, a), (b, b)}', '{(1, a), (1, b), (2, a), (b, b)}', 0, 0, 1, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3927, 684, 1018, 219, 'Repeater', 'Repeater', 0, 0, 1, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3928, 710, 1018, 219, 'Wireless access point', 'Wireless access point', 0, 1, 4, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3929, 686, 1018, 219, 'Modem', 'Modem', 1, 0, 3, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3930, 685, 1018, 219, 'Switch', 'Switch', 0, 0, 2, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3931, 978, 1019, 267, 'smallest previous integer', 'smallest previous integer', 0, 0, 1, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3932, 979, 1019, 267, 'greatest previous integer', 'greatest previous integer', 1, 1, 2, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3933, 980, 1019, 267, 'smallest following integer', 'smallest following integer', 0, 0, 3, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3934, 453, 1020, 144, '10', '10', 0, 0, 1, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3935, 454, 1020, 144, '5', '5', 1, 0, 2, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3936, 932, 1020, 144, '20', '20', 0, 0, 4, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3937, 455, 1020, 144, '3', '3', 0, 1, 3, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3938, 954, 1021, 260, '10', '10', 0, 0, 4, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3939, 952, 1021, 260, '20', '20', 0, 0, 2, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3940, 953, 1021, 260, '30', '30', 0, 0, 3, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3941, 951, 1021, 260, '35', '35', 1, 1, 1, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3942, 232, 1022, 70, '[[#img29]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/Cf9qY75IYjLpUVFWsICWK07cAwLtqRPDIO6JjLqT.png\" width=\"150\" height=\"150\" />', 0, 0, 2, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3943, 233, 1022, 70, '[[#img30]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/5CGn3NoMP2AFTNnuWdi3jGe97XfkU7ydkF3PldTA.png\" width=\"150\" height=\"150\" />', 0, 0, 3, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3944, 231, 1022, 70, '[[#img28]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/jkL1TWHhQQMAtCTbSz6HtJyZn8zhXmtgMQYX3Zpo.png\" width=\"150\" height=\"150\" />', 1, 1, 1, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3945, 680, 1022, 70, '[[#img31]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/VNrzOvOE3LpeuWi9ciBQDVlGrXxObvbfnI3kfNS4.png\" width=\"150\" height=\"150\" />', 0, 0, 4, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3946, 1030, 1023, 277, 'The code will generate an error because it lacks a throw statement.', 'The code will generate an error because it lacks a throw statement.', 0, 0, 2, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3947, 1032, 1023, 277, 'The code will compile without an error.', 'The code will compile without an error.', 1, 1, 4, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3948, 1029, 1023, 277, 'The code will generate an error because it lacks a catch block.', 'The code will generate an error because it lacks a catch block.', 0, 0, 1, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3949, 1031, 1023, 277, 'The code will generate an error because the finally block is placed immediately after the try block.', 'The code will generate an error because the finally block is placed immediately after the try block.', 0, 0, 3, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3950, 853, 1024, 246, 'assets/', 'assets/', 0, 0, 2, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3951, 852, 1024, 246, 'res/', 'res/', 0, 1, 1, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3952, 855, 1024, 246, 'bin/', 'bin/', 0, 0, 4, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3953, 854, 1024, 246, 'src/', 'src/', 1, 0, 3, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3954, 450, 1025, 143, 'One', 'One', 1, 1, 1, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3955, 452, 1025, 143, 'Zero', 'Zero', 0, 0, 3, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3956, 451, 1025, 143, 'Two', 'Two', 0, 0, 2, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3957, 931, 1025, 143, 'Three', 'Three', 0, 0, 4, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3958, 1107, 1026, 289, '8', '8', 0, 0, 4, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3959, 1104, 1026, 289, '5', '5', 0, 0, 1, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3960, 1106, 1026, 289, '6', '6', 0, 0, 3, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3961, 1105, 1026, 289, '7', '7', 1, 1, 2, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3962, 1009, 1027, 132, 'While', 'While', 0, 0, 4, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3963, 418, 1027, 132, 'Switch', 'Switch', 1, 1, 2, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3964, 417, 1027, 132, 'If', 'If', 0, 0, 1, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3965, 419, 1027, 132, 'For', 'For', 0, 0, 3, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3966, 631, 1028, 203, 'MPEG', 'MPEG', 0, 0, 2, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3967, 821, 1028, 203, 'MIDI', 'MIDI', 0, 0, 4, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3968, 632, 1028, 203, 'AVI', 'AVI', 1, 1, 3, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3969, 630, 1028, 203, 'MP4', 'MP4', 0, 0, 1, '2019-09-02 03:11:32', '2019-09-02 03:18:46'),
(3970, 145, 1029, 41, 'public int main(String[] args)', 'public int main(String[] args)', 0, 0, 2, '2019-09-02 03:11:33', '2019-09-02 03:18:46'),
(3971, 146, 1029, 41, 'public static void main(String[] args)', 'public static void main(String[] args)', 1, 1, 3, '2019-09-02 03:11:33', '2019-09-02 03:18:46'),
(3972, 144, 1029, 41, 'public static int main(String[] args)', 'public static int main(String[] args)', 0, 0, 1, '2019-09-02 03:11:33', '2019-09-02 03:18:46'),
(3973, 443, 1030, 140, 'Variable', 'Variable', 1, 1, 3, '2019-09-02 03:11:33', '2019-09-02 03:18:46'),
(3974, 442, 1030, 140, 'Reference type', 'Reference type', 0, 0, 2, '2019-09-02 03:11:33', '2019-09-02 03:18:46'),
(3975, 1016, 1030, 140, 'Object', 'Object', 0, 0, 4, '2019-09-02 03:11:33', '2019-09-02 03:18:46'),
(3976, 441, 1030, 140, 'Constant', 'Constant', 0, 0, 1, '2019-09-02 03:11:33', '2019-09-02 03:18:46'),
(3977, 920, 1031, 61, 'first generation memory', 'first generation memory', 0, 0, 4, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(3978, 204, 1031, 61, 'heap space', 'heap space', 1, 1, 1, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(3979, 206, 1031, 61, 'heap space and stack space', 'heap space and stack space', 0, 0, 3, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(3980, 205, 1031, 61, 'stack space', 'stack space', 0, 0, 2, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(3981, 142, 1032, 40, 'object.', 'object.', 0, 0, 2, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(3982, 143, 1032, 40, 'Both of the above.', 'Both of the above.', 0, 0, 3, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(3983, 141, 1032, 40, 'type.', 'type.', 1, 1, 1, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(3984, 470, 1033, 149, '{1, 2, 1, 2}', '{1, 2, 1, 2}', 0, 0, 3, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(3985, 469, 1033, 149, '{1, 2, 5, 6}', '{1, 2, 5, 6}', 1, 1, 2, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(3986, 937, 1033, 149, '{1, 5, 6, 3}', '{1, 5, 6, 3}', 0, 0, 4, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(3987, 468, 1033, 149, '{1, 2, 6, 1}', '{1, 2, 6, 1}', 0, 0, 1, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(3988, 306, 1034, 95, '12i', '12i', 1, 1, 1, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(3989, 308, 1034, 95, '-12', '-12', 0, 0, 3, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(3990, 1064, 1034, 95, '-12i', '-12i', 0, 0, 4, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(3991, 307, 1034, 95, 'You cannot find the square root of a negative number', 'You cannot find the square root of a negative number', 0, 0, 2, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(3992, 122, 1035, 33, 'ToInt16', 'ToInt16', 0, 0, 3, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(3993, 120, 1035, 33, 'ToDecimal', 'ToDecimal', 0, 0, 1, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(3994, 901, 1035, 33, 'ToInt32', 'ToInt32', 0, 0, 4, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(3995, 121, 1035, 33, 'ToDouble', 'ToDouble', 1, 1, 2, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(3996, 301, 1036, 93, 'x ≥ 5', 'x ≥ 5', 1, 1, 2, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(3997, 300, 1036, 93, 'x ≤ 5', 'x ≤ 5', 0, 0, 1, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(3998, 1062, 1036, 93, 'x ≤ -5', 'x ≤ -5', 0, 0, 4, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(3999, 302, 1036, 93, 'x ≥ -5', 'x ≥ -5', 0, 0, 3, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4000, 917, 1037, 58, '1 2 3 4 5 6 7 8 9 10', '1 2 3 4 5 6 7 8 9 10', 0, 0, 4, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4001, 195, 1037, 58, '0 2 4 6 8', '0 2 4 6 8', 1, 1, 1, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4002, 197, 1037, 58, '0 1 2 3 4 5 6 7 8 9', '0 1 2 3 4 5 6 7 8 9', 0, 0, 3, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4003, 196, 1037, 58, '1 3 5 7 9', '1 3 5 7 9', 0, 0, 2, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4004, 829, 1038, 211, 'Opera', 'Opera', 0, 0, 4, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4005, 655, 1038, 211, 'Firefox', 'Firefox', 0, 0, 2, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4006, 656, 1038, 211, 'Open source Webkit', 'Open source Webkit', 1, 1, 3, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4007, 654, 1038, 211, 'Chrome', 'Chrome', 0, 0, 1, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4008, 219, 1039, 66, '121', '121', 0, 0, 1, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4009, 676, 1039, 66, '212', '212', 0, 0, 4, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4010, 220, 1039, 66, '163', '163', 1, 0, 2, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4011, 221, 1039, 66, '199', '199', 0, 1, 3, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4012, 244, 1040, 74, 'Motherboard', 'Motherboard', 0, 0, 2, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4013, 730, 1040, 74, 'CPU', 'CPU', 0, 0, 4, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4014, 243, 1040, 74, 'Operating System', 'Operating System', 0, 0, 1, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4015, 245, 1040, 74, 'Computer', 'Computer', 1, 1, 3, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4016, 877, 1041, 252, 'A bean class can be passed from one activity to another.', 'A bean class can be passed from one activity to another.', 0, 0, 2, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4017, 879, 1041, 252, 'None of the above', 'None of the above', 0, 0, 4, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4018, 876, 1041, 252, 'A class used to hold states and objects', 'A class used to hold states and objects', 1, 1, 1, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4019, 878, 1041, 252, 'A mandatory class in android', 'A mandatory class in android', 0, 0, 3, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4020, 138, 1042, 39, 'null', 'null', 0, 0, 1, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4021, 140, 1042, 39, 'Depends upon the type of variable', 'Depends upon the type of variable', 1, 0, 3, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4022, 906, 1042, 39, 'Not assigned', 'Not assigned', 0, 1, 4, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4023, 139, 1042, 39, '0', '0', 0, 0, 2, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4024, 634, 1043, 204, 'Bluetooth', 'Bluetooth', 0, 0, 2, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4025, 822, 1043, 204, 'All of the choices', 'All of the choices', 1, 1, 4, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4026, 633, 1043, 204, 'Multitasking', 'Multitasking', 0, 0, 1, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4027, 635, 1043, 204, 'Video calling', 'Video calling', 0, 0, 3, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4028, 706, 1044, 225, '127', '127', 1, 1, 2, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4029, 705, 1044, 225, '531', '531', 0, 0, 1, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4030, 707, 1044, 225, '44', '44', 0, 0, 3, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4031, 714, 1044, 225, '135', '135', 0, 0, 4, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4032, 314, 1045, 97, 'i - 12', 'i - 12', 1, 1, 3, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4033, 1066, 1045, 97, '3i - 10', '3i - 10', 0, 0, 4, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4034, 312, 1045, 97, 'i - 5', 'i - 5', 0, 0, 1, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4035, 313, 1045, 97, '7 - 3i', '7 - 3i', 0, 0, 2, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4036, 320, 1046, 99, '2.322', '2.322', 1, 1, 3, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4037, 318, 1046, 99, '6.25', '6.25', 0, 0, 1, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4038, 319, 1046, 99, '1.756', '1.756', 0, 0, 2, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4039, 1068, 1046, 99, '4.753', '4.753', 0, 0, 4, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4040, 718, 1047, 223, '100100', '100100', 0, 0, 4, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4041, 699, 1047, 223, '110011', '110011', 0, 0, 1, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4042, 701, 1047, 223, '110100', '110100', 1, 1, 3, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4043, 700, 1047, 223, '100001', '100001', 0, 0, 2, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4044, 467, 1048, 148, '7', '7', 0, 0, 3, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4045, 465, 1048, 148, '8', '8', 1, 1, 1, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4046, 466, 1048, 148, '6', '6', 0, 0, 2, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4047, 936, 1048, 148, '9', '9', 0, 0, 4, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4048, 297, 1049, 92, 'x < 6', 'x < 6', 0, 0, 1, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4049, 298, 1049, 92, 'x > 1', 'x > 1', 0, 0, 2, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4050, 299, 1049, 92, 'x < -1', 'x < -1', 1, 1, 3, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4051, 1061, 1049, 92, 'x > 6', 'x > 6', 0, 0, 4, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4052, 861, 1050, 248, 'To store the data in a database', 'To store the data in a database', 0, 0, 2, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4053, 863, 1050, 248, 'none of the choices', 'none of the choices', 0, 0, 4, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4054, 862, 1050, 248, 'To share the data between applications', 'To share the data between applications', 1, 1, 3, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4055, 860, 1050, 248, 'To send the data from an application to another application', 'To send the data from an application to another application', 0, 0, 1, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4056, 637, 1051, 205, 'Video Driver', 'Video Driver', 0, 0, 2, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4057, 823, 1051, 205, 'Bluetooth driver', 'Bluetooth driver', 0, 0, 4, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4058, 636, 1051, 205, 'Device Driver', 'Device Driver', 0, 1, 1, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4059, 638, 1051, 205, 'WiFi driver', 'WiFi driver', 1, 0, 3, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4060, 356, 1052, 111, '(π , 3 π / 2)', '(π , 3 π / 2)', 0, 0, 3, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4061, 354, 1052, 111, '(0 , π/2)', '(0 , π/2)', 0, 0, 1, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4062, 355, 1052, 111, '(π/2 , π)', '(π/2 , π)', 1, 1, 2, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4063, 1080, 1052, 111, '(3 π / 2 , 2 π)', '(3 π / 2 , 2 π)', 0, 0, 4, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4064, 628, 1053, 202, 'Programming Language', 'Programming Language', 0, 0, 2, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4065, 820, 1053, 202, 'Database', 'Database', 0, 1, 4, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4066, 629, 1053, 202, 'Mobile Operating System', 'Mobile Operating System', 1, 0, 3, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4067, 627, 1053, 202, 'Desktop Operatng System', 'Desktop Operatng System', 0, 0, 1, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4068, 948, 1054, 160, 'B', 'B', 0, 0, 4, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4069, 501, 1054, 160, 'A‘ (Complement of A)', 'A‘ (Complement of A)', 0, 0, 1, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4070, 503, 1054, 160, 'A ∩ B', 'A ∩ B', 0, 0, 3, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4071, 502, 1054, 160, 'A U B -B', 'A U B -B', 1, 1, 2, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4072, 165, 1055, 48, 'JRE is a java based GUI application.', 'JRE is a java based GUI application.', 0, 0, 1, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4073, 167, 1055, 48, 'JRE is an implementation of the Java Virtual Machine which executes Java programs.', 'JRE is an implementation of the Java Virtual Machine which executes Java programs.', 1, 0, 3, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4074, 166, 1055, 48, 'JRE is an application development framework.', 'JRE is an application development framework.', 0, 1, 2, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4075, 1053, 1056, 283, 'Set the CausesValidation property of the text box to false.', 'Set the CausesValidation property of the text box to false.', 0, 0, 1, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4076, 1054, 1056, 283, 'Set the CausesValidation property of the text box to true.', 'Set the CausesValidation property of the text box to true.', 0, 0, 2, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4077, 1056, 1056, 283, 'Set the CausesValidation property of the Help button to true.', 'Set the CausesValidation property of the Help button to true.', 0, 0, 4, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4078, 1055, 1056, 283, 'Set the CausesValidation property of the Help button to false.', 'Set the CausesValidation property of the Help button to false.', 1, 1, 3, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4079, 659, 1057, 212, 'Nokia', 'Nokia', 0, 0, 3, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4080, 830, 1057, 212, 'No company', 'No company', 0, 0, 4, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4081, 658, 1057, 212, 'Google', 'Google', 1, 1, 2, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4082, 657, 1057, 212, 'Apple', 'Apple', 0, 0, 1, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4083, 884, 1058, 254, 'httprequest(get/post) and returns response from the server', 'httprequest(get/post) and returns response from the server', 1, 1, 1, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4084, 885, 1058, 254, 'Cookies management', 'Cookies management', 0, 0, 2, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4085, 886, 1058, 254, 'Authentication management', 'Authentication management', 0, 0, 3, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4086, 887, 1058, 254, 'None of the above', 'None of the above', 0, 0, 4, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4087, 358, 1059, 112, '15', '15', 0, 0, 2, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4088, 359, 1059, 112, '2100', '2100', 1, 1, 3, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4089, 1081, 1059, 112, '8', '8', 0, 0, 4, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4090, 357, 1059, 112, '10', '10', 0, 0, 1, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4091, 935, 1060, 147, 'Empty', 'Empty', 0, 0, 4, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4092, 463, 1060, 147, 'Finite', 'Finite', 0, 0, 2, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4093, 464, 1060, 147, 'Subset', 'Subset', 0, 0, 3, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4094, 462, 1060, 147, 'Infinite', 'Infinite', 1, 1, 1, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4095, 431, 1061, 136, 'instantiates button control', 'instantiates button control', 0, 0, 3, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4096, 1012, 1061, 136, 'a and c', 'a and c', 1, 1, 4, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4097, 430, 1061, 136, 'initializes a button control', 'initializes a button control', 0, 0, 2, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4098, 429, 1061, 136, 'creates a button control', 'creates a button control', 0, 0, 1, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4099, 414, 1062, 131, 'Get()', 'Get()', 0, 0, 1, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4100, 416, 1062, 131, 'Show()', 'Show()', 1, 1, 3, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4101, 415, 1062, 131, 'Enable()', 'Enable()', 0, 0, 2, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4102, 895, 1063, 256, 'Cursor is used to store data permanently.', 'Cursor is used to store data permanently.', 0, 0, 4, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4103, 893, 1063, 256, 'Cursor is used to store the temporary result.', 'Cursor is used to store the temporary result.', 0, 0, 2, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4104, 892, 1063, 256, 'Content values are key pair values, which are updated or inserted in the database', 'Content values are key pair values, which are updated or inserted in the database', 0, 0, 1, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4105, 894, 1063, 256, 'A & B', 'A & B', 1, 1, 3, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4106, 666, 1064, 215, '3.0 (Honeycomb)', '3.0 (Honeycomb)', 0, 0, 1, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4107, 668, 1064, 215, '2.6', '2.6', 0, 1, 3, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4108, 833, 1064, 215, '2.2 (Froyo)', '2.2 (Froyo)', 0, 0, 4, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4109, 667, 1064, 215, '2.3 (Gingerbread)', '2.3 (Gingerbread)', 1, 0, 2, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4110, 433, 1065, 137, 'Maintain the same return type and arguments as the parent class, but implement it differently', 'Maintain the same return type and arguments as the parent class, but implement it differently', 1, 1, 2, '2019-09-02 03:11:33', '2019-09-02 03:18:48'),
(4111, 432, 1065, 137, 'Override the parent class methods but maintain the implementation', 'Override the parent class methods but maintain the implementation', 0, 0, 1, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4112, 434, 1065, 137, 'Have different return types and arguments than the parent class', 'Have different return types and arguments than the parent class', 0, 0, 3, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4113, 1013, 1065, 137, 'Are Virtual', 'Are Virtual', 0, 0, 4, '2019-09-02 03:11:33', '2019-09-02 03:18:47'),
(4114, 726, 1066, 78, 'ANSI', 'ANSI', 0, 0, 4, '2019-09-02 03:11:33', '2019-09-02 03:18:48'),
(4115, 257, 1066, 78, 'EBCDIC', 'EBCDIC', 0, 0, 3, '2019-09-02 03:11:33', '2019-09-02 03:18:48'),
(4116, 256, 1066, 78, 'Unicode', 'Unicode', 1, 0, 2, '2019-09-02 03:11:33', '2019-09-02 03:18:48'),
(4117, 255, 1066, 78, 'ASCII', 'ASCII', 0, 1, 1, '2019-09-02 03:11:33', '2019-09-02 03:18:48'),
(4118, 114, 1067, 31, '10', '10', 0, 0, 1, '2019-09-02 03:11:33', '2019-09-02 03:18:48'),
(4119, 116, 1067, 31, '12', '12', 0, 0, 3, '2019-09-02 03:11:33', '2019-09-02 03:18:48'),
(4120, 115, 1067, 31, '20', '20', 1, 1, 2, '2019-09-02 03:11:33', '2019-09-02 03:18:48'),
(4121, 1002, 1068, 119, 'for loop', 'for loop', 1, 1, 4, '2019-09-02 03:11:33', '2019-09-02 03:18:48'),
(4122, 378, 1068, 119, 'forEach loop', 'forEach loop', 0, 0, 1, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4123, 379, 1068, 119, 'do while', 'do while', 0, 0, 2, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4124, 380, 1068, 119, 'while', 'while', 0, 0, 3, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4125, 176, 1069, 51, 'Compilation error', 'Compilation error', 1, 1, 3, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4126, 175, 1069, 51, '8', '8', 0, 0, 2, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4127, 911, 1069, 51, 'Runtime error', 'Runtime error', 0, 0, 4, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4128, 174, 1069, 51, '9', '9', 0, 0, 1, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4129, 292, 1070, 90, 'byte', 'byte', 1, 1, 2, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4130, 291, 1070, 90, 'bit', 'bit', 0, 0, 1, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4131, 293, 1070, 90, 'kilobyte', 'kilobyte', 0, 0, 3, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4132, 711, 1070, 90, 'megabyte', 'megabyte', 0, 0, 4, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4133, 832, 1071, 214, 'Hybrid kernel', 'Hybrid kernel', 0, 0, 4, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4134, 663, 1071, 214, 'Linux kernel', 'Linux kernel', 1, 1, 1, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4135, 664, 1071, 214, 'Windows kernel', 'Windows kernel', 0, 0, 2, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4136, 665, 1071, 214, 'MAC kernel', 'MAC kernel', 0, 0, 3, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4137, 1004, 1072, 121, 'Assignment Operators', 'Assignment Operators', 0, 0, 4, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4138, 384, 1072, 121, 'RElational operators', 'RElational operators', 0, 0, 1, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4139, 385, 1072, 121, 'Bitwise operators', 'Bitwise operators', 0, 0, 2, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4140, 386, 1072, 121, 'Logical operators', 'Logical operators', 1, 1, 3, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4141, 2, 1073, 1, 'x = 4', 'x = 4', 0, 0, 2, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4142, 1, 1073, 1, 'x = 1', 'x = 1', 1, 1, 1, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4143, 3, 1073, 1, 'x = 2', 'x = 2', 0, 0, 3, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4144, 179, 1074, 52, '400', '400', 0, 0, 3, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4145, 178, 1074, 52, '200', '200', 1, 1, 2, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4146, 912, 1074, 52, '100', '100', 0, 0, 4, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4147, 177, 1074, 52, '12', '12', 0, 0, 1, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4148, 474, 1075, 151, 'Union', 'Union', 0, 0, 1, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4149, 476, 1075, 151, 'Intersection', 'Intersection', 1, 1, 3, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4150, 939, 1075, 151, 'Complement', 'Complement', 0, 0, 4, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4151, 475, 1075, 151, 'Difference', 'Difference', 0, 0, 2, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4152, 149, 1076, 42, 'void', 'void', 0, 0, 3, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4153, 907, 1076, 42, 'private', 'private', 0, 0, 4, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4154, 147, 1076, 42, 'static', 'static', 0, 0, 1, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4155, 148, 1076, 42, 'Boolean', 'Boolean', 1, 1, 2, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4156, 135, 1077, 38, 'A try block identifies a block of code for which particular exceptions is activated.', 'A try block identifies a block of code for which particular exceptions is activated.', 0, 0, 1, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4157, 137, 1077, 38, 'A and B', 'A and B', 1, 1, 3, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4158, 136, 1077, 38, 'It is followed by one or more catch blocks.', 'It is followed by one or more catch blocks.', 0, 0, 2, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4159, 847, 1078, 244, 'none of these', 'none of these', 0, 0, 4, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4160, 845, 1078, 244, 'updates()', 'updates()', 0, 1, 2, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4161, 846, 1078, 244, 'commit()', 'commit()', 0, 0, 3, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4162, 844, 1078, 244, 'commitUpdates()', 'commitUpdates()', 1, 0, 1, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4163, 369, 1079, 116, 'an odd function', 'an odd function', 0, 0, 1, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4164, 370, 1079, 116, 'an even function', 'an even function', 1, 1, 2, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4165, 1085, 1079, 116, 'even and odd', 'even and odd', 0, 0, 4, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4166, 371, 1079, 116, 'neither odd nor even', 'neither odd nor even', 0, 0, 3, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4167, 687, 1080, 220, 'digital camera', 'digital camera', 0, 0, 1, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4168, 709, 1080, 220, 'RFID readers', 'RFID readers', 0, 1, 4, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4169, 688, 1080, 220, 'scanner', 'scanner', 1, 0, 2, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4170, 689, 1080, 220, 'MICR', 'MICR', 0, 0, 3, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4171, 1022, 1081, 275, 'Several catch blocks for a try block, arranged in order starting with Exception and ending with the most specific exception.', 'Several catch blocks for a try block, arranged in order starting with Exception and ending with the most specific exception.', 0, 0, 2, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4172, 1024, 1081, 275, 'The catch blocks should be used only when a finally block is not used.', 'The catch blocks should be used only when a finally block is not used.', 0, 0, 4, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4173, 1023, 1081, 275, 'Several catch blocks within one try block, arranged starting with the most specific exception and ending with Exception.', 'Several catch blocks within one try block, arranged starting with the most specific exception and ending with Exception.', 1, 1, 3, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4174, 1021, 1081, 275, 'Only one catch block for each try block.', 'Only one catch block for each try block.', 0, 0, 1, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4175, 389, 1082, 122, 'Logical operators', 'Logical operators', 0, 0, 3, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4176, 387, 1082, 122, 'unary operators', 'unary operators', 1, 1, 1, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4177, 388, 1082, 122, 'Binary operators', 'Binary operators', 0, 0, 2, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4178, 1005, 1082, 122, 'Assignment opeartors', 'Assignment opeartors', 0, 0, 4, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4179, 900, 1083, 32, 'All of the choices', 'All of the choices', 1, 1, 4, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4180, 119, 1083, 32, 'foreach', 'foreach', 0, 0, 3, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4181, 118, 1083, 32, 'as', 'as', 0, 0, 2, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4182, 117, 1083, 32, 'abstract', 'abstract', 0, 0, 1, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4183, 408, 1084, 129, 'GroupBox control', 'GroupBox control', 0, 0, 1, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4184, 409, 1084, 129, 'LinkLabel control', 'LinkLabel control', 1, 1, 2, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4185, 410, 1084, 129, 'ListView Control', 'ListView Control', 0, 0, 3, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4186, 334, 1085, 104, '(x+5)<sup>2</sup> +16', '(x+5)<sup>2</sup> +16', 1, 1, 2, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4187, 333, 1085, 104, '(x-7)<sup>2</sup> +8', '(x-7)<sup>2</sup> +8', 0, 0, 1, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4188, 335, 1085, 104, '(x+7)<sup>2</sup> -8', '(x+7)<sup>2</sup> -8', 0, 0, 3, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4189, 1073, 1085, 104, '(x+5)<sup>2</sup> -16', '(x+5)<sup>2</sup> -16', 0, 0, 4, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4190, 722, 1086, 82, '22', '22', 0, 0, 4, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4191, 268, 1086, 82, '-9', '-9', 1, 1, 2, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4192, 267, 1086, 82, '-23', '-23', 0, 0, 1, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4193, 269, 1086, 82, '-7', '-7', 0, 0, 3, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4194, 943, 1087, 155, '7', '7', 0, 0, 4, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4195, 487, 1087, 155, '5', '5', 0, 0, 2, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4196, 486, 1087, 155, '4', '4', 1, 1, 1, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4197, 488, 1087, 155, '6', '6', 0, 0, 3, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4198, 172, 1088, 50, 'Thread returns to the waiting state.', 'Thread returns to the waiting state.', 0, 0, 2, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4199, 171, 1088, 50, 'Thread returns to the ready state.', 'Thread returns to the ready state.', 1, 1, 1, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4200, 173, 1088, 50, 'Thread starts running.', 'Thread starts running.', 0, 0, 3, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4201, 1036, 1089, 278, 'Message1\nMessage3\nMessage2\nMessage4', 'Message1<br />\nMessage3<br />\nMessage2<br />\nMessage4', 0, 0, 4, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4202, 1033, 1089, 278, 'Message1\nMessage4', 'Message1<br />\nMessage4', 0, 0, 1, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4203, 1035, 1089, 278, 'Message1\nMessage3\nMessage4', 'Message1<br />\nMessage3<br />\nMessage4', 1, 1, 3, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4204, 1034, 1089, 278, 'Message1\nMessage2\nMessage3\nMessage4', 'Message1<br />\nMessage2<br />\nMessage3<br />\nMessage4', 0, 0, 2, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4205, 825, 1090, 207, 'Application data bridge', 'Application data bridge', 0, 0, 4, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4206, 642, 1090, 207, 'Android Debug Bridge', 'Android Debug Bridge', 1, 0, 1, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4207, 644, 1090, 207, 'Android data bridge', 'Android data bridge', 0, 0, 3, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4208, 643, 1090, 207, 'Application Debug Bridge', 'Application Debug Bridge', 0, 1, 2, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4209, 238, 1091, 72, 'Utility software', 'Utility software', 1, 1, 2, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4210, 239, 1091, 72, 'Anti-virus software', 'Anti-virus software', 0, 0, 3, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4211, 237, 1091, 72, 'Operating system software', 'Operating system software', 0, 0, 1, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4212, 732, 1091, 72, 'Disk optimization software', 'Disk optimization software', 0, 0, 4, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4213, 436, 1092, 138, 'Catches', 'Catches', 0, 0, 2, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4214, 1014, 1092, 138, 'a and b', 'a and b', 0, 0, 4, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4215, 435, 1092, 138, 'Trys', 'Trys', 0, 0, 1, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4216, 437, 1092, 138, 'Throws', 'Throws', 1, 1, 3, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4217, 400, 1093, 126, 'ListBox control', 'ListBox control', 1, 1, 2, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4218, 401, 1093, 126, 'TextBox control', 'TextBox control', 0, 0, 3, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4219, 399, 1093, 126, 'CheckListBox control', 'CheckListBox control', 0, 0, 1, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4220, 509, 1094, 162, 'n( A U B U C)=90', 'n( A U B U C)=90', 0, 0, 3, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4221, 507, 1094, 162, 'n(A U B)=0', 'n(A U B)=0', 0, 0, 1, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4222, 508, 1094, 162, 'n( B U C)=0', 'n( B U C)=0', 0, 0, 2, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4223, 950, 1094, 162, 'All of the mentioned', 'All of the mentioned', 1, 1, 4, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4224, 342, 1095, 107, '11', '11', 0, 0, 1, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4225, 344, 1095, 107, '-12', '-12', 0, 0, 3, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4226, 343, 1095, 107, '48', '48', 0, 0, 2, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4227, 1076, 1095, 107, '22', '22', 1, 1, 4, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4228, 364, 1096, 114, 'mean = 10 , standard deviation = 6', 'mean = 10 , standard deviation = 6', 0, 0, 2, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4229, 1083, 1096, 114, 'mean = 10 , standard deviation = 1', 'mean = 10 , standard deviation = 1', 0, 0, 4, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4230, 365, 1096, 114, 'mean = 15 , standard deviation = 1', 'mean = 15 , standard deviation = 1', 1, 1, 3, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4231, 363, 1096, 114, 'mean = 15 , standard deviation = 6', 'mean = 15 , standard deviation = 6', 0, 0, 1, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4232, 841, 1097, 243, 'X.style', 'X.style', 0, 0, 2, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4233, 840, 1097, 243, 'R.style', 'R.style', 1, 1, 1, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4234, 842, 1097, 243, 'manifest.XML', 'manifest.XML', 0, 0, 3, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4235, 843, 1097, 243, 'application', 'application', 0, 0, 4, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4236, 1091, 1098, 285, 'π', 'π', 1, 1, 4, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4237, 1090, 1098, 285, '4 π', '4 π', 0, 0, 3, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4238, 1089, 1098, 285, '2 π', '2 π', 0, 0, 2, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4239, 1088, 1098, 285, '4 π <sup>2</sup>', '4 π <sup>2</sup>', 0, 0, 1, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4240, 252, 1099, 77, 'logic error', 'logic error', 1, 1, 1, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4241, 727, 1099, 77, 'linker error', 'linker error', 0, 0, 4, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4242, 253, 1099, 77, 'syntax error', 'syntax error', 0, 0, 2, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4243, 254, 1099, 77, 'run time error', 'run time error', 0, 0, 3, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4244, 193, 1100, 57, 'Column', 'Column', 0, 0, 2, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4245, 192, 1100, 57, 'Row', 'Row', 1, 1, 1, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4246, 194, 1100, 57, 'Both Row and Column', 'Both Row and Column', 0, 0, 3, '2019-09-02 03:11:34', '2019-09-02 03:18:48'),
(4247, 344, 1101, 107, '-12', '-12', 0, 0, 3, '2019-09-02 03:21:03', '2019-09-02 03:26:34'),
(4248, 342, 1101, 107, '11', '11', 0, 0, 1, '2019-09-02 03:21:03', '2019-09-02 03:26:34'),
(4249, 343, 1101, 107, '48', '48', 0, 0, 2, '2019-09-02 03:21:03', '2019-09-02 03:26:34'),
(4250, 1076, 1101, 107, '22', '22', 1, 1, 4, '2019-09-02 03:21:03', '2019-09-02 03:26:35'),
(4251, 1053, 1102, 283, 'Set the CausesValidation property of the text box to false.', 'Set the CausesValidation property of the text box to false.', 0, 0, 1, '2019-09-02 03:21:03', '2019-09-02 03:26:35'),
(4252, 1055, 1102, 283, 'Set the CausesValidation property of the Help button to false.', 'Set the CausesValidation property of the Help button to false.', 1, 1, 3, '2019-09-02 03:21:03', '2019-09-02 03:26:35'),
(4253, 1054, 1102, 283, 'Set the CausesValidation property of the text box to true.', 'Set the CausesValidation property of the text box to true.', 0, 0, 2, '2019-09-02 03:21:03', '2019-09-02 03:26:35'),
(4254, 1056, 1102, 283, 'Set the CausesValidation property of the Help button to true.', 'Set the CausesValidation property of the Help button to true.', 0, 0, 4, '2019-09-02 03:21:03', '2019-09-02 03:26:35'),
(4255, 954, 1103, 260, '10', '10', 0, 0, 4, '2019-09-02 03:21:03', '2019-09-02 03:26:35'),
(4256, 952, 1103, 260, '20', '20', 0, 0, 2, '2019-09-02 03:21:03', '2019-09-02 03:26:35'),
(4257, 951, 1103, 260, '35', '35', 1, 1, 1, '2019-09-02 03:21:03', '2019-09-02 03:26:35'),
(4258, 953, 1103, 260, '30', '30', 0, 0, 3, '2019-09-02 03:21:03', '2019-09-02 03:26:35'),
(4259, 1089, 1104, 285, '2 π', '2 π', 0, 0, 2, '2019-09-02 03:21:03', '2019-09-02 03:26:35'),
(4260, 1090, 1104, 285, '4 π', '4 π', 0, 0, 3, '2019-09-02 03:21:03', '2019-09-02 03:26:35'),
(4261, 1088, 1104, 285, '4 π <sup>2</sup>', '4 π <sup>2</sup>', 0, 0, 1, '2019-09-02 03:21:03', '2019-09-02 03:26:35'),
(4262, 1091, 1104, 285, 'π', 'π', 1, 1, 4, '2019-09-02 03:21:03', '2019-09-02 03:26:35'),
(4263, 1009, 1105, 132, 'While', 'While', 0, 0, 4, '2019-09-02 03:21:03', '2019-09-02 03:26:35'),
(4264, 417, 1105, 132, 'If', 'If', 0, 0, 1, '2019-09-02 03:21:03', '2019-09-02 03:26:35'),
(4265, 419, 1105, 132, 'For', 'For', 0, 0, 3, '2019-09-02 03:21:03', '2019-09-02 03:26:35'),
(4266, 418, 1105, 132, 'Switch', 'Switch', 1, 1, 2, '2019-09-02 03:21:03', '2019-09-02 03:26:35'),
(4267, 1094, 1106, 286, '0.001', '0.001', 0, 0, 3, '2019-09-02 03:21:03', '2019-09-02 03:26:35'),
(4268, 1093, 1106, 286, '0.478', '0.478', 0, 1, 2, '2019-09-02 03:21:03', '2019-09-02 03:26:35'),
(4269, 1092, 1106, 286, '0.057', '0.057', 1, 0, 1, '2019-09-02 03:21:03', '2019-09-02 03:26:35'),
(4270, 1095, 1106, 286, '0', '0', 0, 0, 4, '2019-09-02 03:21:03', '2019-09-02 03:26:35'),
(4271, 145, 1107, 41, 'public int main(String[] args)', 'public int main(String[] args)', 0, 0, 2, '2019-09-02 03:21:03', '2019-09-02 03:26:35'),
(4272, 146, 1107, 41, 'public static void main(String[] args)', 'public static void main(String[] args)', 1, 1, 3, '2019-09-02 03:21:03', '2019-09-02 03:26:35'),
(4273, 144, 1107, 41, 'public static int main(String[] args)', 'public static int main(String[] args)', 0, 0, 1, '2019-09-02 03:21:03', '2019-09-02 03:26:35'),
(4274, 679, 1108, 68, '[[#img26]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/tBuCNpani0PgWIFN01ztVOAj4FS4CBDAiTW9J8lB.png\" width=\"150\" height=\"150\" />', 0, 0, 4, '2019-09-02 03:21:03', '2019-09-02 03:26:35'),
(4275, 225, 1108, 68, '[[#img23]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/IyLDJJaUUQ0aIZOMyEjh4JO72W4HpXtPj2CfMKZL.png\" width=\"150\" height=\"150\" />', 1, 0, 1, '2019-09-02 03:21:03', '2019-09-02 03:26:35'),
(4276, 226, 1108, 68, '[[#img24]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/nVLwXww7AT2RBfzhH1tPQMxdLPF1iWuunHzErZRh.png\" width=\"150\" height=\"150\" />', 0, 0, 2, '2019-09-02 03:21:03', '2019-09-02 03:26:35'),
(4277, 227, 1108, 68, '[[#img25]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/rDh656ehodyPQmn7CxxjGK2H29sx2bh6LDz9INfN.png\" width=\"150\" height=\"150\" />', 0, 1, 3, '2019-09-02 03:21:03', '2019-09-02 03:26:35'),
(4278, 119, 1109, 32, 'foreach', 'foreach', 0, 0, 3, '2019-09-02 03:21:03', '2019-09-02 03:26:35'),
(4279, 118, 1109, 32, 'as', 'as', 0, 0, 2, '2019-09-02 03:21:03', '2019-09-02 03:26:35'),
(4280, 117, 1109, 32, 'abstract', 'abstract', 0, 0, 1, '2019-09-02 03:21:03', '2019-09-02 03:26:35'),
(4281, 900, 1109, 32, 'All of the choices', 'All of the choices', 1, 1, 4, '2019-09-02 03:21:03', '2019-09-02 03:26:35'),
(4282, 509, 1110, 162, 'n( A U B U C)=90', 'n( A U B U C)=90', 0, 0, 3, '2019-09-02 03:21:03', '2019-09-02 03:26:35'),
(4283, 507, 1110, 162, 'n(A U B)=0', 'n(A U B)=0', 0, 0, 1, '2019-09-02 03:21:03', '2019-09-02 03:26:35'),
(4284, 950, 1110, 162, 'All of the mentioned', 'All of the mentioned', 1, 1, 4, '2019-09-02 03:21:03', '2019-09-02 03:26:35'),
(4285, 508, 1110, 162, 'n( B U C)=0', 'n( B U C)=0', 0, 0, 2, '2019-09-02 03:21:03', '2019-09-02 03:26:35'),
(4286, 654, 1111, 211, 'Chrome', 'Chrome', 0, 0, 1, '2019-09-02 03:21:03', '2019-09-02 03:26:35'),
(4287, 829, 1111, 211, 'Opera', 'Opera', 0, 0, 4, '2019-09-02 03:21:03', '2019-09-02 03:26:35'),
(4288, 656, 1111, 211, 'Open source Webkit', 'Open source Webkit', 1, 1, 3, '2019-09-02 03:21:03', '2019-09-02 03:26:35'),
(4289, 655, 1111, 211, 'Firefox', 'Firefox', 0, 0, 2, '2019-09-02 03:21:03', '2019-09-02 03:26:35'),
(4290, 885, 1112, 254, 'Cookies management', 'Cookies management', 0, 0, 2, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4291, 887, 1112, 254, 'None of the above', 'None of the above', 0, 0, 4, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4292, 886, 1112, 254, 'Authentication management', 'Authentication management', 0, 0, 3, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4293, 884, 1112, 254, 'httprequest(get/post) and returns response from the server', 'httprequest(get/post) and returns response from the server', 1, 1, 1, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4294, 319, 1113, 99, '1.756', '1.756', 0, 0, 2, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4295, 1068, 1113, 99, '4.753', '4.753', 0, 0, 4, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4296, 318, 1113, 99, '6.25', '6.25', 0, 0, 1, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4297, 320, 1113, 99, '2.322', '2.322', 1, 1, 3, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4298, 476, 1114, 151, 'Intersection', 'Intersection', 1, 1, 3, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4299, 474, 1114, 151, 'Union', 'Union', 0, 0, 1, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4300, 475, 1114, 151, 'Difference', 'Difference', 0, 0, 2, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4301, 939, 1114, 151, 'Complement', 'Complement', 0, 0, 4, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4302, 933, 1115, 145, '{(1, 1), (a, a), (2, a), (1, b)}', '{(1, 1), (a, a), (2, a), (1, b)}', 0, 0, 4, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4303, 458, 1115, 145, '{(1, a), (2, a), (1, b), (2, b)}', '{(1, a), (2, a), (1, b), (2, b)}', 1, 0, 3, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4304, 457, 1115, 145, '{(1, 1), (2, 2), (a, a), (b, b)}', '{(1, 1), (2, 2), (a, a), (b, b)}', 0, 0, 2, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4305, 456, 1115, 145, '{(1, a), (1, b), (2, a), (b, b)}', '{(1, a), (1, b), (2, a), (b, b)}', 0, 1, 1, '2019-09-02 03:21:04', '2019-09-02 03:26:35');
INSERT INTO `answer_sheet_test_question_choices` (`id`, `choice_id`, `answer_sheet_test_question_id`, `test_question_id`, `body`, `body_html`, `is_correct`, `is_selected`, `pos_order`, `created_at`, `updated_at`) VALUES
(4306, 895, 1116, 256, 'Cursor is used to store data permanently.', 'Cursor is used to store data permanently.', 0, 0, 4, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4307, 894, 1116, 256, 'A & B', 'A & B', 1, 1, 3, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4308, 893, 1116, 256, 'Cursor is used to store the temporary result.', 'Cursor is used to store the temporary result.', 0, 0, 2, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4309, 892, 1116, 256, 'Content values are key pair values, which are updated or inserted in the database', 'Content values are key pair values, which are updated or inserted in the database', 0, 0, 1, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4310, 486, 1117, 155, '4', '4', 1, 1, 1, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4311, 943, 1117, 155, '7', '7', 0, 0, 4, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4312, 488, 1117, 155, '6', '6', 0, 0, 3, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4313, 487, 1117, 155, '5', '5', 0, 0, 2, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4314, 404, 1118, 127, 'Button control', 'Button control', 1, 1, 3, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4315, 402, 1118, 127, 'Radio Button', 'Radio Button', 0, 0, 1, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4316, 403, 1118, 127, 'Textbox control', 'Textbox control', 0, 0, 2, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4317, 861, 1119, 248, 'To store the data in a database', 'To store the data in a database', 0, 0, 2, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4318, 863, 1119, 248, 'none of the choices', 'none of the choices', 0, 0, 4, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4319, 860, 1119, 248, 'To send the data from an application to another application', 'To send the data from an application to another application', 0, 0, 1, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4320, 862, 1119, 248, 'To share the data between applications', 'To share the data between applications', 1, 1, 3, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4321, 714, 1120, 225, '135', '135', 0, 0, 4, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4322, 706, 1120, 225, '127', '127', 1, 1, 2, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4323, 707, 1120, 225, '44', '44', 0, 0, 3, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4324, 705, 1120, 225, '531', '531', 0, 0, 1, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4325, 1007, 1121, 124, 'Explicit Types', 'Explicit Types', 0, 0, 4, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4326, 394, 1121, 124, 'Value types', 'Value types', 0, 0, 2, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4327, 393, 1121, 124, 'Reference type', 'Reference type', 1, 1, 1, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4328, 395, 1121, 124, 'Data Type', 'Data Type', 0, 0, 3, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4329, 435, 1122, 138, 'Trys', 'Trys', 0, 0, 1, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4330, 437, 1122, 138, 'Throws', 'Throws', 1, 1, 3, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4331, 1014, 1122, 138, 'a and b', 'a and b', 0, 0, 4, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4332, 436, 1122, 138, 'Catches', 'Catches', 0, 0, 2, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4333, 1033, 1123, 278, 'Message1\nMessage4', 'Message1<br />\nMessage4', 0, 0, 1, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4334, 1034, 1123, 278, 'Message1\nMessage2\nMessage3\nMessage4', 'Message1<br />\nMessage2<br />\nMessage3<br />\nMessage4', 0, 0, 2, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4335, 1036, 1123, 278, 'Message1\nMessage3\nMessage2\nMessage4', 'Message1<br />\nMessage3<br />\nMessage2<br />\nMessage4', 0, 0, 4, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4336, 1035, 1123, 278, 'Message1\nMessage3\nMessage4', 'Message1<br />\nMessage3<br />\nMessage4', 1, 1, 3, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4337, 1066, 1124, 97, '3i - 10', '3i - 10', 0, 0, 4, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4338, 312, 1124, 97, 'i - 5', 'i - 5', 0, 0, 1, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4339, 313, 1124, 97, '7 - 3i', '7 - 3i', 0, 0, 2, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4340, 314, 1124, 97, 'i - 12', 'i - 12', 1, 1, 3, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4341, 204, 1125, 61, 'heap space', 'heap space', 1, 1, 1, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4342, 920, 1125, 61, 'first generation memory', 'first generation memory', 0, 0, 4, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4343, 206, 1125, 61, 'heap space and stack space', 'heap space and stack space', 0, 0, 3, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4344, 205, 1125, 61, 'stack space', 'stack space', 0, 0, 2, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4345, 1080, 1126, 111, '(3 π / 2 , 2 π)', '(3 π / 2 , 2 π)', 0, 0, 4, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4346, 354, 1126, 111, '(0 , π/2)', '(0 , π/2)', 0, 0, 1, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4347, 355, 1126, 111, '(π/2 , π)', '(π/2 , π)', 1, 1, 2, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4348, 356, 1126, 111, '(π , 3 π / 2)', '(π , 3 π / 2)', 0, 0, 3, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4349, 854, 1127, 246, 'src/', 'src/', 1, 1, 3, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4350, 853, 1127, 246, 'assets/', 'assets/', 0, 0, 2, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4351, 852, 1127, 246, 'res/', 'res/', 0, 0, 1, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4352, 855, 1127, 246, 'bin/', 'bin/', 0, 0, 4, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4353, 198, 1128, 59, '3', '3', 0, 0, 1, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4354, 200, 1128, 59, '6', '6', 0, 0, 3, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4355, 918, 1128, 59, '1', '1', 1, 1, 4, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4356, 199, 1128, 59, '0', '0', 0, 0, 2, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4357, 463, 1129, 147, 'Finite', 'Finite', 0, 0, 2, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4358, 462, 1129, 147, 'Infinite', 'Infinite', 1, 1, 1, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4359, 464, 1129, 147, 'Subset', 'Subset', 0, 0, 3, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4360, 935, 1129, 147, 'Empty', 'Empty', 0, 0, 4, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4361, 842, 1130, 243, 'manifest.XML', 'manifest.XML', 0, 0, 3, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4362, 843, 1130, 243, 'application', 'application', 0, 0, 4, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4363, 841, 1130, 243, 'X.style', 'X.style', 0, 1, 2, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4364, 840, 1130, 243, 'R.style', 'R.style', 1, 0, 1, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4365, 2, 1131, 1, 'x = 4', 'x = 4', 0, 0, 2, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4366, 3, 1131, 1, 'x = 2', 'x = 2', 0, 0, 3, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4367, 1, 1131, 1, 'x = 1', 'x = 1', 1, 1, 1, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4368, 257, 1132, 78, 'EBCDIC', 'EBCDIC', 0, 0, 3, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4369, 255, 1132, 78, 'ASCII', 'ASCII', 0, 0, 1, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4370, 256, 1132, 78, 'Unicode', 'Unicode', 1, 1, 2, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4371, 726, 1132, 78, 'ANSI', 'ANSI', 0, 0, 4, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4372, 658, 1133, 212, 'Google', 'Google', 1, 0, 2, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4373, 657, 1133, 212, 'Apple', 'Apple', 0, 0, 1, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4374, 659, 1133, 212, 'Nokia', 'Nokia', 0, 0, 3, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4375, 830, 1133, 212, 'No company', 'No company', 0, 1, 4, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4376, 466, 1134, 148, '6', '6', 0, 0, 2, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4377, 936, 1134, 148, '9', '9', 0, 0, 4, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4378, 467, 1134, 148, '7', '7', 0, 0, 3, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4379, 465, 1134, 148, '8', '8', 1, 1, 1, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4380, 978, 1135, 267, 'smallest previous integer', 'smallest previous integer', 0, 0, 1, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4381, 980, 1135, 267, 'smallest following integer', 'smallest following integer', 0, 0, 3, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4382, 979, 1135, 267, 'greatest previous integer', 'greatest previous integer', 1, 1, 2, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4383, 165, 1136, 48, 'JRE is a java based GUI application.', 'JRE is a java based GUI application.', 0, 0, 1, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4384, 166, 1136, 48, 'JRE is an application development framework.', 'JRE is an application development framework.', 0, 0, 2, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4385, 167, 1136, 48, 'JRE is an implementation of the Java Virtual Machine which executes Java programs.', 'JRE is an implementation of the Java Virtual Machine which executes Java programs.', 1, 1, 3, '2019-09-02 03:21:04', '2019-09-02 03:26:35'),
(4386, 876, 1137, 252, 'A class used to hold states and objects', 'A class used to hold states and objects', 1, 1, 1, '2019-09-02 03:21:04', '2019-09-02 03:26:36'),
(4387, 878, 1137, 252, 'A mandatory class in android', 'A mandatory class in android', 0, 0, 3, '2019-09-02 03:21:04', '2019-09-02 03:26:36'),
(4388, 877, 1137, 252, 'A bean class can be passed from one activity to another.', 'A bean class can be passed from one activity to another.', 0, 0, 2, '2019-09-02 03:21:04', '2019-09-02 03:26:36'),
(4389, 879, 1137, 252, 'None of the above', 'None of the above', 0, 0, 4, '2019-09-02 03:21:04', '2019-09-02 03:26:36'),
(4390, 115, 1138, 31, '20', '20', 1, 1, 2, '2019-09-02 03:21:04', '2019-09-02 03:26:36'),
(4391, 116, 1138, 31, '12', '12', 0, 0, 3, '2019-09-02 03:21:04', '2019-09-02 03:26:36'),
(4392, 114, 1138, 31, '10', '10', 0, 0, 1, '2019-09-02 03:21:04', '2019-09-02 03:26:36'),
(4393, 219, 1139, 66, '121', '121', 0, 0, 1, '2019-09-02 03:21:04', '2019-09-02 03:26:36'),
(4394, 220, 1139, 66, '163', '163', 1, 1, 2, '2019-09-02 03:21:04', '2019-09-02 03:26:36'),
(4395, 221, 1139, 66, '199', '199', 0, 0, 3, '2019-09-02 03:21:04', '2019-09-02 03:26:36'),
(4396, 676, 1139, 66, '212', '212', 0, 0, 4, '2019-09-02 03:21:04', '2019-09-02 03:26:36'),
(4397, 148, 1140, 42, 'Boolean', 'Boolean', 1, 1, 2, '2019-09-02 03:21:04', '2019-09-02 03:26:36'),
(4398, 907, 1140, 42, 'private', 'private', 0, 0, 4, '2019-09-02 03:21:04', '2019-09-02 03:26:36'),
(4399, 149, 1140, 42, 'void', 'void', 0, 0, 3, '2019-09-02 03:21:04', '2019-09-02 03:26:36'),
(4400, 147, 1140, 42, 'static', 'static', 0, 0, 1, '2019-09-02 03:21:04', '2019-09-02 03:26:36'),
(4401, 306, 1141, 95, '12i', '12i', 1, 1, 1, '2019-09-02 03:21:04', '2019-09-02 03:26:36'),
(4402, 307, 1141, 95, 'You cannot find the square root of a negative number', 'You cannot find the square root of a negative number', 0, 0, 2, '2019-09-02 03:21:04', '2019-09-02 03:26:36'),
(4403, 1064, 1141, 95, '-12i', '-12i', 0, 0, 4, '2019-09-02 03:21:04', '2019-09-02 03:26:36'),
(4404, 308, 1141, 95, '-12', '-12', 0, 0, 3, '2019-09-02 03:21:04', '2019-09-02 03:26:36'),
(4405, 847, 1142, 244, 'none of these', 'none of these', 0, 0, 4, '2019-09-02 03:21:04', '2019-09-02 03:26:36'),
(4406, 844, 1142, 244, 'commitUpdates()', 'commitUpdates()', 1, 1, 1, '2019-09-02 03:21:04', '2019-09-02 03:26:36'),
(4407, 845, 1142, 244, 'updates()', 'updates()', 0, 0, 2, '2019-09-02 03:21:04', '2019-09-02 03:26:36'),
(4408, 846, 1142, 244, 'commit()', 'commit()', 0, 0, 3, '2019-09-02 03:21:04', '2019-09-02 03:26:36'),
(4409, 1024, 1143, 275, 'The catch blocks should be used only when a finally block is not used.', 'The catch blocks should be used only when a finally block is not used.', 0, 0, 4, '2019-09-02 03:21:04', '2019-09-02 03:26:36'),
(4410, 1021, 1143, 275, 'Only one catch block for each try block.', 'Only one catch block for each try block.', 0, 0, 1, '2019-09-02 03:21:04', '2019-09-02 03:26:36'),
(4411, 1023, 1143, 275, 'Several catch blocks within one try block, arranged starting with the most specific exception and ending with Exception.', 'Several catch blocks within one try block, arranged starting with the most specific exception and ending with Exception.', 1, 1, 3, '2019-09-02 03:21:04', '2019-09-02 03:26:36'),
(4412, 1022, 1143, 275, 'Several catch blocks for a try block, arranged in order starting with Exception and ending with the most specific exception.', 'Several catch blocks for a try block, arranged in order starting with Exception and ending with the most specific exception.', 0, 0, 2, '2019-09-02 03:21:04', '2019-09-02 03:26:36'),
(4413, 124, 1144, 34, 'typeof', 'typeof', 0, 0, 2, '2019-09-02 03:21:04', '2019-09-02 03:26:36'),
(4414, 123, 1144, 34, 'sizeof', 'sizeof', 1, 1, 1, '2019-09-02 03:21:04', '2019-09-02 03:26:36'),
(4415, 125, 1144, 34, '&</a>', '&</a>', 0, 0, 3, '2019-09-02 03:21:04', '2019-09-02 03:26:36'),
(4416, 902, 1144, 34, '*', '*', 0, 0, 4, '2019-09-02 03:21:04', '2019-09-02 03:26:36'),
(4417, 489, 1145, 156, '4, 8', '4, 8', 0, 0, 1, '2019-09-02 03:21:04', '2019-09-02 03:26:36'),
(4418, 944, 1145, 156, 'None of the choices', 'None of the choices', 0, 0, 4, '2019-09-02 03:21:04', '2019-09-02 03:26:36'),
(4419, 490, 1145, 156, '8, 12', '8, 12', 1, 1, 2, '2019-09-02 03:21:04', '2019-09-02 03:26:36'),
(4420, 491, 1145, 156, '4, 12', '4, 12', 0, 0, 3, '2019-09-02 03:21:04', '2019-09-02 03:26:36'),
(4421, 283, 1146, 87, 'decode, execute, store and fetch', 'decode, execute, store and fetch', 0, 0, 2, '2019-09-02 03:21:04', '2019-09-02 03:26:36'),
(4422, 284, 1146, 87, 'decode, fetch, store and execute', 'decode, fetch, store and execute', 0, 0, 3, '2019-09-02 03:21:04', '2019-09-02 03:26:36'),
(4423, 282, 1146, 87, 'fetch, execute, store and decode', 'fetch, execute, store and decode', 0, 0, 1, '2019-09-02 03:21:04', '2019-09-02 03:26:36'),
(4424, 715, 1146, 87, 'fetch, decode, execute and store', 'fetch, decode, execute and store', 1, 1, 4, '2019-09-02 03:21:04', '2019-09-02 03:26:36'),
(4425, 244, 1147, 74, 'Motherboard', 'Motherboard', 0, 0, 2, '2019-09-02 03:21:04', '2019-09-02 03:26:36'),
(4426, 245, 1147, 74, 'Computer', 'Computer', 1, 1, 3, '2019-09-02 03:21:04', '2019-09-02 03:26:36'),
(4427, 243, 1147, 74, 'Operating System', 'Operating System', 0, 0, 1, '2019-09-02 03:21:04', '2019-09-02 03:26:36'),
(4428, 730, 1147, 74, 'CPU', 'CPU', 0, 0, 4, '2019-09-02 03:21:04', '2019-09-02 03:26:36'),
(4429, 194, 1148, 57, 'Both Row and Column', 'Both Row and Column', 0, 0, 3, '2019-09-02 03:21:04', '2019-09-02 03:26:36'),
(4430, 192, 1148, 57, 'Row', 'Row', 1, 1, 1, '2019-09-02 03:21:04', '2019-09-02 03:26:36'),
(4431, 193, 1148, 57, 'Column', 'Column', 0, 0, 2, '2019-09-02 03:21:04', '2019-09-02 03:26:36'),
(4432, 728, 1149, 76, 'back up', 'back up', 1, 0, 4, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4433, 249, 1149, 76, 'spooling', 'spooling', 0, 0, 1, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4434, 251, 1149, 76, 'virtual memory', 'virtual memory', 0, 1, 3, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4435, 250, 1149, 76, 'buffering', 'buffering', 0, 0, 2, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4436, 416, 1150, 131, 'Show()', 'Show()', 1, 1, 3, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4437, 415, 1150, 131, 'Enable()', 'Enable()', 0, 0, 2, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4438, 414, 1150, 131, 'Get()', 'Get()', 0, 0, 1, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4439, 1061, 1151, 92, 'x > 6', 'x > 6', 0, 0, 4, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4440, 297, 1151, 92, 'x < 6', 'x < 6', 0, 0, 1, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4441, 299, 1151, 92, 'x < -1', 'x < -1', 1, 1, 3, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4442, 298, 1151, 92, 'x > 1', 'x > 1', 0, 0, 2, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4443, 175, 1152, 51, '8', '8', 0, 0, 2, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4444, 911, 1152, 51, 'Runtime error', 'Runtime error', 0, 0, 4, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4445, 174, 1152, 51, '9', '9', 0, 0, 1, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4446, 176, 1152, 51, 'Compilation error', 'Compilation error', 1, 1, 3, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4447, 503, 1153, 160, 'A ∩ B', 'A ∩ B', 0, 1, 3, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4448, 502, 1153, 160, 'A U B -B', 'A U B -B', 1, 0, 2, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4449, 948, 1153, 160, 'B', 'B', 0, 0, 4, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4450, 501, 1153, 160, 'A‘ (Complement of A)', 'A‘ (Complement of A)', 0, 0, 1, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4451, 667, 1154, 215, '2.3 (Gingerbread)', '2.3 (Gingerbread)', 1, 1, 2, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4452, 668, 1154, 215, '2.6', '2.6', 0, 0, 3, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4453, 833, 1154, 215, '2.2 (Froyo)', '2.2 (Froyo)', 0, 0, 4, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4454, 666, 1154, 215, '3.0 (Honeycomb)', '3.0 (Honeycomb)', 0, 0, 1, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4455, 120, 1155, 33, 'ToDecimal', 'ToDecimal', 0, 0, 1, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4456, 901, 1155, 33, 'ToInt32', 'ToInt32', 0, 0, 4, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4457, 121, 1155, 33, 'ToDouble', 'ToDouble', 1, 1, 2, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4458, 122, 1155, 33, 'ToInt16', 'ToInt16', 0, 0, 3, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4459, 360, 1156, 113, '5!', '5!', 0, 0, 1, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4460, 1082, 1156, 113, '3! * 2!', '3! * 2!', 0, 0, 4, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4461, 362, 1156, 113, '2!', '2!', 0, 1, 3, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4462, 361, 1156, 113, '3!', '3!', 1, 0, 2, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4463, 642, 1157, 207, 'Android Debug Bridge', 'Android Debug Bridge', 1, 1, 1, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4464, 825, 1157, 207, 'Application data bridge', 'Application data bridge', 0, 0, 4, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4465, 644, 1157, 207, 'Android data bridge', 'Android data bridge', 0, 0, 3, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4466, 643, 1157, 207, 'Application Debug Bridge', 'Application Debug Bridge', 0, 0, 2, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4467, 347, 1158, 108, '1 000 000', '1 000 000', 0, 0, 3, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4468, 345, 1158, 108, '1 846 000', '1 846 000', 1, 1, 1, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4469, 1077, 1158, 108, '1 500 000', '1 500 000', 0, 0, 4, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4470, 346, 1158, 108, '1 852 000', '1 852 000', 0, 0, 2, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4471, 628, 1159, 202, 'Programming Language', 'Programming Language', 0, 0, 2, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4472, 629, 1159, 202, 'Mobile Operating System', 'Mobile Operating System', 1, 1, 3, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4473, 820, 1159, 202, 'Database', 'Database', 0, 0, 4, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4474, 627, 1159, 202, 'Desktop Operatng System', 'Desktop Operatng System', 0, 0, 1, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4475, 237, 1160, 72, 'Operating system software', 'Operating system software', 0, 0, 1, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4476, 239, 1160, 72, 'Anti-virus software', 'Anti-virus software', 0, 0, 3, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4477, 238, 1160, 72, 'Utility software', 'Utility software', 1, 1, 2, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4478, 732, 1160, 72, 'Disk optimization software', 'Disk optimization software', 0, 0, 4, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4479, 823, 1161, 205, 'Bluetooth driver', 'Bluetooth driver', 0, 0, 4, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4480, 638, 1161, 205, 'WiFi driver', 'WiFi driver', 1, 1, 3, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4481, 636, 1161, 205, 'Device Driver', 'Device Driver', 0, 0, 1, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4482, 637, 1161, 205, 'Video Driver', 'Video Driver', 0, 0, 2, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4483, 300, 1162, 93, 'x ≤ 5', 'x ≤ 5', 0, 0, 1, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4484, 301, 1162, 93, 'x ≥ 5', 'x ≥ 5', 1, 1, 2, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4485, 302, 1162, 93, 'x ≥ -5', 'x ≥ -5', 0, 0, 3, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4486, 1062, 1162, 93, 'x ≤ -5', 'x ≤ -5', 0, 0, 4, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4487, 364, 1163, 114, 'mean = 10 , standard deviation = 6', 'mean = 10 , standard deviation = 6', 0, 0, 2, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4488, 365, 1163, 114, 'mean = 15 , standard deviation = 1', 'mean = 15 , standard deviation = 1', 1, 1, 3, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4489, 1083, 1163, 114, 'mean = 10 , standard deviation = 1', 'mean = 10 , standard deviation = 1', 0, 0, 4, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4490, 363, 1163, 114, 'mean = 15 , standard deviation = 6', 'mean = 15 , standard deviation = 6', 0, 0, 1, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4491, 359, 1164, 112, '2100', '2100', 1, 1, 3, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4492, 1081, 1164, 112, '8', '8', 0, 0, 4, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4493, 358, 1164, 112, '15', '15', 0, 0, 2, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4494, 357, 1164, 112, '10', '10', 0, 0, 1, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4495, 631, 1165, 203, 'MPEG', 'MPEG', 0, 0, 2, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4496, 632, 1165, 203, 'AVI', 'AVI', 1, 1, 3, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4497, 821, 1165, 203, 'MIDI', 'MIDI', 0, 0, 4, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4498, 630, 1165, 203, 'MP4', 'MP4', 0, 0, 1, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4499, 429, 1166, 136, 'creates a button control', 'creates a button control', 0, 0, 1, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4500, 430, 1166, 136, 'initializes a button control', 'initializes a button control', 0, 0, 2, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4501, 431, 1166, 136, 'instantiates button control', 'instantiates button control', 0, 0, 3, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4502, 1012, 1166, 136, 'a and c', 'a and c', 1, 1, 4, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4503, 369, 1167, 116, 'an odd function', 'an odd function', 0, 0, 1, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4504, 371, 1167, 116, 'neither odd nor even', 'neither odd nor even', 0, 0, 3, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4505, 1085, 1167, 116, 'even and odd', 'even and odd', 0, 0, 4, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4506, 370, 1167, 116, 'an even function', 'an even function', 1, 1, 2, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4507, 1005, 1168, 122, 'Assignment opeartors', 'Assignment opeartors', 0, 0, 4, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4508, 388, 1168, 122, 'Binary operators', 'Binary operators', 0, 0, 2, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4509, 387, 1168, 122, 'unary operators', 'unary operators', 1, 1, 1, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4510, 389, 1168, 122, 'Logical operators', 'Logical operators', 0, 0, 3, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4511, 259, 1169, 79, 'ALU', 'ALU', 0, 0, 2, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4512, 725, 1169, 79, 'Primary Storage', 'Primary Storage', 1, 1, 4, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4513, 258, 1169, 79, 'Control unit', 'Control unit', 0, 0, 1, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4514, 260, 1169, 79, 'Registers', 'Registers', 0, 0, 3, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4515, 906, 1170, 39, 'Not assigned', 'Not assigned', 0, 0, 4, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4516, 139, 1170, 39, '0', '0', 0, 0, 2, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4517, 140, 1170, 39, 'Depends upon the type of variable', 'Depends upon the type of variable', 1, 1, 3, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4518, 138, 1170, 39, 'null', 'null', 0, 0, 1, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4519, 172, 1171, 50, 'Thread returns to the waiting state.', 'Thread returns to the waiting state.', 0, 0, 2, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4520, 173, 1171, 50, 'Thread starts running.', 'Thread starts running.', 0, 0, 3, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4521, 171, 1171, 50, 'Thread returns to the ready state.', 'Thread returns to the ready state.', 1, 1, 1, '2019-09-02 03:21:05', '2019-09-02 03:26:36'),
(4522, 1004, 1172, 121, 'Assignment Operators', 'Assignment Operators', 0, 0, 4, '2019-09-02 03:21:05', '2019-09-02 03:26:37'),
(4523, 385, 1172, 121, 'Bitwise operators', 'Bitwise operators', 0, 0, 2, '2019-09-02 03:21:05', '2019-09-02 03:26:37'),
(4524, 384, 1172, 121, 'RElational operators', 'RElational operators', 0, 1, 1, '2019-09-02 03:21:05', '2019-09-02 03:26:37'),
(4525, 386, 1172, 121, 'Logical operators', 'Logical operators', 1, 0, 3, '2019-09-02 03:21:05', '2019-09-02 03:26:37'),
(4526, 987, 1173, 270, '35', '35', 1, 1, 1, '2019-09-02 03:21:05', '2019-09-02 03:26:37'),
(4527, 988, 1173, 270, '45', '45', 0, 0, 2, '2019-09-02 03:21:05', '2019-09-02 03:26:37'),
(4528, 989, 1173, 270, '25', '25', 0, 0, 3, '2019-09-02 03:21:05', '2019-09-02 03:26:37'),
(4529, 469, 1174, 149, '{1, 2, 5, 6}', '{1, 2, 5, 6}', 1, 1, 2, '2019-09-02 03:21:05', '2019-09-02 03:26:37'),
(4530, 468, 1174, 149, '{1, 2, 6, 1}', '{1, 2, 6, 1}', 0, 0, 1, '2019-09-02 03:21:05', '2019-09-02 03:26:37'),
(4531, 470, 1174, 149, '{1, 2, 1, 2}', '{1, 2, 1, 2}', 0, 0, 3, '2019-09-02 03:21:05', '2019-09-02 03:26:37'),
(4532, 937, 1174, 149, '{1, 5, 6, 3}', '{1, 5, 6, 3}', 0, 0, 4, '2019-09-02 03:21:05', '2019-09-02 03:26:37'),
(4533, 269, 1175, 82, '-7', '-7', 0, 0, 3, '2019-09-02 03:21:05', '2019-09-02 03:26:37'),
(4534, 722, 1175, 82, '22', '22', 0, 0, 4, '2019-09-02 03:21:05', '2019-09-02 03:26:37'),
(4535, 268, 1175, 82, '-9', '-9', 1, 1, 2, '2019-09-02 03:21:05', '2019-09-02 03:26:37'),
(4536, 267, 1175, 82, '-23', '-23', 0, 0, 1, '2019-09-02 03:21:05', '2019-09-02 03:26:37'),
(4537, 473, 1176, 150, '{2, 5}', '{2, 5}', 0, 0, 3, '2019-09-02 03:21:05', '2019-09-02 03:26:37'),
(4538, 471, 1176, 150, '{1, 2}', '{1, 2}', 1, 1, 1, '2019-09-02 03:21:05', '2019-09-02 03:26:37'),
(4539, 472, 1176, 150, '{5, 6}', '{5, 6}', 0, 0, 2, '2019-09-02 03:21:05', '2019-09-02 03:26:37'),
(4540, 938, 1176, 150, '{1, 6}', '{1, 6}', 0, 0, 4, '2019-09-02 03:21:05', '2019-09-02 03:26:37'),
(4541, 685, 1177, 219, 'Switch', 'Switch', 0, 0, 2, '2019-09-02 03:21:05', '2019-09-02 03:26:37'),
(4542, 686, 1177, 219, 'Modem', 'Modem', 1, 1, 3, '2019-09-02 03:21:05', '2019-09-02 03:26:37'),
(4543, 684, 1177, 219, 'Repeater', 'Repeater', 0, 0, 1, '2019-09-02 03:21:05', '2019-09-02 03:26:37'),
(4544, 710, 1177, 219, 'Wireless access point', 'Wireless access point', 0, 0, 4, '2019-09-02 03:21:05', '2019-09-02 03:26:37'),
(4545, 634, 1178, 204, 'Bluetooth', 'Bluetooth', 0, 0, 2, '2019-09-02 03:21:05', '2019-09-02 03:26:37'),
(4546, 822, 1178, 204, 'All of the choices', 'All of the choices', 1, 1, 4, '2019-09-02 03:21:05', '2019-09-02 03:26:37'),
(4547, 633, 1178, 204, 'Multitasking', 'Multitasking', 0, 0, 1, '2019-09-02 03:21:05', '2019-09-02 03:26:37'),
(4548, 635, 1178, 204, 'Video calling', 'Video calling', 0, 0, 3, '2019-09-02 03:21:05', '2019-09-02 03:26:37'),
(4549, 333, 1179, 104, '(x-7)<sup>2</sup> +8', '(x-7)<sup>2</sup> +8', 0, 0, 1, '2019-09-02 03:21:05', '2019-09-02 03:26:37'),
(4550, 335, 1179, 104, '(x+7)<sup>2</sup> -8', '(x+7)<sup>2</sup> -8', 0, 0, 3, '2019-09-02 03:21:05', '2019-09-02 03:26:37'),
(4551, 334, 1179, 104, '(x+5)<sup>2</sup> +16', '(x+5)<sup>2</sup> +16', 1, 1, 2, '2019-09-02 03:21:05', '2019-09-02 03:26:37'),
(4552, 1073, 1179, 104, '(x+5)<sup>2</sup> -16', '(x+5)<sup>2</sup> -16', 0, 0, 4, '2019-09-02 03:21:05', '2019-09-02 03:26:37'),
(4553, 917, 1180, 58, '1 2 3 4 5 6 7 8 9 10', '1 2 3 4 5 6 7 8 9 10', 0, 0, 4, '2019-09-02 03:21:05', '2019-09-02 03:26:37'),
(4554, 197, 1180, 58, '0 1 2 3 4 5 6 7 8 9', '0 1 2 3 4 5 6 7 8 9', 0, 0, 3, '2019-09-02 03:21:05', '2019-09-02 03:26:37'),
(4555, 196, 1180, 58, '1 3 5 7 9', '1 3 5 7 9', 0, 0, 2, '2019-09-02 03:21:05', '2019-09-02 03:26:37'),
(4556, 195, 1180, 58, '0 2 4 6 8', '0 2 4 6 8', 1, 1, 1, '2019-09-02 03:21:05', '2019-09-02 03:26:37'),
(4557, 1013, 1181, 137, 'Are Virtual', 'Are Virtual', 0, 0, 4, '2019-09-02 03:21:05', '2019-09-02 03:26:37'),
(4558, 432, 1181, 137, 'Override the parent class methods but maintain the implementation', 'Override the parent class methods but maintain the implementation', 0, 0, 1, '2019-09-02 03:21:05', '2019-09-02 03:26:37'),
(4559, 434, 1181, 137, 'Have different return types and arguments than the parent class', 'Have different return types and arguments than the parent class', 0, 0, 3, '2019-09-02 03:21:05', '2019-09-02 03:26:37'),
(4560, 433, 1181, 137, 'Maintain the same return type and arguments as the parent class, but implement it differently', 'Maintain the same return type and arguments as the parent class, but implement it differently', 1, 1, 2, '2019-09-02 03:21:05', '2019-09-02 03:26:37'),
(4561, 233, 1182, 70, '[[#img30]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/5CGn3NoMP2AFTNnuWdi3jGe97XfkU7ydkF3PldTA.png\" width=\"150\" height=\"150\" />', 0, 0, 3, '2019-09-02 03:21:05', '2019-09-02 03:26:37'),
(4562, 232, 1182, 70, '[[#img29]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/Cf9qY75IYjLpUVFWsICWK07cAwLtqRPDIO6JjLqT.png\" width=\"150\" height=\"150\" />', 0, 0, 2, '2019-09-02 03:21:05', '2019-09-02 03:26:37'),
(4563, 231, 1182, 70, '[[#img28]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/jkL1TWHhQQMAtCTbSz6HtJyZn8zhXmtgMQYX3Zpo.png\" width=\"150\" height=\"150\" />', 1, 1, 1, '2019-09-02 03:21:05', '2019-09-02 03:26:37'),
(4564, 680, 1182, 70, '[[#img31]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/VNrzOvOE3LpeuWi9ciBQDVlGrXxObvbfnI3kfNS4.png\" width=\"150\" height=\"150\" />', 0, 0, 4, '2019-09-02 03:21:05', '2019-09-02 03:26:37'),
(4565, 293, 1183, 90, 'kilobyte', 'kilobyte', 0, 0, 3, '2019-09-02 03:21:05', '2019-09-02 03:26:37'),
(4566, 291, 1183, 90, 'bit', 'bit', 0, 0, 1, '2019-09-02 03:21:05', '2019-09-02 03:26:37'),
(4567, 711, 1183, 90, 'megabyte', 'megabyte', 0, 0, 4, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4568, 292, 1183, 90, 'byte', 'byte', 1, 1, 2, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4569, 699, 1184, 223, '110011', '110011', 0, 0, 1, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4570, 700, 1184, 223, '100001', '100001', 0, 0, 2, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4571, 701, 1184, 223, '110100', '110100', 1, 1, 3, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4572, 718, 1184, 223, '100100', '100100', 0, 0, 4, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4573, 399, 1185, 126, 'CheckListBox control', 'CheckListBox control', 0, 0, 1, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4574, 400, 1185, 126, 'ListBox control', 'ListBox control', 1, 1, 2, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4575, 401, 1185, 126, 'TextBox control', 'TextBox control', 0, 0, 3, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4576, 453, 1186, 144, '10', '10', 0, 0, 1, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4577, 454, 1186, 144, '5', '5', 1, 1, 2, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4578, 455, 1186, 144, '3', '3', 0, 0, 3, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4579, 932, 1186, 144, '20', '20', 0, 0, 4, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4580, 449, 1187, 142, '{1, 2, 5, 9}', '{1, 2, 5, 9}', 0, 0, 3, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4581, 447, 1187, 142, '{1, 2, 3}', '{1, 2, 3}', 0, 0, 1, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4582, 448, 1187, 142, '{1, 3, 5, 7, 9}', '{1, 3, 5, 7, 9}', 1, 1, 2, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4583, 930, 1187, 142, '{1, 5, 7, 9, 11}', '{1, 5, 7, 9, 11}', 0, 0, 4, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4584, 141, 1188, 40, 'type.', 'type.', 1, 0, 1, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4585, 143, 1188, 40, 'Both of the above.', 'Both of the above.', 0, 1, 3, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4586, 142, 1188, 40, 'object.', 'object.', 0, 0, 2, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4587, 832, 1189, 214, 'Hybrid kernel', 'Hybrid kernel', 0, 0, 4, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4588, 664, 1189, 214, 'Windows kernel', 'Windows kernel', 0, 1, 2, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4589, 663, 1189, 214, 'Linux kernel', 'Linux kernel', 1, 0, 1, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4590, 665, 1189, 214, 'MAC kernel', 'MAC kernel', 0, 0, 3, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4591, 289, 1190, 89, 'Virtual memory', 'Virtual memory', 1, 1, 2, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4592, 288, 1190, 89, 'Virtual private network', 'Virtual private network', 0, 0, 1, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4593, 712, 1190, 89, 'None of them', 'None of them', 0, 0, 4, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4594, 290, 1190, 89, 'Virtual Machine', 'Virtual Machine', 0, 0, 3, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4595, 136, 1191, 38, 'It is followed by one or more catch blocks.', 'It is followed by one or more catch blocks.', 0, 0, 2, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4596, 135, 1191, 38, 'A try block identifies a block of code for which particular exceptions is activated.', 'A try block identifies a block of code for which particular exceptions is activated.', 0, 0, 1, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4597, 137, 1191, 38, 'A and B', 'A and B', 1, 1, 3, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4598, 379, 1192, 119, 'do while', 'do while', 0, 0, 2, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4599, 380, 1192, 119, 'while', 'while', 0, 0, 3, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4600, 1002, 1192, 119, 'for loop', 'for loop', 1, 1, 4, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4601, 378, 1192, 119, 'forEach loop', 'forEach loop', 0, 0, 1, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4602, 178, 1193, 52, '200', '200', 1, 0, 2, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4603, 179, 1193, 52, '400', '400', 0, 1, 3, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4604, 912, 1193, 52, '100', '100', 0, 0, 4, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4605, 177, 1193, 52, '12', '12', 0, 0, 1, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4606, 1105, 1194, 289, '7', '7', 1, 1, 2, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4607, 1104, 1194, 289, '5', '5', 0, 0, 1, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4608, 1106, 1194, 289, '6', '6', 0, 0, 3, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4609, 1107, 1194, 289, '8', '8', 0, 0, 4, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4610, 688, 1195, 220, 'scanner', 'scanner', 1, 0, 2, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4611, 687, 1195, 220, 'digital camera', 'digital camera', 0, 0, 1, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4612, 709, 1195, 220, 'RFID readers', 'RFID readers', 0, 1, 4, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4613, 689, 1195, 220, 'MICR', 'MICR', 0, 0, 3, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4614, 451, 1196, 143, 'Two', 'Two', 0, 0, 2, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4615, 452, 1196, 143, 'Zero', 'Zero', 0, 0, 3, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4616, 931, 1196, 143, 'Three', 'Three', 0, 0, 4, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4617, 450, 1196, 143, 'One', 'One', 1, 1, 1, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4618, 1032, 1197, 277, 'The code will compile without an error.', 'The code will compile without an error.', 1, 1, 4, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4619, 1031, 1197, 277, 'The code will generate an error because the finally block is placed immediately after the try block.', 'The code will generate an error because the finally block is placed immediately after the try block.', 0, 0, 3, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4620, 1030, 1197, 277, 'The code will generate an error because it lacks a throw statement.', 'The code will generate an error because it lacks a throw statement.', 0, 0, 2, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4621, 1029, 1197, 277, 'The code will generate an error because it lacks a catch block.', 'The code will generate an error because it lacks a catch block.', 0, 0, 1, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4622, 442, 1198, 140, 'Reference type', 'Reference type', 0, 0, 2, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4623, 1016, 1198, 140, 'Object', 'Object', 0, 1, 4, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4624, 443, 1198, 140, 'Variable', 'Variable', 1, 0, 3, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4625, 441, 1198, 140, 'Constant', 'Constant', 0, 0, 1, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4626, 252, 1199, 77, 'logic error', 'logic error', 1, 1, 1, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4627, 254, 1199, 77, 'run time error', 'run time error', 0, 0, 3, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4628, 727, 1199, 77, 'linker error', 'linker error', 0, 0, 4, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4629, 253, 1199, 77, 'syntax error', 'syntax error', 0, 0, 2, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4630, 408, 1200, 129, 'GroupBox control', 'GroupBox control', 0, 0, 1, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4631, 409, 1200, 129, 'LinkLabel control', 'LinkLabel control', 1, 1, 2, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4632, 410, 1200, 129, 'ListView Control', 'ListView Control', 0, 0, 3, '2019-09-02 03:21:06', '2019-09-02 03:26:37'),
(4633, 198, 1201, 59, '3', '3', 0, 0, 1, '2019-09-02 03:27:35', '2019-09-02 03:34:32'),
(4634, 200, 1201, 59, '6', '6', 0, 0, 3, '2019-09-02 03:27:35', '2019-09-02 03:34:32'),
(4635, 918, 1201, 59, '1', '1', 1, 1, 4, '2019-09-02 03:27:35', '2019-09-02 03:34:32'),
(4636, 199, 1201, 59, '0', '0', 0, 0, 2, '2019-09-02 03:27:35', '2019-09-02 03:34:32'),
(4637, 467, 1202, 148, '7', '7', 0, 0, 3, '2019-09-02 03:27:35', '2019-09-02 03:34:32'),
(4638, 465, 1202, 148, '8', '8', 1, 1, 1, '2019-09-02 03:27:35', '2019-09-02 03:34:32'),
(4639, 936, 1202, 148, '9', '9', 0, 0, 4, '2019-09-02 03:27:35', '2019-09-02 03:34:32'),
(4640, 466, 1202, 148, '6', '6', 0, 0, 2, '2019-09-02 03:27:35', '2019-09-02 03:34:32'),
(4641, 1032, 1203, 277, 'The code will compile without an error.', 'The code will compile without an error.', 1, 1, 4, '2019-09-02 03:27:36', '2019-09-02 03:34:32'),
(4642, 1029, 1203, 277, 'The code will generate an error because it lacks a catch block.', 'The code will generate an error because it lacks a catch block.', 0, 0, 1, '2019-09-02 03:27:36', '2019-09-02 03:34:32'),
(4643, 1031, 1203, 277, 'The code will generate an error because the finally block is placed immediately after the try block.', 'The code will generate an error because the finally block is placed immediately after the try block.', 0, 0, 3, '2019-09-02 03:27:36', '2019-09-02 03:34:32'),
(4644, 1030, 1203, 277, 'The code will generate an error because it lacks a throw statement.', 'The code will generate an error because it lacks a throw statement.', 0, 0, 2, '2019-09-02 03:27:36', '2019-09-02 03:34:32'),
(4645, 1054, 1204, 283, 'Set the CausesValidation property of the text box to true.', 'Set the CausesValidation property of the text box to true.', 0, 0, 2, '2019-09-02 03:27:36', '2019-09-02 03:34:32'),
(4646, 1055, 1204, 283, 'Set the CausesValidation property of the Help button to false.', 'Set the CausesValidation property of the Help button to false.', 1, 0, 3, '2019-09-02 03:27:36', '2019-09-02 03:34:32'),
(4647, 1053, 1204, 283, 'Set the CausesValidation property of the text box to false.', 'Set the CausesValidation property of the text box to false.', 0, 1, 1, '2019-09-02 03:27:36', '2019-09-02 03:34:32'),
(4648, 1056, 1204, 283, 'Set the CausesValidation property of the Help button to true.', 'Set the CausesValidation property of the Help button to true.', 0, 0, 4, '2019-09-02 03:27:36', '2019-09-02 03:34:32'),
(4649, 935, 1205, 147, 'Empty', 'Empty', 0, 0, 4, '2019-09-02 03:27:36', '2019-09-02 03:34:32'),
(4650, 463, 1205, 147, 'Finite', 'Finite', 0, 0, 2, '2019-09-02 03:27:36', '2019-09-02 03:34:32'),
(4651, 464, 1205, 147, 'Subset', 'Subset', 0, 0, 3, '2019-09-02 03:27:36', '2019-09-02 03:34:32'),
(4652, 462, 1205, 147, 'Infinite', 'Infinite', 1, 1, 1, '2019-09-02 03:27:36', '2019-09-02 03:34:32'),
(4653, 143, 1206, 40, 'Both of the above.', 'Both of the above.', 0, 0, 3, '2019-09-02 03:27:36', '2019-09-02 03:34:32'),
(4654, 142, 1206, 40, 'object.', 'object.', 0, 1, 2, '2019-09-02 03:27:36', '2019-09-02 03:34:32'),
(4655, 141, 1206, 40, 'type.', 'type.', 1, 0, 1, '2019-09-02 03:27:36', '2019-09-02 03:34:32'),
(4656, 252, 1207, 77, 'logic error', 'logic error', 1, 1, 1, '2019-09-02 03:27:36', '2019-09-02 03:34:32'),
(4657, 254, 1207, 77, 'run time error', 'run time error', 0, 0, 3, '2019-09-02 03:27:36', '2019-09-02 03:34:32'),
(4658, 727, 1207, 77, 'linker error', 'linker error', 0, 0, 4, '2019-09-02 03:27:36', '2019-09-02 03:34:32'),
(4659, 253, 1207, 77, 'syntax error', 'syntax error', 0, 0, 2, '2019-09-02 03:27:36', '2019-09-02 03:34:32'),
(4660, 432, 1208, 137, 'Override the parent class methods but maintain the implementation', 'Override the parent class methods but maintain the implementation', 0, 0, 1, '2019-09-02 03:27:36', '2019-09-02 03:34:32'),
(4661, 434, 1208, 137, 'Have different return types and arguments than the parent class', 'Have different return types and arguments than the parent class', 0, 0, 3, '2019-09-02 03:27:36', '2019-09-02 03:34:32'),
(4662, 433, 1208, 137, 'Maintain the same return type and arguments as the parent class, but implement it differently', 'Maintain the same return type and arguments as the parent class, but implement it differently', 1, 0, 2, '2019-09-02 03:27:36', '2019-09-02 03:34:32'),
(4663, 1013, 1208, 137, 'Are Virtual', 'Are Virtual', 0, 1, 4, '2019-09-02 03:27:36', '2019-09-02 03:34:32'),
(4664, 1034, 1209, 278, 'Message1\nMessage2\nMessage3\nMessage4', 'Message1<br />\nMessage2<br />\nMessage3<br />\nMessage4', 0, 0, 2, '2019-09-02 03:27:36', '2019-09-02 03:34:32'),
(4665, 1033, 1209, 278, 'Message1\nMessage4', 'Message1<br />\nMessage4', 0, 0, 1, '2019-09-02 03:27:36', '2019-09-02 03:34:32'),
(4666, 1036, 1209, 278, 'Message1\nMessage3\nMessage2\nMessage4', 'Message1<br />\nMessage3<br />\nMessage2<br />\nMessage4', 0, 1, 4, '2019-09-02 03:27:36', '2019-09-02 03:34:32'),
(4667, 1035, 1209, 278, 'Message1\nMessage3\nMessage4', 'Message1<br />\nMessage3<br />\nMessage4', 1, 0, 3, '2019-09-02 03:27:36', '2019-09-02 03:34:32'),
(4668, 313, 1210, 97, '7 - 3i', '7 - 3i', 0, 0, 2, '2019-09-02 03:27:36', '2019-09-02 03:34:32'),
(4669, 1066, 1210, 97, '3i - 10', '3i - 10', 0, 1, 4, '2019-09-02 03:27:36', '2019-09-02 03:34:32'),
(4670, 314, 1210, 97, 'i - 12', 'i - 12', 1, 0, 3, '2019-09-02 03:27:36', '2019-09-02 03:34:32'),
(4671, 312, 1210, 97, 'i - 5', 'i - 5', 0, 0, 1, '2019-09-02 03:27:36', '2019-09-02 03:34:32'),
(4672, 1009, 1211, 132, 'While', 'While', 0, 0, 4, '2019-09-02 03:27:36', '2019-09-02 03:34:32'),
(4673, 417, 1211, 132, 'If', 'If', 0, 1, 1, '2019-09-02 03:27:36', '2019-09-02 03:34:32'),
(4674, 418, 1211, 132, 'Switch', 'Switch', 1, 0, 2, '2019-09-02 03:27:36', '2019-09-02 03:34:32'),
(4675, 419, 1211, 132, 'For', 'For', 0, 0, 3, '2019-09-02 03:27:36', '2019-09-02 03:34:32'),
(4676, 404, 1212, 127, 'Button control', 'Button control', 1, 1, 3, '2019-09-02 03:27:36', '2019-09-02 03:34:32'),
(4677, 402, 1212, 127, 'Radio Button', 'Radio Button', 0, 0, 1, '2019-09-02 03:27:36', '2019-09-02 03:34:32'),
(4678, 403, 1212, 127, 'Textbox control', 'Textbox control', 0, 0, 2, '2019-09-02 03:27:36', '2019-09-02 03:34:32'),
(4679, 456, 1213, 145, '{(1, a), (1, b), (2, a), (b, b)}', '{(1, a), (1, b), (2, a), (b, b)}', 0, 0, 1, '2019-09-02 03:27:36', '2019-09-02 03:34:32'),
(4680, 458, 1213, 145, '{(1, a), (2, a), (1, b), (2, b)}', '{(1, a), (2, a), (1, b), (2, b)}', 1, 1, 3, '2019-09-02 03:27:36', '2019-09-02 03:34:32'),
(4681, 933, 1213, 145, '{(1, 1), (a, a), (2, a), (1, b)}', '{(1, 1), (a, a), (2, a), (1, b)}', 0, 0, 4, '2019-09-02 03:27:36', '2019-09-02 03:34:32'),
(4682, 457, 1213, 145, '{(1, 1), (2, 2), (a, a), (b, b)}', '{(1, 1), (2, 2), (a, a), (b, b)}', 0, 0, 2, '2019-09-02 03:27:36', '2019-09-02 03:34:32'),
(4683, 948, 1214, 160, 'B', 'B', 0, 0, 4, '2019-09-02 03:27:36', '2019-09-02 03:34:32'),
(4684, 503, 1214, 160, 'A ∩ B', 'A ∩ B', 0, 0, 3, '2019-09-02 03:27:36', '2019-09-02 03:34:32'),
(4685, 501, 1214, 160, 'A‘ (Complement of A)', 'A‘ (Complement of A)', 0, 0, 1, '2019-09-02 03:27:36', '2019-09-02 03:34:32'),
(4686, 502, 1214, 160, 'A U B -B', 'A U B -B', 1, 1, 2, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4687, 1023, 1215, 275, 'Several catch blocks within one try block, arranged starting with the most specific exception and ending with Exception.', 'Several catch blocks within one try block, arranged starting with the most specific exception and ending with Exception.', 1, 1, 3, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4688, 1021, 1215, 275, 'Only one catch block for each try block.', 'Only one catch block for each try block.', 0, 0, 1, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4689, 1024, 1215, 275, 'The catch blocks should be used only when a finally block is not used.', 'The catch blocks should be used only when a finally block is not used.', 0, 0, 4, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4690, 1022, 1215, 275, 'Several catch blocks for a try block, arranged in order starting with Exception and ending with the most specific exception.', 'Several catch blocks for a try block, arranged in order starting with Exception and ending with the most specific exception.', 0, 0, 2, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4691, 231, 1216, 70, '[[#img28]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/jkL1TWHhQQMAtCTbSz6HtJyZn8zhXmtgMQYX3Zpo.png\" width=\"150\" height=\"150\" />', 1, 1, 1, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4692, 233, 1216, 70, '[[#img30]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/5CGn3NoMP2AFTNnuWdi3jGe97XfkU7ydkF3PldTA.png\" width=\"150\" height=\"150\" />', 0, 0, 3, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4693, 680, 1216, 70, '[[#img31]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/VNrzOvOE3LpeuWi9ciBQDVlGrXxObvbfnI3kfNS4.png\" width=\"150\" height=\"150\" />', 0, 0, 4, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4694, 232, 1216, 70, '[[#img29]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/Cf9qY75IYjLpUVFWsICWK07cAwLtqRPDIO6JjLqT.png\" width=\"150\" height=\"150\" />', 0, 0, 2, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4695, 907, 1217, 42, 'private', 'private', 0, 0, 4, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4696, 148, 1217, 42, 'Boolean', 'Boolean', 1, 1, 2, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4697, 147, 1217, 42, 'static', 'static', 0, 0, 1, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4698, 149, 1217, 42, 'void', 'void', 0, 0, 3, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4699, 399, 1218, 126, 'CheckListBox control', 'CheckListBox control', 0, 0, 1, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4700, 400, 1218, 126, 'ListBox control', 'ListBox control', 1, 1, 2, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4701, 401, 1218, 126, 'TextBox control', 'TextBox control', 0, 0, 3, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4702, 288, 1219, 89, 'Virtual private network', 'Virtual private network', 0, 0, 1, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4703, 712, 1219, 89, 'None of them', 'None of them', 0, 0, 4, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4704, 289, 1219, 89, 'Virtual memory', 'Virtual memory', 1, 1, 2, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4705, 290, 1219, 89, 'Virtual Machine', 'Virtual Machine', 0, 0, 3, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4706, 389, 1220, 122, 'Logical operators', 'Logical operators', 0, 0, 3, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4707, 1005, 1220, 122, 'Assignment opeartors', 'Assignment opeartors', 0, 0, 4, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4708, 388, 1220, 122, 'Binary operators', 'Binary operators', 0, 0, 2, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4709, 387, 1220, 122, 'unary operators', 'unary operators', 1, 1, 1, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4710, 245, 1221, 74, 'Computer', 'Computer', 1, 1, 3, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4711, 730, 1221, 74, 'CPU', 'CPU', 0, 0, 4, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4712, 243, 1221, 74, 'Operating System', 'Operating System', 0, 0, 1, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4713, 244, 1221, 74, 'Motherboard', 'Motherboard', 0, 0, 2, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4714, 825, 1222, 207, 'Application data bridge', 'Application data bridge', 0, 0, 4, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4715, 644, 1222, 207, 'Android data bridge', 'Android data bridge', 0, 1, 3, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4716, 642, 1222, 207, 'Android Debug Bridge', 'Android Debug Bridge', 1, 0, 1, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4717, 643, 1222, 207, 'Application Debug Bridge', 'Application Debug Bridge', 0, 0, 2, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4718, 365, 1223, 114, 'mean = 15 , standard deviation = 1', 'mean = 15 , standard deviation = 1', 1, 1, 3, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4719, 364, 1223, 114, 'mean = 10 , standard deviation = 6', 'mean = 10 , standard deviation = 6', 0, 0, 2, '2019-09-02 03:27:36', '2019-09-02 03:34:33');
INSERT INTO `answer_sheet_test_question_choices` (`id`, `choice_id`, `answer_sheet_test_question_id`, `test_question_id`, `body`, `body_html`, `is_correct`, `is_selected`, `pos_order`, `created_at`, `updated_at`) VALUES
(4720, 363, 1223, 114, 'mean = 15 , standard deviation = 6', 'mean = 15 , standard deviation = 6', 0, 0, 1, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4721, 1083, 1223, 114, 'mean = 10 , standard deviation = 1', 'mean = 10 , standard deviation = 1', 0, 0, 4, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4722, 832, 1224, 214, 'Hybrid kernel', 'Hybrid kernel', 0, 0, 4, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4723, 663, 1224, 214, 'Linux kernel', 'Linux kernel', 1, 1, 1, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4724, 664, 1224, 214, 'Windows kernel', 'Windows kernel', 0, 0, 2, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4725, 665, 1224, 214, 'MAC kernel', 'MAC kernel', 0, 0, 3, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4726, 251, 1225, 76, 'virtual memory', 'virtual memory', 0, 0, 3, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4727, 249, 1225, 76, 'spooling', 'spooling', 0, 0, 1, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4728, 728, 1225, 76, 'back up', 'back up', 1, 1, 4, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4729, 250, 1225, 76, 'buffering', 'buffering', 0, 0, 2, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4730, 487, 1226, 155, '5', '5', 0, 0, 2, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4731, 488, 1226, 155, '6', '6', 0, 0, 3, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4732, 943, 1226, 155, '7', '7', 0, 0, 4, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4733, 486, 1226, 155, '4', '4', 1, 1, 1, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4734, 196, 1227, 58, '1 3 5 7 9', '1 3 5 7 9', 0, 0, 2, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4735, 197, 1227, 58, '0 1 2 3 4 5 6 7 8 9', '0 1 2 3 4 5 6 7 8 9', 0, 0, 3, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4736, 195, 1227, 58, '0 2 4 6 8', '0 2 4 6 8', 1, 1, 1, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4737, 917, 1227, 58, '1 2 3 4 5 6 7 8 9 10', '1 2 3 4 5 6 7 8 9 10', 0, 0, 4, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4738, 447, 1228, 142, '{1, 2, 3}', '{1, 2, 3}', 0, 0, 1, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4739, 930, 1228, 142, '{1, 5, 7, 9, 11}', '{1, 5, 7, 9, 11}', 0, 0, 4, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4740, 448, 1228, 142, '{1, 3, 5, 7, 9}', '{1, 3, 5, 7, 9}', 1, 1, 2, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4741, 449, 1228, 142, '{1, 2, 5, 9}', '{1, 2, 5, 9}', 0, 0, 3, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4742, 1090, 1229, 285, '4 π', '4 π', 0, 0, 3, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4743, 1089, 1229, 285, '2 π', '2 π', 0, 0, 2, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4744, 1088, 1229, 285, '4 π <sup>2</sup>', '4 π <sup>2</sup>', 0, 0, 1, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4745, 1091, 1229, 285, 'π', 'π', 1, 1, 4, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4746, 2, 1230, 1, 'x = 4', 'x = 4', 0, 0, 2, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4747, 3, 1230, 1, 'x = 2', 'x = 2', 0, 0, 3, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4748, 1, 1230, 1, 'x = 1', 'x = 1', 1, 1, 1, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4749, 221, 1231, 66, '199', '199', 0, 0, 3, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4750, 219, 1231, 66, '121', '121', 0, 0, 1, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4751, 676, 1231, 66, '212', '212', 0, 0, 4, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4752, 220, 1231, 66, '163', '163', 1, 1, 2, '2019-09-02 03:27:36', '2019-09-02 03:34:33'),
(4753, 878, 1232, 252, 'A mandatory class in android', 'A mandatory class in android', 0, 0, 3, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4754, 876, 1232, 252, 'A class used to hold states and objects', 'A class used to hold states and objects', 1, 1, 1, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4755, 877, 1232, 252, 'A bean class can be passed from one activity to another.', 'A bean class can be passed from one activity to another.', 0, 0, 2, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4756, 879, 1232, 252, 'None of the above', 'None of the above', 0, 0, 4, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4757, 282, 1233, 87, 'fetch, execute, store and decode', 'fetch, execute, store and decode', 0, 0, 1, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4758, 283, 1233, 87, 'decode, execute, store and fetch', 'decode, execute, store and fetch', 0, 0, 2, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4759, 715, 1233, 87, 'fetch, decode, execute and store', 'fetch, decode, execute and store', 1, 1, 4, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4760, 284, 1233, 87, 'decode, fetch, store and execute', 'decode, fetch, store and execute', 0, 0, 3, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4761, 370, 1234, 116, 'an even function', 'an even function', 1, 1, 2, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4762, 371, 1234, 116, 'neither odd nor even', 'neither odd nor even', 0, 0, 3, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4763, 1085, 1234, 116, 'even and odd', 'even and odd', 0, 0, 4, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4764, 369, 1234, 116, 'an odd function', 'an odd function', 0, 0, 1, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4765, 841, 1235, 243, 'X.style', 'X.style', 0, 0, 2, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4766, 840, 1235, 243, 'R.style', 'R.style', 1, 1, 1, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4767, 843, 1235, 243, 'application', 'application', 0, 0, 4, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4768, 842, 1235, 243, 'manifest.XML', 'manifest.XML', 0, 0, 3, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4769, 679, 1236, 68, '[[#img26]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/tBuCNpani0PgWIFN01ztVOAj4FS4CBDAiTW9J8lB.png\" width=\"150\" height=\"150\" />', 0, 0, 4, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4770, 225, 1236, 68, '[[#img23]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/IyLDJJaUUQ0aIZOMyEjh4JO72W4HpXtPj2CfMKZL.png\" width=\"150\" height=\"150\" />', 1, 1, 1, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4771, 227, 1236, 68, '[[#img25]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/rDh656ehodyPQmn7CxxjGK2H29sx2bh6LDz9INfN.png\" width=\"150\" height=\"150\" />', 0, 0, 3, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4772, 226, 1236, 68, '[[#img24]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/nVLwXww7AT2RBfzhH1tPQMxdLPF1iWuunHzErZRh.png\" width=\"150\" height=\"150\" />', 0, 0, 2, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4773, 1095, 1237, 286, '0', '0', 0, 0, 4, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4774, 1093, 1237, 286, '0.478', '0.478', 0, 0, 2, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4775, 1092, 1237, 286, '0.057', '0.057', 1, 1, 1, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4776, 1094, 1237, 286, '0.001', '0.001', 0, 0, 3, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4777, 860, 1238, 248, 'To send the data from an application to another application', 'To send the data from an application to another application', 0, 0, 1, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4778, 862, 1238, 248, 'To share the data between applications', 'To share the data between applications', 1, 1, 3, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4779, 861, 1238, 248, 'To store the data in a database', 'To store the data in a database', 0, 0, 2, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4780, 863, 1238, 248, 'none of the choices', 'none of the choices', 0, 0, 4, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4781, 165, 1239, 48, 'JRE is a java based GUI application.', 'JRE is a java based GUI application.', 0, 0, 1, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4782, 167, 1239, 48, 'JRE is an implementation of the Java Virtual Machine which executes Java programs.', 'JRE is an implementation of the Java Virtual Machine which executes Java programs.', 1, 1, 3, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4783, 166, 1239, 48, 'JRE is an application development framework.', 'JRE is an application development framework.', 0, 0, 2, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4784, 179, 1240, 52, '400', '400', 0, 0, 3, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4785, 177, 1240, 52, '12', '12', 0, 0, 1, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4786, 178, 1240, 52, '200', '200', 1, 1, 2, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4787, 912, 1240, 52, '100', '100', 0, 0, 4, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4788, 932, 1241, 144, '20', '20', 0, 0, 4, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4789, 454, 1241, 144, '5', '5', 1, 1, 2, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4790, 455, 1241, 144, '3', '3', 0, 0, 3, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4791, 453, 1241, 144, '10', '10', 0, 0, 1, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4792, 700, 1242, 223, '100001', '100001', 0, 0, 2, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4793, 699, 1242, 223, '110011', '110011', 0, 0, 1, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4794, 718, 1242, 223, '100100', '100100', 0, 0, 4, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4795, 701, 1242, 223, '110100', '110100', 1, 1, 3, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4796, 1004, 1243, 121, 'Assignment Operators', 'Assignment Operators', 0, 0, 4, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4797, 384, 1243, 121, 'RElational operators', 'RElational operators', 0, 0, 1, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4798, 385, 1243, 121, 'Bitwise operators', 'Bitwise operators', 0, 0, 2, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4799, 386, 1243, 121, 'Logical operators', 'Logical operators', 1, 1, 3, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4800, 1107, 1244, 289, '8', '8', 0, 0, 4, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4801, 1106, 1244, 289, '6', '6', 0, 0, 3, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4802, 1105, 1244, 289, '7', '7', 1, 1, 2, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4803, 1104, 1244, 289, '5', '5', 0, 0, 1, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4804, 944, 1245, 156, 'None of the choices', 'None of the choices', 0, 0, 4, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4805, 490, 1245, 156, '8, 12', '8, 12', 1, 1, 2, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4806, 491, 1245, 156, '4, 12', '4, 12', 0, 0, 3, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4807, 489, 1245, 156, '4, 8', '4, 8', 0, 0, 1, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4808, 120, 1246, 33, 'ToDecimal', 'ToDecimal', 0, 0, 1, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4809, 901, 1246, 33, 'ToInt32', 'ToInt32', 0, 0, 4, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4810, 121, 1246, 33, 'ToDouble', 'ToDouble', 1, 1, 2, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4811, 122, 1246, 33, 'ToInt16', 'ToInt16', 0, 0, 3, '2019-09-02 03:27:37', '2019-09-02 03:34:33'),
(4812, 638, 1247, 205, 'WiFi driver', 'WiFi driver', 1, 1, 3, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4813, 823, 1247, 205, 'Bluetooth driver', 'Bluetooth driver', 0, 0, 4, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4814, 636, 1247, 205, 'Device Driver', 'Device Driver', 0, 0, 1, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4815, 637, 1247, 205, 'Video Driver', 'Video Driver', 0, 0, 2, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4816, 685, 1248, 219, 'Switch', 'Switch', 0, 0, 2, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4817, 710, 1248, 219, 'Wireless access point', 'Wireless access point', 0, 0, 4, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4818, 684, 1248, 219, 'Repeater', 'Repeater', 0, 0, 1, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4819, 686, 1248, 219, 'Modem', 'Modem', 1, 1, 3, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4820, 1002, 1249, 119, 'for loop', 'for loop', 1, 1, 4, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4821, 379, 1249, 119, 'do while', 'do while', 0, 0, 2, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4822, 378, 1249, 119, 'forEach loop', 'forEach loop', 0, 0, 1, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4823, 380, 1249, 119, 'while', 'while', 0, 0, 3, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4824, 951, 1250, 260, '35', '35', 1, 1, 1, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4825, 953, 1250, 260, '30', '30', 0, 0, 3, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4826, 952, 1250, 260, '20', '20', 0, 0, 2, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4827, 954, 1250, 260, '10', '10', 0, 0, 4, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4828, 298, 1251, 92, 'x > 1', 'x > 1', 0, 0, 2, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4829, 297, 1251, 92, 'x < 6', 'x < 6', 0, 0, 1, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4830, 1061, 1251, 92, 'x > 6', 'x > 6', 0, 0, 4, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4831, 299, 1251, 92, 'x < -1', 'x < -1', 1, 1, 3, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4832, 345, 1252, 108, '1 846 000', '1 846 000', 1, 0, 1, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4833, 346, 1252, 108, '1 852 000', '1 852 000', 0, 1, 2, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4834, 347, 1252, 108, '1 000 000', '1 000 000', 0, 0, 3, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4835, 1077, 1252, 108, '1 500 000', '1 500 000', 0, 0, 4, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4836, 194, 1253, 57, 'Both Row and Column', 'Both Row and Column', 0, 0, 3, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4837, 192, 1253, 57, 'Row', 'Row', 1, 0, 1, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4838, 193, 1253, 57, 'Column', 'Column', 0, 1, 2, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4839, 507, 1254, 162, 'n(A U B)=0', 'n(A U B)=0', 0, 0, 1, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4840, 509, 1254, 162, 'n( A U B U C)=90', 'n( A U B U C)=90', 0, 0, 3, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4841, 950, 1254, 162, 'All of the mentioned', 'All of the mentioned', 1, 1, 4, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4842, 508, 1254, 162, 'n( B U C)=0', 'n( B U C)=0', 0, 0, 2, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4843, 631, 1255, 203, 'MPEG', 'MPEG', 0, 0, 2, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4844, 632, 1255, 203, 'AVI', 'AVI', 1, 0, 3, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4845, 630, 1255, 203, 'MP4', 'MP4', 0, 0, 1, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4846, 821, 1255, 203, 'MIDI', 'MIDI', 0, 1, 4, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4847, 144, 1256, 41, 'public static int main(String[] args)', 'public static int main(String[] args)', 0, 0, 1, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4848, 146, 1256, 41, 'public static void main(String[] args)', 'public static void main(String[] args)', 1, 1, 3, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4849, 145, 1256, 41, 'public int main(String[] args)', 'public int main(String[] args)', 0, 0, 2, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4850, 920, 1257, 61, 'first generation memory', 'first generation memory', 0, 0, 4, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4851, 204, 1257, 61, 'heap space', 'heap space', 1, 1, 1, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4852, 206, 1257, 61, 'heap space and stack space', 'heap space and stack space', 0, 0, 3, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4853, 205, 1257, 61, 'stack space', 'stack space', 0, 0, 2, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4854, 358, 1258, 112, '15', '15', 0, 0, 2, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4855, 1081, 1258, 112, '8', '8', 0, 0, 4, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4856, 357, 1258, 112, '10', '10', 0, 0, 1, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4857, 359, 1258, 112, '2100', '2100', 1, 1, 3, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4858, 393, 1259, 124, 'Reference type', 'Reference type', 1, 1, 1, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4859, 1007, 1259, 124, 'Explicit Types', 'Explicit Types', 0, 0, 4, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4860, 394, 1259, 124, 'Value types', 'Value types', 0, 0, 2, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4861, 395, 1259, 124, 'Data Type', 'Data Type', 0, 0, 3, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4862, 732, 1260, 72, 'Disk optimization software', 'Disk optimization software', 0, 0, 4, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4863, 238, 1260, 72, 'Utility software', 'Utility software', 1, 1, 2, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4864, 237, 1260, 72, 'Operating system software', 'Operating system software', 0, 0, 1, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4865, 239, 1260, 72, 'Anti-virus software', 'Anti-virus software', 0, 0, 3, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4866, 635, 1261, 204, 'Video calling', 'Video calling', 0, 0, 3, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4867, 634, 1261, 204, 'Bluetooth', 'Bluetooth', 0, 0, 2, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4868, 633, 1261, 204, 'Multitasking', 'Multitasking', 0, 0, 1, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4869, 822, 1261, 204, 'All of the choices', 'All of the choices', 1, 1, 4, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4870, 334, 1262, 104, '(x+5)<sup>2</sup> +16', '(x+5)<sup>2</sup> +16', 1, 1, 2, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4871, 333, 1262, 104, '(x-7)<sup>2</sup> +8', '(x-7)<sup>2</sup> +8', 0, 0, 1, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4872, 1073, 1262, 104, '(x+5)<sup>2</sup> -16', '(x+5)<sup>2</sup> -16', 0, 0, 4, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4873, 335, 1262, 104, '(x+7)<sup>2</sup> -8', '(x+7)<sup>2</sup> -8', 0, 0, 3, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4874, 441, 1263, 140, 'Constant', 'Constant', 0, 0, 1, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4875, 443, 1263, 140, 'Variable', 'Variable', 1, 1, 3, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4876, 442, 1263, 140, 'Reference type', 'Reference type', 0, 0, 2, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4877, 1016, 1263, 140, 'Object', 'Object', 0, 0, 4, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4878, 978, 1264, 267, 'smallest previous integer', 'smallest previous integer', 0, 0, 1, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4879, 980, 1264, 267, 'smallest following integer', 'smallest following integer', 0, 0, 3, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4880, 979, 1264, 267, 'greatest previous integer', 'greatest previous integer', 1, 1, 2, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4881, 1014, 1265, 138, 'a and b', 'a and b', 0, 0, 4, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4882, 436, 1265, 138, 'Catches', 'Catches', 0, 0, 2, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4883, 435, 1265, 138, 'Trys', 'Trys', 0, 0, 1, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4884, 437, 1265, 138, 'Throws', 'Throws', 1, 1, 3, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4885, 135, 1266, 38, 'A try block identifies a block of code for which particular exceptions is activated.', 'A try block identifies a block of code for which particular exceptions is activated.', 0, 0, 1, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4886, 136, 1266, 38, 'It is followed by one or more catch blocks.', 'It is followed by one or more catch blocks.', 0, 0, 2, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4887, 137, 1266, 38, 'A and B', 'A and B', 1, 1, 3, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4888, 256, 1267, 78, 'Unicode', 'Unicode', 1, 1, 2, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4889, 726, 1267, 78, 'ANSI', 'ANSI', 0, 0, 4, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4890, 255, 1267, 78, 'ASCII', 'ASCII', 0, 0, 1, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4891, 257, 1267, 78, 'EBCDIC', 'EBCDIC', 0, 0, 3, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4892, 269, 1268, 82, '-7', '-7', 0, 0, 3, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4893, 268, 1268, 82, '-9', '-9', 1, 1, 2, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4894, 267, 1268, 82, '-23', '-23', 0, 0, 1, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4895, 722, 1268, 82, '22', '22', 0, 0, 4, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4896, 293, 1269, 90, 'kilobyte', 'kilobyte', 0, 0, 3, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4897, 711, 1269, 90, 'megabyte', 'megabyte', 0, 0, 4, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4898, 291, 1269, 90, 'bit', 'bit', 0, 0, 1, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4899, 292, 1269, 90, 'byte', 'byte', 1, 1, 2, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4900, 845, 1270, 244, 'updates()', 'updates()', 0, 0, 2, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4901, 846, 1270, 244, 'commit()', 'commit()', 0, 0, 3, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4902, 844, 1270, 244, 'commitUpdates()', 'commitUpdates()', 1, 1, 1, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4903, 847, 1270, 244, 'none of these', 'none of these', 0, 0, 4, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4904, 658, 1271, 212, 'Google', 'Google', 1, 1, 2, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4905, 830, 1271, 212, 'No company', 'No company', 0, 0, 4, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4906, 657, 1271, 212, 'Apple', 'Apple', 0, 0, 1, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4907, 659, 1271, 212, 'Nokia', 'Nokia', 0, 0, 3, '2019-09-02 03:27:37', '2019-09-02 03:34:34'),
(4908, 118, 1272, 32, 'as', 'as', 0, 0, 2, '2019-09-02 03:27:38', '2019-09-02 03:34:34'),
(4909, 119, 1272, 32, 'foreach', 'foreach', 0, 0, 3, '2019-09-02 03:27:38', '2019-09-02 03:34:34'),
(4910, 117, 1272, 32, 'abstract', 'abstract', 0, 0, 1, '2019-09-02 03:27:38', '2019-09-02 03:34:34'),
(4911, 900, 1272, 32, 'All of the choices', 'All of the choices', 1, 1, 4, '2019-09-02 03:27:38', '2019-09-02 03:34:34'),
(4912, 361, 1273, 113, '3!', '3!', 1, 1, 2, '2019-09-02 03:27:38', '2019-09-02 03:34:34'),
(4913, 360, 1273, 113, '5!', '5!', 0, 0, 1, '2019-09-02 03:27:38', '2019-09-02 03:34:34'),
(4914, 362, 1273, 113, '2!', '2!', 0, 0, 3, '2019-09-02 03:27:38', '2019-09-02 03:34:34'),
(4915, 1082, 1273, 113, '3! * 2!', '3! * 2!', 0, 0, 4, '2019-09-02 03:27:38', '2019-09-02 03:34:34'),
(4916, 687, 1274, 220, 'digital camera', 'digital camera', 0, 0, 1, '2019-09-02 03:27:38', '2019-09-02 03:34:34'),
(4917, 688, 1274, 220, 'scanner', 'scanner', 1, 1, 2, '2019-09-02 03:27:38', '2019-09-02 03:34:34'),
(4918, 709, 1274, 220, 'RFID readers', 'RFID readers', 0, 0, 4, '2019-09-02 03:27:38', '2019-09-02 03:34:34'),
(4919, 689, 1274, 220, 'MICR', 'MICR', 0, 0, 3, '2019-09-02 03:27:38', '2019-09-02 03:34:34'),
(4920, 885, 1275, 254, 'Cookies management', 'Cookies management', 0, 0, 2, '2019-09-02 03:27:38', '2019-09-02 03:34:34'),
(4921, 887, 1275, 254, 'None of the above', 'None of the above', 0, 1, 4, '2019-09-02 03:27:38', '2019-09-02 03:34:34'),
(4922, 886, 1275, 254, 'Authentication management', 'Authentication management', 0, 0, 3, '2019-09-02 03:27:38', '2019-09-02 03:34:34'),
(4923, 884, 1275, 254, 'httprequest(get/post) and returns response from the server', 'httprequest(get/post) and returns response from the server', 1, 0, 1, '2019-09-02 03:27:38', '2019-09-02 03:34:34'),
(4924, 725, 1276, 79, 'Primary Storage', 'Primary Storage', 1, 1, 4, '2019-09-02 03:27:38', '2019-09-02 03:34:34'),
(4925, 259, 1276, 79, 'ALU', 'ALU', 0, 0, 2, '2019-09-02 03:27:38', '2019-09-02 03:34:34'),
(4926, 260, 1276, 79, 'Registers', 'Registers', 0, 0, 3, '2019-09-02 03:27:38', '2019-09-02 03:34:34'),
(4927, 258, 1276, 79, 'Control unit', 'Control unit', 0, 0, 1, '2019-09-02 03:27:38', '2019-09-02 03:34:34'),
(4928, 172, 1277, 50, 'Thread returns to the waiting state.', 'Thread returns to the waiting state.', 0, 0, 2, '2019-09-02 03:27:38', '2019-09-02 03:34:34'),
(4929, 173, 1277, 50, 'Thread starts running.', 'Thread starts running.', 0, 0, 3, '2019-09-02 03:27:38', '2019-09-02 03:34:34'),
(4930, 171, 1277, 50, 'Thread returns to the ready state.', 'Thread returns to the ready state.', 1, 1, 1, '2019-09-02 03:27:38', '2019-09-02 03:34:34'),
(4931, 1080, 1278, 111, '(3 π / 2 , 2 π)', '(3 π / 2 , 2 π)', 0, 0, 4, '2019-09-02 03:27:38', '2019-09-02 03:34:34'),
(4932, 355, 1278, 111, '(π/2 , π)', '(π/2 , π)', 1, 1, 2, '2019-09-02 03:27:38', '2019-09-02 03:34:34'),
(4933, 354, 1278, 111, '(0 , π/2)', '(0 , π/2)', 0, 0, 1, '2019-09-02 03:27:38', '2019-09-02 03:34:34'),
(4934, 356, 1278, 111, '(π , 3 π / 2)', '(π , 3 π / 2)', 0, 0, 3, '2019-09-02 03:27:38', '2019-09-02 03:34:34'),
(4935, 854, 1279, 246, 'src/', 'src/', 1, 1, 3, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4936, 852, 1279, 246, 'res/', 'res/', 0, 0, 1, '2019-09-02 03:27:38', '2019-09-02 03:34:34'),
(4937, 855, 1279, 246, 'bin/', 'bin/', 0, 0, 4, '2019-09-02 03:27:38', '2019-09-02 03:34:34'),
(4938, 853, 1279, 246, 'assets/', 'assets/', 0, 0, 2, '2019-09-02 03:27:38', '2019-09-02 03:34:34'),
(4939, 475, 1280, 151, 'Difference', 'Difference', 0, 0, 2, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4940, 474, 1280, 151, 'Union', 'Union', 0, 0, 1, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4941, 939, 1280, 151, 'Complement', 'Complement', 0, 0, 4, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4942, 476, 1280, 151, 'Intersection', 'Intersection', 1, 1, 3, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4943, 666, 1281, 215, '3.0 (Honeycomb)', '3.0 (Honeycomb)', 0, 0, 1, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4944, 833, 1281, 215, '2.2 (Froyo)', '2.2 (Froyo)', 0, 0, 4, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4945, 668, 1281, 215, '2.6', '2.6', 0, 0, 3, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4946, 667, 1281, 215, '2.3 (Gingerbread)', '2.3 (Gingerbread)', 1, 1, 2, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4947, 911, 1282, 51, 'Runtime error', 'Runtime error', 0, 0, 4, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4948, 174, 1282, 51, '9', '9', 0, 0, 1, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4949, 175, 1282, 51, '8', '8', 0, 0, 2, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4950, 176, 1282, 51, 'Compilation error', 'Compilation error', 1, 1, 3, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4951, 906, 1283, 39, 'Not assigned', 'Not assigned', 0, 0, 4, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4952, 138, 1283, 39, 'null', 'null', 0, 0, 1, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4953, 140, 1283, 39, 'Depends upon the type of variable', 'Depends upon the type of variable', 1, 1, 3, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4954, 139, 1283, 39, '0', '0', 0, 0, 2, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4955, 124, 1284, 34, 'typeof', 'typeof', 0, 0, 2, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4956, 125, 1284, 34, '&</a>', '&</a>', 0, 0, 3, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4957, 902, 1284, 34, '*', '*', 0, 0, 4, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4958, 123, 1284, 34, 'sizeof', 'sizeof', 1, 1, 1, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4959, 431, 1285, 136, 'instantiates button control', 'instantiates button control', 0, 0, 3, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4960, 1012, 1285, 136, 'a and c', 'a and c', 1, 1, 4, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4961, 429, 1285, 136, 'creates a button control', 'creates a button control', 0, 0, 1, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4962, 430, 1285, 136, 'initializes a button control', 'initializes a button control', 0, 0, 2, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4963, 416, 1286, 131, 'Show()', 'Show()', 1, 1, 3, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4964, 415, 1286, 131, 'Enable()', 'Enable()', 0, 0, 2, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4965, 414, 1286, 131, 'Get()', 'Get()', 0, 0, 1, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4966, 892, 1287, 256, 'Content values are key pair values, which are updated or inserted in the database', 'Content values are key pair values, which are updated or inserted in the database', 0, 0, 1, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4967, 895, 1287, 256, 'Cursor is used to store data permanently.', 'Cursor is used to store data permanently.', 0, 1, 4, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4968, 894, 1287, 256, 'A & B', 'A & B', 1, 0, 3, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4969, 893, 1287, 256, 'Cursor is used to store the temporary result.', 'Cursor is used to store the temporary result.', 0, 0, 2, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4970, 319, 1288, 99, '1.756', '1.756', 0, 0, 2, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4971, 1068, 1288, 99, '4.753', '4.753', 0, 0, 4, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4972, 320, 1288, 99, '2.322', '2.322', 1, 1, 3, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4973, 318, 1288, 99, '6.25', '6.25', 0, 0, 1, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4974, 820, 1289, 202, 'Database', 'Database', 0, 0, 4, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4975, 628, 1289, 202, 'Programming Language', 'Programming Language', 0, 0, 2, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4976, 627, 1289, 202, 'Desktop Operatng System', 'Desktop Operatng System', 0, 0, 1, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4977, 629, 1289, 202, 'Mobile Operating System', 'Mobile Operating System', 1, 1, 3, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4978, 468, 1290, 149, '{1, 2, 6, 1}', '{1, 2, 6, 1}', 0, 0, 1, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4979, 469, 1290, 149, '{1, 2, 5, 6}', '{1, 2, 5, 6}', 1, 1, 2, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4980, 937, 1290, 149, '{1, 5, 6, 3}', '{1, 5, 6, 3}', 0, 0, 4, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4981, 470, 1290, 149, '{1, 2, 1, 2}', '{1, 2, 1, 2}', 0, 0, 3, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4982, 308, 1291, 95, '-12', '-12', 0, 0, 3, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4983, 307, 1291, 95, 'You cannot find the square root of a negative number', 'You cannot find the square root of a negative number', 0, 0, 2, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4984, 306, 1291, 95, '12i', '12i', 1, 1, 1, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4985, 1064, 1291, 95, '-12i', '-12i', 0, 0, 4, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4986, 300, 1292, 93, 'x ≤ 5', 'x ≤ 5', 0, 0, 1, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4987, 301, 1292, 93, 'x ≥ 5', 'x ≥ 5', 1, 0, 2, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4988, 1062, 1292, 93, 'x ≤ -5', 'x ≤ -5', 0, 1, 4, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4989, 302, 1292, 93, 'x ≥ -5', 'x ≥ -5', 0, 0, 3, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4990, 1076, 1293, 107, '22', '22', 1, 1, 4, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4991, 342, 1293, 107, '11', '11', 0, 0, 1, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4992, 343, 1293, 107, '48', '48', 0, 0, 2, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4993, 344, 1293, 107, '-12', '-12', 0, 0, 3, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4994, 116, 1294, 31, '12', '12', 0, 0, 3, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4995, 115, 1294, 31, '20', '20', 1, 1, 2, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4996, 114, 1294, 31, '10', '10', 0, 0, 1, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4997, 989, 1295, 270, '25', '25', 0, 0, 3, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4998, 988, 1295, 270, '45', '45', 0, 0, 2, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(4999, 987, 1295, 270, '35', '35', 1, 1, 1, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(5000, 472, 1296, 150, '{5, 6}', '{5, 6}', 0, 0, 2, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(5001, 471, 1296, 150, '{1, 2}', '{1, 2}', 1, 1, 1, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(5002, 938, 1296, 150, '{1, 6}', '{1, 6}', 0, 0, 4, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(5003, 473, 1296, 150, '{2, 5}', '{2, 5}', 0, 0, 3, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(5004, 450, 1297, 143, 'One', 'One', 1, 1, 1, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(5005, 931, 1297, 143, 'Three', 'Three', 0, 0, 4, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(5006, 452, 1297, 143, 'Zero', 'Zero', 0, 0, 3, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(5007, 451, 1297, 143, 'Two', 'Two', 0, 0, 2, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(5008, 656, 1298, 211, 'Open source Webkit', 'Open source Webkit', 1, 1, 3, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(5009, 655, 1298, 211, 'Firefox', 'Firefox', 0, 0, 2, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(5010, 829, 1298, 211, 'Opera', 'Opera', 0, 0, 4, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(5011, 654, 1298, 211, 'Chrome', 'Chrome', 0, 0, 1, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(5012, 705, 1299, 225, '531', '531', 0, 0, 1, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(5013, 707, 1299, 225, '44', '44', 0, 0, 3, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(5014, 706, 1299, 225, '127', '127', 1, 1, 2, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(5015, 714, 1299, 225, '135', '135', 0, 0, 4, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(5016, 408, 1300, 129, 'GroupBox control', 'GroupBox control', 0, 0, 1, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(5017, 410, 1300, 129, 'ListView Control', 'ListView Control', 0, 0, 3, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(5018, 409, 1300, 129, 'LinkLabel control', 'LinkLabel control', 1, 1, 2, '2019-09-02 03:27:38', '2019-09-02 03:34:35'),
(5019, 1016, 1301, 140, 'Object', 'Object', 0, 0, 4, '2019-09-02 03:38:10', '2019-09-02 03:44:03'),
(5020, 441, 1301, 140, 'Constant', 'Constant', 0, 0, 1, '2019-09-02 03:38:10', '2019-09-02 03:44:03'),
(5021, 443, 1301, 140, 'Variable', 'Variable', 1, 1, 3, '2019-09-02 03:38:10', '2019-09-02 03:44:03'),
(5022, 442, 1301, 140, 'Reference type', 'Reference type', 0, 0, 2, '2019-09-02 03:38:10', '2019-09-02 03:44:03'),
(5023, 432, 1302, 137, 'Override the parent class methods but maintain the implementation', 'Override the parent class methods but maintain the implementation', 0, 1, 1, '2019-09-02 03:38:10', '2019-09-02 03:44:03'),
(5024, 433, 1302, 137, 'Maintain the same return type and arguments as the parent class, but implement it differently', 'Maintain the same return type and arguments as the parent class, but implement it differently', 1, 0, 2, '2019-09-02 03:38:10', '2019-09-02 03:44:03'),
(5025, 434, 1302, 137, 'Have different return types and arguments than the parent class', 'Have different return types and arguments than the parent class', 0, 0, 3, '2019-09-02 03:38:10', '2019-09-02 03:44:03'),
(5026, 1013, 1302, 137, 'Are Virtual', 'Are Virtual', 0, 0, 4, '2019-09-02 03:38:10', '2019-09-02 03:44:03'),
(5027, 1021, 1303, 275, 'Only one catch block for each try block.', 'Only one catch block for each try block.', 0, 0, 1, '2019-09-02 03:38:10', '2019-09-02 03:44:03'),
(5028, 1024, 1303, 275, 'The catch blocks should be used only when a finally block is not used.', 'The catch blocks should be used only when a finally block is not used.', 0, 0, 4, '2019-09-02 03:38:10', '2019-09-02 03:44:03'),
(5029, 1023, 1303, 275, 'Several catch blocks within one try block, arranged starting with the most specific exception and ending with Exception.', 'Several catch blocks within one try block, arranged starting with the most specific exception and ending with Exception.', 1, 1, 3, '2019-09-02 03:38:10', '2019-09-02 03:44:03'),
(5030, 1022, 1303, 275, 'Several catch blocks for a try block, arranged in order starting with Exception and ending with the most specific exception.', 'Several catch blocks for a try block, arranged in order starting with Exception and ending with the most specific exception.', 0, 0, 2, '2019-09-02 03:38:10', '2019-09-02 03:44:03'),
(5031, 933, 1304, 145, '{(1, 1), (a, a), (2, a), (1, b)}', '{(1, 1), (a, a), (2, a), (1, b)}', 0, 0, 4, '2019-09-02 03:38:10', '2019-09-02 03:44:03'),
(5032, 458, 1304, 145, '{(1, a), (2, a), (1, b), (2, b)}', '{(1, a), (2, a), (1, b), (2, b)}', 1, 0, 3, '2019-09-02 03:38:10', '2019-09-02 03:44:03'),
(5033, 456, 1304, 145, '{(1, a), (1, b), (2, a), (b, b)}', '{(1, a), (1, b), (2, a), (b, b)}', 0, 1, 1, '2019-09-02 03:38:10', '2019-09-02 03:44:03'),
(5034, 457, 1304, 145, '{(1, 1), (2, 2), (a, a), (b, b)}', '{(1, 1), (2, 2), (a, a), (b, b)}', 0, 0, 2, '2019-09-02 03:38:10', '2019-09-02 03:44:03'),
(5035, 435, 1305, 138, 'Trys', 'Trys', 0, 0, 1, '2019-09-02 03:38:10', '2019-09-02 03:44:03'),
(5036, 436, 1305, 138, 'Catches', 'Catches', 0, 0, 2, '2019-09-02 03:38:10', '2019-09-02 03:44:03'),
(5037, 437, 1305, 138, 'Throws', 'Throws', 1, 1, 3, '2019-09-02 03:38:10', '2019-09-02 03:44:03'),
(5038, 1014, 1305, 138, 'a and b', 'a and b', 0, 0, 4, '2019-09-02 03:38:10', '2019-09-02 03:44:03'),
(5039, 255, 1306, 78, 'ASCII', 'ASCII', 0, 0, 1, '2019-09-02 03:38:10', '2019-09-02 03:44:03'),
(5040, 726, 1306, 78, 'ANSI', 'ANSI', 0, 0, 4, '2019-09-02 03:38:10', '2019-09-02 03:44:03'),
(5041, 257, 1306, 78, 'EBCDIC', 'EBCDIC', 0, 1, 3, '2019-09-02 03:38:10', '2019-09-02 03:44:03'),
(5042, 256, 1306, 78, 'Unicode', 'Unicode', 1, 0, 2, '2019-09-02 03:38:10', '2019-09-02 03:44:03'),
(5043, 289, 1307, 89, 'Virtual memory', 'Virtual memory', 1, 0, 2, '2019-09-02 03:38:10', '2019-09-02 03:44:03'),
(5044, 288, 1307, 89, 'Virtual private network', 'Virtual private network', 0, 1, 1, '2019-09-02 03:38:10', '2019-09-02 03:44:03'),
(5045, 712, 1307, 89, 'None of them', 'None of them', 0, 0, 4, '2019-09-02 03:38:10', '2019-09-02 03:44:03'),
(5046, 290, 1307, 89, 'Virtual Machine', 'Virtual Machine', 0, 0, 3, '2019-09-02 03:38:10', '2019-09-02 03:44:03'),
(5047, 475, 1308, 151, 'Difference', 'Difference', 0, 0, 2, '2019-09-02 03:38:10', '2019-09-02 03:44:03'),
(5048, 476, 1308, 151, 'Intersection', 'Intersection', 1, 1, 3, '2019-09-02 03:38:10', '2019-09-02 03:44:03'),
(5049, 939, 1308, 151, 'Complement', 'Complement', 0, 0, 4, '2019-09-02 03:38:10', '2019-09-02 03:44:03'),
(5050, 474, 1308, 151, 'Union', 'Union', 0, 0, 1, '2019-09-02 03:38:10', '2019-09-02 03:44:03'),
(5051, 399, 1309, 126, 'CheckListBox control', 'CheckListBox control', 0, 0, 1, '2019-09-02 03:38:10', '2019-09-02 03:44:03'),
(5052, 400, 1309, 126, 'ListBox control', 'ListBox control', 1, 1, 2, '2019-09-02 03:38:10', '2019-09-02 03:44:04'),
(5053, 401, 1309, 126, 'TextBox control', 'TextBox control', 0, 0, 3, '2019-09-02 03:38:10', '2019-09-02 03:44:03'),
(5054, 307, 1310, 95, 'You cannot find the square root of a negative number', 'You cannot find the square root of a negative number', 0, 0, 2, '2019-09-02 03:38:10', '2019-09-02 03:44:04'),
(5055, 306, 1310, 95, '12i', '12i', 1, 0, 1, '2019-09-02 03:38:10', '2019-09-02 03:44:04'),
(5056, 1064, 1310, 95, '-12i', '-12i', 0, 1, 4, '2019-09-02 03:38:10', '2019-09-02 03:44:04'),
(5057, 308, 1310, 95, '-12', '-12', 0, 0, 3, '2019-09-02 03:38:10', '2019-09-02 03:44:04'),
(5058, 822, 1311, 204, 'All of the choices', 'All of the choices', 1, 1, 4, '2019-09-02 03:38:10', '2019-09-02 03:44:04'),
(5059, 634, 1311, 204, 'Bluetooth', 'Bluetooth', 0, 0, 2, '2019-09-02 03:38:10', '2019-09-02 03:44:04'),
(5060, 635, 1311, 204, 'Video calling', 'Video calling', 0, 0, 3, '2019-09-02 03:38:10', '2019-09-02 03:44:04'),
(5061, 633, 1311, 204, 'Multitasking', 'Multitasking', 0, 0, 1, '2019-09-02 03:38:10', '2019-09-02 03:44:04'),
(5062, 1031, 1312, 277, 'The code will generate an error because the finally block is placed immediately after the try block.', 'The code will generate an error because the finally block is placed immediately after the try block.', 0, 1, 3, '2019-09-02 03:38:10', '2019-09-02 03:44:04'),
(5063, 1030, 1312, 277, 'The code will generate an error because it lacks a throw statement.', 'The code will generate an error because it lacks a throw statement.', 0, 0, 2, '2019-09-02 03:38:10', '2019-09-02 03:44:04'),
(5064, 1032, 1312, 277, 'The code will compile without an error.', 'The code will compile without an error.', 1, 0, 4, '2019-09-02 03:38:10', '2019-09-02 03:44:04'),
(5065, 1029, 1312, 277, 'The code will generate an error because it lacks a catch block.', 'The code will generate an error because it lacks a catch block.', 0, 0, 1, '2019-09-02 03:38:10', '2019-09-02 03:44:04'),
(5066, 830, 1313, 212, 'No company', 'No company', 0, 0, 4, '2019-09-02 03:38:10', '2019-09-02 03:44:04'),
(5067, 657, 1313, 212, 'Apple', 'Apple', 0, 0, 1, '2019-09-02 03:38:10', '2019-09-02 03:44:04'),
(5068, 658, 1313, 212, 'Google', 'Google', 1, 1, 2, '2019-09-02 03:38:10', '2019-09-02 03:44:04'),
(5069, 659, 1313, 212, 'Nokia', 'Nokia', 0, 0, 3, '2019-09-02 03:38:10', '2019-09-02 03:44:04'),
(5070, 722, 1314, 82, '22', '22', 0, 0, 4, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5071, 267, 1314, 82, '-23', '-23', 0, 0, 1, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5072, 269, 1314, 82, '-7', '-7', 0, 1, 3, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5073, 268, 1314, 82, '-9', '-9', 1, 0, 2, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5074, 194, 1315, 57, 'Both Row and Column', 'Both Row and Column', 0, 0, 3, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5075, 193, 1315, 57, 'Column', 'Column', 0, 0, 2, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5076, 192, 1315, 57, 'Row', 'Row', 1, 1, 1, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5077, 1068, 1316, 99, '4.753', '4.753', 0, 0, 4, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5078, 318, 1316, 99, '6.25', '6.25', 0, 0, 1, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5079, 319, 1316, 99, '1.756', '1.756', 0, 1, 2, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5080, 320, 1316, 99, '2.322', '2.322', 1, 0, 3, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5081, 145, 1317, 41, 'public int main(String[] args)', 'public int main(String[] args)', 0, 0, 2, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5082, 146, 1317, 41, 'public static void main(String[] args)', 'public static void main(String[] args)', 1, 1, 3, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5083, 144, 1317, 41, 'public static int main(String[] args)', 'public static int main(String[] args)', 0, 0, 1, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5084, 1004, 1318, 121, 'Assignment Operators', 'Assignment Operators', 0, 0, 4, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5085, 386, 1318, 121, 'Logical operators', 'Logical operators', 1, 1, 3, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5086, 384, 1318, 121, 'RElational operators', 'RElational operators', 0, 0, 1, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5087, 385, 1318, 121, 'Bitwise operators', 'Bitwise operators', 0, 0, 2, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5088, 988, 1319, 270, '45', '45', 0, 0, 2, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5089, 989, 1319, 270, '25', '25', 0, 0, 3, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5090, 987, 1319, 270, '35', '35', 1, 1, 1, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5091, 464, 1320, 147, 'Subset', 'Subset', 0, 0, 3, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5092, 935, 1320, 147, 'Empty', 'Empty', 0, 0, 4, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5093, 462, 1320, 147, 'Infinite', 'Infinite', 1, 1, 1, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5094, 463, 1320, 147, 'Finite', 'Finite', 0, 0, 2, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5095, 238, 1321, 72, 'Utility software', 'Utility software', 1, 0, 2, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5096, 732, 1321, 72, 'Disk optimization software', 'Disk optimization software', 0, 0, 4, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5097, 239, 1321, 72, 'Anti-virus software', 'Anti-virus software', 0, 1, 3, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5098, 237, 1321, 72, 'Operating system software', 'Operating system software', 0, 0, 1, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5099, 705, 1322, 225, '531', '531', 0, 0, 1, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5100, 714, 1322, 225, '135', '135', 0, 0, 4, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5101, 706, 1322, 225, '127', '127', 1, 0, 2, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5102, 707, 1322, 225, '44', '44', 0, 1, 3, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5103, 950, 1323, 162, 'All of the mentioned', 'All of the mentioned', 1, 1, 4, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5104, 509, 1323, 162, 'n( A U B U C)=90', 'n( A U B U C)=90', 0, 0, 3, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5105, 508, 1323, 162, 'n( B U C)=0', 'n( B U C)=0', 0, 0, 2, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5106, 507, 1323, 162, 'n(A U B)=0', 'n(A U B)=0', 0, 0, 1, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5107, 283, 1324, 87, 'decode, execute, store and fetch', 'decode, execute, store and fetch', 0, 0, 2, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5108, 282, 1324, 87, 'fetch, execute, store and decode', 'fetch, execute, store and decode', 0, 1, 1, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5109, 284, 1324, 87, 'decode, fetch, store and execute', 'decode, fetch, store and execute', 0, 0, 3, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5110, 715, 1324, 87, 'fetch, decode, execute and store', 'fetch, decode, execute and store', 1, 0, 4, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5111, 854, 1325, 246, 'src/', 'src/', 1, 1, 3, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5112, 853, 1325, 246, 'assets/', 'assets/', 0, 0, 2, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5113, 855, 1325, 246, 'bin/', 'bin/', 0, 0, 4, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5114, 852, 1325, 246, 'res/', 'res/', 0, 0, 1, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5115, 343, 1326, 107, '48', '48', 0, 0, 2, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5116, 1076, 1326, 107, '22', '22', 1, 1, 4, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5117, 344, 1326, 107, '-12', '-12', 0, 0, 3, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5118, 342, 1326, 107, '11', '11', 0, 0, 1, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5119, 980, 1327, 267, 'smallest following integer', 'smallest following integer', 0, 0, 3, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5120, 978, 1327, 267, 'smallest previous integer', 'smallest previous integer', 0, 0, 1, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5121, 979, 1327, 267, 'greatest previous integer', 'greatest previous integer', 1, 1, 2, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5122, 206, 1328, 61, 'heap space and stack space', 'heap space and stack space', 0, 0, 3, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5123, 920, 1328, 61, 'first generation memory', 'first generation memory', 0, 0, 4, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5124, 204, 1328, 61, 'heap space', 'heap space', 1, 1, 1, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5125, 205, 1328, 61, 'stack space', 'stack space', 0, 0, 2, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5126, 680, 1329, 70, '[[#img31]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/VNrzOvOE3LpeuWi9ciBQDVlGrXxObvbfnI3kfNS4.png\" width=\"150\" height=\"150\" />', 0, 0, 4, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5127, 232, 1329, 70, '[[#img29]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/Cf9qY75IYjLpUVFWsICWK07cAwLtqRPDIO6JjLqT.png\" width=\"150\" height=\"150\" />', 0, 0, 2, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5128, 231, 1329, 70, '[[#img28]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/jkL1TWHhQQMAtCTbSz6HtJyZn8zhXmtgMQYX3Zpo.png\" width=\"150\" height=\"150\" />', 1, 0, 1, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5129, 233, 1329, 70, '[[#img30]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/5CGn3NoMP2AFTNnuWdi3jGe97XfkU7ydkF3PldTA.png\" width=\"150\" height=\"150\" />', 0, 1, 3, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5130, 254, 1330, 77, 'run time error', 'run time error', 0, 0, 3, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5131, 252, 1330, 77, 'logic error', 'logic error', 1, 1, 1, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5132, 253, 1330, 77, 'syntax error', 'syntax error', 0, 0, 2, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5133, 727, 1330, 77, 'linker error', 'linker error', 0, 0, 4, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5134, 2, 1331, 1, 'x = 4', 'x = 4', 0, 0, 2, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5135, 1, 1331, 1, 'x = 1', 'x = 1', 1, 1, 1, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5136, 3, 1331, 1, 'x = 2', 'x = 2', 0, 0, 3, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5137, 637, 1332, 205, 'Video Driver', 'Video Driver', 0, 0, 2, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5138, 636, 1332, 205, 'Device Driver', 'Device Driver', 0, 0, 1, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5139, 823, 1332, 205, 'Bluetooth driver', 'Bluetooth driver', 0, 0, 4, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5140, 638, 1332, 205, 'WiFi driver', 'WiFi driver', 1, 1, 3, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5141, 300, 1333, 93, 'x ≤ 5', 'x ≤ 5', 0, 0, 1, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5142, 301, 1333, 93, 'x ≥ 5', 'x ≥ 5', 1, 1, 2, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5143, 1062, 1333, 93, 'x ≤ -5', 'x ≤ -5', 0, 0, 4, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5144, 302, 1333, 93, 'x ≥ -5', 'x ≥ -5', 0, 0, 3, '2019-09-02 03:38:11', '2019-09-02 03:44:04'),
(5145, 449, 1334, 142, '{1, 2, 5, 9}', '{1, 2, 5, 9}', 0, 0, 3, '2019-09-02 03:38:12', '2019-09-02 03:44:04'),
(5146, 448, 1334, 142, '{1, 3, 5, 7, 9}', '{1, 3, 5, 7, 9}', 1, 1, 2, '2019-09-02 03:38:12', '2019-09-02 03:44:04'),
(5147, 447, 1334, 142, '{1, 2, 3}', '{1, 2, 3}', 0, 0, 1, '2019-09-02 03:38:12', '2019-09-02 03:44:04'),
(5148, 930, 1334, 142, '{1, 5, 7, 9, 11}', '{1, 5, 7, 9, 11}', 0, 0, 4, '2019-09-02 03:38:12', '2019-09-02 03:44:04'),
(5149, 1088, 1335, 285, '4 π <sup>2</sup>', '4 π <sup>2</sup>', 0, 0, 1, '2019-09-02 03:38:12', '2019-09-02 03:44:04'),
(5150, 1091, 1335, 285, 'π', 'π', 1, 1, 4, '2019-09-02 03:38:12', '2019-09-02 03:44:04'),
(5151, 1089, 1335, 285, '2 π', '2 π', 0, 0, 2, '2019-09-02 03:38:12', '2019-09-02 03:44:04'),
(5152, 1090, 1335, 285, '4 π', '4 π', 0, 0, 3, '2019-09-02 03:38:12', '2019-09-02 03:44:04'),
(5153, 147, 1336, 42, 'static', 'static', 0, 1, 1, '2019-09-02 03:38:12', '2019-09-02 03:44:04'),
(5154, 149, 1336, 42, 'void', 'void', 0, 0, 3, '2019-09-02 03:38:12', '2019-09-02 03:44:04');
INSERT INTO `answer_sheet_test_question_choices` (`id`, `choice_id`, `answer_sheet_test_question_id`, `test_question_id`, `body`, `body_html`, `is_correct`, `is_selected`, `pos_order`, `created_at`, `updated_at`) VALUES
(5155, 907, 1336, 42, 'private', 'private', 0, 0, 4, '2019-09-02 03:38:12', '2019-09-02 03:44:04'),
(5156, 148, 1336, 42, 'Boolean', 'Boolean', 1, 0, 2, '2019-09-02 03:38:12', '2019-09-02 03:44:04'),
(5157, 728, 1337, 76, 'back up', 'back up', 1, 1, 4, '2019-09-02 03:38:12', '2019-09-02 03:44:04'),
(5158, 251, 1337, 76, 'virtual memory', 'virtual memory', 0, 0, 3, '2019-09-02 03:38:12', '2019-09-02 03:44:04'),
(5159, 250, 1337, 76, 'buffering', 'buffering', 0, 0, 2, '2019-09-02 03:38:12', '2019-09-02 03:44:04'),
(5160, 249, 1337, 76, 'spooling', 'spooling', 0, 0, 1, '2019-09-02 03:38:12', '2019-09-02 03:44:04'),
(5161, 893, 1338, 256, 'Cursor is used to store the temporary result.', 'Cursor is used to store the temporary result.', 0, 0, 2, '2019-09-02 03:38:12', '2019-09-02 03:44:04'),
(5162, 895, 1338, 256, 'Cursor is used to store data permanently.', 'Cursor is used to store data permanently.', 0, 0, 4, '2019-09-02 03:38:12', '2019-09-02 03:44:04'),
(5163, 894, 1338, 256, 'A & B', 'A & B', 1, 1, 3, '2019-09-02 03:38:12', '2019-09-02 03:44:04'),
(5164, 892, 1338, 256, 'Content values are key pair values, which are updated or inserted in the database', 'Content values are key pair values, which are updated or inserted in the database', 0, 0, 1, '2019-09-02 03:38:12', '2019-09-02 03:44:04'),
(5165, 430, 1339, 136, 'initializes a button control', 'initializes a button control', 0, 0, 2, '2019-09-02 03:38:12', '2019-09-02 03:44:04'),
(5166, 431, 1339, 136, 'instantiates button control', 'instantiates button control', 0, 0, 3, '2019-09-02 03:38:12', '2019-09-02 03:44:04'),
(5167, 1012, 1339, 136, 'a and c', 'a and c', 1, 1, 4, '2019-09-02 03:38:12', '2019-09-02 03:44:04'),
(5168, 429, 1339, 136, 'creates a button control', 'creates a button control', 0, 0, 1, '2019-09-02 03:38:12', '2019-09-02 03:44:04'),
(5169, 1007, 1340, 124, 'Explicit Types', 'Explicit Types', 0, 0, 4, '2019-09-02 03:38:12', '2019-09-02 03:44:04'),
(5170, 393, 1340, 124, 'Reference type', 'Reference type', 1, 1, 1, '2019-09-02 03:38:12', '2019-09-02 03:44:04'),
(5171, 394, 1340, 124, 'Value types', 'Value types', 0, 0, 2, '2019-09-02 03:38:12', '2019-09-02 03:44:04'),
(5172, 395, 1340, 124, 'Data Type', 'Data Type', 0, 0, 3, '2019-09-02 03:38:12', '2019-09-02 03:44:04'),
(5173, 298, 1341, 92, 'x > 1', 'x > 1', 0, 0, 2, '2019-09-02 03:38:12', '2019-09-02 03:44:04'),
(5174, 1061, 1341, 92, 'x > 6', 'x > 6', 0, 0, 4, '2019-09-02 03:38:12', '2019-09-02 03:44:04'),
(5175, 299, 1341, 92, 'x < -1', 'x < -1', 1, 1, 3, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5176, 297, 1341, 92, 'x < 6', 'x < 6', 0, 0, 1, '2019-09-02 03:38:12', '2019-09-02 03:44:04'),
(5177, 1056, 1342, 283, 'Set the CausesValidation property of the Help button to true.', 'Set the CausesValidation property of the Help button to true.', 0, 0, 4, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5178, 1054, 1342, 283, 'Set the CausesValidation property of the text box to true.', 'Set the CausesValidation property of the text box to true.', 0, 0, 2, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5179, 1053, 1342, 283, 'Set the CausesValidation property of the text box to false.', 'Set the CausesValidation property of the text box to false.', 0, 0, 1, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5180, 1055, 1342, 283, 'Set the CausesValidation property of the Help button to false.', 'Set the CausesValidation property of the Help button to false.', 1, 1, 3, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5181, 176, 1343, 51, 'Compilation error', 'Compilation error', 1, 0, 3, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5182, 175, 1343, 51, '8', '8', 0, 0, 2, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5183, 174, 1343, 51, '9', '9', 0, 1, 1, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5184, 911, 1343, 51, 'Runtime error', 'Runtime error', 0, 0, 4, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5185, 115, 1344, 31, '20', '20', 1, 0, 2, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5186, 116, 1344, 31, '12', '12', 0, 1, 3, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5187, 114, 1344, 31, '10', '10', 0, 0, 1, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5188, 200, 1345, 59, '6', '6', 0, 0, 3, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5189, 918, 1345, 59, '1', '1', 1, 0, 4, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5190, 198, 1345, 59, '3', '3', 0, 1, 1, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5191, 199, 1345, 59, '0', '0', 0, 0, 2, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5192, 628, 1346, 202, 'Programming Language', 'Programming Language', 0, 0, 2, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5193, 820, 1346, 202, 'Database', 'Database', 0, 0, 4, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5194, 629, 1346, 202, 'Mobile Operating System', 'Mobile Operating System', 1, 0, 3, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5195, 627, 1346, 202, 'Desktop Operatng System', 'Desktop Operatng System', 0, 1, 1, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5196, 656, 1347, 211, 'Open source Webkit', 'Open source Webkit', 1, 1, 3, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5197, 655, 1347, 211, 'Firefox', 'Firefox', 0, 0, 2, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5198, 654, 1347, 211, 'Chrome', 'Chrome', 0, 0, 1, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5199, 829, 1347, 211, 'Opera', 'Opera', 0, 0, 4, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5200, 887, 1348, 254, 'None of the above', 'None of the above', 0, 0, 4, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5201, 885, 1348, 254, 'Cookies management', 'Cookies management', 0, 0, 2, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5202, 886, 1348, 254, 'Authentication management', 'Authentication management', 0, 1, 3, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5203, 884, 1348, 254, 'httprequest(get/post) and returns response from the server', 'httprequest(get/post) and returns response from the server', 1, 0, 1, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5204, 136, 1349, 38, 'It is followed by one or more catch blocks.', 'It is followed by one or more catch blocks.', 0, 0, 2, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5205, 135, 1349, 38, 'A try block identifies a block of code for which particular exceptions is activated.', 'A try block identifies a block of code for which particular exceptions is activated.', 0, 1, 1, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5206, 137, 1349, 38, 'A and B', 'A and B', 1, 0, 3, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5207, 454, 1350, 144, '5', '5', 1, 0, 2, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5208, 932, 1350, 144, '20', '20', 0, 0, 4, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5209, 453, 1350, 144, '10', '10', 0, 1, 1, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5210, 455, 1350, 144, '3', '3', 0, 0, 3, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5211, 313, 1351, 97, '7 - 3i', '7 - 3i', 0, 0, 2, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5212, 312, 1351, 97, 'i - 5', 'i - 5', 0, 0, 1, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5213, 1066, 1351, 97, '3i - 10', '3i - 10', 0, 0, 4, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5214, 314, 1351, 97, 'i - 12', 'i - 12', 1, 1, 3, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5215, 123, 1352, 34, 'sizeof', 'sizeof', 1, 1, 1, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5216, 902, 1352, 34, '*', '*', 0, 0, 4, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5217, 125, 1352, 34, '&</a>', '&</a>', 0, 0, 3, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5218, 124, 1352, 34, 'typeof', 'typeof', 0, 0, 2, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5219, 389, 1353, 122, 'Logical operators', 'Logical operators', 0, 0, 3, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5220, 388, 1353, 122, 'Binary operators', 'Binary operators', 0, 0, 2, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5221, 1005, 1353, 122, 'Assignment opeartors', 'Assignment opeartors', 0, 0, 4, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5222, 387, 1353, 122, 'unary operators', 'unary operators', 1, 1, 1, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5223, 1106, 1354, 289, '6', '6', 0, 0, 3, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5224, 1105, 1354, 289, '7', '7', 1, 1, 2, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5225, 1107, 1354, 289, '8', '8', 0, 0, 4, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5226, 1104, 1354, 289, '5', '5', 0, 0, 1, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5227, 220, 1355, 66, '163', '163', 1, 0, 2, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5228, 221, 1355, 66, '199', '199', 0, 0, 3, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5229, 219, 1355, 66, '121', '121', 0, 1, 1, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5230, 676, 1355, 66, '212', '212', 0, 0, 4, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5231, 663, 1356, 214, 'Linux kernel', 'Linux kernel', 1, 1, 1, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5232, 832, 1356, 214, 'Hybrid kernel', 'Hybrid kernel', 0, 0, 4, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5233, 665, 1356, 214, 'MAC kernel', 'MAC kernel', 0, 0, 3, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5234, 664, 1356, 214, 'Windows kernel', 'Windows kernel', 0, 0, 2, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5235, 685, 1357, 219, 'Switch', 'Switch', 0, 0, 2, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5236, 686, 1357, 219, 'Modem', 'Modem', 1, 0, 3, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5237, 710, 1357, 219, 'Wireless access point', 'Wireless access point', 0, 1, 4, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5238, 684, 1357, 219, 'Repeater', 'Repeater', 0, 0, 1, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5239, 118, 1358, 32, 'as', 'as', 0, 0, 2, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5240, 117, 1358, 32, 'abstract', 'abstract', 0, 0, 1, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5241, 900, 1358, 32, 'All of the choices', 'All of the choices', 1, 1, 4, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5242, 119, 1358, 32, 'foreach', 'foreach', 0, 0, 3, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5243, 503, 1359, 160, 'A ∩ B', 'A ∩ B', 0, 0, 3, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5244, 948, 1359, 160, 'B', 'B', 0, 0, 4, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5245, 501, 1359, 160, 'A‘ (Complement of A)', 'A‘ (Complement of A)', 0, 0, 1, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5246, 502, 1359, 160, 'A U B -B', 'A U B -B', 1, 1, 2, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5247, 409, 1360, 129, 'LinkLabel control', 'LinkLabel control', 1, 1, 2, '2019-09-02 03:38:12', '2019-09-02 03:44:05'),
(5248, 410, 1360, 129, 'ListView Control', 'ListView Control', 0, 0, 3, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5249, 408, 1360, 129, 'GroupBox control', 'GroupBox control', 0, 0, 1, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5250, 1009, 1361, 132, 'While', 'While', 0, 0, 4, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5251, 417, 1361, 132, 'If', 'If', 0, 0, 1, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5252, 419, 1361, 132, 'For', 'For', 0, 0, 3, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5253, 418, 1361, 132, 'Switch', 'Switch', 1, 1, 2, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5254, 402, 1362, 127, 'Radio Button', 'Radio Button', 0, 0, 1, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5255, 403, 1362, 127, 'Textbox control', 'Textbox control', 0, 0, 2, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5256, 404, 1362, 127, 'Button control', 'Button control', 1, 1, 3, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5257, 699, 1363, 223, '110011', '110011', 0, 0, 1, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5258, 700, 1363, 223, '100001', '100001', 0, 0, 2, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5259, 701, 1363, 223, '110100', '110100', 1, 1, 3, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5260, 718, 1363, 223, '100100', '100100', 0, 0, 4, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5261, 1034, 1364, 278, 'Message1\nMessage2\nMessage3\nMessage4', 'Message1<br />\nMessage2<br />\nMessage3<br />\nMessage4', 0, 0, 2, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5262, 1035, 1364, 278, 'Message1\nMessage3\nMessage4', 'Message1<br />\nMessage3<br />\nMessage4', 1, 1, 3, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5263, 1036, 1364, 278, 'Message1\nMessage3\nMessage2\nMessage4', 'Message1<br />\nMessage3<br />\nMessage2<br />\nMessage4', 0, 0, 4, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5264, 1033, 1364, 278, 'Message1\nMessage4', 'Message1<br />\nMessage4', 0, 0, 1, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5265, 173, 1365, 50, 'Thread starts running.', 'Thread starts running.', 0, 0, 3, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5266, 171, 1365, 50, 'Thread returns to the ready state.', 'Thread returns to the ready state.', 1, 1, 1, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5267, 172, 1365, 50, 'Thread returns to the waiting state.', 'Thread returns to the waiting state.', 0, 0, 2, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5268, 938, 1366, 150, '{1, 6}', '{1, 6}', 0, 0, 4, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5269, 472, 1366, 150, '{5, 6}', '{5, 6}', 0, 0, 2, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5270, 473, 1366, 150, '{2, 5}', '{2, 5}', 0, 0, 3, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5271, 471, 1366, 150, '{1, 2}', '{1, 2}', 1, 1, 1, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5272, 845, 1367, 244, 'updates()', 'updates()', 0, 0, 2, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5273, 847, 1367, 244, 'none of these', 'none of these', 0, 0, 4, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5274, 846, 1367, 244, 'commit()', 'commit()', 0, 0, 3, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5275, 844, 1367, 244, 'commitUpdates()', 'commitUpdates()', 1, 1, 1, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5276, 227, 1368, 68, '[[#img25]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/rDh656ehodyPQmn7CxxjGK2H29sx2bh6LDz9INfN.png\" width=\"150\" height=\"150\" />', 0, 0, 3, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5277, 225, 1368, 68, '[[#img23]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/IyLDJJaUUQ0aIZOMyEjh4JO72W4HpXtPj2CfMKZL.png\" width=\"150\" height=\"150\" />', 1, 1, 1, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5278, 679, 1368, 68, '[[#img26]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/tBuCNpani0PgWIFN01ztVOAj4FS4CBDAiTW9J8lB.png\" width=\"150\" height=\"150\" />', 0, 0, 4, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5279, 226, 1368, 68, '[[#img24]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/nVLwXww7AT2RBfzhH1tPQMxdLPF1iWuunHzErZRh.png\" width=\"150\" height=\"150\" />', 0, 0, 2, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5280, 355, 1369, 111, '(π/2 , π)', '(π/2 , π)', 1, 0, 2, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5281, 356, 1369, 111, '(π , 3 π / 2)', '(π , 3 π / 2)', 0, 1, 3, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5282, 1080, 1369, 111, '(3 π / 2 , 2 π)', '(3 π / 2 , 2 π)', 0, 0, 4, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5283, 354, 1369, 111, '(0 , π/2)', '(0 , π/2)', 0, 0, 1, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5284, 370, 1370, 116, 'an even function', 'an even function', 1, 1, 2, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5285, 1085, 1370, 116, 'even and odd', 'even and odd', 0, 0, 4, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5286, 369, 1370, 116, 'an odd function', 'an odd function', 0, 0, 1, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5287, 371, 1370, 116, 'neither odd nor even', 'neither odd nor even', 0, 0, 3, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5288, 177, 1371, 52, '12', '12', 0, 0, 1, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5289, 912, 1371, 52, '100', '100', 0, 0, 4, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5290, 179, 1371, 52, '400', '400', 0, 0, 3, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5291, 178, 1371, 52, '200', '200', 1, 1, 2, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5292, 1092, 1372, 286, '0.057', '0.057', 1, 1, 1, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5293, 1094, 1372, 286, '0.001', '0.001', 0, 0, 3, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5294, 1093, 1372, 286, '0.478', '0.478', 0, 0, 2, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5295, 1095, 1372, 286, '0', '0', 0, 0, 4, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5296, 333, 1373, 104, '(x-7)<sup>2</sup> +8', '(x-7)<sup>2</sup> +8', 0, 0, 1, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5297, 335, 1373, 104, '(x+7)<sup>2</sup> -8', '(x+7)<sup>2</sup> -8', 0, 0, 3, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5298, 1073, 1373, 104, '(x+5)<sup>2</sup> -16', '(x+5)<sup>2</sup> -16', 0, 0, 4, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5299, 334, 1373, 104, '(x+5)<sup>2</sup> +16', '(x+5)<sup>2</sup> +16', 1, 1, 2, '2019-09-02 03:38:13', '2019-09-02 03:44:05'),
(5300, 469, 1374, 149, '{1, 2, 5, 6}', '{1, 2, 5, 6}', 1, 1, 2, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5301, 470, 1374, 149, '{1, 2, 1, 2}', '{1, 2, 1, 2}', 0, 0, 3, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5302, 937, 1374, 149, '{1, 5, 6, 3}', '{1, 5, 6, 3}', 0, 0, 4, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5303, 468, 1374, 149, '{1, 2, 6, 1}', '{1, 2, 6, 1}', 0, 0, 1, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5304, 167, 1375, 48, 'JRE is an implementation of the Java Virtual Machine which executes Java programs.', 'JRE is an implementation of the Java Virtual Machine which executes Java programs.', 1, 1, 3, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5305, 166, 1375, 48, 'JRE is an application development framework.', 'JRE is an application development framework.', 0, 0, 2, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5306, 165, 1375, 48, 'JRE is a java based GUI application.', 'JRE is a java based GUI application.', 0, 0, 1, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5307, 122, 1376, 33, 'ToInt16', 'ToInt16', 0, 0, 3, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5308, 901, 1376, 33, 'ToInt32', 'ToInt32', 0, 0, 4, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5309, 121, 1376, 33, 'ToDouble', 'ToDouble', 1, 1, 2, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5310, 120, 1376, 33, 'ToDecimal', 'ToDecimal', 0, 0, 1, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5311, 487, 1377, 155, '5', '5', 0, 0, 2, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5312, 943, 1377, 155, '7', '7', 0, 1, 4, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5313, 488, 1377, 155, '6', '6', 0, 0, 3, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5314, 486, 1377, 155, '4', '4', 1, 0, 1, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5315, 667, 1378, 215, '2.3 (Gingerbread)', '2.3 (Gingerbread)', 1, 1, 2, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5316, 668, 1378, 215, '2.6', '2.6', 0, 0, 3, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5317, 833, 1378, 215, '2.2 (Froyo)', '2.2 (Froyo)', 0, 0, 4, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5318, 666, 1378, 215, '3.0 (Honeycomb)', '3.0 (Honeycomb)', 0, 0, 1, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5319, 825, 1379, 207, 'Application data bridge', 'Application data bridge', 0, 0, 4, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5320, 642, 1379, 207, 'Android Debug Bridge', 'Android Debug Bridge', 1, 1, 1, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5321, 643, 1379, 207, 'Application Debug Bridge', 'Application Debug Bridge', 0, 0, 2, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5322, 644, 1379, 207, 'Android data bridge', 'Android data bridge', 0, 0, 3, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5323, 1077, 1380, 108, '1 500 000', '1 500 000', 0, 0, 4, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5324, 345, 1380, 108, '1 846 000', '1 846 000', 1, 1, 1, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5325, 346, 1380, 108, '1 852 000', '1 852 000', 0, 0, 2, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5326, 347, 1380, 108, '1 000 000', '1 000 000', 0, 0, 3, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5327, 841, 1381, 243, 'X.style', 'X.style', 0, 0, 2, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5328, 843, 1381, 243, 'application', 'application', 0, 0, 4, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5329, 842, 1381, 243, 'manifest.XML', 'manifest.XML', 0, 0, 3, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5330, 840, 1381, 243, 'R.style', 'R.style', 1, 1, 1, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5331, 689, 1382, 220, 'MICR', 'MICR', 0, 0, 3, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5332, 687, 1382, 220, 'digital camera', 'digital camera', 0, 0, 1, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5333, 688, 1382, 220, 'scanner', 'scanner', 1, 1, 2, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5334, 709, 1382, 220, 'RFID readers', 'RFID readers', 0, 0, 4, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5335, 821, 1383, 203, 'MIDI', 'MIDI', 0, 0, 4, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5336, 632, 1383, 203, 'AVI', 'AVI', 1, 0, 3, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5337, 631, 1383, 203, 'MPEG', 'MPEG', 0, 0, 2, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5338, 630, 1383, 203, 'MP4', 'MP4', 0, 1, 1, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5339, 944, 1384, 156, 'None of the choices', 'None of the choices', 0, 0, 4, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5340, 489, 1384, 156, '4, 8', '4, 8', 0, 0, 1, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5341, 490, 1384, 156, '8, 12', '8, 12', 1, 1, 2, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5342, 491, 1384, 156, '4, 12', '4, 12', 0, 0, 3, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5343, 243, 1385, 74, 'Operating System', 'Operating System', 0, 0, 1, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5344, 730, 1385, 74, 'CPU', 'CPU', 0, 0, 4, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5345, 244, 1385, 74, 'Motherboard', 'Motherboard', 0, 0, 2, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5346, 245, 1385, 74, 'Computer', 'Computer', 1, 1, 3, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5347, 906, 1386, 39, 'Not assigned', 'Not assigned', 0, 1, 4, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5348, 139, 1386, 39, '0', '0', 0, 0, 2, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5349, 140, 1386, 39, 'Depends upon the type of variable', 'Depends upon the type of variable', 1, 0, 3, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5350, 138, 1386, 39, 'null', 'null', 0, 0, 1, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5351, 414, 1387, 131, 'Get()', 'Get()', 0, 0, 1, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5352, 416, 1387, 131, 'Show()', 'Show()', 1, 0, 3, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5353, 415, 1387, 131, 'Enable()', 'Enable()', 0, 1, 2, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5354, 952, 1388, 260, '20', '20', 0, 0, 2, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5355, 953, 1388, 260, '30', '30', 0, 0, 3, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5356, 951, 1388, 260, '35', '35', 1, 1, 1, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5357, 954, 1388, 260, '10', '10', 0, 0, 4, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5358, 879, 1389, 252, 'None of the above', 'None of the above', 0, 0, 4, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5359, 876, 1389, 252, 'A class used to hold states and objects', 'A class used to hold states and objects', 1, 0, 1, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5360, 877, 1389, 252, 'A bean class can be passed from one activity to another.', 'A bean class can be passed from one activity to another.', 0, 1, 2, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5361, 878, 1389, 252, 'A mandatory class in android', 'A mandatory class in android', 0, 0, 3, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5362, 466, 1390, 148, '6', '6', 0, 0, 2, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5363, 936, 1390, 148, '9', '9', 0, 0, 4, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5364, 467, 1390, 148, '7', '7', 0, 0, 3, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5365, 465, 1390, 148, '8', '8', 1, 1, 1, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5366, 195, 1391, 58, '0 2 4 6 8', '0 2 4 6 8', 1, 0, 1, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5367, 197, 1391, 58, '0 1 2 3 4 5 6 7 8 9', '0 1 2 3 4 5 6 7 8 9', 0, 1, 3, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5368, 917, 1391, 58, '1 2 3 4 5 6 7 8 9 10', '1 2 3 4 5 6 7 8 9 10', 0, 0, 4, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5369, 196, 1391, 58, '1 3 5 7 9', '1 3 5 7 9', 0, 0, 2, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5370, 711, 1392, 90, 'megabyte', 'megabyte', 0, 0, 4, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5371, 293, 1392, 90, 'kilobyte', 'kilobyte', 0, 1, 3, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5372, 291, 1392, 90, 'bit', 'bit', 0, 0, 1, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5373, 292, 1392, 90, 'byte', 'byte', 1, 0, 2, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5374, 363, 1393, 114, 'mean = 15 , standard deviation = 6', 'mean = 15 , standard deviation = 6', 0, 0, 1, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5375, 1083, 1393, 114, 'mean = 10 , standard deviation = 1', 'mean = 10 , standard deviation = 1', 0, 0, 4, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5376, 365, 1393, 114, 'mean = 15 , standard deviation = 1', 'mean = 15 , standard deviation = 1', 1, 1, 3, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5377, 364, 1393, 114, 'mean = 10 , standard deviation = 6', 'mean = 10 , standard deviation = 6', 0, 0, 2, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5378, 142, 1394, 40, 'object.', 'object.', 0, 0, 2, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5379, 143, 1394, 40, 'Both of the above.', 'Both of the above.', 0, 0, 3, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5380, 141, 1394, 40, 'type.', 'type.', 1, 1, 1, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5381, 863, 1395, 248, 'none of the choices', 'none of the choices', 0, 0, 4, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5382, 861, 1395, 248, 'To store the data in a database', 'To store the data in a database', 0, 0, 2, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5383, 860, 1395, 248, 'To send the data from an application to another application', 'To send the data from an application to another application', 0, 1, 1, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5384, 862, 1395, 248, 'To share the data between applications', 'To share the data between applications', 1, 0, 3, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5385, 260, 1396, 79, 'Registers', 'Registers', 0, 0, 3, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5386, 725, 1396, 79, 'Primary Storage', 'Primary Storage', 1, 1, 4, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5387, 258, 1396, 79, 'Control unit', 'Control unit', 0, 0, 1, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5388, 259, 1396, 79, 'ALU', 'ALU', 0, 0, 2, '2019-09-02 03:38:13', '2019-09-02 03:44:06'),
(5389, 379, 1397, 119, 'do while', 'do while', 0, 0, 2, '2019-09-02 03:38:14', '2019-09-02 03:44:06'),
(5390, 1002, 1397, 119, 'for loop', 'for loop', 1, 1, 4, '2019-09-02 03:38:14', '2019-09-02 03:44:06'),
(5391, 378, 1397, 119, 'forEach loop', 'forEach loop', 0, 0, 1, '2019-09-02 03:38:14', '2019-09-02 03:44:06'),
(5392, 380, 1397, 119, 'while', 'while', 0, 0, 3, '2019-09-02 03:38:14', '2019-09-02 03:44:06'),
(5393, 1082, 1398, 113, '3! * 2!', '3! * 2!', 0, 0, 4, '2019-09-02 03:38:14', '2019-09-02 03:44:06'),
(5394, 362, 1398, 113, '2!', '2!', 0, 0, 3, '2019-09-02 03:38:14', '2019-09-02 03:44:06'),
(5395, 360, 1398, 113, '5!', '5!', 0, 1, 1, '2019-09-02 03:38:14', '2019-09-02 03:44:06'),
(5396, 361, 1398, 113, '3!', '3!', 1, 0, 2, '2019-09-02 03:38:14', '2019-09-02 03:44:06'),
(5397, 357, 1399, 112, '10', '10', 0, 0, 1, '2019-09-02 03:38:14', '2019-09-02 03:44:06'),
(5398, 1081, 1399, 112, '8', '8', 0, 0, 4, '2019-09-02 03:38:14', '2019-09-02 03:44:06'),
(5399, 359, 1399, 112, '2100', '2100', 1, 1, 3, '2019-09-02 03:38:14', '2019-09-02 03:44:06'),
(5400, 358, 1399, 112, '15', '15', 0, 0, 2, '2019-09-02 03:38:14', '2019-09-02 03:44:06'),
(5401, 450, 1400, 143, 'One', 'One', 1, 1, 1, '2019-09-02 03:38:14', '2019-09-02 03:44:06'),
(5402, 452, 1400, 143, 'Zero', 'Zero', 0, 0, 3, '2019-09-02 03:38:14', '2019-09-02 03:44:06'),
(5403, 931, 1400, 143, 'Three', 'Three', 0, 0, 4, '2019-09-02 03:38:14', '2019-09-02 03:44:06'),
(5404, 451, 1400, 143, 'Two', 'Two', 0, 0, 2, '2019-09-02 03:38:14', '2019-09-02 03:44:06'),
(5405, 1083, 1401, 114, 'mean = 10 , standard deviation = 1', 'mean = 10 , standard deviation = 1', 0, 0, 4, '2019-09-02 03:44:53', '2019-09-02 04:01:27'),
(5406, 364, 1401, 114, 'mean = 10 , standard deviation = 6', 'mean = 10 , standard deviation = 6', 0, 0, 2, '2019-09-02 03:44:53', '2019-09-02 04:01:27'),
(5407, 363, 1401, 114, 'mean = 15 , standard deviation = 6', 'mean = 15 , standard deviation = 6', 0, 0, 1, '2019-09-02 03:44:53', '2019-09-02 04:01:27'),
(5408, 365, 1401, 114, 'mean = 15 , standard deviation = 1', 'mean = 15 , standard deviation = 1', 1, 1, 3, '2019-09-02 03:44:53', '2019-09-02 04:01:27'),
(5409, 732, 1402, 72, 'Disk optimization software', 'Disk optimization software', 0, 0, 4, '2019-09-02 03:44:53', '2019-09-02 04:01:27'),
(5410, 237, 1402, 72, 'Operating system software', 'Operating system software', 0, 0, 1, '2019-09-02 03:44:53', '2019-09-02 04:01:27'),
(5411, 239, 1402, 72, 'Anti-virus software', 'Anti-virus software', 0, 1, 3, '2019-09-02 03:44:53', '2019-09-02 04:01:27'),
(5412, 238, 1402, 72, 'Utility software', 'Utility software', 1, 0, 2, '2019-09-02 03:44:53', '2019-09-02 04:01:27'),
(5413, 166, 1403, 48, 'JRE is an application development framework.', 'JRE is an application development framework.', 0, 0, 2, '2019-09-02 03:44:53', '2019-09-02 04:01:27'),
(5414, 167, 1403, 48, 'JRE is an implementation of the Java Virtual Machine which executes Java programs.', 'JRE is an implementation of the Java Virtual Machine which executes Java programs.', 1, 1, 3, '2019-09-02 03:44:53', '2019-09-02 04:01:27'),
(5415, 165, 1403, 48, 'JRE is a java based GUI application.', 'JRE is a java based GUI application.', 0, 0, 1, '2019-09-02 03:44:53', '2019-09-02 04:01:27'),
(5416, 387, 1404, 122, 'unary operators', 'unary operators', 1, 1, 1, '2019-09-02 03:44:53', '2019-09-02 04:01:27'),
(5417, 389, 1404, 122, 'Logical operators', 'Logical operators', 0, 0, 3, '2019-09-02 03:44:53', '2019-09-02 04:01:27'),
(5418, 1005, 1404, 122, 'Assignment opeartors', 'Assignment opeartors', 0, 0, 4, '2019-09-02 03:44:53', '2019-09-02 04:01:27'),
(5419, 388, 1404, 122, 'Binary operators', 'Binary operators', 0, 0, 2, '2019-09-02 03:44:53', '2019-09-02 04:01:27'),
(5420, 895, 1405, 256, 'Cursor is used to store data permanently.', 'Cursor is used to store data permanently.', 0, 0, 4, '2019-09-02 03:44:53', '2019-09-02 04:01:27'),
(5421, 894, 1405, 256, 'A & B', 'A & B', 1, 1, 3, '2019-09-02 03:44:53', '2019-09-02 04:01:27'),
(5422, 893, 1405, 256, 'Cursor is used to store the temporary result.', 'Cursor is used to store the temporary result.', 0, 0, 2, '2019-09-02 03:44:53', '2019-09-02 04:01:27'),
(5423, 892, 1405, 256, 'Content values are key pair values, which are updated or inserted in the database', 'Content values are key pair values, which are updated or inserted in the database', 0, 0, 1, '2019-09-02 03:44:53', '2019-09-02 04:01:27'),
(5424, 198, 1406, 59, '3', '3', 0, 0, 1, '2019-09-02 03:44:53', '2019-09-02 04:01:27'),
(5425, 200, 1406, 59, '6', '6', 0, 0, 3, '2019-09-02 03:44:53', '2019-09-02 04:01:27'),
(5426, 918, 1406, 59, '1', '1', 1, 1, 4, '2019-09-02 03:44:53', '2019-09-02 04:01:27'),
(5427, 199, 1406, 59, '0', '0', 0, 0, 2, '2019-09-02 03:44:53', '2019-09-02 04:01:27'),
(5428, 1077, 1407, 108, '1 500 000', '1 500 000', 0, 0, 4, '2019-09-02 03:44:53', '2019-09-02 04:01:27'),
(5429, 345, 1407, 108, '1 846 000', '1 846 000', 1, 1, 1, '2019-09-02 03:44:53', '2019-09-02 04:01:27'),
(5430, 347, 1407, 108, '1 000 000', '1 000 000', 0, 0, 3, '2019-09-02 03:44:53', '2019-09-02 04:01:27'),
(5431, 346, 1407, 108, '1 852 000', '1 852 000', 0, 0, 2, '2019-09-02 03:44:53', '2019-09-02 04:01:27'),
(5432, 465, 1408, 148, '8', '8', 1, 1, 1, '2019-09-02 03:44:53', '2019-09-02 04:01:27'),
(5433, 466, 1408, 148, '6', '6', 0, 0, 2, '2019-09-02 03:44:53', '2019-09-02 04:01:27'),
(5434, 936, 1408, 148, '9', '9', 0, 0, 4, '2019-09-02 03:44:53', '2019-09-02 04:01:27'),
(5435, 467, 1408, 148, '7', '7', 0, 0, 3, '2019-09-02 03:44:53', '2019-09-02 04:01:27'),
(5436, 243, 1409, 74, 'Operating System', 'Operating System', 0, 0, 1, '2019-09-02 03:44:53', '2019-09-02 04:01:27'),
(5437, 244, 1409, 74, 'Motherboard', 'Motherboard', 0, 0, 2, '2019-09-02 03:44:53', '2019-09-02 04:01:27'),
(5438, 730, 1409, 74, 'CPU', 'CPU', 0, 0, 4, '2019-09-02 03:44:53', '2019-09-02 04:01:27'),
(5439, 245, 1409, 74, 'Computer', 'Computer', 1, 1, 3, '2019-09-02 03:44:53', '2019-09-02 04:01:27'),
(5440, 630, 1410, 203, 'MP4', 'MP4', 0, 0, 1, '2019-09-02 03:44:53', '2019-09-02 04:01:27'),
(5441, 631, 1410, 203, 'MPEG', 'MPEG', 0, 0, 2, '2019-09-02 03:44:54', '2019-09-02 04:01:27'),
(5442, 821, 1410, 203, 'MIDI', 'MIDI', 0, 0, 4, '2019-09-02 03:44:54', '2019-09-02 04:01:27'),
(5443, 632, 1410, 203, 'AVI', 'AVI', 1, 1, 3, '2019-09-02 03:44:54', '2019-09-02 04:01:27'),
(5444, 711, 1411, 90, 'megabyte', 'megabyte', 0, 0, 4, '2019-09-02 03:44:54', '2019-09-02 04:01:27'),
(5445, 293, 1411, 90, 'kilobyte', 'kilobyte', 0, 0, 3, '2019-09-02 03:44:54', '2019-09-02 04:01:27'),
(5446, 292, 1411, 90, 'byte', 'byte', 1, 1, 2, '2019-09-02 03:44:54', '2019-09-02 04:01:27'),
(5447, 291, 1411, 90, 'bit', 'bit', 0, 0, 1, '2019-09-02 03:44:54', '2019-09-02 04:01:27'),
(5448, 343, 1412, 107, '48', '48', 0, 0, 2, '2019-09-02 03:44:54', '2019-09-02 04:01:27'),
(5449, 1076, 1412, 107, '22', '22', 1, 1, 4, '2019-09-02 03:44:54', '2019-09-02 04:01:27'),
(5450, 344, 1412, 107, '-12', '-12', 0, 0, 3, '2019-09-02 03:44:54', '2019-09-02 04:01:27'),
(5451, 342, 1412, 107, '11', '11', 0, 0, 1, '2019-09-02 03:44:54', '2019-09-02 04:01:27'),
(5452, 314, 1413, 97, 'i - 12', 'i - 12', 1, 1, 3, '2019-09-02 03:44:54', '2019-09-02 04:01:27'),
(5453, 312, 1413, 97, 'i - 5', 'i - 5', 0, 0, 1, '2019-09-02 03:44:54', '2019-09-02 04:01:27'),
(5454, 1066, 1413, 97, '3i - 10', '3i - 10', 0, 0, 4, '2019-09-02 03:44:54', '2019-09-02 04:01:27'),
(5455, 313, 1413, 97, '7 - 3i', '7 - 3i', 0, 0, 2, '2019-09-02 03:44:54', '2019-09-02 04:01:27'),
(5456, 1053, 1414, 283, 'Set the CausesValidation property of the text box to false.', 'Set the CausesValidation property of the text box to false.', 0, 0, 1, '2019-09-02 03:44:54', '2019-09-02 04:01:27'),
(5457, 1056, 1414, 283, 'Set the CausesValidation property of the Help button to true.', 'Set the CausesValidation property of the Help button to true.', 0, 0, 4, '2019-09-02 03:44:54', '2019-09-02 04:01:27'),
(5458, 1054, 1414, 283, 'Set the CausesValidation property of the text box to true.', 'Set the CausesValidation property of the text box to true.', 0, 0, 2, '2019-09-02 03:44:54', '2019-09-02 04:01:27'),
(5459, 1055, 1414, 283, 'Set the CausesValidation property of the Help button to false.', 'Set the CausesValidation property of the Help button to false.', 1, 1, 3, '2019-09-02 03:44:54', '2019-09-02 04:01:27'),
(5460, 299, 1415, 92, 'x < -1', 'x < -1', 1, 1, 3, '2019-09-02 03:44:54', '2019-09-02 04:01:27'),
(5461, 1061, 1415, 92, 'x > 6', 'x > 6', 0, 0, 4, '2019-09-02 03:44:54', '2019-09-02 04:01:27'),
(5462, 298, 1415, 92, 'x > 1', 'x > 1', 0, 0, 2, '2019-09-02 03:44:54', '2019-09-02 04:01:27'),
(5463, 297, 1415, 92, 'x < 6', 'x < 6', 0, 0, 1, '2019-09-02 03:44:54', '2019-09-02 04:01:27'),
(5464, 320, 1416, 99, '2.322', '2.322', 1, 1, 3, '2019-09-02 03:44:54', '2019-09-02 04:01:27'),
(5465, 1068, 1416, 99, '4.753', '4.753', 0, 0, 4, '2019-09-02 03:44:54', '2019-09-02 04:01:27'),
(5466, 318, 1416, 99, '6.25', '6.25', 0, 0, 1, '2019-09-02 03:44:54', '2019-09-02 04:01:27'),
(5467, 319, 1416, 99, '1.756', '1.756', 0, 0, 2, '2019-09-02 03:44:54', '2019-09-02 04:01:27'),
(5468, 175, 1417, 51, '8', '8', 0, 0, 2, '2019-09-02 03:44:54', '2019-09-02 04:01:27'),
(5469, 174, 1417, 51, '9', '9', 0, 0, 1, '2019-09-02 03:44:54', '2019-09-02 04:01:27'),
(5470, 911, 1417, 51, 'Runtime error', 'Runtime error', 0, 0, 4, '2019-09-02 03:44:54', '2019-09-02 04:01:27'),
(5471, 176, 1417, 51, 'Compilation error', 'Compilation error', 1, 1, 3, '2019-09-02 03:44:54', '2019-09-02 04:01:27'),
(5472, 393, 1418, 124, 'Reference type', 'Reference type', 1, 1, 1, '2019-09-02 03:44:54', '2019-09-02 04:01:27'),
(5473, 394, 1418, 124, 'Value types', 'Value types', 0, 0, 2, '2019-09-02 03:44:54', '2019-09-02 04:01:27'),
(5474, 395, 1418, 124, 'Data Type', 'Data Type', 0, 0, 3, '2019-09-02 03:44:54', '2019-09-02 04:01:27'),
(5475, 1007, 1418, 124, 'Explicit Types', 'Explicit Types', 0, 0, 4, '2019-09-02 03:44:54', '2019-09-02 04:01:27'),
(5476, 149, 1419, 42, 'void', 'void', 0, 0, 3, '2019-09-02 03:44:54', '2019-09-02 04:01:27'),
(5477, 147, 1419, 42, 'static', 'static', 0, 0, 1, '2019-09-02 03:44:54', '2019-09-02 04:01:27'),
(5478, 907, 1419, 42, 'private', 'private', 0, 0, 4, '2019-09-02 03:44:54', '2019-09-02 04:01:27'),
(5479, 148, 1419, 42, 'Boolean', 'Boolean', 1, 1, 2, '2019-09-02 03:44:54', '2019-09-02 04:01:27'),
(5480, 122, 1420, 33, 'ToInt16', 'ToInt16', 0, 0, 3, '2019-09-02 03:44:54', '2019-09-02 04:01:27'),
(5481, 120, 1420, 33, 'ToDecimal', 'ToDecimal', 0, 0, 1, '2019-09-02 03:44:54', '2019-09-02 04:01:27'),
(5482, 121, 1420, 33, 'ToDouble', 'ToDouble', 1, 1, 2, '2019-09-02 03:44:54', '2019-09-02 04:01:27'),
(5483, 901, 1420, 33, 'ToInt32', 'ToInt32', 0, 0, 4, '2019-09-02 03:44:54', '2019-09-02 04:01:27'),
(5484, 192, 1421, 57, 'Row', 'Row', 1, 1, 1, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5485, 194, 1421, 57, 'Both Row and Column', 'Both Row and Column', 0, 0, 3, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5486, 193, 1421, 57, 'Column', 'Column', 0, 0, 2, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5487, 429, 1422, 136, 'creates a button control', 'creates a button control', 0, 0, 1, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5488, 431, 1422, 136, 'instantiates button control', 'instantiates button control', 0, 0, 3, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5489, 1012, 1422, 136, 'a and c', 'a and c', 1, 1, 4, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5490, 430, 1422, 136, 'initializes a button control', 'initializes a button control', 0, 0, 2, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5491, 863, 1423, 248, 'none of the choices', 'none of the choices', 0, 0, 4, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5492, 862, 1423, 248, 'To share the data between applications', 'To share the data between applications', 1, 1, 3, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5493, 860, 1423, 248, 'To send the data from an application to another application', 'To send the data from an application to another application', 0, 0, 1, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5494, 861, 1423, 248, 'To store the data in a database', 'To store the data in a database', 0, 0, 2, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5495, 906, 1424, 39, 'Not assigned', 'Not assigned', 0, 0, 4, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5496, 138, 1424, 39, 'null', 'null', 0, 0, 1, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5497, 140, 1424, 39, 'Depends upon the type of variable', 'Depends upon the type of variable', 1, 1, 3, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5498, 139, 1424, 39, '0', '0', 0, 0, 2, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5499, 1002, 1425, 119, 'for loop', 'for loop', 1, 1, 4, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5500, 379, 1425, 119, 'do while', 'do while', 0, 0, 2, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5501, 378, 1425, 119, 'forEach loop', 'forEach loop', 0, 0, 1, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5502, 380, 1425, 119, 'while', 'while', 0, 0, 3, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5503, 954, 1426, 260, '10', '10', 0, 0, 4, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5504, 951, 1426, 260, '35', '35', 1, 1, 1, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5505, 952, 1426, 260, '20', '20', 0, 0, 2, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5506, 953, 1426, 260, '30', '30', 0, 0, 3, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5507, 333, 1427, 104, '(x-7)<sup>2</sup> +8', '(x-7)<sup>2</sup> +8', 0, 0, 1, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5508, 1073, 1427, 104, '(x+5)<sup>2</sup> -16', '(x+5)<sup>2</sup> -16', 0, 0, 4, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5509, 334, 1427, 104, '(x+5)<sup>2</sup> +16', '(x+5)<sup>2</sup> +16', 1, 1, 2, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5510, 335, 1427, 104, '(x+7)<sup>2</sup> -8', '(x+7)<sup>2</sup> -8', 0, 0, 3, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5511, 232, 1428, 70, '[[#img29]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/Cf9qY75IYjLpUVFWsICWK07cAwLtqRPDIO6JjLqT.png\" width=\"150\" height=\"150\" />', 0, 0, 2, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5512, 233, 1428, 70, '[[#img30]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/5CGn3NoMP2AFTNnuWdi3jGe97XfkU7ydkF3PldTA.png\" width=\"150\" height=\"150\" />', 0, 0, 3, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5513, 231, 1428, 70, '[[#img28]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/jkL1TWHhQQMAtCTbSz6HtJyZn8zhXmtgMQYX3Zpo.png\" width=\"150\" height=\"150\" />', 1, 1, 1, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5514, 680, 1428, 70, '[[#img31]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/VNrzOvOE3LpeuWi9ciBQDVlGrXxObvbfnI3kfNS4.png\" width=\"150\" height=\"150\" />', 0, 0, 4, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5515, 830, 1429, 212, 'No company', 'No company', 0, 0, 4, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5516, 659, 1429, 212, 'Nokia', 'Nokia', 0, 0, 3, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5517, 658, 1429, 212, 'Google', 'Google', 1, 1, 2, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5518, 657, 1429, 212, 'Apple', 'Apple', 0, 0, 1, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5519, 384, 1430, 121, 'RElational operators', 'RElational operators', 0, 0, 1, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5520, 1004, 1430, 121, 'Assignment Operators', 'Assignment Operators', 0, 0, 4, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5521, 386, 1430, 121, 'Logical operators', 'Logical operators', 1, 1, 3, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5522, 385, 1430, 121, 'Bitwise operators', 'Bitwise operators', 0, 0, 2, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5523, 699, 1431, 223, '110011', '110011', 0, 0, 1, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5524, 701, 1431, 223, '110100', '110100', 1, 1, 3, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5525, 718, 1431, 223, '100100', '100100', 0, 0, 4, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5526, 700, 1431, 223, '100001', '100001', 0, 0, 2, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5527, 1085, 1432, 116, 'even and odd', 'even and odd', 0, 0, 4, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5528, 369, 1432, 116, 'an odd function', 'an odd function', 0, 0, 1, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5529, 370, 1432, 116, 'an even function', 'an even function', 1, 1, 2, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5530, 371, 1432, 116, 'neither odd nor even', 'neither odd nor even', 0, 0, 3, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5531, 172, 1433, 50, 'Thread returns to the waiting state.', 'Thread returns to the waiting state.', 0, 0, 2, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5532, 171, 1433, 50, 'Thread returns to the ready state.', 'Thread returns to the ready state.', 1, 1, 1, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5533, 173, 1433, 50, 'Thread starts running.', 'Thread starts running.', 0, 0, 3, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5534, 853, 1434, 246, 'assets/', 'assets/', 0, 0, 2, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5535, 852, 1434, 246, 'res/', 'res/', 0, 0, 1, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5536, 854, 1434, 246, 'src/', 'src/', 1, 1, 3, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5537, 855, 1434, 246, 'bin/', 'bin/', 0, 0, 4, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5538, 402, 1435, 127, 'Radio Button', 'Radio Button', 0, 0, 1, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5539, 403, 1435, 127, 'Textbox control', 'Textbox control', 0, 0, 2, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5540, 404, 1435, 127, 'Button control', 'Button control', 1, 1, 3, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5541, 1092, 1436, 286, '0.057', '0.057', 1, 1, 1, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5542, 1095, 1436, 286, '0', '0', 0, 0, 4, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5543, 1093, 1436, 286, '0.478', '0.478', 0, 0, 2, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5544, 1094, 1436, 286, '0.001', '0.001', 0, 0, 3, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5545, 487, 1437, 155, '5', '5', 0, 0, 2, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5546, 488, 1437, 155, '6', '6', 0, 0, 3, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5547, 943, 1437, 155, '7', '7', 0, 0, 4, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5548, 486, 1437, 155, '4', '4', 1, 1, 1, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5549, 1, 1438, 1, 'x = 1', 'x = 1', 1, 1, 1, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5550, 3, 1438, 1, 'x = 2', 'x = 2', 0, 0, 3, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5551, 2, 1438, 1, 'x = 4', 'x = 4', 0, 0, 2, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5552, 251, 1439, 76, 'virtual memory', 'virtual memory', 0, 0, 3, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5553, 728, 1439, 76, 'back up', 'back up', 1, 1, 4, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5554, 249, 1439, 76, 'spooling', 'spooling', 0, 0, 1, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5555, 250, 1439, 76, 'buffering', 'buffering', 0, 0, 2, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5556, 633, 1440, 204, 'Multitasking', 'Multitasking', 0, 0, 1, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5557, 822, 1440, 204, 'All of the choices', 'All of the choices', 1, 1, 4, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5558, 634, 1440, 204, 'Bluetooth', 'Bluetooth', 0, 0, 2, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5559, 635, 1440, 204, 'Video calling', 'Video calling', 0, 0, 3, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5560, 442, 1441, 140, 'Reference type', 'Reference type', 0, 0, 2, '2019-09-02 03:44:54', '2019-09-02 04:01:28'),
(5561, 1016, 1441, 140, 'Object', 'Object', 0, 1, 4, '2019-09-02 03:44:55', '2019-09-02 04:01:28'),
(5562, 443, 1441, 140, 'Variable', 'Variable', 1, 0, 3, '2019-09-02 03:44:55', '2019-09-02 04:01:28'),
(5563, 441, 1441, 140, 'Constant', 'Constant', 0, 0, 1, '2019-09-02 03:44:55', '2019-09-02 04:01:28'),
(5564, 358, 1442, 112, '15', '15', 0, 0, 2, '2019-09-02 03:44:55', '2019-09-02 04:01:28'),
(5565, 359, 1442, 112, '2100', '2100', 1, 1, 3, '2019-09-02 03:44:55', '2019-09-02 04:01:28'),
(5566, 1081, 1442, 112, '8', '8', 0, 0, 4, '2019-09-02 03:44:55', '2019-09-02 04:01:28'),
(5567, 357, 1442, 112, '10', '10', 0, 0, 1, '2019-09-02 03:44:55', '2019-09-02 04:01:28'),
(5568, 687, 1443, 220, 'digital camera', 'digital camera', 0, 0, 1, '2019-09-02 03:44:55', '2019-09-02 04:01:28'),
(5569, 688, 1443, 220, 'scanner', 'scanner', 1, 1, 2, '2019-09-02 03:44:55', '2019-09-02 04:01:28'),
(5570, 689, 1443, 220, 'MICR', 'MICR', 0, 0, 3, '2019-09-02 03:44:55', '2019-09-02 04:01:28'),
(5571, 709, 1443, 220, 'RFID readers', 'RFID readers', 0, 0, 4, '2019-09-02 03:44:55', '2019-09-02 04:01:28'),
(5572, 978, 1444, 267, 'smallest previous integer', 'smallest previous integer', 0, 0, 1, '2019-09-02 03:44:55', '2019-09-02 04:01:28'),
(5573, 979, 1444, 267, 'greatest previous integer', 'greatest previous integer', 1, 1, 2, '2019-09-02 03:44:55', '2019-09-02 04:01:28'),
(5574, 980, 1444, 267, 'smallest following integer', 'smallest following integer', 0, 0, 3, '2019-09-02 03:44:55', '2019-09-02 04:01:28'),
(5575, 401, 1445, 126, 'TextBox control', 'TextBox control', 0, 1, 3, '2019-09-02 03:44:55', '2019-09-02 04:01:28'),
(5576, 400, 1445, 126, 'ListBox control', 'ListBox control', 1, 0, 2, '2019-09-02 03:44:55', '2019-09-02 04:01:28'),
(5577, 399, 1445, 126, 'CheckListBox control', 'CheckListBox control', 0, 0, 1, '2019-09-02 03:44:55', '2019-09-02 04:01:28'),
(5578, 490, 1446, 156, '8, 12', '8, 12', 1, 1, 2, '2019-09-02 03:44:55', '2019-09-02 04:01:28'),
(5579, 944, 1446, 156, 'None of the choices', 'None of the choices', 0, 0, 4, '2019-09-02 03:44:55', '2019-09-02 04:01:28'),
(5580, 491, 1446, 156, '4, 12', '4, 12', 0, 0, 3, '2019-09-02 03:44:55', '2019-09-02 04:01:28'),
(5581, 489, 1446, 156, '4, 8', '4, 8', 0, 0, 1, '2019-09-02 03:44:55', '2019-09-02 04:01:28'),
(5582, 136, 1447, 38, 'It is followed by one or more catch blocks.', 'It is followed by one or more catch blocks.', 0, 0, 2, '2019-09-02 03:44:55', '2019-09-02 04:01:28'),
(5583, 137, 1447, 38, 'A and B', 'A and B', 1, 1, 3, '2019-09-02 03:44:55', '2019-09-02 04:01:28'),
(5584, 135, 1447, 38, 'A try block identifies a block of code for which particular exceptions is activated.', 'A try block identifies a block of code for which particular exceptions is activated.', 0, 0, 1, '2019-09-02 03:44:55', '2019-09-02 04:01:28'),
(5585, 471, 1448, 150, '{1, 2}', '{1, 2}', 1, 1, 1, '2019-09-02 03:44:55', '2019-09-02 04:01:28'),
(5586, 472, 1448, 150, '{5, 6}', '{5, 6}', 0, 0, 2, '2019-09-02 03:44:55', '2019-09-02 04:01:28'),
(5587, 473, 1448, 150, '{2, 5}', '{2, 5}', 0, 0, 3, '2019-09-02 03:44:55', '2019-09-02 04:01:28'),
(5588, 938, 1448, 150, '{1, 6}', '{1, 6}', 0, 0, 4, '2019-09-02 03:44:55', '2019-09-02 04:01:28'),
(5589, 502, 1449, 160, 'A U B -B', 'A U B -B', 1, 1, 2, '2019-09-02 03:44:55', '2019-09-02 04:01:28'),
(5590, 503, 1449, 160, 'A ∩ B', 'A ∩ B', 0, 0, 3, '2019-09-02 03:44:55', '2019-09-02 04:01:28');
INSERT INTO `answer_sheet_test_question_choices` (`id`, `choice_id`, `answer_sheet_test_question_id`, `test_question_id`, `body`, `body_html`, `is_correct`, `is_selected`, `pos_order`, `created_at`, `updated_at`) VALUES
(5591, 501, 1449, 160, 'A‘ (Complement of A)', 'A‘ (Complement of A)', 0, 0, 1, '2019-09-02 03:44:55', '2019-09-02 04:01:28'),
(5592, 948, 1449, 160, 'B', 'B', 0, 0, 4, '2019-09-02 03:44:55', '2019-09-02 04:01:28'),
(5593, 627, 1450, 202, 'Desktop Operatng System', 'Desktop Operatng System', 0, 0, 1, '2019-09-02 03:44:55', '2019-09-02 04:01:28'),
(5594, 820, 1450, 202, 'Database', 'Database', 0, 1, 4, '2019-09-02 03:44:55', '2019-09-02 04:01:28'),
(5595, 629, 1450, 202, 'Mobile Operating System', 'Mobile Operating System', 1, 0, 3, '2019-09-02 03:44:55', '2019-09-02 04:01:28'),
(5596, 628, 1450, 202, 'Programming Language', 'Programming Language', 0, 0, 2, '2019-09-02 03:44:55', '2019-09-02 04:01:28'),
(5597, 1090, 1451, 285, '4 π', '4 π', 0, 0, 3, '2019-09-02 03:44:55', '2019-09-02 04:01:28'),
(5598, 1091, 1451, 285, 'π', 'π', 1, 1, 4, '2019-09-02 03:44:55', '2019-09-02 04:01:28'),
(5599, 1088, 1451, 285, '4 π <sup>2</sup>', '4 π <sup>2</sup>', 0, 0, 1, '2019-09-02 03:44:55', '2019-09-02 04:01:28'),
(5600, 1089, 1451, 285, '2 π', '2 π', 0, 0, 2, '2019-09-02 03:44:55', '2019-09-02 04:01:28'),
(5601, 1106, 1452, 289, '6', '6', 0, 0, 3, '2019-09-02 03:44:55', '2019-09-02 04:01:28'),
(5602, 1107, 1452, 289, '8', '8', 0, 1, 4, '2019-09-02 03:44:55', '2019-09-02 04:01:28'),
(5603, 1104, 1452, 289, '5', '5', 0, 0, 1, '2019-09-02 03:44:55', '2019-09-02 04:01:28'),
(5604, 1105, 1452, 289, '7', '7', 1, 0, 2, '2019-09-02 03:44:55', '2019-09-02 04:01:28'),
(5605, 300, 1453, 93, 'x ≤ 5', 'x ≤ 5', 0, 0, 1, '2019-09-02 03:44:55', '2019-09-02 04:01:28'),
(5606, 301, 1453, 93, 'x ≥ 5', 'x ≥ 5', 1, 0, 2, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5607, 302, 1453, 93, 'x ≥ -5', 'x ≥ -5', 0, 1, 3, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5608, 1062, 1453, 93, 'x ≤ -5', 'x ≤ -5', 0, 0, 4, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5609, 1014, 1454, 138, 'a and b', 'a and b', 0, 0, 4, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5610, 437, 1454, 138, 'Throws', 'Throws', 1, 1, 3, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5611, 436, 1454, 138, 'Catches', 'Catches', 0, 0, 2, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5612, 435, 1454, 138, 'Trys', 'Trys', 0, 0, 1, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5613, 1035, 1455, 278, 'Message1\nMessage3\nMessage4', 'Message1<br />\nMessage3<br />\nMessage4', 1, 1, 3, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5614, 1036, 1455, 278, 'Message1\nMessage3\nMessage2\nMessage4', 'Message1<br />\nMessage3<br />\nMessage2<br />\nMessage4', 0, 0, 4, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5615, 1034, 1455, 278, 'Message1\nMessage2\nMessage3\nMessage4', 'Message1<br />\nMessage2<br />\nMessage3<br />\nMessage4', 0, 0, 2, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5616, 1033, 1455, 278, 'Message1\nMessage4', 'Message1<br />\nMessage4', 0, 0, 1, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5617, 879, 1456, 252, 'None of the above', 'None of the above', 0, 0, 4, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5618, 876, 1456, 252, 'A class used to hold states and objects', 'A class used to hold states and objects', 1, 1, 1, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5619, 878, 1456, 252, 'A mandatory class in android', 'A mandatory class in android', 0, 0, 3, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5620, 877, 1456, 252, 'A bean class can be passed from one activity to another.', 'A bean class can be passed from one activity to another.', 0, 0, 2, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5621, 196, 1457, 58, '1 3 5 7 9', '1 3 5 7 9', 0, 0, 2, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5622, 197, 1457, 58, '0 1 2 3 4 5 6 7 8 9', '0 1 2 3 4 5 6 7 8 9', 0, 0, 3, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5623, 195, 1457, 58, '0 2 4 6 8', '0 2 4 6 8', 1, 1, 1, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5624, 917, 1457, 58, '1 2 3 4 5 6 7 8 9 10', '1 2 3 4 5 6 7 8 9 10', 0, 0, 4, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5625, 705, 1458, 225, '531', '531', 0, 0, 1, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5626, 707, 1458, 225, '44', '44', 0, 0, 3, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5627, 714, 1458, 225, '135', '135', 0, 0, 4, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5628, 706, 1458, 225, '127', '127', 1, 1, 2, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5629, 636, 1459, 205, 'Device Driver', 'Device Driver', 0, 0, 1, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5630, 638, 1459, 205, 'WiFi driver', 'WiFi driver', 1, 1, 3, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5631, 637, 1459, 205, 'Video Driver', 'Video Driver', 0, 0, 2, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5632, 823, 1459, 205, 'Bluetooth driver', 'Bluetooth driver', 0, 0, 4, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5633, 987, 1460, 270, '35', '35', 1, 1, 1, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5634, 989, 1460, 270, '25', '25', 0, 0, 3, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5635, 988, 1460, 270, '45', '45', 0, 0, 2, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5636, 179, 1461, 52, '400', '400', 0, 0, 3, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5637, 178, 1461, 52, '200', '200', 1, 1, 2, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5638, 912, 1461, 52, '100', '100', 0, 0, 4, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5639, 177, 1461, 52, '12', '12', 0, 0, 1, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5640, 725, 1462, 79, 'Primary Storage', 'Primary Storage', 1, 1, 4, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5641, 258, 1462, 79, 'Control unit', 'Control unit', 0, 0, 1, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5642, 260, 1462, 79, 'Registers', 'Registers', 0, 0, 3, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5643, 259, 1462, 79, 'ALU', 'ALU', 0, 0, 2, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5644, 715, 1463, 87, 'fetch, decode, execute and store', 'fetch, decode, execute and store', 1, 1, 4, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5645, 283, 1463, 87, 'decode, execute, store and fetch', 'decode, execute, store and fetch', 0, 0, 2, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5646, 284, 1463, 87, 'decode, fetch, store and execute', 'decode, fetch, store and execute', 0, 0, 3, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5647, 282, 1463, 87, 'fetch, execute, store and decode', 'fetch, execute, store and decode', 0, 0, 1, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5648, 354, 1464, 111, '(0 , π/2)', '(0 , π/2)', 0, 1, 1, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5649, 1080, 1464, 111, '(3 π / 2 , 2 π)', '(3 π / 2 , 2 π)', 0, 0, 4, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5650, 356, 1464, 111, '(π , 3 π / 2)', '(π , 3 π / 2)', 0, 0, 3, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5651, 355, 1464, 111, '(π/2 , π)', '(π/2 , π)', 1, 0, 2, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5652, 114, 1465, 31, '10', '10', 0, 0, 1, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5653, 116, 1465, 31, '12', '12', 0, 0, 3, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5654, 115, 1465, 31, '20', '20', 1, 1, 2, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5655, 145, 1466, 41, 'public int main(String[] args)', 'public int main(String[] args)', 0, 0, 2, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5656, 144, 1466, 41, 'public static int main(String[] args)', 'public static int main(String[] args)', 0, 0, 1, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5657, 146, 1466, 41, 'public static void main(String[] args)', 'public static void main(String[] args)', 1, 1, 3, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5658, 842, 1467, 243, 'manifest.XML', 'manifest.XML', 0, 0, 3, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5659, 840, 1467, 243, 'R.style', 'R.style', 1, 1, 1, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5660, 841, 1467, 243, 'X.style', 'X.style', 0, 0, 2, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5661, 843, 1467, 243, 'application', 'application', 0, 0, 4, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5662, 410, 1468, 129, 'ListView Control', 'ListView Control', 0, 0, 3, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5663, 409, 1468, 129, 'LinkLabel control', 'LinkLabel control', 1, 1, 2, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5664, 408, 1468, 129, 'GroupBox control', 'GroupBox control', 0, 0, 1, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5665, 884, 1469, 254, 'httprequest(get/post) and returns response from the server', 'httprequest(get/post) and returns response from the server', 1, 1, 1, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5666, 885, 1469, 254, 'Cookies management', 'Cookies management', 0, 0, 2, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5667, 886, 1469, 254, 'Authentication management', 'Authentication management', 0, 0, 3, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5668, 887, 1469, 254, 'None of the above', 'None of the above', 0, 0, 4, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5669, 141, 1470, 40, 'type.', 'type.', 1, 1, 1, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5670, 143, 1470, 40, 'Both of the above.', 'Both of the above.', 0, 0, 3, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5671, 142, 1470, 40, 'object.', 'object.', 0, 0, 2, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5672, 663, 1471, 214, 'Linux kernel', 'Linux kernel', 1, 1, 1, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5673, 664, 1471, 214, 'Windows kernel', 'Windows kernel', 0, 0, 2, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5674, 832, 1471, 214, 'Hybrid kernel', 'Hybrid kernel', 0, 0, 4, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5675, 665, 1471, 214, 'MAC kernel', 'MAC kernel', 0, 0, 3, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5676, 847, 1472, 244, 'none of these', 'none of these', 0, 0, 4, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5677, 845, 1472, 244, 'updates()', 'updates()', 0, 0, 2, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5678, 846, 1472, 244, 'commit()', 'commit()', 0, 1, 3, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5679, 844, 1472, 244, 'commitUpdates()', 'commitUpdates()', 1, 0, 1, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5680, 1029, 1473, 277, 'The code will generate an error because it lacks a catch block.', 'The code will generate an error because it lacks a catch block.', 0, 0, 1, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5681, 1031, 1473, 277, 'The code will generate an error because the finally block is placed immediately after the try block.', 'The code will generate an error because the finally block is placed immediately after the try block.', 0, 0, 3, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5682, 1030, 1473, 277, 'The code will generate an error because it lacks a throw statement.', 'The code will generate an error because it lacks a throw statement.', 0, 0, 2, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5683, 1032, 1473, 277, 'The code will compile without an error.', 'The code will compile without an error.', 1, 1, 4, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5684, 655, 1474, 211, 'Firefox', 'Firefox', 0, 0, 2, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5685, 656, 1474, 211, 'Open source Webkit', 'Open source Webkit', 1, 1, 3, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5686, 654, 1474, 211, 'Chrome', 'Chrome', 0, 0, 1, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5687, 829, 1474, 211, 'Opera', 'Opera', 0, 0, 4, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5688, 509, 1475, 162, 'n( A U B U C)=90', 'n( A U B U C)=90', 0, 0, 3, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5689, 950, 1475, 162, 'All of the mentioned', 'All of the mentioned', 1, 1, 4, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5690, 508, 1475, 162, 'n( B U C)=0', 'n( B U C)=0', 0, 0, 2, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5691, 507, 1475, 162, 'n(A U B)=0', 'n(A U B)=0', 0, 0, 1, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5692, 453, 1476, 144, '10', '10', 0, 0, 1, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5693, 454, 1476, 144, '5', '5', 1, 1, 2, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5694, 455, 1476, 144, '3', '3', 0, 0, 3, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5695, 932, 1476, 144, '20', '20', 0, 0, 4, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5696, 679, 1477, 68, '[[#img26]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/tBuCNpani0PgWIFN01ztVOAj4FS4CBDAiTW9J8lB.png\" width=\"150\" height=\"150\" />', 0, 0, 4, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5697, 225, 1477, 68, '[[#img23]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/IyLDJJaUUQ0aIZOMyEjh4JO72W4HpXtPj2CfMKZL.png\" width=\"150\" height=\"150\" />', 1, 1, 1, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5698, 226, 1477, 68, '[[#img24]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/nVLwXww7AT2RBfzhH1tPQMxdLPF1iWuunHzErZRh.png\" width=\"150\" height=\"150\" />', 0, 0, 2, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5699, 227, 1477, 68, '[[#img25]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/rDh656ehodyPQmn7CxxjGK2H29sx2bh6LDz9INfN.png\" width=\"150\" height=\"150\" />', 0, 0, 3, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5700, 1064, 1478, 95, '-12i', '-12i', 0, 0, 4, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5701, 308, 1478, 95, '-12', '-12', 0, 0, 3, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5702, 307, 1478, 95, 'You cannot find the square root of a negative number', 'You cannot find the square root of a negative number', 0, 0, 2, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5703, 306, 1478, 95, '12i', '12i', 1, 1, 1, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5704, 256, 1479, 78, 'Unicode', 'Unicode', 1, 1, 2, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5705, 255, 1479, 78, 'ASCII', 'ASCII', 0, 0, 1, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5706, 726, 1479, 78, 'ANSI', 'ANSI', 0, 0, 4, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5707, 257, 1479, 78, 'EBCDIC', 'EBCDIC', 0, 0, 3, '2019-09-02 03:44:55', '2019-09-02 04:01:29'),
(5708, 414, 1480, 131, 'Get()', 'Get()', 0, 0, 1, '2019-09-02 03:44:56', '2019-09-02 04:01:29'),
(5709, 416, 1480, 131, 'Show()', 'Show()', 1, 1, 3, '2019-09-02 03:44:56', '2019-09-02 04:01:29'),
(5710, 415, 1480, 131, 'Enable()', 'Enable()', 0, 0, 2, '2019-09-02 03:44:56', '2019-09-02 04:01:29'),
(5711, 668, 1481, 215, '2.6', '2.6', 0, 0, 3, '2019-09-02 03:44:56', '2019-09-02 04:01:29'),
(5712, 667, 1481, 215, '2.3 (Gingerbread)', '2.3 (Gingerbread)', 1, 1, 2, '2019-09-02 03:44:56', '2019-09-02 04:01:29'),
(5713, 833, 1481, 215, '2.2 (Froyo)', '2.2 (Froyo)', 0, 0, 4, '2019-09-02 03:44:56', '2019-09-02 04:01:29'),
(5714, 666, 1481, 215, '3.0 (Honeycomb)', '3.0 (Honeycomb)', 0, 0, 1, '2019-09-02 03:44:56', '2019-09-02 04:01:29'),
(5715, 206, 1482, 61, 'heap space and stack space', 'heap space and stack space', 0, 0, 3, '2019-09-02 03:44:56', '2019-09-02 04:01:29'),
(5716, 920, 1482, 61, 'first generation memory', 'first generation memory', 0, 0, 4, '2019-09-02 03:44:56', '2019-09-02 04:01:29'),
(5717, 204, 1482, 61, 'heap space', 'heap space', 1, 1, 1, '2019-09-02 03:44:56', '2019-09-02 04:01:29'),
(5718, 205, 1482, 61, 'stack space', 'stack space', 0, 0, 2, '2019-09-02 03:44:56', '2019-09-02 04:01:29'),
(5719, 449, 1483, 142, '{1, 2, 5, 9}', '{1, 2, 5, 9}', 0, 1, 3, '2019-09-02 03:44:56', '2019-09-02 04:01:29'),
(5720, 448, 1483, 142, '{1, 3, 5, 7, 9}', '{1, 3, 5, 7, 9}', 1, 0, 2, '2019-09-02 03:44:56', '2019-09-02 04:01:29'),
(5721, 447, 1483, 142, '{1, 2, 3}', '{1, 2, 3}', 0, 0, 1, '2019-09-02 03:44:56', '2019-09-02 04:01:29'),
(5722, 930, 1483, 142, '{1, 5, 7, 9, 11}', '{1, 5, 7, 9, 11}', 0, 0, 4, '2019-09-02 03:44:56', '2019-09-02 04:01:29'),
(5723, 220, 1484, 66, '163', '163', 1, 1, 2, '2019-09-02 03:44:56', '2019-09-02 04:01:29'),
(5724, 219, 1484, 66, '121', '121', 0, 0, 1, '2019-09-02 03:44:56', '2019-09-02 04:01:29'),
(5725, 676, 1484, 66, '212', '212', 0, 0, 4, '2019-09-02 03:44:56', '2019-09-02 04:01:29'),
(5726, 221, 1484, 66, '199', '199', 0, 0, 3, '2019-09-02 03:44:56', '2019-09-02 04:01:29'),
(5727, 1082, 1485, 113, '3! * 2!', '3! * 2!', 0, 1, 4, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5728, 360, 1485, 113, '5!', '5!', 0, 0, 1, '2019-09-02 03:44:56', '2019-09-02 04:01:29'),
(5729, 361, 1485, 113, '3!', '3!', 1, 0, 2, '2019-09-02 03:44:56', '2019-09-02 04:01:29'),
(5730, 362, 1485, 113, '2!', '2!', 0, 0, 3, '2019-09-02 03:44:56', '2019-09-02 04:01:29'),
(5731, 937, 1486, 149, '{1, 5, 6, 3}', '{1, 5, 6, 3}', 0, 0, 4, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5732, 468, 1486, 149, '{1, 2, 6, 1}', '{1, 2, 6, 1}', 0, 0, 1, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5733, 470, 1486, 149, '{1, 2, 1, 2}', '{1, 2, 1, 2}', 0, 0, 3, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5734, 469, 1486, 149, '{1, 2, 5, 6}', '{1, 2, 5, 6}', 1, 1, 2, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5735, 450, 1487, 143, 'One', 'One', 1, 1, 1, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5736, 451, 1487, 143, 'Two', 'Two', 0, 0, 2, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5737, 931, 1487, 143, 'Three', 'Three', 0, 0, 4, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5738, 452, 1487, 143, 'Zero', 'Zero', 0, 0, 3, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5739, 457, 1488, 145, '{(1, 1), (2, 2), (a, a), (b, b)}', '{(1, 1), (2, 2), (a, a), (b, b)}', 0, 0, 2, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5740, 933, 1488, 145, '{(1, 1), (a, a), (2, a), (1, b)}', '{(1, 1), (a, a), (2, a), (1, b)}', 0, 0, 4, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5741, 458, 1488, 145, '{(1, a), (2, a), (1, b), (2, b)}', '{(1, a), (2, a), (1, b), (2, b)}', 1, 1, 3, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5742, 456, 1488, 145, '{(1, a), (1, b), (2, a), (b, b)}', '{(1, a), (1, b), (2, a), (b, b)}', 0, 0, 1, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5743, 686, 1489, 219, 'Modem', 'Modem', 1, 1, 3, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5744, 710, 1489, 219, 'Wireless access point', 'Wireless access point', 0, 0, 4, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5745, 684, 1489, 219, 'Repeater', 'Repeater', 0, 0, 1, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5746, 685, 1489, 219, 'Switch', 'Switch', 0, 0, 2, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5747, 289, 1490, 89, 'Virtual memory', 'Virtual memory', 1, 1, 2, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5748, 288, 1490, 89, 'Virtual private network', 'Virtual private network', 0, 0, 1, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5749, 712, 1490, 89, 'None of them', 'None of them', 0, 0, 4, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5750, 290, 1490, 89, 'Virtual Machine', 'Virtual Machine', 0, 0, 3, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5751, 1009, 1491, 132, 'While', 'While', 0, 0, 4, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5752, 418, 1491, 132, 'Switch', 'Switch', 1, 1, 2, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5753, 417, 1491, 132, 'If', 'If', 0, 0, 1, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5754, 419, 1491, 132, 'For', 'For', 0, 0, 3, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5755, 474, 1492, 151, 'Union', 'Union', 0, 0, 1, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5756, 476, 1492, 151, 'Intersection', 'Intersection', 1, 1, 3, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5757, 475, 1492, 151, 'Difference', 'Difference', 0, 0, 2, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5758, 939, 1492, 151, 'Complement', 'Complement', 0, 0, 4, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5759, 125, 1493, 34, '&</a>', '&</a>', 0, 0, 3, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5760, 123, 1493, 34, 'sizeof', 'sizeof', 1, 1, 1, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5761, 124, 1493, 34, 'typeof', 'typeof', 0, 0, 2, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5762, 902, 1493, 34, '*', '*', 0, 0, 4, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5763, 1022, 1494, 275, 'Several catch blocks for a try block, arranged in order starting with Exception and ending with the most specific exception.', 'Several catch blocks for a try block, arranged in order starting with Exception and ending with the most specific exception.', 0, 0, 2, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5764, 1023, 1494, 275, 'Several catch blocks within one try block, arranged starting with the most specific exception and ending with Exception.', 'Several catch blocks within one try block, arranged starting with the most specific exception and ending with Exception.', 1, 1, 3, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5765, 1024, 1494, 275, 'The catch blocks should be used only when a finally block is not used.', 'The catch blocks should be used only when a finally block is not used.', 0, 0, 4, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5766, 1021, 1494, 275, 'Only one catch block for each try block.', 'Only one catch block for each try block.', 0, 0, 1, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5767, 935, 1495, 147, 'Empty', 'Empty', 0, 0, 4, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5768, 464, 1495, 147, 'Subset', 'Subset', 0, 1, 3, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5769, 463, 1495, 147, 'Finite', 'Finite', 0, 0, 2, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5770, 462, 1495, 147, 'Infinite', 'Infinite', 1, 0, 1, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5771, 253, 1496, 77, 'syntax error', 'syntax error', 0, 0, 2, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5772, 727, 1496, 77, 'linker error', 'linker error', 0, 0, 4, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5773, 254, 1496, 77, 'run time error', 'run time error', 0, 0, 3, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5774, 252, 1496, 77, 'logic error', 'logic error', 1, 1, 1, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5775, 268, 1497, 82, '-9', '-9', 1, 1, 2, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5776, 722, 1497, 82, '22', '22', 0, 0, 4, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5777, 267, 1497, 82, '-23', '-23', 0, 0, 1, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5778, 269, 1497, 82, '-7', '-7', 0, 0, 3, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5779, 117, 1498, 32, 'abstract', 'abstract', 0, 0, 1, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5780, 119, 1498, 32, 'foreach', 'foreach', 0, 0, 3, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5781, 118, 1498, 32, 'as', 'as', 0, 0, 2, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5782, 900, 1498, 32, 'All of the choices', 'All of the choices', 1, 1, 4, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5783, 643, 1499, 207, 'Application Debug Bridge', 'Application Debug Bridge', 0, 0, 2, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5784, 825, 1499, 207, 'Application data bridge', 'Application data bridge', 0, 0, 4, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5785, 642, 1499, 207, 'Android Debug Bridge', 'Android Debug Bridge', 1, 1, 1, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5786, 644, 1499, 207, 'Android data bridge', 'Android data bridge', 0, 0, 3, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5787, 434, 1500, 137, 'Have different return types and arguments than the parent class', 'Have different return types and arguments than the parent class', 0, 0, 3, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5788, 433, 1500, 137, 'Maintain the same return type and arguments as the parent class, but implement it differently', 'Maintain the same return type and arguments as the parent class, but implement it differently', 1, 1, 2, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5789, 432, 1500, 137, 'Override the parent class methods but maintain the implementation', 'Override the parent class methods but maintain the implementation', 0, 0, 1, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5790, 1013, 1500, 137, 'Are Virtual', 'Are Virtual', 0, 0, 4, '2019-09-02 03:44:56', '2019-09-02 04:01:30'),
(5791, 684, 1501, 219, 'Repeater', 'Repeater', 0, 0, 1, '2019-09-02 04:02:40', '2019-09-02 04:09:02'),
(5792, 710, 1501, 219, 'Wireless access point', 'Wireless access point', 0, 0, 4, '2019-09-02 04:02:40', '2019-09-02 04:09:02'),
(5793, 685, 1501, 219, 'Switch', 'Switch', 0, 0, 2, '2019-09-02 04:02:40', '2019-09-02 04:09:02'),
(5794, 686, 1501, 219, 'Modem', 'Modem', 1, 1, 3, '2019-09-02 04:02:40', '2019-09-02 04:09:02'),
(5795, 243, 1502, 74, 'Operating System', 'Operating System', 0, 0, 1, '2019-09-02 04:02:40', '2019-09-02 04:09:02'),
(5796, 245, 1502, 74, 'Computer', 'Computer', 1, 1, 3, '2019-09-02 04:02:40', '2019-09-02 04:09:02'),
(5797, 244, 1502, 74, 'Motherboard', 'Motherboard', 0, 0, 2, '2019-09-02 04:02:40', '2019-09-02 04:09:02'),
(5798, 730, 1502, 74, 'CPU', 'CPU', 0, 0, 4, '2019-09-02 04:02:40', '2019-09-02 04:09:02'),
(5799, 400, 1503, 126, 'ListBox control', 'ListBox control', 1, 1, 2, '2019-09-02 04:02:40', '2019-09-02 04:09:02'),
(5800, 399, 1503, 126, 'CheckListBox control', 'CheckListBox control', 0, 0, 1, '2019-09-02 04:02:40', '2019-09-02 04:09:02'),
(5801, 401, 1503, 126, 'TextBox control', 'TextBox control', 0, 0, 3, '2019-09-02 04:02:40', '2019-09-02 04:09:02'),
(5802, 885, 1504, 254, 'Cookies management', 'Cookies management', 0, 0, 2, '2019-09-02 04:02:40', '2019-09-02 04:09:02'),
(5803, 884, 1504, 254, 'httprequest(get/post) and returns response from the server', 'httprequest(get/post) and returns response from the server', 1, 1, 1, '2019-09-02 04:02:40', '2019-09-02 04:09:03'),
(5804, 887, 1504, 254, 'None of the above', 'None of the above', 0, 0, 4, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5805, 886, 1504, 254, 'Authentication management', 'Authentication management', 0, 0, 3, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5806, 2, 1505, 1, 'x = 4', 'x = 4', 0, 0, 2, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5807, 1, 1505, 1, 'x = 1', 'x = 1', 1, 1, 1, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5808, 3, 1505, 1, 'x = 2', 'x = 2', 0, 0, 3, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5809, 389, 1506, 122, 'Logical operators', 'Logical operators', 0, 0, 3, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5810, 1005, 1506, 122, 'Assignment opeartors', 'Assignment opeartors', 0, 0, 4, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5811, 387, 1506, 122, 'unary operators', 'unary operators', 1, 1, 1, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5812, 388, 1506, 122, 'Binary operators', 'Binary operators', 0, 0, 2, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5813, 386, 1507, 121, 'Logical operators', 'Logical operators', 1, 1, 3, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5814, 385, 1507, 121, 'Bitwise operators', 'Bitwise operators', 0, 0, 2, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5815, 1004, 1507, 121, 'Assignment Operators', 'Assignment Operators', 0, 0, 4, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5816, 384, 1507, 121, 'RElational operators', 'RElational operators', 0, 0, 1, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5817, 1023, 1508, 275, 'Several catch blocks within one try block, arranged starting with the most specific exception and ending with Exception.', 'Several catch blocks within one try block, arranged starting with the most specific exception and ending with Exception.', 1, 1, 3, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5818, 1022, 1508, 275, 'Several catch blocks for a try block, arranged in order starting with Exception and ending with the most specific exception.', 'Several catch blocks for a try block, arranged in order starting with Exception and ending with the most specific exception.', 0, 0, 2, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5819, 1021, 1508, 275, 'Only one catch block for each try block.', 'Only one catch block for each try block.', 0, 0, 1, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5820, 1024, 1508, 275, 'The catch blocks should be used only when a finally block is not used.', 'The catch blocks should be used only when a finally block is not used.', 0, 0, 4, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5821, 638, 1509, 205, 'WiFi driver', 'WiFi driver', 1, 1, 3, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5822, 636, 1509, 205, 'Device Driver', 'Device Driver', 0, 0, 1, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5823, 637, 1509, 205, 'Video Driver', 'Video Driver', 0, 0, 2, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5824, 823, 1509, 205, 'Bluetooth driver', 'Bluetooth driver', 0, 0, 4, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5825, 980, 1510, 267, 'smallest following integer', 'smallest following integer', 0, 0, 3, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5826, 978, 1510, 267, 'smallest previous integer', 'smallest previous integer', 0, 0, 1, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5827, 979, 1510, 267, 'greatest previous integer', 'greatest previous integer', 1, 1, 2, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5828, 491, 1511, 156, '4, 12', '4, 12', 0, 0, 3, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5829, 490, 1511, 156, '8, 12', '8, 12', 1, 1, 2, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5830, 489, 1511, 156, '4, 8', '4, 8', 0, 0, 1, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5831, 944, 1511, 156, 'None of the choices', 'None of the choices', 0, 0, 4, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5832, 1092, 1512, 286, '0.057', '0.057', 1, 1, 1, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5833, 1093, 1512, 286, '0.478', '0.478', 0, 0, 2, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5834, 1095, 1512, 286, '0', '0', 0, 0, 4, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5835, 1094, 1512, 286, '0.001', '0.001', 0, 0, 3, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5836, 855, 1513, 246, 'bin/', 'bin/', 0, 0, 4, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5837, 854, 1513, 246, 'src/', 'src/', 1, 1, 3, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5838, 853, 1513, 246, 'assets/', 'assets/', 0, 0, 2, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5839, 852, 1513, 246, 'res/', 'res/', 0, 0, 1, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5840, 715, 1514, 87, 'fetch, decode, execute and store', 'fetch, decode, execute and store', 1, 1, 4, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5841, 284, 1514, 87, 'decode, fetch, store and execute', 'decode, fetch, store and execute', 0, 0, 3, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5842, 283, 1514, 87, 'decode, execute, store and fetch', 'decode, execute, store and fetch', 0, 0, 2, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5843, 282, 1514, 87, 'fetch, execute, store and decode', 'fetch, execute, store and decode', 0, 0, 1, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5844, 343, 1515, 107, '48', '48', 0, 0, 2, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5845, 1076, 1515, 107, '22', '22', 1, 1, 4, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5846, 344, 1515, 107, '-12', '-12', 0, 0, 3, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5847, 342, 1515, 107, '11', '11', 0, 0, 1, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5848, 988, 1516, 270, '45', '45', 0, 0, 2, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5849, 989, 1516, 270, '25', '25', 0, 1, 3, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5850, 987, 1516, 270, '35', '35', 1, 0, 1, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5851, 364, 1517, 114, 'mean = 10 , standard deviation = 6', 'mean = 10 , standard deviation = 6', 0, 0, 2, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5852, 365, 1517, 114, 'mean = 15 , standard deviation = 1', 'mean = 15 , standard deviation = 1', 1, 0, 3, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5853, 1083, 1517, 114, 'mean = 10 , standard deviation = 1', 'mean = 10 , standard deviation = 1', 0, 0, 4, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5854, 363, 1517, 114, 'mean = 15 , standard deviation = 6', 'mean = 15 , standard deviation = 6', 0, 1, 1, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5855, 205, 1518, 61, 'stack space', 'stack space', 0, 0, 2, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5856, 204, 1518, 61, 'heap space', 'heap space', 1, 1, 1, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5857, 206, 1518, 61, 'heap space and stack space', 'heap space and stack space', 0, 0, 3, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5858, 920, 1518, 61, 'first generation memory', 'first generation memory', 0, 0, 4, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5859, 118, 1519, 32, 'as', 'as', 0, 0, 2, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5860, 119, 1519, 32, 'foreach', 'foreach', 0, 0, 3, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5861, 900, 1519, 32, 'All of the choices', 'All of the choices', 1, 1, 4, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5862, 117, 1519, 32, 'abstract', 'abstract', 0, 0, 1, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5863, 832, 1520, 214, 'Hybrid kernel', 'Hybrid kernel', 0, 0, 4, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5864, 665, 1520, 214, 'MAC kernel', 'MAC kernel', 0, 0, 3, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5865, 663, 1520, 214, 'Linux kernel', 'Linux kernel', 1, 1, 1, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5866, 664, 1520, 214, 'Windows kernel', 'Windows kernel', 0, 0, 2, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5867, 1066, 1521, 97, '3i - 10', '3i - 10', 0, 0, 4, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5868, 314, 1521, 97, 'i - 12', 'i - 12', 1, 1, 3, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5869, 313, 1521, 97, '7 - 3i', '7 - 3i', 0, 0, 2, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5870, 312, 1521, 97, 'i - 5', 'i - 5', 0, 0, 1, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5871, 714, 1522, 225, '135', '135', 0, 0, 4, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5872, 707, 1522, 225, '44', '44', 0, 0, 3, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5873, 705, 1522, 225, '531', '531', 0, 0, 1, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5874, 706, 1522, 225, '127', '127', 1, 1, 2, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5875, 395, 1523, 124, 'Data Type', 'Data Type', 0, 0, 3, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5876, 393, 1523, 124, 'Reference type', 'Reference type', 1, 1, 1, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5877, 394, 1523, 124, 'Value types', 'Value types', 0, 0, 2, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5878, 1007, 1523, 124, 'Explicit Types', 'Explicit Types', 0, 0, 4, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5879, 147, 1524, 42, 'static', 'static', 0, 0, 1, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5880, 907, 1524, 42, 'private', 'private', 0, 0, 4, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5881, 149, 1524, 42, 'void', 'void', 0, 0, 3, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5882, 148, 1524, 42, 'Boolean', 'Boolean', 1, 1, 2, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5883, 144, 1525, 41, 'public static int main(String[] args)', 'public static int main(String[] args)', 0, 0, 1, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5884, 146, 1525, 41, 'public static void main(String[] args)', 'public static void main(String[] args)', 1, 0, 3, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5885, 145, 1525, 41, 'public int main(String[] args)', 'public int main(String[] args)', 0, 1, 2, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5886, 1014, 1526, 138, 'a and b', 'a and b', 0, 0, 4, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5887, 436, 1526, 138, 'Catches', 'Catches', 0, 0, 2, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5888, 437, 1526, 138, 'Throws', 'Throws', 1, 0, 3, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5889, 435, 1526, 138, 'Trys', 'Trys', 0, 1, 1, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5890, 509, 1527, 162, 'n( A U B U C)=90', 'n( A U B U C)=90', 0, 0, 3, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5891, 508, 1527, 162, 'n( B U C)=0', 'n( B U C)=0', 0, 0, 2, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5892, 507, 1527, 162, 'n(A U B)=0', 'n(A U B)=0', 0, 0, 1, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5893, 950, 1527, 162, 'All of the mentioned', 'All of the mentioned', 1, 1, 4, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5894, 306, 1528, 95, '12i', '12i', 1, 1, 1, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5895, 1064, 1528, 95, '-12i', '-12i', 0, 0, 4, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5896, 307, 1528, 95, 'You cannot find the square root of a negative number', 'You cannot find the square root of a negative number', 0, 0, 2, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5897, 308, 1528, 95, '-12', '-12', 0, 0, 3, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5898, 473, 1529, 150, '{2, 5}', '{2, 5}', 0, 0, 3, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5899, 471, 1529, 150, '{1, 2}', '{1, 2}', 1, 1, 1, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5900, 472, 1529, 150, '{5, 6}', '{5, 6}', 0, 0, 2, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5901, 938, 1529, 150, '{1, 6}', '{1, 6}', 0, 0, 4, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5902, 357, 1530, 112, '10', '10', 0, 0, 1, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5903, 359, 1530, 112, '2100', '2100', 1, 1, 3, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5904, 358, 1530, 112, '15', '15', 0, 0, 2, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5905, 1081, 1530, 112, '8', '8', 0, 0, 4, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5906, 722, 1531, 82, '22', '22', 0, 0, 4, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5907, 269, 1531, 82, '-7', '-7', 0, 0, 3, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5908, 267, 1531, 82, '-23', '-23', 0, 0, 1, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5909, 268, 1531, 82, '-9', '-9', 1, 1, 2, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5910, 1029, 1532, 277, 'The code will generate an error because it lacks a catch block.', 'The code will generate an error because it lacks a catch block.', 0, 0, 1, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5911, 1030, 1532, 277, 'The code will generate an error because it lacks a throw statement.', 'The code will generate an error because it lacks a throw statement.', 0, 0, 2, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5912, 1032, 1532, 277, 'The code will compile without an error.', 'The code will compile without an error.', 1, 1, 4, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5913, 1031, 1532, 277, 'The code will generate an error because the finally block is placed immediately after the try block.', 'The code will generate an error because the finally block is placed immediately after the try block.', 0, 0, 3, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5914, 862, 1533, 248, 'To share the data between applications', 'To share the data between applications', 1, 1, 3, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5915, 863, 1533, 248, 'none of the choices', 'none of the choices', 0, 0, 4, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5916, 860, 1533, 248, 'To send the data from an application to another application', 'To send the data from an application to another application', 0, 0, 1, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5917, 861, 1533, 248, 'To store the data in a database', 'To store the data in a database', 0, 0, 2, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5918, 894, 1534, 256, 'A & B', 'A & B', 1, 1, 3, '2019-09-02 04:02:41', '2019-09-02 04:09:03'),
(5919, 895, 1534, 256, 'Cursor is used to store data permanently.', 'Cursor is used to store data permanently.', 0, 0, 4, '2019-09-02 04:02:42', '2019-09-02 04:09:03'),
(5920, 893, 1534, 256, 'Cursor is used to store the temporary result.', 'Cursor is used to store the temporary result.', 0, 0, 2, '2019-09-02 04:02:42', '2019-09-02 04:09:03'),
(5921, 892, 1534, 256, 'Content values are key pair values, which are updated or inserted in the database', 'Content values are key pair values, which are updated or inserted in the database', 0, 0, 1, '2019-09-02 04:02:42', '2019-09-02 04:09:03'),
(5922, 408, 1535, 129, 'GroupBox control', 'GroupBox control', 0, 0, 1, '2019-09-02 04:02:42', '2019-09-02 04:09:03'),
(5923, 409, 1535, 129, 'LinkLabel control', 'LinkLabel control', 1, 1, 2, '2019-09-02 04:02:42', '2019-09-02 04:09:03'),
(5924, 410, 1535, 129, 'ListView Control', 'ListView Control', 0, 0, 3, '2019-09-02 04:02:42', '2019-09-02 04:09:03'),
(5925, 911, 1536, 51, 'Runtime error', 'Runtime error', 0, 0, 4, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5926, 175, 1536, 51, '8', '8', 0, 0, 2, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5927, 174, 1536, 51, '9', '9', 0, 0, 1, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5928, 176, 1536, 51, 'Compilation error', 'Compilation error', 1, 1, 3, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5929, 935, 1537, 147, 'Empty', 'Empty', 0, 0, 4, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5930, 463, 1537, 147, 'Finite', 'Finite', 0, 0, 2, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5931, 462, 1537, 147, 'Infinite', 'Infinite', 1, 1, 1, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5932, 464, 1537, 147, 'Subset', 'Subset', 0, 0, 3, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5933, 676, 1538, 66, '212', '212', 0, 0, 4, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5934, 221, 1538, 66, '199', '199', 0, 0, 3, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5935, 219, 1538, 66, '121', '121', 0, 0, 1, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5936, 220, 1538, 66, '163', '163', 1, 1, 2, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5937, 226, 1539, 68, '[[#img24]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/nVLwXww7AT2RBfzhH1tPQMxdLPF1iWuunHzErZRh.png\" width=\"150\" height=\"150\" />', 0, 0, 2, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5938, 679, 1539, 68, '[[#img26]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/tBuCNpani0PgWIFN01ztVOAj4FS4CBDAiTW9J8lB.png\" width=\"150\" height=\"150\" />', 0, 0, 4, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5939, 225, 1539, 68, '[[#img23]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/IyLDJJaUUQ0aIZOMyEjh4JO72W4HpXtPj2CfMKZL.png\" width=\"150\" height=\"150\" />', 1, 0, 1, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5940, 227, 1539, 68, '[[#img25]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/rDh656ehodyPQmn7CxxjGK2H29sx2bh6LDz9INfN.png\" width=\"150\" height=\"150\" />', 0, 1, 3, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5941, 1090, 1540, 285, '4 π', '4 π', 0, 0, 3, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5942, 1089, 1540, 285, '2 π', '2 π', 0, 0, 2, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5943, 1088, 1540, 285, '4 π <sup>2</sup>', '4 π <sup>2</sup>', 0, 0, 1, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5944, 1091, 1540, 285, 'π', 'π', 1, 1, 4, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5945, 488, 1541, 155, '6', '6', 0, 0, 3, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5946, 487, 1541, 155, '5', '5', 0, 0, 2, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5947, 486, 1541, 155, '4', '4', 1, 1, 1, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5948, 943, 1541, 155, '7', '7', 0, 0, 4, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5949, 290, 1542, 89, 'Virtual Machine', 'Virtual Machine', 0, 0, 3, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5950, 289, 1542, 89, 'Virtual memory', 'Virtual memory', 1, 1, 2, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5951, 288, 1542, 89, 'Virtual private network', 'Virtual private network', 0, 0, 1, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5952, 712, 1542, 89, 'None of them', 'None of them', 0, 0, 4, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5953, 178, 1543, 52, '200', '200', 1, 1, 2, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5954, 179, 1543, 52, '400', '400', 0, 0, 3, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5955, 912, 1543, 52, '100', '100', 0, 0, 4, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5956, 177, 1543, 52, '12', '12', 0, 0, 1, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5957, 419, 1544, 132, 'For', 'For', 0, 0, 3, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5958, 417, 1544, 132, 'If', 'If', 0, 0, 1, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5959, 418, 1544, 132, 'Switch', 'Switch', 1, 0, 2, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5960, 1009, 1544, 132, 'While', 'While', 0, 1, 4, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5961, 193, 1545, 57, 'Column', 'Column', 0, 0, 2, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5962, 194, 1545, 57, 'Both Row and Column', 'Both Row and Column', 0, 0, 3, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5963, 192, 1545, 57, 'Row', 'Row', 1, 1, 1, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5964, 354, 1546, 111, '(0 , π/2)', '(0 , π/2)', 0, 0, 1, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5965, 355, 1546, 111, '(π/2 , π)', '(π/2 , π)', 1, 1, 2, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5966, 1080, 1546, 111, '(3 π / 2 , 2 π)', '(3 π / 2 , 2 π)', 0, 0, 4, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5967, 356, 1546, 111, '(π , 3 π / 2)', '(π , 3 π / 2)', 0, 0, 3, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5968, 138, 1547, 39, 'null', 'null', 0, 0, 1, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5969, 140, 1547, 39, 'Depends upon the type of variable', 'Depends upon the type of variable', 1, 1, 3, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5970, 139, 1547, 39, '0', '0', 0, 0, 2, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5971, 906, 1547, 39, 'Not assigned', 'Not assigned', 0, 0, 4, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5972, 843, 1548, 243, 'application', 'application', 0, 0, 4, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5973, 842, 1548, 243, 'manifest.XML', 'manifest.XML', 0, 0, 3, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5974, 840, 1548, 243, 'R.style', 'R.style', 1, 1, 1, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5975, 841, 1548, 243, 'X.style', 'X.style', 0, 0, 2, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5976, 953, 1549, 260, '30', '30', 0, 0, 3, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5977, 952, 1549, 260, '20', '20', 0, 0, 2, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5978, 951, 1549, 260, '35', '35', 1, 1, 1, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5979, 954, 1549, 260, '10', '10', 0, 0, 4, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5980, 1085, 1550, 116, 'even and odd', 'even and odd', 0, 0, 4, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5981, 370, 1550, 116, 'an even function', 'an even function', 1, 1, 2, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5982, 369, 1550, 116, 'an odd function', 'an odd function', 0, 0, 1, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5983, 371, 1550, 116, 'neither odd nor even', 'neither odd nor even', 0, 0, 3, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5984, 628, 1551, 202, 'Programming Language', 'Programming Language', 0, 0, 2, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5985, 820, 1551, 202, 'Database', 'Database', 0, 0, 4, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5986, 627, 1551, 202, 'Desktop Operatng System', 'Desktop Operatng System', 0, 0, 1, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5987, 629, 1551, 202, 'Mobile Operating System', 'Mobile Operating System', 1, 1, 3, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5988, 930, 1552, 142, '{1, 5, 7, 9, 11}', '{1, 5, 7, 9, 11}', 0, 0, 4, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5989, 449, 1552, 142, '{1, 2, 5, 9}', '{1, 2, 5, 9}', 0, 0, 3, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5990, 448, 1552, 142, '{1, 3, 5, 7, 9}', '{1, 3, 5, 7, 9}', 1, 1, 2, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5991, 447, 1552, 142, '{1, 2, 3}', '{1, 2, 3}', 0, 0, 1, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5992, 251, 1553, 76, 'virtual memory', 'virtual memory', 0, 0, 3, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5993, 249, 1553, 76, 'spooling', 'spooling', 0, 0, 1, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5994, 728, 1553, 76, 'back up', 'back up', 1, 1, 4, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5995, 250, 1553, 76, 'buffering', 'buffering', 0, 0, 2, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5996, 301, 1554, 93, 'x ≥ 5', 'x ≥ 5', 1, 0, 2, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5997, 300, 1554, 93, 'x ≤ 5', 'x ≤ 5', 0, 1, 1, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5998, 1062, 1554, 93, 'x ≤ -5', 'x ≤ -5', 0, 0, 4, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(5999, 302, 1554, 93, 'x ≥ -5', 'x ≥ -5', 0, 0, 3, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(6000, 254, 1555, 77, 'run time error', 'run time error', 0, 0, 3, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(6001, 252, 1555, 77, 'logic error', 'logic error', 1, 1, 1, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(6002, 727, 1555, 77, 'linker error', 'linker error', 0, 0, 4, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(6003, 253, 1555, 77, 'syntax error', 'syntax error', 0, 0, 2, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(6004, 404, 1556, 127, 'Button control', 'Button control', 1, 1, 3, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(6005, 403, 1556, 127, 'Textbox control', 'Textbox control', 0, 0, 2, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(6006, 402, 1556, 127, 'Radio Button', 'Radio Button', 0, 0, 1, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(6007, 467, 1557, 148, '7', '7', 0, 0, 3, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(6008, 936, 1557, 148, '9', '9', 0, 0, 4, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(6009, 465, 1557, 148, '8', '8', 1, 1, 1, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(6010, 466, 1557, 148, '6', '6', 0, 0, 2, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(6011, 141, 1558, 40, 'type.', 'type.', 1, 1, 1, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(6012, 143, 1558, 40, 'Both of the above.', 'Both of the above.', 0, 0, 3, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(6013, 142, 1558, 40, 'object.', 'object.', 0, 0, 2, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(6014, 260, 1559, 79, 'Registers', 'Registers', 0, 0, 3, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(6015, 259, 1559, 79, 'ALU', 'ALU', 0, 0, 2, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(6016, 258, 1559, 79, 'Control unit', 'Control unit', 0, 0, 1, '2019-09-02 04:02:42', '2019-09-02 04:09:04');
INSERT INTO `answer_sheet_test_question_choices` (`id`, `choice_id`, `answer_sheet_test_question_id`, `test_question_id`, `body`, `body_html`, `is_correct`, `is_selected`, `pos_order`, `created_at`, `updated_at`) VALUES
(6017, 725, 1559, 79, 'Primary Storage', 'Primary Storage', 1, 1, 4, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(6018, 125, 1560, 34, '&</a>', '&</a>', 0, 0, 3, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(6019, 123, 1560, 34, 'sizeof', 'sizeof', 1, 1, 1, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(6020, 902, 1560, 34, '*', '*', 0, 0, 4, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(6021, 124, 1560, 34, 'typeof', 'typeof', 0, 0, 2, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(6022, 644, 1561, 207, 'Android data bridge', 'Android data bridge', 0, 0, 3, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(6023, 643, 1561, 207, 'Application Debug Bridge', 'Application Debug Bridge', 0, 0, 2, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(6024, 825, 1561, 207, 'Application data bridge', 'Application data bridge', 0, 1, 4, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(6025, 642, 1561, 207, 'Android Debug Bridge', 'Android Debug Bridge', 1, 0, 1, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(6026, 239, 1562, 72, 'Anti-virus software', 'Anti-virus software', 0, 0, 3, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(6027, 238, 1562, 72, 'Utility software', 'Utility software', 1, 1, 2, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(6028, 237, 1562, 72, 'Operating system software', 'Operating system software', 0, 0, 1, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(6029, 732, 1562, 72, 'Disk optimization software', 'Disk optimization software', 0, 0, 4, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(6030, 1034, 1563, 278, 'Message1\nMessage2\nMessage3\nMessage4', 'Message1<br />\nMessage2<br />\nMessage3<br />\nMessage4', 0, 0, 2, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(6031, 1035, 1563, 278, 'Message1\nMessage3\nMessage4', 'Message1<br />\nMessage3<br />\nMessage4', 1, 1, 3, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(6032, 1033, 1563, 278, 'Message1\nMessage4', 'Message1<br />\nMessage4', 0, 0, 1, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(6033, 1036, 1563, 278, 'Message1\nMessage3\nMessage2\nMessage4', 'Message1<br />\nMessage3<br />\nMessage2<br />\nMessage4', 0, 0, 4, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(6034, 443, 1564, 140, 'Variable', 'Variable', 1, 1, 3, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(6035, 441, 1564, 140, 'Constant', 'Constant', 0, 0, 1, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(6036, 442, 1564, 140, 'Reference type', 'Reference type', 0, 0, 2, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(6037, 1016, 1564, 140, 'Object', 'Object', 0, 0, 4, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(6038, 298, 1565, 92, 'x > 1', 'x > 1', 0, 0, 2, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(6039, 1061, 1565, 92, 'x > 6', 'x > 6', 0, 0, 4, '2019-09-02 04:02:42', '2019-09-02 04:09:04'),
(6040, 297, 1565, 92, 'x < 6', 'x < 6', 0, 0, 1, '2019-09-02 04:02:43', '2019-09-02 04:09:04'),
(6041, 299, 1565, 92, 'x < -1', 'x < -1', 1, 1, 3, '2019-09-02 04:02:43', '2019-09-02 04:09:04'),
(6042, 458, 1566, 145, '{(1, a), (2, a), (1, b), (2, b)}', '{(1, a), (2, a), (1, b), (2, b)}', 1, 1, 3, '2019-09-02 04:02:43', '2019-09-02 04:09:04'),
(6043, 456, 1566, 145, '{(1, a), (1, b), (2, a), (b, b)}', '{(1, a), (1, b), (2, a), (b, b)}', 0, 0, 1, '2019-09-02 04:02:43', '2019-09-02 04:09:04'),
(6044, 457, 1566, 145, '{(1, 1), (2, 2), (a, a), (b, b)}', '{(1, 1), (2, 2), (a, a), (b, b)}', 0, 0, 2, '2019-09-02 04:02:43', '2019-09-02 04:09:04'),
(6045, 933, 1566, 145, '{(1, 1), (a, a), (2, a), (1, b)}', '{(1, 1), (a, a), (2, a), (1, b)}', 0, 0, 4, '2019-09-02 04:02:43', '2019-09-02 04:09:04'),
(6046, 631, 1567, 203, 'MPEG', 'MPEG', 0, 0, 2, '2019-09-02 04:02:43', '2019-09-02 04:09:04'),
(6047, 632, 1567, 203, 'AVI', 'AVI', 1, 1, 3, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6048, 821, 1567, 203, 'MIDI', 'MIDI', 0, 0, 4, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6049, 630, 1567, 203, 'MP4', 'MP4', 0, 0, 1, '2019-09-02 04:02:43', '2019-09-02 04:09:04'),
(6050, 451, 1568, 143, 'Two', 'Two', 0, 0, 2, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6051, 452, 1568, 143, 'Zero', 'Zero', 0, 0, 3, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6052, 450, 1568, 143, 'One', 'One', 1, 1, 1, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6053, 931, 1568, 143, 'Three', 'Three', 0, 0, 4, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6054, 334, 1569, 104, '(x+5)<sup>2</sup> +16', '(x+5)<sup>2</sup> +16', 1, 1, 2, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6055, 1073, 1569, 104, '(x+5)<sup>2</sup> -16', '(x+5)<sup>2</sup> -16', 0, 0, 4, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6056, 333, 1569, 104, '(x-7)<sup>2</sup> +8', '(x-7)<sup>2</sup> +8', 0, 0, 1, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6057, 335, 1569, 104, '(x+7)<sup>2</sup> -8', '(x+7)<sup>2</sup> -8', 0, 0, 3, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6058, 430, 1570, 136, 'initializes a button control', 'initializes a button control', 0, 0, 2, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6059, 429, 1570, 136, 'creates a button control', 'creates a button control', 0, 0, 1, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6060, 1012, 1570, 136, 'a and c', 'a and c', 1, 1, 4, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6061, 431, 1570, 136, 'instantiates button control', 'instantiates button control', 0, 0, 3, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6062, 433, 1571, 137, 'Maintain the same return type and arguments as the parent class, but implement it differently', 'Maintain the same return type and arguments as the parent class, but implement it differently', 1, 1, 2, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6063, 1013, 1571, 137, 'Are Virtual', 'Are Virtual', 0, 0, 4, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6064, 434, 1571, 137, 'Have different return types and arguments than the parent class', 'Have different return types and arguments than the parent class', 0, 0, 3, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6065, 432, 1571, 137, 'Override the parent class methods but maintain the implementation', 'Override the parent class methods but maintain the implementation', 0, 0, 1, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6066, 845, 1572, 244, 'updates()', 'updates()', 0, 0, 2, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6067, 847, 1572, 244, 'none of these', 'none of these', 0, 0, 4, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6068, 844, 1572, 244, 'commitUpdates()', 'commitUpdates()', 1, 1, 1, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6069, 846, 1572, 244, 'commit()', 'commit()', 0, 0, 3, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6070, 829, 1573, 211, 'Opera', 'Opera', 0, 0, 4, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6071, 656, 1573, 211, 'Open source Webkit', 'Open source Webkit', 1, 1, 3, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6072, 654, 1573, 211, 'Chrome', 'Chrome', 0, 0, 1, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6073, 655, 1573, 211, 'Firefox', 'Firefox', 0, 0, 2, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6074, 167, 1574, 48, 'JRE is an implementation of the Java Virtual Machine which executes Java programs.', 'JRE is an implementation of the Java Virtual Machine which executes Java programs.', 1, 0, 3, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6075, 166, 1574, 48, 'JRE is an application development framework.', 'JRE is an application development framework.', 0, 1, 2, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6076, 165, 1574, 48, 'JRE is a java based GUI application.', 'JRE is a java based GUI application.', 0, 0, 1, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6077, 454, 1575, 144, '5', '5', 1, 1, 2, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6078, 455, 1575, 144, '3', '3', 0, 0, 3, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6079, 932, 1575, 144, '20', '20', 0, 0, 4, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6080, 453, 1575, 144, '10', '10', 0, 0, 1, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6081, 114, 1576, 31, '10', '10', 0, 0, 1, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6082, 116, 1576, 31, '12', '12', 0, 0, 3, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6083, 115, 1576, 31, '20', '20', 1, 1, 2, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6084, 291, 1577, 90, 'bit', 'bit', 0, 0, 1, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6085, 711, 1577, 90, 'megabyte', 'megabyte', 0, 0, 4, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6086, 292, 1577, 90, 'byte', 'byte', 1, 1, 2, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6087, 293, 1577, 90, 'kilobyte', 'kilobyte', 0, 0, 3, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6088, 918, 1578, 59, '1', '1', 1, 1, 4, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6089, 198, 1578, 59, '3', '3', 0, 0, 1, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6090, 200, 1578, 59, '6', '6', 0, 0, 3, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6091, 199, 1578, 59, '0', '0', 0, 0, 2, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6092, 122, 1579, 33, 'ToInt16', 'ToInt16', 0, 0, 3, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6093, 120, 1579, 33, 'ToDecimal', 'ToDecimal', 0, 0, 1, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6094, 121, 1579, 33, 'ToDouble', 'ToDouble', 1, 1, 2, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6095, 901, 1579, 33, 'ToInt32', 'ToInt32', 0, 0, 4, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6096, 1077, 1580, 108, '1 500 000', '1 500 000', 0, 0, 4, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6097, 347, 1580, 108, '1 000 000', '1 000 000', 0, 0, 3, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6098, 346, 1580, 108, '1 852 000', '1 852 000', 0, 0, 2, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6099, 345, 1580, 108, '1 846 000', '1 846 000', 1, 1, 1, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6100, 173, 1581, 50, 'Thread starts running.', 'Thread starts running.', 0, 0, 3, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6101, 172, 1581, 50, 'Thread returns to the waiting state.', 'Thread returns to the waiting state.', 0, 0, 2, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6102, 171, 1581, 50, 'Thread returns to the ready state.', 'Thread returns to the ready state.', 1, 1, 1, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6103, 701, 1582, 223, '110100', '110100', 1, 0, 3, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6104, 700, 1582, 223, '100001', '100001', 0, 0, 2, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6105, 699, 1582, 223, '110011', '110011', 0, 1, 1, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6106, 718, 1582, 223, '100100', '100100', 0, 0, 4, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6107, 667, 1583, 215, '2.3 (Gingerbread)', '2.3 (Gingerbread)', 1, 1, 2, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6108, 833, 1583, 215, '2.2 (Froyo)', '2.2 (Froyo)', 0, 0, 4, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6109, 666, 1583, 215, '3.0 (Honeycomb)', '3.0 (Honeycomb)', 0, 0, 1, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6110, 668, 1583, 215, '2.6', '2.6', 0, 0, 3, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6111, 416, 1584, 131, 'Show()', 'Show()', 1, 1, 3, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6112, 415, 1584, 131, 'Enable()', 'Enable()', 0, 0, 2, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6113, 414, 1584, 131, 'Get()', 'Get()', 0, 0, 1, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6114, 726, 1585, 78, 'ANSI', 'ANSI', 0, 0, 4, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6115, 257, 1585, 78, 'EBCDIC', 'EBCDIC', 0, 0, 3, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6116, 255, 1585, 78, 'ASCII', 'ASCII', 0, 0, 1, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6117, 256, 1585, 78, 'Unicode', 'Unicode', 1, 1, 2, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6118, 877, 1586, 252, 'A bean class can be passed from one activity to another.', 'A bean class can be passed from one activity to another.', 0, 0, 2, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6119, 876, 1586, 252, 'A class used to hold states and objects', 'A class used to hold states and objects', 1, 1, 1, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6120, 878, 1586, 252, 'A mandatory class in android', 'A mandatory class in android', 0, 0, 3, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6121, 879, 1586, 252, 'None of the above', 'None of the above', 0, 0, 4, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6122, 939, 1587, 151, 'Complement', 'Complement', 0, 0, 4, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6123, 475, 1587, 151, 'Difference', 'Difference', 0, 0, 2, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6124, 474, 1587, 151, 'Union', 'Union', 0, 0, 1, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6125, 476, 1587, 151, 'Intersection', 'Intersection', 1, 1, 3, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6126, 196, 1588, 58, '1 3 5 7 9', '1 3 5 7 9', 0, 0, 2, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6127, 195, 1588, 58, '0 2 4 6 8', '0 2 4 6 8', 1, 1, 1, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6128, 917, 1588, 58, '1 2 3 4 5 6 7 8 9 10', '1 2 3 4 5 6 7 8 9 10', 0, 0, 4, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6129, 197, 1588, 58, '0 1 2 3 4 5 6 7 8 9', '0 1 2 3 4 5 6 7 8 9', 0, 0, 3, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6130, 822, 1589, 204, 'All of the choices', 'All of the choices', 1, 1, 4, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6131, 634, 1589, 204, 'Bluetooth', 'Bluetooth', 0, 0, 2, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6132, 633, 1589, 204, 'Multitasking', 'Multitasking', 0, 0, 1, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6133, 635, 1589, 204, 'Video calling', 'Video calling', 0, 0, 3, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6134, 709, 1590, 220, 'RFID readers', 'RFID readers', 0, 0, 4, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6135, 689, 1590, 220, 'MICR', 'MICR', 0, 0, 3, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6136, 688, 1590, 220, 'scanner', 'scanner', 1, 1, 2, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6137, 687, 1590, 220, 'digital camera', 'digital camera', 0, 0, 1, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6138, 378, 1591, 119, 'forEach loop', 'forEach loop', 0, 0, 1, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6139, 1002, 1591, 119, 'for loop', 'for loop', 1, 1, 4, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6140, 379, 1591, 119, 'do while', 'do while', 0, 0, 2, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6141, 380, 1591, 119, 'while', 'while', 0, 0, 3, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6142, 502, 1592, 160, 'A U B -B', 'A U B -B', 1, 1, 2, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6143, 503, 1592, 160, 'A ∩ B', 'A ∩ B', 0, 0, 3, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6144, 501, 1592, 160, 'A‘ (Complement of A)', 'A‘ (Complement of A)', 0, 0, 1, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6145, 948, 1592, 160, 'B', 'B', 0, 0, 4, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6146, 137, 1593, 38, 'A and B', 'A and B', 1, 1, 3, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6147, 136, 1593, 38, 'It is followed by one or more catch blocks.', 'It is followed by one or more catch blocks.', 0, 0, 2, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6148, 135, 1593, 38, 'A try block identifies a block of code for which particular exceptions is activated.', 'A try block identifies a block of code for which particular exceptions is activated.', 0, 0, 1, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6149, 360, 1594, 113, '5!', '5!', 0, 0, 1, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6150, 361, 1594, 113, '3!', '3!', 1, 1, 2, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6151, 1082, 1594, 113, '3! * 2!', '3! * 2!', 0, 0, 4, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6152, 362, 1594, 113, '2!', '2!', 0, 0, 3, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6153, 1107, 1595, 289, '8', '8', 0, 0, 4, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6154, 1106, 1595, 289, '6', '6', 0, 0, 3, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6155, 1105, 1595, 289, '7', '7', 1, 1, 2, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6156, 1104, 1595, 289, '5', '5', 0, 0, 1, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6157, 830, 1596, 212, 'No company', 'No company', 0, 0, 4, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6158, 658, 1596, 212, 'Google', 'Google', 1, 1, 2, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6159, 657, 1596, 212, 'Apple', 'Apple', 0, 0, 1, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6160, 659, 1596, 212, 'Nokia', 'Nokia', 0, 0, 3, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6161, 1055, 1597, 283, 'Set the CausesValidation property of the Help button to false.', 'Set the CausesValidation property of the Help button to false.', 1, 1, 3, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6162, 1056, 1597, 283, 'Set the CausesValidation property of the Help button to true.', 'Set the CausesValidation property of the Help button to true.', 0, 0, 4, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6163, 1053, 1597, 283, 'Set the CausesValidation property of the text box to false.', 'Set the CausesValidation property of the text box to false.', 0, 0, 1, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6164, 1054, 1597, 283, 'Set the CausesValidation property of the text box to true.', 'Set the CausesValidation property of the text box to true.', 0, 0, 2, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6165, 680, 1598, 70, '[[#img31]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/VNrzOvOE3LpeuWi9ciBQDVlGrXxObvbfnI3kfNS4.png\" width=\"150\" height=\"150\" />', 0, 0, 4, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6166, 231, 1598, 70, '[[#img28]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/jkL1TWHhQQMAtCTbSz6HtJyZn8zhXmtgMQYX3Zpo.png\" width=\"150\" height=\"150\" />', 1, 1, 1, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6167, 233, 1598, 70, '[[#img30]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/5CGn3NoMP2AFTNnuWdi3jGe97XfkU7ydkF3PldTA.png\" width=\"150\" height=\"150\" />', 0, 0, 3, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6168, 232, 1598, 70, '[[#img29]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/Cf9qY75IYjLpUVFWsICWK07cAwLtqRPDIO6JjLqT.png\" width=\"150\" height=\"150\" />', 0, 0, 2, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6169, 320, 1599, 99, '2.322', '2.322', 1, 1, 3, '2019-09-02 04:02:43', '2019-09-02 04:09:06'),
(6170, 1068, 1599, 99, '4.753', '4.753', 0, 0, 4, '2019-09-02 04:02:43', '2019-09-02 04:09:06'),
(6171, 319, 1599, 99, '1.756', '1.756', 0, 0, 2, '2019-09-02 04:02:43', '2019-09-02 04:09:06'),
(6172, 318, 1599, 99, '6.25', '6.25', 0, 0, 1, '2019-09-02 04:02:43', '2019-09-02 04:09:05'),
(6173, 937, 1600, 149, '{1, 5, 6, 3}', '{1, 5, 6, 3}', 0, 0, 4, '2019-09-02 04:02:43', '2019-09-02 04:09:06'),
(6174, 470, 1600, 149, '{1, 2, 1, 2}', '{1, 2, 1, 2}', 0, 0, 3, '2019-09-02 04:02:43', '2019-09-02 04:09:06'),
(6175, 469, 1600, 149, '{1, 2, 5, 6}', '{1, 2, 5, 6}', 1, 1, 2, '2019-09-02 04:02:43', '2019-09-02 04:09:06'),
(6176, 468, 1600, 149, '{1, 2, 6, 1}', '{1, 2, 6, 1}', 0, 0, 1, '2019-09-02 04:02:43', '2019-09-02 04:09:06'),
(6177, 254, 1601, 77, 'run time error', 'run time error', 0, 0, 3, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6178, 727, 1601, 77, 'linker error', 'linker error', 0, 0, 4, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6179, 253, 1601, 77, 'syntax error', 'syntax error', 0, 0, 2, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6180, 252, 1601, 77, 'logic error', 'logic error', 1, 1, 1, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6181, 714, 1602, 225, '135', '135', 0, 0, 4, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6182, 707, 1602, 225, '44', '44', 0, 0, 3, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6183, 705, 1602, 225, '531', '531', 0, 0, 1, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6184, 706, 1602, 225, '127', '127', 1, 1, 2, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6185, 486, 1603, 155, '4', '4', 1, 0, 1, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6186, 943, 1603, 155, '7', '7', 0, 1, 4, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6187, 487, 1603, 155, '5', '5', 0, 0, 2, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6188, 488, 1603, 155, '6', '6', 0, 0, 3, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6189, 198, 1604, 59, '3', '3', 0, 0, 1, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6190, 200, 1604, 59, '6', '6', 0, 0, 3, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6191, 918, 1604, 59, '1', '1', 1, 1, 4, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6192, 199, 1604, 59, '0', '0', 0, 0, 2, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6193, 1107, 1605, 289, '8', '8', 0, 0, 4, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6194, 1106, 1605, 289, '6', '6', 0, 1, 3, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6195, 1105, 1605, 289, '7', '7', 1, 0, 2, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6196, 1104, 1605, 289, '5', '5', 0, 0, 1, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6197, 289, 1606, 89, 'Virtual memory', 'Virtual memory', 1, 1, 2, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6198, 288, 1606, 89, 'Virtual private network', 'Virtual private network', 0, 0, 1, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6199, 290, 1606, 89, 'Virtual Machine', 'Virtual Machine', 0, 0, 3, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6200, 712, 1606, 89, 'None of them', 'None of them', 0, 0, 4, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6201, 823, 1607, 205, 'Bluetooth driver', 'Bluetooth driver', 0, 0, 4, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6202, 636, 1607, 205, 'Device Driver', 'Device Driver', 0, 0, 1, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6203, 638, 1607, 205, 'WiFi driver', 'WiFi driver', 1, 1, 3, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6204, 637, 1607, 205, 'Video Driver', 'Video Driver', 0, 0, 2, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6205, 655, 1608, 211, 'Firefox', 'Firefox', 0, 0, 2, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6206, 829, 1608, 211, 'Opera', 'Opera', 0, 0, 4, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6207, 656, 1608, 211, 'Open source Webkit', 'Open source Webkit', 1, 0, 3, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6208, 654, 1608, 211, 'Chrome', 'Chrome', 0, 1, 1, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6209, 144, 1609, 41, 'public static int main(String[] args)', 'public static int main(String[] args)', 0, 0, 1, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6210, 145, 1609, 41, 'public int main(String[] args)', 'public int main(String[] args)', 0, 0, 2, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6211, 146, 1609, 41, 'public static void main(String[] args)', 'public static void main(String[] args)', 1, 1, 3, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6212, 251, 1610, 76, 'virtual memory', 'virtual memory', 0, 0, 3, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6213, 250, 1610, 76, 'buffering', 'buffering', 0, 0, 2, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6214, 249, 1610, 76, 'spooling', 'spooling', 0, 0, 1, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6215, 728, 1610, 76, 'back up', 'back up', 1, 1, 4, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6216, 2, 1611, 1, 'x = 4', 'x = 4', 0, 0, 2, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6217, 1, 1611, 1, 'x = 1', 'x = 1', 1, 0, 1, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6218, 3, 1611, 1, 'x = 2', 'x = 2', 0, 1, 3, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6219, 730, 1612, 74, 'CPU', 'CPU', 0, 0, 4, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6220, 243, 1612, 74, 'Operating System', 'Operating System', 0, 0, 1, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6221, 245, 1612, 74, 'Computer', 'Computer', 1, 1, 3, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6222, 244, 1612, 74, 'Motherboard', 'Motherboard', 0, 0, 2, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6223, 465, 1613, 148, '8', '8', 1, 0, 1, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6224, 466, 1613, 148, '6', '6', 0, 0, 2, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6225, 936, 1613, 148, '9', '9', 0, 1, 4, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6226, 467, 1613, 148, '7', '7', 0, 0, 3, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6227, 314, 1614, 97, 'i - 12', 'i - 12', 1, 1, 3, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6228, 1066, 1614, 97, '3i - 10', '3i - 10', 0, 0, 4, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6229, 313, 1614, 97, '7 - 3i', '7 - 3i', 0, 0, 2, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6230, 312, 1614, 97, 'i - 5', 'i - 5', 0, 0, 1, '2019-09-02 04:09:55', '2019-09-02 04:19:20'),
(6231, 830, 1615, 212, 'No company', 'No company', 0, 0, 4, '2019-09-02 04:09:55', '2019-09-02 04:19:21'),
(6232, 657, 1615, 212, 'Apple', 'Apple', 0, 1, 1, '2019-09-02 04:09:55', '2019-09-02 04:19:21'),
(6233, 659, 1615, 212, 'Nokia', 'Nokia', 0, 0, 3, '2019-09-02 04:09:55', '2019-09-02 04:19:21'),
(6234, 658, 1615, 212, 'Google', 'Google', 1, 0, 2, '2019-09-02 04:09:55', '2019-09-02 04:19:21'),
(6235, 1007, 1616, 124, 'Explicit Types', 'Explicit Types', 0, 0, 4, '2019-09-02 04:09:55', '2019-09-02 04:19:21'),
(6236, 393, 1616, 124, 'Reference type', 'Reference type', 1, 1, 1, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6237, 394, 1616, 124, 'Value types', 'Value types', 0, 0, 2, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6238, 395, 1616, 124, 'Data Type', 'Data Type', 0, 0, 3, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6239, 900, 1617, 32, 'All of the choices', 'All of the choices', 1, 0, 4, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6240, 118, 1617, 32, 'as', 'as', 0, 1, 2, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6241, 117, 1617, 32, 'abstract', 'abstract', 0, 0, 1, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6242, 119, 1617, 32, 'foreach', 'foreach', 0, 0, 3, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6243, 206, 1618, 61, 'heap space and stack space', 'heap space and stack space', 0, 0, 3, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6244, 920, 1618, 61, 'first generation memory', 'first generation memory', 0, 0, 4, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6245, 205, 1618, 61, 'stack space', 'stack space', 0, 0, 2, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6246, 204, 1618, 61, 'heap space', 'heap space', 1, 1, 1, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6247, 173, 1619, 50, 'Thread starts running.', 'Thread starts running.', 0, 0, 3, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6248, 172, 1619, 50, 'Thread returns to the waiting state.', 'Thread returns to the waiting state.', 0, 0, 2, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6249, 171, 1619, 50, 'Thread returns to the ready state.', 'Thread returns to the ready state.', 1, 1, 1, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6250, 298, 1620, 92, 'x > 1', 'x > 1', 0, 0, 2, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6251, 299, 1620, 92, 'x < -1', 'x < -1', 1, 1, 3, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6252, 1061, 1620, 92, 'x > 6', 'x > 6', 0, 0, 4, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6253, 297, 1620, 92, 'x < 6', 'x < 6', 0, 0, 1, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6254, 402, 1621, 127, 'Radio Button', 'Radio Button', 0, 0, 1, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6255, 403, 1621, 127, 'Textbox control', 'Textbox control', 0, 0, 2, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6256, 404, 1621, 127, 'Button control', 'Button control', 1, 1, 3, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6257, 937, 1622, 149, '{1, 5, 6, 3}', '{1, 5, 6, 3}', 0, 0, 4, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6258, 470, 1622, 149, '{1, 2, 1, 2}', '{1, 2, 1, 2}', 0, 1, 3, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6259, 468, 1622, 149, '{1, 2, 6, 1}', '{1, 2, 6, 1}', 0, 0, 1, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6260, 469, 1622, 149, '{1, 2, 5, 6}', '{1, 2, 5, 6}', 1, 0, 2, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6261, 197, 1623, 58, '0 1 2 3 4 5 6 7 8 9', '0 1 2 3 4 5 6 7 8 9', 0, 0, 3, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6262, 917, 1623, 58, '1 2 3 4 5 6 7 8 9 10', '1 2 3 4 5 6 7 8 9 10', 0, 0, 4, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6263, 195, 1623, 58, '0 2 4 6 8', '0 2 4 6 8', 1, 1, 1, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6264, 196, 1623, 58, '1 3 5 7 9', '1 3 5 7 9', 0, 0, 2, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6265, 400, 1624, 126, 'ListBox control', 'ListBox control', 1, 1, 2, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6266, 399, 1624, 126, 'CheckListBox control', 'CheckListBox control', 0, 0, 1, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6267, 401, 1624, 126, 'TextBox control', 'TextBox control', 0, 0, 3, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6268, 822, 1625, 204, 'All of the choices', 'All of the choices', 1, 1, 4, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6269, 635, 1625, 204, 'Video calling', 'Video calling', 0, 0, 3, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6270, 634, 1625, 204, 'Bluetooth', 'Bluetooth', 0, 0, 2, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6271, 633, 1625, 204, 'Multitasking', 'Multitasking', 0, 0, 1, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6272, 821, 1626, 203, 'MIDI', 'MIDI', 0, 1, 4, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6273, 631, 1626, 203, 'MPEG', 'MPEG', 0, 0, 2, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6274, 632, 1626, 203, 'AVI', 'AVI', 1, 0, 3, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6275, 630, 1626, 203, 'MP4', 'MP4', 0, 0, 1, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6276, 462, 1627, 147, 'Infinite', 'Infinite', 1, 1, 1, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6277, 464, 1627, 147, 'Subset', 'Subset', 0, 0, 3, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6278, 463, 1627, 147, 'Finite', 'Finite', 0, 0, 2, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6279, 935, 1627, 147, 'Empty', 'Empty', 0, 0, 4, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6280, 980, 1628, 267, 'smallest following integer', 'smallest following integer', 0, 0, 3, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6281, 979, 1628, 267, 'greatest previous integer', 'greatest previous integer', 1, 1, 2, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6282, 978, 1628, 267, 'smallest previous integer', 'smallest previous integer', 0, 0, 1, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6283, 114, 1629, 31, '10', '10', 0, 1, 1, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6284, 116, 1629, 31, '12', '12', 0, 0, 3, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6285, 115, 1629, 31, '20', '20', 1, 0, 2, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6286, 1056, 1630, 283, 'Set the CausesValidation property of the Help button to true.', 'Set the CausesValidation property of the Help button to true.', 0, 1, 4, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6287, 1053, 1630, 283, 'Set the CausesValidation property of the text box to false.', 'Set the CausesValidation property of the text box to false.', 0, 0, 1, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6288, 1055, 1630, 283, 'Set the CausesValidation property of the Help button to false.', 'Set the CausesValidation property of the Help button to false.', 1, 0, 3, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6289, 1054, 1630, 283, 'Set the CausesValidation property of the text box to true.', 'Set the CausesValidation property of the text box to true.', 0, 0, 2, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6290, 418, 1631, 132, 'Switch', 'Switch', 1, 1, 2, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6291, 419, 1631, 132, 'For', 'For', 0, 0, 3, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6292, 417, 1631, 132, 'If', 'If', 0, 0, 1, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6293, 1009, 1631, 132, 'While', 'While', 0, 0, 4, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6294, 178, 1632, 52, '200', '200', 1, 1, 2, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6295, 177, 1632, 52, '12', '12', 0, 0, 1, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6296, 912, 1632, 52, '100', '100', 0, 0, 4, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6297, 179, 1632, 52, '400', '400', 0, 0, 3, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6298, 687, 1633, 220, 'digital camera', 'digital camera', 0, 0, 1, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6299, 688, 1633, 220, 'scanner', 'scanner', 1, 0, 2, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6300, 709, 1633, 220, 'RFID readers', 'RFID readers', 0, 1, 4, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6301, 689, 1633, 220, 'MICR', 'MICR', 0, 0, 3, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6302, 365, 1634, 114, 'mean = 15 , standard deviation = 1', 'mean = 15 , standard deviation = 1', 1, 1, 3, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6303, 1083, 1634, 114, 'mean = 10 , standard deviation = 1', 'mean = 10 , standard deviation = 1', 0, 0, 4, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6304, 363, 1634, 114, 'mean = 15 , standard deviation = 6', 'mean = 15 , standard deviation = 6', 0, 0, 1, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6305, 364, 1634, 114, 'mean = 10 , standard deviation = 6', 'mean = 10 , standard deviation = 6', 0, 0, 2, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6306, 258, 1635, 79, 'Control unit', 'Control unit', 0, 0, 1, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6307, 259, 1635, 79, 'ALU', 'ALU', 0, 0, 2, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6308, 725, 1635, 79, 'Primary Storage', 'Primary Storage', 1, 1, 4, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6309, 260, 1635, 79, 'Registers', 'Registers', 0, 0, 3, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6310, 847, 1636, 244, 'none of these', 'none of these', 0, 0, 4, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6311, 845, 1636, 244, 'updates()', 'updates()', 0, 0, 2, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6312, 844, 1636, 244, 'commitUpdates()', 'commitUpdates()', 1, 1, 1, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6313, 846, 1636, 244, 'commit()', 'commit()', 0, 0, 3, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6314, 931, 1637, 143, 'Three', 'Three', 0, 0, 4, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6315, 450, 1637, 143, 'One', 'One', 1, 1, 1, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6316, 452, 1637, 143, 'Zero', 'Zero', 0, 0, 3, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6317, 451, 1637, 143, 'Two', 'Two', 0, 0, 2, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6318, 453, 1638, 144, '10', '10', 0, 0, 1, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6319, 455, 1638, 144, '3', '3', 0, 1, 3, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6320, 454, 1638, 144, '5', '5', 1, 0, 2, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6321, 932, 1638, 144, '20', '20', 0, 0, 4, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6322, 722, 1639, 82, '22', '22', 0, 0, 4, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6323, 268, 1639, 82, '-9', '-9', 1, 0, 2, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6324, 269, 1639, 82, '-7', '-7', 0, 1, 3, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6325, 267, 1639, 82, '-23', '-23', 0, 0, 1, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6326, 358, 1640, 112, '15', '15', 0, 0, 2, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6327, 357, 1640, 112, '10', '10', 0, 0, 1, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6328, 1081, 1640, 112, '8', '8', 0, 0, 4, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6329, 359, 1640, 112, '2100', '2100', 1, 1, 3, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6330, 1002, 1641, 119, 'for loop', 'for loop', 1, 1, 4, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6331, 379, 1641, 119, 'do while', 'do while', 0, 0, 2, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6332, 378, 1641, 119, 'forEach loop', 'forEach loop', 0, 0, 1, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6333, 380, 1641, 119, 'while', 'while', 0, 0, 3, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6334, 219, 1642, 66, '121', '121', 0, 0, 1, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6335, 221, 1642, 66, '199', '199', 0, 1, 3, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6336, 220, 1642, 66, '163', '163', 1, 0, 2, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6337, 676, 1642, 66, '212', '212', 0, 0, 4, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6338, 176, 1643, 51, 'Compilation error', 'Compilation error', 1, 0, 3, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6339, 911, 1643, 51, 'Runtime error', 'Runtime error', 0, 0, 4, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6340, 175, 1643, 51, '8', '8', 0, 1, 2, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6341, 174, 1643, 51, '9', '9', 0, 0, 1, '2019-09-02 04:09:56', '2019-09-02 04:19:21'),
(6342, 1089, 1644, 285, '2 π', '2 π', 0, 0, 2, '2019-09-02 04:09:56', '2019-09-02 04:19:22'),
(6343, 1090, 1644, 285, '4 π', '4 π', 0, 0, 3, '2019-09-02 04:09:56', '2019-09-02 04:19:22'),
(6344, 1091, 1644, 285, 'π', 'π', 1, 1, 4, '2019-09-02 04:09:56', '2019-09-02 04:19:22'),
(6345, 1088, 1644, 285, '4 π <sup>2</sup>', '4 π <sup>2</sup>', 0, 0, 1, '2019-09-02 04:09:56', '2019-09-02 04:19:22'),
(6346, 416, 1645, 131, 'Show()', 'Show()', 1, 0, 3, '2019-09-02 04:09:56', '2019-09-02 04:19:22'),
(6347, 414, 1645, 131, 'Get()', 'Get()', 0, 1, 1, '2019-09-02 04:09:56', '2019-09-02 04:19:22'),
(6348, 415, 1645, 131, 'Enable()', 'Enable()', 0, 0, 2, '2019-09-02 04:09:56', '2019-09-02 04:19:22'),
(6349, 686, 1646, 219, 'Modem', 'Modem', 1, 0, 3, '2019-09-02 04:09:56', '2019-09-02 04:19:22'),
(6350, 710, 1646, 219, 'Wireless access point', 'Wireless access point', 0, 1, 4, '2019-09-02 04:09:56', '2019-09-02 04:19:22'),
(6351, 685, 1646, 219, 'Switch', 'Switch', 0, 0, 2, '2019-09-02 04:09:56', '2019-09-02 04:19:22'),
(6352, 684, 1646, 219, 'Repeater', 'Repeater', 0, 0, 1, '2019-09-02 04:09:56', '2019-09-02 04:19:22'),
(6353, 475, 1647, 151, 'Difference', 'Difference', 0, 0, 2, '2019-09-02 04:09:56', '2019-09-02 04:19:22'),
(6354, 476, 1647, 151, 'Intersection', 'Intersection', 1, 1, 3, '2019-09-02 04:09:56', '2019-09-02 04:19:22'),
(6355, 939, 1647, 151, 'Complement', 'Complement', 0, 0, 4, '2019-09-02 04:09:56', '2019-09-02 04:19:22'),
(6356, 474, 1647, 151, 'Union', 'Union', 0, 0, 1, '2019-09-02 04:09:56', '2019-09-02 04:19:22'),
(6357, 408, 1648, 129, 'GroupBox control', 'GroupBox control', 0, 0, 1, '2019-09-02 04:09:56', '2019-09-02 04:19:22'),
(6358, 410, 1648, 129, 'ListView Control', 'ListView Control', 0, 1, 3, '2019-09-02 04:09:56', '2019-09-02 04:19:22'),
(6359, 409, 1648, 129, 'LinkLabel control', 'LinkLabel control', 1, 0, 2, '2019-09-02 04:09:56', '2019-09-02 04:19:22'),
(6360, 508, 1649, 162, 'n( B U C)=0', 'n( B U C)=0', 0, 0, 2, '2019-09-02 04:09:56', '2019-09-02 04:19:22'),
(6361, 950, 1649, 162, 'All of the mentioned', 'All of the mentioned', 1, 0, 4, '2019-09-02 04:09:56', '2019-09-02 04:19:22'),
(6362, 509, 1649, 162, 'n( A U B U C)=90', 'n( A U B U C)=90', 0, 1, 3, '2019-09-02 04:09:56', '2019-09-02 04:19:22'),
(6363, 507, 1649, 162, 'n(A U B)=0', 'n(A U B)=0', 0, 0, 1, '2019-09-02 04:09:56', '2019-09-02 04:19:22'),
(6364, 137, 1650, 38, 'A and B', 'A and B', 1, 0, 3, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6365, 136, 1650, 38, 'It is followed by one or more catch blocks.', 'It is followed by one or more catch blocks.', 0, 0, 2, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6366, 135, 1650, 38, 'A try block identifies a block of code for which particular exceptions is activated.', 'A try block identifies a block of code for which particular exceptions is activated.', 0, 1, 1, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6367, 360, 1651, 113, '5!', '5!', 0, 0, 1, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6368, 361, 1651, 113, '3!', '3!', 1, 0, 2, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6369, 362, 1651, 113, '2!', '2!', 0, 1, 3, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6370, 1082, 1651, 113, '3! * 2!', '3! * 2!', 0, 0, 4, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6371, 627, 1652, 202, 'Desktop Operatng System', 'Desktop Operatng System', 0, 0, 1, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6372, 628, 1652, 202, 'Programming Language', 'Programming Language', 0, 1, 2, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6373, 820, 1652, 202, 'Database', 'Database', 0, 0, 4, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6374, 629, 1652, 202, 'Mobile Operating System', 'Mobile Operating System', 1, 0, 3, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6375, 933, 1653, 145, '{(1, 1), (a, a), (2, a), (1, b)}', '{(1, 1), (a, a), (2, a), (1, b)}', 0, 0, 4, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6376, 457, 1653, 145, '{(1, 1), (2, 2), (a, a), (b, b)}', '{(1, 1), (2, 2), (a, a), (b, b)}', 0, 1, 2, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6377, 456, 1653, 145, '{(1, a), (1, b), (2, a), (b, b)}', '{(1, a), (1, b), (2, a), (b, b)}', 0, 0, 1, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6378, 458, 1653, 145, '{(1, a), (2, a), (1, b), (2, b)}', '{(1, a), (2, a), (1, b), (2, b)}', 1, 0, 3, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6379, 665, 1654, 214, 'MAC kernel', 'MAC kernel', 0, 0, 3, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6380, 663, 1654, 214, 'Linux kernel', 'Linux kernel', 1, 0, 1, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6381, 664, 1654, 214, 'Windows kernel', 'Windows kernel', 0, 1, 2, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6382, 832, 1654, 214, 'Hybrid kernel', 'Hybrid kernel', 0, 0, 4, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6383, 436, 1655, 138, 'Catches', 'Catches', 0, 0, 2, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6384, 1014, 1655, 138, 'a and b', 'a and b', 0, 0, 4, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6385, 435, 1655, 138, 'Trys', 'Trys', 0, 0, 1, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6386, 437, 1655, 138, 'Throws', 'Throws', 1, 1, 3, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6387, 1021, 1656, 275, 'Only one catch block for each try block.', 'Only one catch block for each try block.', 0, 0, 1, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6388, 1023, 1656, 275, 'Several catch blocks within one try block, arranged starting with the most specific exception and ending with Exception.', 'Several catch blocks within one try block, arranged starting with the most specific exception and ending with Exception.', 1, 0, 3, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6389, 1022, 1656, 275, 'Several catch blocks for a try block, arranged in order starting with Exception and ending with the most specific exception.', 'Several catch blocks for a try block, arranged in order starting with Exception and ending with the most specific exception.', 0, 1, 2, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6390, 1024, 1656, 275, 'The catch blocks should be used only when a finally block is not used.', 'The catch blocks should be used only when a finally block is not used.', 0, 0, 4, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6391, 355, 1657, 111, '(π/2 , π)', '(π/2 , π)', 1, 0, 2, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6392, 356, 1657, 111, '(π , 3 π / 2)', '(π , 3 π / 2)', 0, 0, 3, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6393, 1080, 1657, 111, '(3 π / 2 , 2 π)', '(3 π / 2 , 2 π)', 0, 1, 4, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6394, 354, 1657, 111, '(0 , π/2)', '(0 , π/2)', 0, 0, 1, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6395, 906, 1658, 39, 'Not assigned', 'Not assigned', 0, 0, 4, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6396, 140, 1658, 39, 'Depends upon the type of variable', 'Depends upon the type of variable', 1, 1, 3, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6397, 139, 1658, 39, '0', '0', 0, 0, 2, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6398, 138, 1658, 39, 'null', 'null', 0, 0, 1, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6399, 283, 1659, 87, 'decode, execute, store and fetch', 'decode, execute, store and fetch', 0, 0, 2, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6400, 715, 1659, 87, 'fetch, decode, execute and store', 'fetch, decode, execute and store', 1, 0, 4, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6401, 282, 1659, 87, 'fetch, execute, store and decode', 'fetch, execute, store and decode', 0, 1, 1, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6402, 284, 1659, 87, 'decode, fetch, store and execute', 'decode, fetch, store and execute', 0, 0, 3, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6403, 1033, 1660, 278, 'Message1\nMessage4', 'Message1<br />\nMessage4', 0, 0, 1, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6404, 1036, 1660, 278, 'Message1\nMessage3\nMessage2\nMessage4', 'Message1<br />\nMessage3<br />\nMessage2<br />\nMessage4', 0, 0, 4, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6405, 1034, 1660, 278, 'Message1\nMessage2\nMessage3\nMessage4', 'Message1<br />\nMessage2<br />\nMessage3<br />\nMessage4', 0, 0, 2, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6406, 1035, 1660, 278, 'Message1\nMessage3\nMessage4', 'Message1<br />\nMessage3<br />\nMessage4', 1, 1, 3, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6407, 895, 1661, 256, 'Cursor is used to store data permanently.', 'Cursor is used to store data permanently.', 0, 0, 4, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6408, 894, 1661, 256, 'A & B', 'A & B', 1, 1, 3, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6409, 893, 1661, 256, 'Cursor is used to store the temporary result.', 'Cursor is used to store the temporary result.', 0, 0, 2, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6410, 892, 1661, 256, 'Content values are key pair values, which are updated or inserted in the database', 'Content values are key pair values, which are updated or inserted in the database', 0, 0, 1, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6411, 293, 1662, 90, 'kilobyte', 'kilobyte', 0, 0, 3, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6412, 291, 1662, 90, 'bit', 'bit', 0, 1, 1, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6413, 292, 1662, 90, 'byte', 'byte', 1, 0, 2, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6414, 711, 1662, 90, 'megabyte', 'megabyte', 0, 0, 4, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6415, 1095, 1663, 286, '0', '0', 0, 0, 4, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6416, 1092, 1663, 286, '0.057', '0.057', 1, 0, 1, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6417, 1093, 1663, 286, '0.478', '0.478', 0, 1, 2, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6418, 1094, 1663, 286, '0.001', '0.001', 0, 0, 3, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6419, 239, 1664, 72, 'Anti-virus software', 'Anti-virus software', 0, 0, 3, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6420, 237, 1664, 72, 'Operating system software', 'Operating system software', 0, 1, 1, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6421, 732, 1664, 72, 'Disk optimization software', 'Disk optimization software', 0, 0, 4, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6422, 238, 1664, 72, 'Utility software', 'Utility software', 1, 0, 2, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6423, 120, 1665, 33, 'ToDecimal', 'ToDecimal', 0, 0, 1, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6424, 901, 1665, 33, 'ToInt32', 'ToInt32', 0, 0, 4, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6425, 121, 1665, 33, 'ToDouble', 'ToDouble', 1, 1, 2, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6426, 122, 1665, 33, 'ToInt16', 'ToInt16', 0, 0, 3, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6427, 1073, 1666, 104, '(x+5)<sup>2</sup> -16', '(x+5)<sup>2</sup> -16', 0, 0, 4, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6428, 333, 1666, 104, '(x-7)<sup>2</sup> +8', '(x-7)<sup>2</sup> +8', 0, 1, 1, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6429, 335, 1666, 104, '(x+7)<sup>2</sup> -8', '(x+7)<sup>2</sup> -8', 0, 0, 3, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6430, 334, 1666, 104, '(x+5)<sup>2</sup> +16', '(x+5)<sup>2</sup> +16', 1, 0, 2, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6431, 149, 1667, 42, 'void', 'void', 0, 0, 3, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6432, 148, 1667, 42, 'Boolean', 'Boolean', 1, 1, 2, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6433, 907, 1667, 42, 'private', 'private', 0, 0, 4, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6434, 147, 1667, 42, 'static', 'static', 0, 0, 1, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6435, 430, 1668, 136, 'initializes a button control', 'initializes a button control', 0, 1, 2, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6436, 429, 1668, 136, 'creates a button control', 'creates a button control', 0, 0, 1, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6437, 1012, 1668, 136, 'a and c', 'a and c', 1, 0, 4, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6438, 431, 1668, 136, 'instantiates button control', 'instantiates button control', 0, 0, 3, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6439, 306, 1669, 95, '12i', '12i', 1, 0, 1, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6440, 308, 1669, 95, '-12', '-12', 0, 0, 3, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6441, 307, 1669, 95, 'You cannot find the square root of a negative number', 'You cannot find the square root of a negative number', 0, 1, 2, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6442, 1064, 1669, 95, '-12i', '-12i', 0, 0, 4, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6443, 167, 1670, 48, 'JRE is an implementation of the Java Virtual Machine which executes Java programs.', 'JRE is an implementation of the Java Virtual Machine which executes Java programs.', 1, 1, 3, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6444, 166, 1670, 48, 'JRE is an application development framework.', 'JRE is an application development framework.', 0, 0, 2, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6445, 165, 1670, 48, 'JRE is a java based GUI application.', 'JRE is a java based GUI application.', 0, 0, 1, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6446, 833, 1671, 215, '2.2 (Froyo)', '2.2 (Froyo)', 0, 0, 4, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6447, 668, 1671, 215, '2.6', '2.6', 0, 0, 3, '2019-09-02 04:09:57', '2019-09-02 04:19:22');
INSERT INTO `answer_sheet_test_question_choices` (`id`, `choice_id`, `answer_sheet_test_question_id`, `test_question_id`, `body`, `body_html`, `is_correct`, `is_selected`, `pos_order`, `created_at`, `updated_at`) VALUES
(6448, 667, 1671, 215, '2.3 (Gingerbread)', '2.3 (Gingerbread)', 1, 1, 2, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6449, 666, 1671, 215, '3.0 (Honeycomb)', '3.0 (Honeycomb)', 0, 0, 1, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6450, 862, 1672, 248, 'To share the data between applications', 'To share the data between applications', 1, 1, 3, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6451, 861, 1672, 248, 'To store the data in a database', 'To store the data in a database', 0, 0, 2, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6452, 863, 1672, 248, 'none of the choices', 'none of the choices', 0, 0, 4, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6453, 860, 1672, 248, 'To send the data from an application to another application', 'To send the data from an application to another application', 0, 0, 1, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6454, 345, 1673, 108, '1 846 000', '1 846 000', 1, 0, 1, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6455, 1077, 1673, 108, '1 500 000', '1 500 000', 0, 1, 4, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6456, 347, 1673, 108, '1 000 000', '1 000 000', 0, 0, 3, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6457, 346, 1673, 108, '1 852 000', '1 852 000', 0, 0, 2, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6458, 951, 1674, 260, '35', '35', 1, 0, 1, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6459, 954, 1674, 260, '10', '10', 0, 1, 4, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6460, 952, 1674, 260, '20', '20', 0, 0, 2, '2019-09-02 04:09:57', '2019-09-02 04:19:22'),
(6461, 953, 1674, 260, '30', '30', 0, 0, 3, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6462, 434, 1675, 137, 'Have different return types and arguments than the parent class', 'Have different return types and arguments than the parent class', 0, 1, 3, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6463, 433, 1675, 137, 'Maintain the same return type and arguments as the parent class, but implement it differently', 'Maintain the same return type and arguments as the parent class, but implement it differently', 1, 0, 2, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6464, 432, 1675, 137, 'Override the parent class methods but maintain the implementation', 'Override the parent class methods but maintain the implementation', 0, 0, 1, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6465, 1013, 1675, 137, 'Are Virtual', 'Are Virtual', 0, 0, 4, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6466, 1016, 1676, 140, 'Object', 'Object', 0, 0, 4, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6467, 441, 1676, 140, 'Constant', 'Constant', 0, 1, 1, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6468, 443, 1676, 140, 'Variable', 'Variable', 1, 0, 3, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6469, 442, 1676, 140, 'Reference type', 'Reference type', 0, 0, 2, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6470, 301, 1677, 93, 'x ≥ 5', 'x ≥ 5', 1, 0, 2, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6471, 302, 1677, 93, 'x ≥ -5', 'x ≥ -5', 0, 0, 3, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6472, 300, 1677, 93, 'x ≤ 5', 'x ≤ 5', 0, 1, 1, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6473, 1062, 1677, 93, 'x ≤ -5', 'x ≤ -5', 0, 0, 4, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6474, 388, 1678, 122, 'Binary operators', 'Binary operators', 0, 0, 2, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6475, 387, 1678, 122, 'unary operators', 'unary operators', 1, 0, 1, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6476, 389, 1678, 122, 'Logical operators', 'Logical operators', 0, 1, 3, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6477, 1005, 1678, 122, 'Assignment opeartors', 'Assignment opeartors', 0, 0, 4, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6478, 503, 1679, 160, 'A ∩ B', 'A ∩ B', 0, 0, 3, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6479, 502, 1679, 160, 'A U B -B', 'A U B -B', 1, 0, 2, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6480, 948, 1679, 160, 'B', 'B', 0, 1, 4, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6481, 501, 1679, 160, 'A‘ (Complement of A)', 'A‘ (Complement of A)', 0, 0, 1, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6482, 449, 1680, 142, '{1, 2, 5, 9}', '{1, 2, 5, 9}', 0, 0, 3, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6483, 930, 1680, 142, '{1, 5, 7, 9, 11}', '{1, 5, 7, 9, 11}', 0, 1, 4, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6484, 447, 1680, 142, '{1, 2, 3}', '{1, 2, 3}', 0, 0, 1, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6485, 448, 1680, 142, '{1, 3, 5, 7, 9}', '{1, 3, 5, 7, 9}', 1, 0, 2, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6486, 699, 1681, 223, '110011', '110011', 0, 0, 1, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6487, 718, 1681, 223, '100100', '100100', 0, 0, 4, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6488, 701, 1681, 223, '110100', '110100', 1, 1, 3, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6489, 700, 1681, 223, '100001', '100001', 0, 0, 2, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6490, 679, 1682, 68, '[[#img26]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/tBuCNpani0PgWIFN01ztVOAj4FS4CBDAiTW9J8lB.png\" width=\"150\" height=\"150\" />', 0, 0, 4, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6491, 225, 1682, 68, '[[#img23]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/IyLDJJaUUQ0aIZOMyEjh4JO72W4HpXtPj2CfMKZL.png\" width=\"150\" height=\"150\" />', 1, 0, 1, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6492, 227, 1682, 68, '[[#img25]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/rDh656ehodyPQmn7CxxjGK2H29sx2bh6LDz9INfN.png\" width=\"150\" height=\"150\" />', 0, 0, 3, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6493, 226, 1682, 68, '[[#img24]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/nVLwXww7AT2RBfzhH1tPQMxdLPF1iWuunHzErZRh.png\" width=\"150\" height=\"150\" />', 0, 1, 2, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6494, 471, 1683, 150, '{1, 2}', '{1, 2}', 1, 1, 1, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6495, 472, 1683, 150, '{5, 6}', '{5, 6}', 0, 0, 2, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6496, 938, 1683, 150, '{1, 6}', '{1, 6}', 0, 0, 4, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6497, 473, 1683, 150, '{2, 5}', '{2, 5}', 0, 0, 3, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6498, 194, 1684, 57, 'Both Row and Column', 'Both Row and Column', 0, 0, 3, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6499, 192, 1684, 57, 'Row', 'Row', 1, 1, 1, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6500, 193, 1684, 57, 'Column', 'Column', 0, 0, 2, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6501, 944, 1685, 156, 'None of the choices', 'None of the choices', 0, 0, 4, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6502, 491, 1685, 156, '4, 12', '4, 12', 0, 0, 3, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6503, 490, 1685, 156, '8, 12', '8, 12', 1, 1, 2, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6504, 489, 1685, 156, '4, 8', '4, 8', 0, 0, 1, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6505, 343, 1686, 107, '48', '48', 0, 0, 2, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6506, 344, 1686, 107, '-12', '-12', 0, 1, 3, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6507, 342, 1686, 107, '11', '11', 0, 0, 1, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6508, 1076, 1686, 107, '22', '22', 1, 0, 4, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6509, 644, 1687, 207, 'Android data bridge', 'Android data bridge', 0, 0, 3, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6510, 643, 1687, 207, 'Application Debug Bridge', 'Application Debug Bridge', 0, 0, 2, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6511, 642, 1687, 207, 'Android Debug Bridge', 'Android Debug Bridge', 1, 1, 1, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6512, 825, 1687, 207, 'Application data bridge', 'Application data bridge', 0, 0, 4, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6513, 987, 1688, 270, '35', '35', 1, 1, 1, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6514, 988, 1688, 270, '45', '45', 0, 0, 2, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6515, 989, 1688, 270, '25', '25', 0, 0, 3, '2019-09-02 04:09:57', '2019-09-02 04:19:23'),
(6516, 1085, 1689, 116, 'even and odd', 'even and odd', 0, 0, 4, '2019-09-02 04:09:58', '2019-09-02 04:19:23'),
(6517, 369, 1689, 116, 'an odd function', 'an odd function', 0, 1, 1, '2019-09-02 04:09:58', '2019-09-02 04:19:23'),
(6518, 371, 1689, 116, 'neither odd nor even', 'neither odd nor even', 0, 0, 3, '2019-09-02 04:09:58', '2019-09-02 04:19:23'),
(6519, 370, 1689, 116, 'an even function', 'an even function', 1, 0, 2, '2019-09-02 04:09:58', '2019-09-02 04:19:23'),
(6520, 902, 1690, 34, '*', '*', 0, 0, 4, '2019-09-02 04:09:58', '2019-09-02 04:19:23'),
(6521, 123, 1690, 34, 'sizeof', 'sizeof', 1, 1, 1, '2019-09-02 04:09:58', '2019-09-02 04:19:23'),
(6522, 125, 1690, 34, '&</a>', '&</a>', 0, 0, 3, '2019-09-02 04:09:58', '2019-09-02 04:19:23'),
(6523, 124, 1690, 34, 'typeof', 'typeof', 0, 0, 2, '2019-09-02 04:09:58', '2019-09-02 04:19:23'),
(6524, 384, 1691, 121, 'RElational operators', 'RElational operators', 0, 0, 1, '2019-09-02 04:09:58', '2019-09-02 04:19:23'),
(6525, 386, 1691, 121, 'Logical operators', 'Logical operators', 1, 1, 3, '2019-09-02 04:09:58', '2019-09-02 04:19:23'),
(6526, 385, 1691, 121, 'Bitwise operators', 'Bitwise operators', 0, 0, 2, '2019-09-02 04:09:58', '2019-09-02 04:19:23'),
(6527, 1004, 1691, 121, 'Assignment Operators', 'Assignment Operators', 0, 0, 4, '2019-09-02 04:09:58', '2019-09-02 04:19:23'),
(6528, 256, 1692, 78, 'Unicode', 'Unicode', 1, 0, 2, '2019-09-02 04:09:58', '2019-09-02 04:19:23'),
(6529, 257, 1692, 78, 'EBCDIC', 'EBCDIC', 0, 0, 3, '2019-09-02 04:09:58', '2019-09-02 04:19:23'),
(6530, 726, 1692, 78, 'ANSI', 'ANSI', 0, 1, 4, '2019-09-02 04:09:58', '2019-09-02 04:19:23'),
(6531, 255, 1692, 78, 'ASCII', 'ASCII', 0, 0, 1, '2019-09-02 04:09:58', '2019-09-02 04:19:23'),
(6532, 141, 1693, 40, 'type.', 'type.', 1, 1, 1, '2019-09-02 04:09:58', '2019-09-02 04:19:23'),
(6533, 143, 1693, 40, 'Both of the above.', 'Both of the above.', 0, 0, 3, '2019-09-02 04:09:58', '2019-09-02 04:19:23'),
(6534, 142, 1693, 40, 'object.', 'object.', 0, 0, 2, '2019-09-02 04:09:58', '2019-09-02 04:19:23'),
(6535, 852, 1694, 246, 'res/', 'res/', 0, 0, 1, '2019-09-02 04:09:58', '2019-09-02 04:19:23'),
(6536, 854, 1694, 246, 'src/', 'src/', 1, 0, 3, '2019-09-02 04:09:58', '2019-09-02 04:19:23'),
(6537, 855, 1694, 246, 'bin/', 'bin/', 0, 0, 4, '2019-09-02 04:09:58', '2019-09-02 04:19:23'),
(6538, 853, 1694, 246, 'assets/', 'assets/', 0, 1, 2, '2019-09-02 04:09:58', '2019-09-02 04:19:23'),
(6539, 843, 1695, 243, 'application', 'application', 0, 0, 4, '2019-09-02 04:09:58', '2019-09-02 04:19:23'),
(6540, 841, 1695, 243, 'X.style', 'X.style', 0, 0, 2, '2019-09-02 04:09:58', '2019-09-02 04:19:23'),
(6541, 840, 1695, 243, 'R.style', 'R.style', 1, 1, 1, '2019-09-02 04:09:58', '2019-09-02 04:19:23'),
(6542, 842, 1695, 243, 'manifest.XML', 'manifest.XML', 0, 0, 3, '2019-09-02 04:09:58', '2019-09-02 04:19:23'),
(6543, 879, 1696, 252, 'None of the above', 'None of the above', 0, 0, 4, '2019-09-02 04:09:58', '2019-09-02 04:19:23'),
(6544, 877, 1696, 252, 'A bean class can be passed from one activity to another.', 'A bean class can be passed from one activity to another.', 0, 1, 2, '2019-09-02 04:09:58', '2019-09-02 04:19:23'),
(6545, 878, 1696, 252, 'A mandatory class in android', 'A mandatory class in android', 0, 0, 3, '2019-09-02 04:09:58', '2019-09-02 04:19:23'),
(6546, 876, 1696, 252, 'A class used to hold states and objects', 'A class used to hold states and objects', 1, 0, 1, '2019-09-02 04:09:58', '2019-09-02 04:19:23'),
(6547, 886, 1697, 254, 'Authentication management', 'Authentication management', 0, 0, 3, '2019-09-02 04:09:58', '2019-09-02 04:19:23'),
(6548, 885, 1697, 254, 'Cookies management', 'Cookies management', 0, 0, 2, '2019-09-02 04:09:58', '2019-09-02 04:19:23'),
(6549, 887, 1697, 254, 'None of the above', 'None of the above', 0, 1, 4, '2019-09-02 04:09:58', '2019-09-02 04:19:23'),
(6550, 884, 1697, 254, 'httprequest(get/post) and returns response from the server', 'httprequest(get/post) and returns response from the server', 1, 0, 1, '2019-09-02 04:09:58', '2019-09-02 04:19:23'),
(6551, 233, 1698, 70, '[[#img30]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/5CGn3NoMP2AFTNnuWdi3jGe97XfkU7ydkF3PldTA.png\" width=\"150\" height=\"150\" />', 0, 0, 3, '2019-09-02 04:09:58', '2019-09-02 04:19:23'),
(6552, 231, 1698, 70, '[[#img28]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/jkL1TWHhQQMAtCTbSz6HtJyZn8zhXmtgMQYX3Zpo.png\" width=\"150\" height=\"150\" />', 1, 0, 1, '2019-09-02 04:09:58', '2019-09-02 04:19:23'),
(6553, 680, 1698, 70, '[[#img31]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/VNrzOvOE3LpeuWi9ciBQDVlGrXxObvbfnI3kfNS4.png\" width=\"150\" height=\"150\" />', 0, 1, 4, '2019-09-02 04:09:58', '2019-09-02 04:19:23'),
(6554, 232, 1698, 70, '[[#img29]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/Cf9qY75IYjLpUVFWsICWK07cAwLtqRPDIO6JjLqT.png\" width=\"150\" height=\"150\" />', 0, 0, 2, '2019-09-02 04:09:58', '2019-09-02 04:19:23'),
(6555, 1029, 1699, 277, 'The code will generate an error because it lacks a catch block.', 'The code will generate an error because it lacks a catch block.', 0, 0, 1, '2019-09-02 04:09:58', '2019-09-02 04:19:23'),
(6556, 1032, 1699, 277, 'The code will compile without an error.', 'The code will compile without an error.', 1, 1, 4, '2019-09-02 04:09:58', '2019-09-02 04:19:23'),
(6557, 1030, 1699, 277, 'The code will generate an error because it lacks a throw statement.', 'The code will generate an error because it lacks a throw statement.', 0, 0, 2, '2019-09-02 04:09:58', '2019-09-02 04:19:23'),
(6558, 1031, 1699, 277, 'The code will generate an error because the finally block is placed immediately after the try block.', 'The code will generate an error because the finally block is placed immediately after the try block.', 0, 0, 3, '2019-09-02 04:09:58', '2019-09-02 04:19:23'),
(6559, 320, 1700, 99, '2.322', '2.322', 1, 0, 3, '2019-09-02 04:09:58', '2019-09-02 04:19:23'),
(6560, 1068, 1700, 99, '4.753', '4.753', 0, 1, 4, '2019-09-02 04:09:58', '2019-09-02 04:19:23'),
(6561, 318, 1700, 99, '6.25', '6.25', 0, 0, 1, '2019-09-02 04:09:58', '2019-09-02 04:19:23'),
(6562, 319, 1700, 99, '1.756', '1.756', 0, 0, 2, '2019-09-02 04:09:58', '2019-09-02 04:19:23'),
(6563, 457, 1701, 145, '{(1, 1), (2, 2), (a, a), (b, b)}', '{(1, 1), (2, 2), (a, a), (b, b)}', 0, 0, 2, '2019-09-02 13:13:39', '2019-09-02 13:19:10'),
(6564, 933, 1701, 145, '{(1, 1), (a, a), (2, a), (1, b)}', '{(1, 1), (a, a), (2, a), (1, b)}', 0, 0, 4, '2019-09-02 13:13:39', '2019-09-02 13:19:10'),
(6565, 456, 1701, 145, '{(1, a), (1, b), (2, a), (b, b)}', '{(1, a), (1, b), (2, a), (b, b)}', 0, 1, 1, '2019-09-02 13:13:39', '2019-09-02 13:19:10'),
(6566, 458, 1701, 145, '{(1, a), (2, a), (1, b), (2, b)}', '{(1, a), (2, a), (1, b), (2, b)}', 1, 0, 3, '2019-09-02 13:13:39', '2019-09-02 13:19:10'),
(6567, 701, 1702, 223, '110100', '110100', 1, 1, 3, '2019-09-02 13:13:39', '2019-09-02 13:19:10'),
(6568, 718, 1702, 223, '100100', '100100', 0, 0, 4, '2019-09-02 13:13:39', '2019-09-02 13:19:10'),
(6569, 700, 1702, 223, '100001', '100001', 0, 0, 2, '2019-09-02 13:13:39', '2019-09-02 13:19:10'),
(6570, 699, 1702, 223, '110011', '110011', 0, 0, 1, '2019-09-02 13:13:39', '2019-09-02 13:19:10'),
(6571, 404, 1703, 127, 'Button control', 'Button control', 1, 1, 3, '2019-09-02 13:13:39', '2019-09-02 13:19:10'),
(6572, 402, 1703, 127, 'Radio Button', 'Radio Button', 0, 0, 1, '2019-09-02 13:13:39', '2019-09-02 13:19:10'),
(6573, 403, 1703, 127, 'Textbox control', 'Textbox control', 0, 0, 2, '2019-09-02 13:13:39', '2019-09-02 13:19:10'),
(6574, 725, 1704, 79, 'Primary Storage', 'Primary Storage', 1, 1, 4, '2019-09-02 13:13:39', '2019-09-02 13:19:10'),
(6575, 259, 1704, 79, 'ALU', 'ALU', 0, 0, 2, '2019-09-02 13:13:39', '2019-09-02 13:19:10'),
(6576, 260, 1704, 79, 'Registers', 'Registers', 0, 0, 3, '2019-09-02 13:13:39', '2019-09-02 13:19:10'),
(6577, 258, 1704, 79, 'Control unit', 'Control unit', 0, 0, 1, '2019-09-02 13:13:39', '2019-09-02 13:19:10'),
(6578, 3, 1705, 1, 'x = 2', 'x = 2', 0, 0, 3, '2019-09-02 13:13:39', '2019-09-02 13:19:10'),
(6579, 1, 1705, 1, 'x = 1', 'x = 1', 1, 1, 1, '2019-09-02 13:13:39', '2019-09-02 13:19:10'),
(6580, 2, 1705, 1, 'x = 4', 'x = 4', 0, 0, 2, '2019-09-02 13:13:39', '2019-09-02 13:19:10'),
(6581, 722, 1706, 82, '22', '22', 0, 0, 4, '2019-09-02 13:13:39', '2019-09-02 13:19:10'),
(6582, 268, 1706, 82, '-9', '-9', 1, 1, 2, '2019-09-02 13:13:39', '2019-09-02 13:19:10'),
(6583, 267, 1706, 82, '-23', '-23', 0, 0, 1, '2019-09-02 13:13:39', '2019-09-02 13:19:10'),
(6584, 269, 1706, 82, '-7', '-7', 0, 0, 3, '2019-09-02 13:13:39', '2019-09-02 13:19:10'),
(6585, 980, 1707, 267, 'smallest following integer', 'smallest following integer', 0, 0, 3, '2019-09-02 13:13:39', '2019-09-02 13:19:10'),
(6586, 978, 1707, 267, 'smallest previous integer', 'smallest previous integer', 0, 0, 1, '2019-09-02 13:13:39', '2019-09-02 13:19:10'),
(6587, 979, 1707, 267, 'greatest previous integer', 'greatest previous integer', 1, 1, 2, '2019-09-02 13:13:39', '2019-09-02 13:19:10'),
(6588, 643, 1708, 207, 'Application Debug Bridge', 'Application Debug Bridge', 0, 0, 2, '2019-09-02 13:13:39', '2019-09-02 13:19:10'),
(6589, 825, 1708, 207, 'Application data bridge', 'Application data bridge', 0, 0, 4, '2019-09-02 13:13:39', '2019-09-02 13:19:10'),
(6590, 642, 1708, 207, 'Android Debug Bridge', 'Android Debug Bridge', 1, 1, 1, '2019-09-02 13:13:39', '2019-09-02 13:19:10'),
(6591, 644, 1708, 207, 'Android data bridge', 'Android data bridge', 0, 0, 3, '2019-09-02 13:13:39', '2019-09-02 13:19:10'),
(6592, 194, 1709, 57, 'Both Row and Column', 'Both Row and Column', 0, 0, 3, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6593, 193, 1709, 57, 'Column', 'Column', 0, 1, 2, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6594, 192, 1709, 57, 'Row', 'Row', 1, 0, 1, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6595, 487, 1710, 155, '5', '5', 0, 0, 2, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6596, 943, 1710, 155, '7', '7', 0, 1, 4, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6597, 488, 1710, 155, '6', '6', 0, 0, 3, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6598, 486, 1710, 155, '4', '4', 1, 0, 1, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6599, 379, 1711, 119, 'do while', 'do while', 0, 0, 2, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6600, 1002, 1711, 119, 'for loop', 'for loop', 1, 1, 4, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6601, 380, 1711, 119, 'while', 'while', 0, 0, 3, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6602, 378, 1711, 119, 'forEach loop', 'forEach loop', 0, 0, 1, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6603, 124, 1712, 34, 'typeof', 'typeof', 0, 0, 2, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6604, 902, 1712, 34, '*', '*', 0, 0, 4, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6605, 123, 1712, 34, 'sizeof', 'sizeof', 1, 1, 1, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6606, 125, 1712, 34, '&</a>', '&</a>', 0, 0, 3, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6607, 173, 1713, 50, 'Thread starts running.', 'Thread starts running.', 0, 0, 3, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6608, 171, 1713, 50, 'Thread returns to the ready state.', 'Thread returns to the ready state.', 1, 1, 1, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6609, 172, 1713, 50, 'Thread returns to the waiting state.', 'Thread returns to the waiting state.', 0, 0, 2, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6610, 491, 1714, 156, '4, 12', '4, 12', 0, 0, 3, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6611, 490, 1714, 156, '8, 12', '8, 12', 1, 1, 2, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6612, 944, 1714, 156, 'None of the choices', 'None of the choices', 0, 0, 4, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6613, 489, 1714, 156, '4, 8', '4, 8', 0, 0, 1, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6614, 433, 1715, 137, 'Maintain the same return type and arguments as the parent class, but implement it differently', 'Maintain the same return type and arguments as the parent class, but implement it differently', 1, 1, 2, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6615, 432, 1715, 137, 'Override the parent class methods but maintain the implementation', 'Override the parent class methods but maintain the implementation', 0, 0, 1, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6616, 1013, 1715, 137, 'Are Virtual', 'Are Virtual', 0, 0, 4, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6617, 434, 1715, 137, 'Have different return types and arguments than the parent class', 'Have different return types and arguments than the parent class', 0, 0, 3, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6618, 863, 1716, 248, 'none of the choices', 'none of the choices', 0, 0, 4, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6619, 860, 1716, 248, 'To send the data from an application to another application', 'To send the data from an application to another application', 0, 1, 1, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6620, 862, 1716, 248, 'To share the data between applications', 'To share the data between applications', 1, 0, 3, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6621, 861, 1716, 248, 'To store the data in a database', 'To store the data in a database', 0, 0, 2, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6622, 473, 1717, 150, '{2, 5}', '{2, 5}', 0, 0, 3, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6623, 938, 1717, 150, '{1, 6}', '{1, 6}', 0, 0, 4, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6624, 472, 1717, 150, '{5, 6}', '{5, 6}', 0, 0, 2, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6625, 471, 1717, 150, '{1, 2}', '{1, 2}', 1, 1, 1, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6626, 687, 1718, 220, 'digital camera', 'digital camera', 0, 0, 1, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6627, 689, 1718, 220, 'MICR', 'MICR', 0, 0, 3, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6628, 709, 1718, 220, 'RFID readers', 'RFID readers', 0, 1, 4, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6629, 688, 1718, 220, 'scanner', 'scanner', 1, 0, 2, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6630, 1036, 1719, 278, 'Message1\nMessage3\nMessage2\nMessage4', 'Message1<br />\nMessage3<br />\nMessage2<br />\nMessage4', 0, 0, 4, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6631, 1033, 1719, 278, 'Message1\nMessage4', 'Message1<br />\nMessage4', 0, 0, 1, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6632, 1035, 1719, 278, 'Message1\nMessage3\nMessage4', 'Message1<br />\nMessage3<br />\nMessage4', 1, 1, 3, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6633, 1034, 1719, 278, 'Message1\nMessage2\nMessage3\nMessage4', 'Message1<br />\nMessage2<br />\nMessage3<br />\nMessage4', 0, 0, 2, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6634, 876, 1720, 252, 'A class used to hold states and objects', 'A class used to hold states and objects', 1, 0, 1, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6635, 877, 1720, 252, 'A bean class can be passed from one activity to another.', 'A bean class can be passed from one activity to another.', 0, 1, 2, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6636, 878, 1720, 252, 'A mandatory class in android', 'A mandatory class in android', 0, 0, 3, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6637, 879, 1720, 252, 'None of the above', 'None of the above', 0, 0, 4, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6638, 252, 1721, 77, 'logic error', 'logic error', 1, 0, 1, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6639, 254, 1721, 77, 'run time error', 'run time error', 0, 1, 3, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6640, 727, 1721, 77, 'linker error', 'linker error', 0, 0, 4, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6641, 253, 1721, 77, 'syntax error', 'syntax error', 0, 0, 2, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6642, 314, 1722, 97, 'i - 12', 'i - 12', 1, 1, 3, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6643, 313, 1722, 97, '7 - 3i', '7 - 3i', 0, 0, 2, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6644, 312, 1722, 97, 'i - 5', 'i - 5', 0, 0, 1, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6645, 1066, 1722, 97, '3i - 10', '3i - 10', 0, 0, 4, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6646, 431, 1723, 136, 'instantiates button control', 'instantiates button control', 0, 0, 3, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6647, 430, 1723, 136, 'initializes a button control', 'initializes a button control', 0, 0, 2, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6648, 429, 1723, 136, 'creates a button control', 'creates a button control', 0, 0, 1, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6649, 1012, 1723, 136, 'a and c', 'a and c', 1, 1, 4, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6650, 728, 1724, 76, 'back up', 'back up', 1, 0, 4, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6651, 251, 1724, 76, 'virtual memory', 'virtual memory', 0, 1, 3, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6652, 250, 1724, 76, 'buffering', 'buffering', 0, 0, 2, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6653, 249, 1724, 76, 'spooling', 'spooling', 0, 0, 1, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6654, 417, 1725, 132, 'If', 'If', 0, 0, 1, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6655, 419, 1725, 132, 'For', 'For', 0, 0, 3, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6656, 418, 1725, 132, 'Switch', 'Switch', 1, 1, 2, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6657, 1009, 1725, 132, 'While', 'While', 0, 0, 4, '2019-09-02 13:13:39', '2019-09-02 13:19:11'),
(6658, 360, 1726, 113, '5!', '5!', 0, 0, 1, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6659, 361, 1726, 113, '3!', '3!', 1, 1, 2, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6660, 362, 1726, 113, '2!', '2!', 0, 0, 3, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6661, 1082, 1726, 113, '3! * 2!', '3! * 2!', 0, 0, 4, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6662, 1062, 1727, 93, 'x ≤ -5', 'x ≤ -5', 0, 0, 4, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6663, 302, 1727, 93, 'x ≥ -5', 'x ≥ -5', 0, 0, 3, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6664, 301, 1727, 93, 'x ≥ 5', 'x ≥ 5', 1, 1, 2, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6665, 300, 1727, 93, 'x ≤ 5', 'x ≤ 5', 0, 0, 1, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6666, 290, 1728, 89, 'Virtual Machine', 'Virtual Machine', 0, 0, 3, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6667, 712, 1728, 89, 'None of them', 'None of them', 0, 0, 4, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6668, 288, 1728, 89, 'Virtual private network', 'Virtual private network', 0, 0, 1, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6669, 289, 1728, 89, 'Virtual memory', 'Virtual memory', 1, 1, 2, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6670, 140, 1729, 39, 'Depends upon the type of variable', 'Depends upon the type of variable', 1, 0, 3, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6671, 138, 1729, 39, 'null', 'null', 0, 1, 1, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6672, 906, 1729, 39, 'Not assigned', 'Not assigned', 0, 0, 4, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6673, 139, 1729, 39, '0', '0', 0, 0, 2, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6674, 120, 1730, 33, 'ToDecimal', 'ToDecimal', 0, 0, 1, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6675, 122, 1730, 33, 'ToInt16', 'ToInt16', 0, 0, 3, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6676, 121, 1730, 33, 'ToDouble', 'ToDouble', 1, 1, 2, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6677, 901, 1730, 33, 'ToInt32', 'ToInt32', 0, 0, 4, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6678, 503, 1731, 160, 'A ∩ B', 'A ∩ B', 0, 0, 3, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6679, 502, 1731, 160, 'A U B -B', 'A U B -B', 1, 1, 2, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6680, 948, 1731, 160, 'B', 'B', 0, 0, 4, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6681, 501, 1731, 160, 'A‘ (Complement of A)', 'A‘ (Complement of A)', 0, 0, 1, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6682, 136, 1732, 38, 'It is followed by one or more catch blocks.', 'It is followed by one or more catch blocks.', 0, 0, 2, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6683, 135, 1732, 38, 'A try block identifies a block of code for which particular exceptions is activated.', 'A try block identifies a block of code for which particular exceptions is activated.', 0, 0, 1, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6684, 137, 1732, 38, 'A and B', 'A and B', 1, 1, 3, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6685, 634, 1733, 204, 'Bluetooth', 'Bluetooth', 0, 0, 2, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6686, 822, 1733, 204, 'All of the choices', 'All of the choices', 1, 1, 4, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6687, 633, 1733, 204, 'Multitasking', 'Multitasking', 0, 0, 1, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6688, 635, 1733, 204, 'Video calling', 'Video calling', 0, 0, 3, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6689, 726, 1734, 78, 'ANSI', 'ANSI', 0, 0, 4, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6690, 255, 1734, 78, 'ASCII', 'ASCII', 0, 0, 1, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6691, 256, 1734, 78, 'Unicode', 'Unicode', 1, 1, 2, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6692, 257, 1734, 78, 'EBCDIC', 'EBCDIC', 0, 0, 3, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6693, 219, 1735, 66, '121', '121', 0, 0, 1, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6694, 676, 1735, 66, '212', '212', 0, 0, 4, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6695, 221, 1735, 66, '199', '199', 0, 0, 3, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6696, 220, 1735, 66, '163', '163', 1, 1, 2, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6697, 452, 1736, 143, 'Zero', 'Zero', 0, 0, 3, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6698, 451, 1736, 143, 'Two', 'Two', 0, 0, 2, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6699, 931, 1736, 143, 'Three', 'Three', 0, 0, 4, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6700, 450, 1736, 143, 'One', 'One', 1, 1, 1, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6701, 204, 1737, 61, 'heap space', 'heap space', 1, 1, 1, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6702, 205, 1737, 61, 'stack space', 'stack space', 0, 0, 2, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6703, 920, 1737, 61, 'first generation memory', 'first generation memory', 0, 0, 4, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6704, 206, 1737, 61, 'heap space and stack space', 'heap space and stack space', 0, 0, 3, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6705, 666, 1738, 215, '3.0 (Honeycomb)', '3.0 (Honeycomb)', 0, 0, 1, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6706, 668, 1738, 215, '2.6', '2.6', 0, 0, 3, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6707, 667, 1738, 215, '2.3 (Gingerbread)', '2.3 (Gingerbread)', 1, 1, 2, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6708, 833, 1738, 215, '2.2 (Froyo)', '2.2 (Froyo)', 0, 0, 4, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6709, 146, 1739, 41, 'public static void main(String[] args)', 'public static void main(String[] args)', 1, 1, 3, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6710, 144, 1739, 41, 'public static int main(String[] args)', 'public static int main(String[] args)', 0, 0, 1, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6711, 145, 1739, 41, 'public int main(String[] args)', 'public int main(String[] args)', 0, 0, 2, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6712, 707, 1740, 225, '44', '44', 0, 0, 3, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6713, 706, 1740, 225, '127', '127', 1, 1, 2, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6714, 705, 1740, 225, '531', '531', 0, 0, 1, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6715, 714, 1740, 225, '135', '135', 0, 0, 4, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6716, 200, 1741, 59, '6', '6', 0, 0, 3, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6717, 918, 1741, 59, '1', '1', 1, 1, 4, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6718, 199, 1741, 59, '0', '0', 0, 0, 2, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6719, 198, 1741, 59, '3', '3', 0, 0, 1, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6720, 656, 1742, 211, 'Open source Webkit', 'Open source Webkit', 1, 1, 3, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6721, 655, 1742, 211, 'Firefox', 'Firefox', 0, 0, 2, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6722, 654, 1742, 211, 'Chrome', 'Chrome', 0, 0, 1, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6723, 829, 1742, 211, 'Opera', 'Opera', 0, 0, 4, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6724, 1005, 1743, 122, 'Assignment opeartors', 'Assignment opeartors', 0, 0, 4, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6725, 388, 1743, 122, 'Binary operators', 'Binary operators', 0, 0, 2, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6726, 389, 1743, 122, 'Logical operators', 'Logical operators', 0, 0, 3, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6727, 387, 1743, 122, 'unary operators', 'unary operators', 1, 1, 1, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6728, 395, 1744, 124, 'Data Type', 'Data Type', 0, 0, 3, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6729, 1007, 1744, 124, 'Explicit Types', 'Explicit Types', 0, 0, 4, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6730, 393, 1744, 124, 'Reference type', 'Reference type', 1, 1, 1, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6731, 394, 1744, 124, 'Value types', 'Value types', 0, 0, 2, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6732, 1090, 1745, 285, '4 π', '4 π', 0, 0, 3, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6733, 1091, 1745, 285, 'π', 'π', 1, 1, 4, '2019-09-02 13:13:40', '2019-09-02 13:19:12'),
(6734, 1088, 1745, 285, '4 π <sup>2</sup>', '4 π <sup>2</sup>', 0, 0, 1, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6735, 1089, 1745, 285, '2 π', '2 π', 0, 0, 2, '2019-09-02 13:13:40', '2019-09-02 13:19:11'),
(6736, 1094, 1746, 286, '0.001', '0.001', 0, 0, 3, '2019-09-02 13:13:40', '2019-09-02 13:19:12'),
(6737, 1092, 1746, 286, '0.057', '0.057', 1, 1, 1, '2019-09-02 13:13:40', '2019-09-02 13:19:12'),
(6738, 1093, 1746, 286, '0.478', '0.478', 0, 0, 2, '2019-09-02 13:13:40', '2019-09-02 13:19:12'),
(6739, 1095, 1746, 286, '0', '0', 0, 0, 4, '2019-09-02 13:13:40', '2019-09-02 13:19:12'),
(6740, 1105, 1747, 289, '7', '7', 1, 1, 2, '2019-09-02 13:13:40', '2019-09-02 13:19:12'),
(6741, 1106, 1747, 289, '6', '6', 0, 0, 3, '2019-09-02 13:13:40', '2019-09-02 13:19:12'),
(6742, 1104, 1747, 289, '5', '5', 0, 0, 1, '2019-09-02 13:13:40', '2019-09-02 13:19:12'),
(6743, 1107, 1747, 289, '8', '8', 0, 0, 4, '2019-09-02 13:13:40', '2019-09-02 13:19:12'),
(6744, 283, 1748, 87, 'decode, execute, store and fetch', 'decode, execute, store and fetch', 0, 0, 2, '2019-09-02 13:13:40', '2019-09-02 13:19:12'),
(6745, 715, 1748, 87, 'fetch, decode, execute and store', 'fetch, decode, execute and store', 1, 1, 4, '2019-09-02 13:13:40', '2019-09-02 13:19:12'),
(6746, 282, 1748, 87, 'fetch, execute, store and decode', 'fetch, execute, store and decode', 0, 0, 1, '2019-09-02 13:13:40', '2019-09-02 13:19:12'),
(6747, 284, 1748, 87, 'decode, fetch, store and execute', 'decode, fetch, store and execute', 0, 0, 3, '2019-09-02 13:13:40', '2019-09-02 13:19:12'),
(6748, 1076, 1749, 107, '22', '22', 1, 1, 4, '2019-09-02 13:13:40', '2019-09-02 13:19:12'),
(6749, 344, 1749, 107, '-12', '-12', 0, 0, 3, '2019-09-02 13:13:40', '2019-09-02 13:19:12'),
(6750, 342, 1749, 107, '11', '11', 0, 0, 1, '2019-09-02 13:13:40', '2019-09-02 13:19:12'),
(6751, 343, 1749, 107, '48', '48', 0, 0, 2, '2019-09-02 13:13:40', '2019-09-02 13:19:12'),
(6752, 143, 1750, 40, 'Both of the above.', 'Both of the above.', 0, 0, 3, '2019-09-02 13:13:40', '2019-09-02 13:19:12'),
(6753, 141, 1750, 40, 'type.', 'type.', 1, 1, 1, '2019-09-02 13:13:40', '2019-09-02 13:19:12'),
(6754, 142, 1750, 40, 'object.', 'object.', 0, 0, 2, '2019-09-02 13:13:40', '2019-09-02 13:19:12'),
(6755, 659, 1751, 212, 'Nokia', 'Nokia', 0, 0, 3, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6756, 657, 1751, 212, 'Apple', 'Apple', 0, 0, 1, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6757, 658, 1751, 212, 'Google', 'Google', 1, 1, 2, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6758, 830, 1751, 212, 'No company', 'No company', 0, 0, 4, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6759, 1031, 1752, 277, 'The code will generate an error because the finally block is placed immediately after the try block.', 'The code will generate an error because the finally block is placed immediately after the try block.', 0, 0, 3, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6760, 1029, 1752, 277, 'The code will generate an error because it lacks a catch block.', 'The code will generate an error because it lacks a catch block.', 0, 0, 1, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6761, 1032, 1752, 277, 'The code will compile without an error.', 'The code will compile without an error.', 1, 1, 4, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6762, 1030, 1752, 277, 'The code will generate an error because it lacks a throw statement.', 'The code will generate an error because it lacks a throw statement.', 0, 0, 2, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6763, 937, 1753, 149, '{1, 5, 6, 3}', '{1, 5, 6, 3}', 0, 0, 4, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6764, 468, 1753, 149, '{1, 2, 6, 1}', '{1, 2, 6, 1}', 0, 0, 1, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6765, 470, 1753, 149, '{1, 2, 1, 2}', '{1, 2, 1, 2}', 0, 1, 3, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6766, 469, 1753, 149, '{1, 2, 5, 6}', '{1, 2, 5, 6}', 1, 0, 2, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6767, 912, 1754, 52, '100', '100', 0, 0, 4, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6768, 177, 1754, 52, '12', '12', 0, 0, 1, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6769, 178, 1754, 52, '200', '200', 1, 1, 2, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6770, 179, 1754, 52, '400', '400', 0, 0, 3, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6771, 1080, 1755, 111, '(3 π / 2 , 2 π)', '(3 π / 2 , 2 π)', 0, 0, 4, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6772, 354, 1755, 111, '(0 , π/2)', '(0 , π/2)', 0, 0, 1, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6773, 355, 1755, 111, '(π/2 , π)', '(π/2 , π)', 1, 1, 2, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6774, 356, 1755, 111, '(π , 3 π / 2)', '(π , 3 π / 2)', 0, 0, 3, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6775, 114, 1756, 31, '10', '10', 0, 0, 1, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6776, 116, 1756, 31, '12', '12', 0, 0, 3, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6777, 115, 1756, 31, '20', '20', 1, 1, 2, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6778, 175, 1757, 51, '8', '8', 0, 0, 2, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6779, 911, 1757, 51, 'Runtime error', 'Runtime error', 0, 0, 4, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6780, 176, 1757, 51, 'Compilation error', 'Compilation error', 1, 1, 3, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6781, 174, 1757, 51, '9', '9', 0, 0, 1, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6782, 476, 1758, 151, 'Intersection', 'Intersection', 1, 1, 3, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6783, 475, 1758, 151, 'Difference', 'Difference', 0, 0, 2, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6784, 939, 1758, 151, 'Complement', 'Complement', 0, 0, 4, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6785, 474, 1758, 151, 'Union', 'Union', 0, 0, 1, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6786, 358, 1759, 112, '15', '15', 0, 0, 2, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6787, 1081, 1759, 112, '8', '8', 0, 0, 4, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6788, 357, 1759, 112, '10', '10', 0, 0, 1, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6789, 359, 1759, 112, '2100', '2100', 1, 1, 3, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6790, 936, 1760, 148, '9', '9', 0, 0, 4, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6791, 465, 1760, 148, '8', '8', 1, 1, 1, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6792, 466, 1760, 148, '6', '6', 0, 0, 2, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6793, 467, 1760, 148, '7', '7', 0, 0, 3, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6794, 664, 1761, 214, 'Windows kernel', 'Windows kernel', 0, 0, 2, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6795, 665, 1761, 214, 'MAC kernel', 'MAC kernel', 0, 0, 3, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6796, 832, 1761, 214, 'Hybrid kernel', 'Hybrid kernel', 0, 0, 4, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6797, 663, 1761, 214, 'Linux kernel', 'Linux kernel', 1, 1, 1, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6798, 1023, 1762, 275, 'Several catch blocks within one try block, arranged starting with the most specific exception and ending with Exception.', 'Several catch blocks within one try block, arranged starting with the most specific exception and ending with Exception.', 1, 1, 3, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6799, 1021, 1762, 275, 'Only one catch block for each try block.', 'Only one catch block for each try block.', 0, 0, 1, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6800, 1024, 1762, 275, 'The catch blocks should be used only when a finally block is not used.', 'The catch blocks should be used only when a finally block is not used.', 0, 0, 4, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6801, 1022, 1762, 275, 'Several catch blocks for a try block, arranged in order starting with Exception and ending with the most specific exception.', 'Several catch blocks for a try block, arranged in order starting with Exception and ending with the most specific exception.', 0, 0, 2, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6802, 854, 1763, 246, 'src/', 'src/', 1, 1, 3, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6803, 853, 1763, 246, 'assets/', 'assets/', 0, 0, 2, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6804, 852, 1763, 246, 'res/', 'res/', 0, 0, 1, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6805, 855, 1763, 246, 'bin/', 'bin/', 0, 0, 4, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6806, 370, 1764, 116, 'an even function', 'an even function', 1, 1, 2, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6807, 371, 1764, 116, 'neither odd nor even', 'neither odd nor even', 0, 0, 3, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6808, 1085, 1764, 116, 'even and odd', 'even and odd', 0, 0, 4, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6809, 369, 1764, 116, 'an odd function', 'an odd function', 0, 0, 1, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6810, 1077, 1765, 108, '1 500 000', '1 500 000', 0, 0, 4, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6811, 345, 1765, 108, '1 846 000', '1 846 000', 1, 1, 1, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6812, 347, 1765, 108, '1 000 000', '1 000 000', 0, 0, 3, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6813, 346, 1765, 108, '1 852 000', '1 852 000', 0, 0, 2, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6814, 166, 1766, 48, 'JRE is an application development framework.', 'JRE is an application development framework.', 0, 0, 2, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6815, 167, 1766, 48, 'JRE is an implementation of the Java Virtual Machine which executes Java programs.', 'JRE is an implementation of the Java Virtual Machine which executes Java programs.', 1, 1, 3, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6816, 165, 1766, 48, 'JRE is a java based GUI application.', 'JRE is a java based GUI application.', 0, 0, 1, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6817, 840, 1767, 243, 'R.style', 'R.style', 1, 1, 1, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6818, 842, 1767, 243, 'manifest.XML', 'manifest.XML', 0, 0, 3, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6819, 843, 1767, 243, 'application', 'application', 0, 0, 4, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6820, 841, 1767, 243, 'X.style', 'X.style', 0, 0, 2, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6821, 148, 1768, 42, 'Boolean', 'Boolean', 1, 0, 2, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6822, 907, 1768, 42, 'private', 'private', 0, 1, 4, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6823, 149, 1768, 42, 'void', 'void', 0, 0, 3, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6824, 147, 1768, 42, 'static', 'static', 0, 0, 1, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6825, 951, 1769, 260, '35', '35', 1, 1, 1, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6826, 954, 1769, 260, '10', '10', 0, 0, 4, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6827, 952, 1769, 260, '20', '20', 0, 0, 2, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6828, 953, 1769, 260, '30', '30', 0, 0, 3, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6829, 399, 1770, 126, 'CheckListBox control', 'CheckListBox control', 0, 0, 1, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6830, 401, 1770, 126, 'TextBox control', 'TextBox control', 0, 0, 3, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6831, 400, 1770, 126, 'ListBox control', 'ListBox control', 1, 1, 2, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6832, 894, 1771, 256, 'A & B', 'A & B', 1, 1, 3, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6833, 892, 1771, 256, 'Content values are key pair values, which are updated or inserted in the database', 'Content values are key pair values, which are updated or inserted in the database', 0, 0, 1, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6834, 895, 1771, 256, 'Cursor is used to store data permanently.', 'Cursor is used to store data permanently.', 0, 0, 4, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6835, 893, 1771, 256, 'Cursor is used to store the temporary result.', 'Cursor is used to store the temporary result.', 0, 0, 2, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6836, 846, 1772, 244, 'commit()', 'commit()', 0, 0, 3, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6837, 845, 1772, 244, 'updates()', 'updates()', 0, 0, 2, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6838, 844, 1772, 244, 'commitUpdates()', 'commitUpdates()', 1, 1, 1, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6839, 847, 1772, 244, 'none of these', 'none of these', 0, 0, 4, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6840, 231, 1773, 70, '[[#img28]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/jkL1TWHhQQMAtCTbSz6HtJyZn8zhXmtgMQYX3Zpo.png\" width=\"150\" height=\"150\" />', 1, 1, 1, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6841, 232, 1773, 70, '[[#img29]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/Cf9qY75IYjLpUVFWsICWK07cAwLtqRPDIO6JjLqT.png\" width=\"150\" height=\"150\" />', 0, 0, 2, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6842, 680, 1773, 70, '[[#img31]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/VNrzOvOE3LpeuWi9ciBQDVlGrXxObvbfnI3kfNS4.png\" width=\"150\" height=\"150\" />', 0, 0, 4, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6843, 233, 1773, 70, '[[#img30]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/5CGn3NoMP2AFTNnuWdi3jGe97XfkU7ydkF3PldTA.png\" width=\"150\" height=\"150\" />', 0, 0, 3, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6844, 887, 1774, 254, 'None of the above', 'None of the above', 0, 0, 4, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6845, 885, 1774, 254, 'Cookies management', 'Cookies management', 0, 1, 2, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6846, 884, 1774, 254, 'httprequest(get/post) and returns response from the server', 'httprequest(get/post) and returns response from the server', 1, 0, 1, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6847, 886, 1774, 254, 'Authentication management', 'Authentication management', 0, 0, 3, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6848, 441, 1775, 140, 'Constant', 'Constant', 0, 0, 1, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6849, 443, 1775, 140, 'Variable', 'Variable', 1, 0, 3, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6850, 1016, 1775, 140, 'Object', 'Object', 0, 1, 4, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6851, 442, 1775, 140, 'Reference type', 'Reference type', 0, 0, 2, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6852, 987, 1776, 270, '35', '35', 1, 1, 1, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6853, 988, 1776, 270, '45', '45', 0, 0, 2, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6854, 989, 1776, 270, '25', '25', 0, 0, 3, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6855, 1061, 1777, 92, 'x > 6', 'x > 6', 0, 0, 4, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6856, 298, 1777, 92, 'x > 1', 'x > 1', 0, 1, 2, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6857, 299, 1777, 92, 'x < -1', 'x < -1', 1, 0, 3, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6858, 297, 1777, 92, 'x < 6', 'x < 6', 0, 0, 1, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6859, 932, 1778, 144, '20', '20', 0, 0, 4, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6860, 455, 1778, 144, '3', '3', 0, 0, 3, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6861, 453, 1778, 144, '10', '10', 0, 0, 1, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6862, 454, 1778, 144, '5', '5', 1, 1, 2, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6863, 462, 1779, 147, 'Infinite', 'Infinite', 1, 1, 1, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6864, 935, 1779, 147, 'Empty', 'Empty', 0, 0, 4, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6865, 464, 1779, 147, 'Subset', 'Subset', 0, 0, 3, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6866, 463, 1779, 147, 'Finite', 'Finite', 0, 0, 2, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6867, 410, 1780, 129, 'ListView Control', 'ListView Control', 0, 0, 3, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6868, 409, 1780, 129, 'LinkLabel control', 'LinkLabel control', 1, 1, 2, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6869, 408, 1780, 129, 'GroupBox control', 'GroupBox control', 0, 0, 1, '2019-09-02 13:13:41', '2019-09-02 13:19:12');
INSERT INTO `answer_sheet_test_question_choices` (`id`, `choice_id`, `answer_sheet_test_question_id`, `test_question_id`, `body`, `body_html`, `is_correct`, `is_selected`, `pos_order`, `created_at`, `updated_at`) VALUES
(6870, 710, 1781, 219, 'Wireless access point', 'Wireless access point', 0, 0, 4, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6871, 685, 1781, 219, 'Switch', 'Switch', 0, 1, 2, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6872, 684, 1781, 219, 'Repeater', 'Repeater', 0, 0, 1, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6873, 686, 1781, 219, 'Modem', 'Modem', 1, 0, 3, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6874, 628, 1782, 202, 'Programming Language', 'Programming Language', 0, 0, 2, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6875, 627, 1782, 202, 'Desktop Operatng System', 'Desktop Operatng System', 0, 1, 1, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6876, 820, 1782, 202, 'Database', 'Database', 0, 0, 4, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6877, 629, 1782, 202, 'Mobile Operating System', 'Mobile Operating System', 1, 0, 3, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6878, 197, 1783, 58, '0 1 2 3 4 5 6 7 8 9', '0 1 2 3 4 5 6 7 8 9', 0, 0, 3, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6879, 917, 1783, 58, '1 2 3 4 5 6 7 8 9 10', '1 2 3 4 5 6 7 8 9 10', 0, 0, 4, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6880, 196, 1783, 58, '1 3 5 7 9', '1 3 5 7 9', 0, 0, 2, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6881, 195, 1783, 58, '0 2 4 6 8', '0 2 4 6 8', 1, 1, 1, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6882, 384, 1784, 121, 'RElational operators', 'RElational operators', 0, 1, 1, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6883, 386, 1784, 121, 'Logical operators', 'Logical operators', 1, 0, 3, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6884, 385, 1784, 121, 'Bitwise operators', 'Bitwise operators', 0, 0, 2, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6885, 1004, 1784, 121, 'Assignment Operators', 'Assignment Operators', 0, 0, 4, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6886, 318, 1785, 99, '6.25', '6.25', 0, 0, 1, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6887, 1068, 1785, 99, '4.753', '4.753', 0, 1, 4, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6888, 319, 1785, 99, '1.756', '1.756', 0, 0, 2, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6889, 320, 1785, 99, '2.322', '2.322', 1, 0, 3, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6890, 636, 1786, 205, 'Device Driver', 'Device Driver', 0, 0, 1, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6891, 638, 1786, 205, 'WiFi driver', 'WiFi driver', 1, 1, 3, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6892, 637, 1786, 205, 'Video Driver', 'Video Driver', 0, 0, 2, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6893, 823, 1786, 205, 'Bluetooth driver', 'Bluetooth driver', 0, 0, 4, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6894, 364, 1787, 114, 'mean = 10 , standard deviation = 6', 'mean = 10 , standard deviation = 6', 0, 0, 2, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6895, 363, 1787, 114, 'mean = 15 , standard deviation = 6', 'mean = 15 , standard deviation = 6', 0, 0, 1, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6896, 1083, 1787, 114, 'mean = 10 , standard deviation = 1', 'mean = 10 , standard deviation = 1', 0, 0, 4, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6897, 365, 1787, 114, 'mean = 15 , standard deviation = 1', 'mean = 15 , standard deviation = 1', 1, 1, 3, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6898, 243, 1788, 74, 'Operating System', 'Operating System', 0, 0, 1, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6899, 245, 1788, 74, 'Computer', 'Computer', 1, 0, 3, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6900, 244, 1788, 74, 'Motherboard', 'Motherboard', 0, 1, 2, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6901, 730, 1788, 74, 'CPU', 'CPU', 0, 0, 4, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6902, 238, 1789, 72, 'Utility software', 'Utility software', 1, 1, 2, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6903, 732, 1789, 72, 'Disk optimization software', 'Disk optimization software', 0, 0, 4, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6904, 237, 1789, 72, 'Operating system software', 'Operating system software', 0, 0, 1, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6905, 239, 1789, 72, 'Anti-virus software', 'Anti-virus software', 0, 0, 3, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6906, 333, 1790, 104, '(x-7)<sup>2</sup> +8', '(x-7)<sup>2</sup> +8', 0, 0, 1, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6907, 334, 1790, 104, '(x+5)<sup>2</sup> +16', '(x+5)<sup>2</sup> +16', 1, 1, 2, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6908, 1073, 1790, 104, '(x+5)<sup>2</sup> -16', '(x+5)<sup>2</sup> -16', 0, 0, 4, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6909, 335, 1790, 104, '(x+7)<sup>2</sup> -8', '(x+7)<sup>2</sup> -8', 0, 0, 3, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6910, 437, 1791, 138, 'Throws', 'Throws', 1, 0, 3, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6911, 436, 1791, 138, 'Catches', 'Catches', 0, 1, 2, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6912, 435, 1791, 138, 'Trys', 'Trys', 0, 0, 1, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6913, 1014, 1791, 138, 'a and b', 'a and b', 0, 0, 4, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6914, 630, 1792, 203, 'MP4', 'MP4', 0, 0, 1, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6915, 821, 1792, 203, 'MIDI', 'MIDI', 0, 0, 4, '2019-09-02 13:13:41', '2019-09-02 13:19:12'),
(6916, 631, 1792, 203, 'MPEG', 'MPEG', 0, 1, 2, '2019-09-02 13:13:42', '2019-09-02 13:19:12'),
(6917, 632, 1792, 203, 'AVI', 'AVI', 1, 0, 3, '2019-09-02 13:13:42', '2019-09-02 13:19:12'),
(6918, 679, 1793, 68, '[[#img26]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/tBuCNpani0PgWIFN01ztVOAj4FS4CBDAiTW9J8lB.png\" width=\"150\" height=\"150\" />', 0, 0, 4, '2019-09-02 13:13:42', '2019-09-02 13:19:12'),
(6919, 226, 1793, 68, '[[#img24]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/nVLwXww7AT2RBfzhH1tPQMxdLPF1iWuunHzErZRh.png\" width=\"150\" height=\"150\" />', 0, 0, 2, '2019-09-02 13:13:42', '2019-09-02 13:19:12'),
(6920, 225, 1793, 68, '[[#img23]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/IyLDJJaUUQ0aIZOMyEjh4JO72W4HpXtPj2CfMKZL.png\" width=\"150\" height=\"150\" />', 1, 1, 1, '2019-09-02 13:13:42', '2019-09-02 13:19:12'),
(6921, 227, 1793, 68, '[[#img25]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/rDh656ehodyPQmn7CxxjGK2H29sx2bh6LDz9INfN.png\" width=\"150\" height=\"150\" />', 0, 0, 3, '2019-09-02 13:13:42', '2019-09-02 13:19:12'),
(6922, 293, 1794, 90, 'kilobyte', 'kilobyte', 0, 0, 3, '2019-09-02 13:13:42', '2019-09-02 13:19:12'),
(6923, 711, 1794, 90, 'megabyte', 'megabyte', 0, 1, 4, '2019-09-02 13:13:42', '2019-09-02 13:19:12'),
(6924, 292, 1794, 90, 'byte', 'byte', 1, 0, 2, '2019-09-02 13:13:42', '2019-09-02 13:19:12'),
(6925, 291, 1794, 90, 'bit', 'bit', 0, 0, 1, '2019-09-02 13:13:42', '2019-09-02 13:19:12'),
(6926, 930, 1795, 142, '{1, 5, 7, 9, 11}', '{1, 5, 7, 9, 11}', 0, 0, 4, '2019-09-02 13:13:42', '2019-09-02 13:19:12'),
(6927, 449, 1795, 142, '{1, 2, 5, 9}', '{1, 2, 5, 9}', 0, 0, 3, '2019-09-02 13:13:42', '2019-09-02 13:19:12'),
(6928, 447, 1795, 142, '{1, 2, 3}', '{1, 2, 3}', 0, 0, 1, '2019-09-02 13:13:42', '2019-09-02 13:19:12'),
(6929, 448, 1795, 142, '{1, 3, 5, 7, 9}', '{1, 3, 5, 7, 9}', 1, 1, 2, '2019-09-02 13:13:42', '2019-09-02 13:19:12'),
(6930, 307, 1796, 95, 'You cannot find the square root of a negative number', 'You cannot find the square root of a negative number', 0, 1, 2, '2019-09-02 13:13:42', '2019-09-02 13:19:12'),
(6931, 306, 1796, 95, '12i', '12i', 1, 0, 1, '2019-09-02 13:13:42', '2019-09-02 13:19:12'),
(6932, 1064, 1796, 95, '-12i', '-12i', 0, 0, 4, '2019-09-02 13:13:42', '2019-09-02 13:19:12'),
(6933, 308, 1796, 95, '-12', '-12', 0, 0, 3, '2019-09-02 13:13:42', '2019-09-02 13:19:12'),
(6934, 509, 1797, 162, 'n( A U B U C)=90', 'n( A U B U C)=90', 0, 0, 3, '2019-09-02 13:13:42', '2019-09-02 13:19:12'),
(6935, 508, 1797, 162, 'n( B U C)=0', 'n( B U C)=0', 0, 0, 2, '2019-09-02 13:13:42', '2019-09-02 13:19:12'),
(6936, 950, 1797, 162, 'All of the mentioned', 'All of the mentioned', 1, 1, 4, '2019-09-02 13:13:42', '2019-09-02 13:19:12'),
(6937, 507, 1797, 162, 'n(A U B)=0', 'n(A U B)=0', 0, 0, 1, '2019-09-02 13:13:42', '2019-09-02 13:19:12'),
(6938, 414, 1798, 131, 'Get()', 'Get()', 0, 1, 1, '2019-09-02 13:13:42', '2019-09-02 13:19:12'),
(6939, 416, 1798, 131, 'Show()', 'Show()', 1, 0, 3, '2019-09-02 13:13:42', '2019-09-02 13:19:12'),
(6940, 415, 1798, 131, 'Enable()', 'Enable()', 0, 0, 2, '2019-09-02 13:13:42', '2019-09-02 13:19:12'),
(6941, 1055, 1799, 283, 'Set the CausesValidation property of the Help button to false.', 'Set the CausesValidation property of the Help button to false.', 1, 1, 3, '2019-09-02 13:13:42', '2019-09-02 13:19:12'),
(6942, 1054, 1799, 283, 'Set the CausesValidation property of the text box to true.', 'Set the CausesValidation property of the text box to true.', 0, 0, 2, '2019-09-02 13:13:42', '2019-09-02 13:19:12'),
(6943, 1053, 1799, 283, 'Set the CausesValidation property of the text box to false.', 'Set the CausesValidation property of the text box to false.', 0, 0, 1, '2019-09-02 13:13:42', '2019-09-02 13:19:12'),
(6944, 1056, 1799, 283, 'Set the CausesValidation property of the Help button to true.', 'Set the CausesValidation property of the Help button to true.', 0, 0, 4, '2019-09-02 13:13:42', '2019-09-02 13:19:12'),
(6945, 118, 1800, 32, 'as', 'as', 0, 0, 2, '2019-09-02 13:13:42', '2019-09-02 13:19:12'),
(6946, 900, 1800, 32, 'All of the choices', 'All of the choices', 1, 1, 4, '2019-09-02 13:13:42', '2019-09-02 13:19:12'),
(6947, 119, 1800, 32, 'foreach', 'foreach', 0, 0, 3, '2019-09-02 13:13:42', '2019-09-02 13:19:12'),
(6948, 117, 1800, 32, 'abstract', 'abstract', 0, 0, 1, '2019-09-02 13:13:42', '2019-09-02 13:19:12'),
(6949, 680, 1801, 70, '[[#img31]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/VNrzOvOE3LpeuWi9ciBQDVlGrXxObvbfnI3kfNS4.png\" width=\"150\" height=\"150\" />', 0, 0, 4, '2019-09-02 13:26:55', '2019-09-02 13:30:51'),
(6950, 232, 1801, 70, '[[#img29]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/Cf9qY75IYjLpUVFWsICWK07cAwLtqRPDIO6JjLqT.png\" width=\"150\" height=\"150\" />', 0, 0, 2, '2019-09-02 13:26:55', '2019-09-02 13:30:51'),
(6951, 233, 1801, 70, '[[#img30]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/5CGn3NoMP2AFTNnuWdi3jGe97XfkU7ydkF3PldTA.png\" width=\"150\" height=\"150\" />', 0, 0, 3, '2019-09-02 13:26:55', '2019-09-02 13:30:51'),
(6952, 231, 1801, 70, '[[#img28]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/jkL1TWHhQQMAtCTbSz6HtJyZn8zhXmtgMQYX3Zpo.png\" width=\"150\" height=\"150\" />', 1, 1, 1, '2019-09-02 13:26:55', '2019-09-02 13:30:51'),
(6953, 451, 1802, 143, 'Two', 'Two', 0, 0, 2, '2019-09-02 13:26:55', '2019-09-02 13:30:51'),
(6954, 450, 1802, 143, 'One', 'One', 1, 1, 1, '2019-09-02 13:26:55', '2019-09-02 13:30:51'),
(6955, 931, 1802, 143, 'Three', 'Three', 0, 0, 4, '2019-09-02 13:26:55', '2019-09-02 13:30:51'),
(6956, 452, 1802, 143, 'Zero', 'Zero', 0, 0, 3, '2019-09-02 13:26:55', '2019-09-02 13:30:51'),
(6957, 900, 1803, 32, 'All of the choices', 'All of the choices', 1, 1, 4, '2019-09-02 13:26:56', '2019-09-02 13:30:51'),
(6958, 118, 1803, 32, 'as', 'as', 0, 0, 2, '2019-09-02 13:26:56', '2019-09-02 13:30:51'),
(6959, 117, 1803, 32, 'abstract', 'abstract', 0, 0, 1, '2019-09-02 13:26:56', '2019-09-02 13:30:51'),
(6960, 119, 1803, 32, 'foreach', 'foreach', 0, 0, 3, '2019-09-02 13:26:56', '2019-09-02 13:30:51'),
(6961, 876, 1804, 252, 'A class used to hold states and objects', 'A class used to hold states and objects', 1, 0, 1, '2019-09-02 13:26:56', '2019-09-02 13:30:51'),
(6962, 879, 1804, 252, 'None of the above', 'None of the above', 0, 0, 4, '2019-09-02 13:26:56', '2019-09-02 13:30:51'),
(6963, 878, 1804, 252, 'A mandatory class in android', 'A mandatory class in android', 0, 1, 3, '2019-09-02 13:26:56', '2019-09-02 13:30:51'),
(6964, 877, 1804, 252, 'A bean class can be passed from one activity to another.', 'A bean class can be passed from one activity to another.', 0, 0, 2, '2019-09-02 13:26:56', '2019-09-02 13:30:51'),
(6965, 206, 1805, 61, 'heap space and stack space', 'heap space and stack space', 0, 0, 3, '2019-09-02 13:26:56', '2019-09-02 13:30:51'),
(6966, 920, 1805, 61, 'first generation memory', 'first generation memory', 0, 1, 4, '2019-09-02 13:26:56', '2019-09-02 13:30:51'),
(6967, 204, 1805, 61, 'heap space', 'heap space', 1, 0, 1, '2019-09-02 13:26:56', '2019-09-02 13:30:51'),
(6968, 205, 1805, 61, 'stack space', 'stack space', 0, 0, 2, '2019-09-02 13:26:56', '2019-09-02 13:30:51'),
(6969, 358, 1806, 112, '15', '15', 0, 0, 2, '2019-09-02 13:26:56', '2019-09-02 13:30:51'),
(6970, 359, 1806, 112, '2100', '2100', 1, 0, 3, '2019-09-02 13:26:56', '2019-09-02 13:30:51'),
(6971, 1081, 1806, 112, '8', '8', 0, 1, 4, '2019-09-02 13:26:56', '2019-09-02 13:30:51'),
(6972, 357, 1806, 112, '10', '10', 0, 0, 1, '2019-09-02 13:26:56', '2019-09-02 13:30:51'),
(6973, 631, 1807, 203, 'MPEG', 'MPEG', 0, 0, 2, '2019-09-02 13:26:56', '2019-09-02 13:30:51'),
(6974, 632, 1807, 203, 'AVI', 'AVI', 1, 1, 3, '2019-09-02 13:26:56', '2019-09-02 13:30:51'),
(6975, 630, 1807, 203, 'MP4', 'MP4', 0, 0, 1, '2019-09-02 13:26:56', '2019-09-02 13:30:51'),
(6976, 821, 1807, 203, 'MIDI', 'MIDI', 0, 0, 4, '2019-09-02 13:26:56', '2019-09-02 13:30:51'),
(6977, 1066, 1808, 97, '3i - 10', '3i - 10', 0, 0, 4, '2019-09-02 13:26:56', '2019-09-02 13:30:51'),
(6978, 313, 1808, 97, '7 - 3i', '7 - 3i', 0, 1, 2, '2019-09-02 13:26:56', '2019-09-02 13:30:51'),
(6979, 312, 1808, 97, 'i - 5', 'i - 5', 0, 0, 1, '2019-09-02 13:26:56', '2019-09-02 13:30:51'),
(6980, 314, 1808, 97, 'i - 12', 'i - 12', 1, 0, 3, '2019-09-02 13:26:56', '2019-09-02 13:30:51'),
(6981, 463, 1809, 147, 'Finite', 'Finite', 0, 0, 2, '2019-09-02 13:26:56', '2019-09-02 13:30:51'),
(6982, 462, 1809, 147, 'Infinite', 'Infinite', 1, 1, 1, '2019-09-02 13:26:56', '2019-09-02 13:30:51'),
(6983, 464, 1809, 147, 'Subset', 'Subset', 0, 0, 3, '2019-09-02 13:26:56', '2019-09-02 13:30:51'),
(6984, 935, 1809, 147, 'Empty', 'Empty', 0, 0, 4, '2019-09-02 13:26:56', '2019-09-02 13:30:51'),
(6985, 227, 1810, 68, '[[#img25]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/rDh656ehodyPQmn7CxxjGK2H29sx2bh6LDz9INfN.png\" width=\"150\" height=\"150\" />', 0, 0, 3, '2019-09-02 13:26:56', '2019-09-02 13:30:51'),
(6986, 226, 1810, 68, '[[#img24]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/nVLwXww7AT2RBfzhH1tPQMxdLPF1iWuunHzErZRh.png\" width=\"150\" height=\"150\" />', 0, 0, 2, '2019-09-02 13:26:56', '2019-09-02 13:30:51'),
(6987, 225, 1810, 68, '[[#img23]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/IyLDJJaUUQ0aIZOMyEjh4JO72W4HpXtPj2CfMKZL.png\" width=\"150\" height=\"150\" />', 1, 1, 1, '2019-09-02 13:26:56', '2019-09-02 13:30:51'),
(6988, 679, 1810, 68, '[[#img26]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/tBuCNpani0PgWIFN01ztVOAj4FS4CBDAiTW9J8lB.png\" width=\"150\" height=\"150\" />', 0, 0, 4, '2019-09-02 13:26:56', '2019-09-02 13:30:51'),
(6989, 343, 1811, 107, '48', '48', 0, 0, 2, '2019-09-02 13:26:56', '2019-09-02 13:30:51'),
(6990, 344, 1811, 107, '-12', '-12', 0, 0, 3, '2019-09-02 13:26:56', '2019-09-02 13:30:51'),
(6991, 342, 1811, 107, '11', '11', 0, 1, 1, '2019-09-02 13:26:56', '2019-09-02 13:30:51'),
(6992, 1076, 1811, 107, '22', '22', 1, 0, 4, '2019-09-02 13:26:56', '2019-09-02 13:30:51'),
(6993, 1002, 1812, 119, 'for loop', 'for loop', 1, 0, 4, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(6994, 380, 1812, 119, 'while', 'while', 0, 1, 3, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(6995, 378, 1812, 119, 'forEach loop', 'forEach loop', 0, 0, 1, '2019-09-02 13:26:56', '2019-09-02 13:30:51'),
(6996, 379, 1812, 119, 'do while', 'do while', 0, 0, 2, '2019-09-02 13:26:56', '2019-09-02 13:30:51'),
(6997, 989, 1813, 270, '25', '25', 0, 0, 3, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(6998, 987, 1813, 270, '35', '35', 1, 1, 1, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(6999, 988, 1813, 270, '45', '45', 0, 0, 2, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7000, 502, 1814, 160, 'A U B -B', 'A U B -B', 1, 1, 2, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7001, 501, 1814, 160, 'A‘ (Complement of A)', 'A‘ (Complement of A)', 0, 0, 1, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7002, 948, 1814, 160, 'B', 'B', 0, 0, 4, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7003, 503, 1814, 160, 'A ∩ B', 'A ∩ B', 0, 0, 3, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7004, 282, 1815, 87, 'fetch, execute, store and decode', 'fetch, execute, store and decode', 0, 0, 1, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7005, 715, 1815, 87, 'fetch, decode, execute and store', 'fetch, decode, execute and store', 1, 1, 4, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7006, 283, 1815, 87, 'decode, execute, store and fetch', 'decode, execute, store and fetch', 0, 0, 2, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7007, 284, 1815, 87, 'decode, fetch, store and execute', 'decode, fetch, store and execute', 0, 0, 3, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7008, 173, 1816, 50, 'Thread starts running.', 'Thread starts running.', 0, 1, 3, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7009, 172, 1816, 50, 'Thread returns to the waiting state.', 'Thread returns to the waiting state.', 0, 0, 2, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7010, 171, 1816, 50, 'Thread returns to the ready state.', 'Thread returns to the ready state.', 1, 0, 1, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7011, 385, 1817, 121, 'Bitwise operators', 'Bitwise operators', 0, 0, 2, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7012, 1004, 1817, 121, 'Assignment Operators', 'Assignment Operators', 0, 1, 4, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7013, 384, 1817, 121, 'RElational operators', 'RElational operators', 0, 0, 1, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7014, 386, 1817, 121, 'Logical operators', 'Logical operators', 1, 0, 3, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7015, 655, 1818, 211, 'Firefox', 'Firefox', 0, 0, 2, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7016, 654, 1818, 211, 'Chrome', 'Chrome', 0, 0, 1, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7017, 829, 1818, 211, 'Opera', 'Opera', 0, 1, 4, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7018, 656, 1818, 211, 'Open source Webkit', 'Open source Webkit', 1, 0, 3, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7019, 116, 1819, 31, '12', '12', 0, 0, 3, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7020, 115, 1819, 31, '20', '20', 1, 1, 2, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7021, 114, 1819, 31, '10', '10', 0, 0, 1, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7022, 457, 1820, 145, '{(1, 1), (2, 2), (a, a), (b, b)}', '{(1, 1), (2, 2), (a, a), (b, b)}', 0, 0, 2, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7023, 458, 1820, 145, '{(1, a), (2, a), (1, b), (2, b)}', '{(1, a), (2, a), (1, b), (2, b)}', 1, 1, 3, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7024, 933, 1820, 145, '{(1, 1), (a, a), (2, a), (1, b)}', '{(1, 1), (a, a), (2, a), (1, b)}', 0, 0, 4, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7025, 456, 1820, 145, '{(1, a), (1, b), (2, a), (b, b)}', '{(1, a), (1, b), (2, a), (b, b)}', 0, 0, 1, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7026, 307, 1821, 95, 'You cannot find the square root of a negative number', 'You cannot find the square root of a negative number', 0, 0, 2, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7027, 308, 1821, 95, '-12', '-12', 0, 1, 3, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7028, 306, 1821, 95, '12i', '12i', 1, 0, 1, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7029, 1064, 1821, 95, '-12i', '-12i', 0, 0, 4, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7030, 139, 1822, 39, '0', '0', 0, 0, 2, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7031, 140, 1822, 39, 'Depends upon the type of variable', 'Depends upon the type of variable', 1, 1, 3, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7032, 906, 1822, 39, 'Not assigned', 'Not assigned', 0, 0, 4, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7033, 138, 1822, 39, 'null', 'null', 0, 0, 1, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7034, 453, 1823, 144, '10', '10', 0, 0, 1, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7035, 455, 1823, 144, '3', '3', 0, 0, 3, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7036, 932, 1823, 144, '20', '20', 0, 0, 4, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7037, 454, 1823, 144, '5', '5', 1, 1, 2, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7038, 1023, 1824, 275, 'Several catch blocks within one try block, arranged starting with the most specific exception and ending with Exception.', 'Several catch blocks within one try block, arranged starting with the most specific exception and ending with Exception.', 1, 0, 3, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7039, 1022, 1824, 275, 'Several catch blocks for a try block, arranged in order starting with Exception and ending with the most specific exception.', 'Several catch blocks for a try block, arranged in order starting with Exception and ending with the most specific exception.', 0, 1, 2, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7040, 1021, 1824, 275, 'Only one catch block for each try block.', 'Only one catch block for each try block.', 0, 0, 1, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7041, 1024, 1824, 275, 'The catch blocks should be used only when a finally block is not used.', 'The catch blocks should be used only when a finally block is not used.', 0, 0, 4, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7042, 347, 1825, 108, '1 000 000', '1 000 000', 0, 0, 3, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7043, 1077, 1825, 108, '1 500 000', '1 500 000', 0, 1, 4, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7044, 345, 1825, 108, '1 846 000', '1 846 000', 1, 0, 1, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7045, 346, 1825, 108, '1 852 000', '1 852 000', 0, 0, 2, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7046, 402, 1826, 127, 'Radio Button', 'Radio Button', 0, 0, 1, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7047, 403, 1826, 127, 'Textbox control', 'Textbox control', 0, 1, 2, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7048, 404, 1826, 127, 'Button control', 'Button control', 1, 0, 3, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7049, 333, 1827, 104, '(x-7)<sup>2</sup> +8', '(x-7)<sup>2</sup> +8', 0, 1, 1, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7050, 1073, 1827, 104, '(x+5)<sup>2</sup> -16', '(x+5)<sup>2</sup> -16', 0, 0, 4, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7051, 335, 1827, 104, '(x+7)<sup>2</sup> -8', '(x+7)<sup>2</sup> -8', 0, 0, 3, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7052, 334, 1827, 104, '(x+5)<sup>2</sup> +16', '(x+5)<sup>2</sup> +16', 1, 0, 2, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7053, 689, 1828, 220, 'MICR', 'MICR', 0, 1, 3, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7054, 688, 1828, 220, 'scanner', 'scanner', 1, 0, 2, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7055, 687, 1828, 220, 'digital camera', 'digital camera', 0, 0, 1, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7056, 709, 1828, 220, 'RFID readers', 'RFID readers', 0, 0, 4, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7057, 449, 1829, 142, '{1, 2, 5, 9}', '{1, 2, 5, 9}', 0, 0, 3, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7058, 448, 1829, 142, '{1, 3, 5, 7, 9}', '{1, 3, 5, 7, 9}', 1, 1, 2, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7059, 447, 1829, 142, '{1, 2, 3}', '{1, 2, 3}', 0, 0, 1, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7060, 930, 1829, 142, '{1, 5, 7, 9, 11}', '{1, 5, 7, 9, 11}', 0, 0, 4, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7061, 121, 1830, 33, 'ToDouble', 'ToDouble', 1, 0, 2, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7062, 901, 1830, 33, 'ToInt32', 'ToInt32', 0, 1, 4, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7063, 120, 1830, 33, 'ToDecimal', 'ToDecimal', 0, 0, 1, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7064, 122, 1830, 33, 'ToInt16', 'ToInt16', 0, 0, 3, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7065, 1085, 1831, 116, 'even and odd', 'even and odd', 0, 0, 4, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7066, 370, 1831, 116, 'an even function', 'an even function', 1, 1, 2, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7067, 371, 1831, 116, 'neither odd nor even', 'neither odd nor even', 0, 0, 3, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7068, 369, 1831, 116, 'an odd function', 'an odd function', 0, 0, 1, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7069, 1105, 1832, 289, '7', '7', 1, 0, 2, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7070, 1106, 1832, 289, '6', '6', 0, 1, 3, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7071, 1104, 1832, 289, '5', '5', 0, 0, 1, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7072, 1107, 1832, 289, '8', '8', 0, 0, 4, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7073, 221, 1833, 66, '199', '199', 0, 0, 3, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7074, 220, 1833, 66, '163', '163', 1, 1, 2, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7075, 676, 1833, 66, '212', '212', 0, 0, 4, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7076, 219, 1833, 66, '121', '121', 0, 0, 1, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7077, 980, 1834, 267, 'smallest following integer', 'smallest following integer', 0, 0, 3, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7078, 979, 1834, 267, 'greatest previous integer', 'greatest previous integer', 1, 1, 2, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7079, 978, 1834, 267, 'smallest previous integer', 'smallest previous integer', 0, 0, 1, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7080, 399, 1835, 126, 'CheckListBox control', 'CheckListBox control', 0, 0, 1, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7081, 401, 1835, 126, 'TextBox control', 'TextBox control', 0, 1, 3, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7082, 400, 1835, 126, 'ListBox control', 'ListBox control', 1, 0, 2, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7083, 1005, 1836, 122, 'Assignment opeartors', 'Assignment opeartors', 0, 1, 4, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7084, 387, 1836, 122, 'unary operators', 'unary operators', 1, 0, 1, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7085, 388, 1836, 122, 'Binary operators', 'Binary operators', 0, 0, 2, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7086, 389, 1836, 122, 'Logical operators', 'Logical operators', 0, 0, 3, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7087, 1032, 1837, 277, 'The code will compile without an error.', 'The code will compile without an error.', 1, 1, 4, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7088, 1031, 1837, 277, 'The code will generate an error because the finally block is placed immediately after the try block.', 'The code will generate an error because the finally block is placed immediately after the try block.', 0, 0, 3, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7089, 1030, 1837, 277, 'The code will generate an error because it lacks a throw statement.', 'The code will generate an error because it lacks a throw statement.', 0, 0, 2, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7090, 1029, 1837, 277, 'The code will generate an error because it lacks a catch block.', 'The code will generate an error because it lacks a catch block.', 0, 0, 1, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7091, 951, 1838, 260, '35', '35', 1, 0, 1, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7092, 953, 1838, 260, '30', '30', 0, 1, 3, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7093, 952, 1838, 260, '20', '20', 0, 0, 2, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7094, 954, 1838, 260, '10', '10', 0, 0, 4, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7095, 298, 1839, 92, 'x > 1', 'x > 1', 0, 0, 2, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7096, 1061, 1839, 92, 'x > 6', 'x > 6', 0, 1, 4, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7097, 297, 1839, 92, 'x < 6', 'x < 6', 0, 0, 1, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7098, 299, 1839, 92, 'x < -1', 'x < -1', 1, 0, 3, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7099, 165, 1840, 48, 'JRE is a java based GUI application.', 'JRE is a java based GUI application.', 0, 0, 1, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7100, 166, 1840, 48, 'JRE is an application development framework.', 'JRE is an application development framework.', 0, 1, 2, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7101, 167, 1840, 48, 'JRE is an implementation of the Java Virtual Machine which executes Java programs.', 'JRE is an implementation of the Java Virtual Machine which executes Java programs.', 1, 0, 3, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7102, 718, 1841, 223, '100100', '100100', 0, 0, 4, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7103, 701, 1841, 223, '110100', '110100', 1, 1, 3, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7104, 700, 1841, 223, '100001', '100001', 0, 0, 2, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7105, 699, 1841, 223, '110011', '110011', 0, 0, 1, '2019-09-02 13:26:56', '2019-09-02 13:30:52'),
(7106, 486, 1842, 155, '4', '4', 1, 0, 1, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7107, 943, 1842, 155, '7', '7', 0, 0, 4, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7108, 488, 1842, 155, '6', '6', 0, 1, 3, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7109, 487, 1842, 155, '5', '5', 0, 0, 2, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7110, 194, 1843, 57, 'Both Row and Column', 'Both Row and Column', 0, 0, 3, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7111, 193, 1843, 57, 'Column', 'Column', 0, 0, 2, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7112, 192, 1843, 57, 'Row', 'Row', 1, 1, 1, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7113, 710, 1844, 219, 'Wireless access point', 'Wireless access point', 0, 0, 4, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7114, 686, 1844, 219, 'Modem', 'Modem', 1, 1, 3, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7115, 685, 1844, 219, 'Switch', 'Switch', 0, 0, 2, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7116, 684, 1844, 219, 'Repeater', 'Repeater', 0, 0, 1, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7117, 490, 1845, 156, '8, 12', '8, 12', 1, 1, 2, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7118, 489, 1845, 156, '4, 8', '4, 8', 0, 0, 1, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7119, 944, 1845, 156, 'None of the choices', 'None of the choices', 0, 0, 4, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7120, 491, 1845, 156, '4, 12', '4, 12', 0, 0, 3, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7121, 431, 1846, 136, 'instantiates button control', 'instantiates button control', 0, 0, 3, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7122, 430, 1846, 136, 'initializes a button control', 'initializes a button control', 0, 0, 2, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7123, 1012, 1846, 136, 'a and c', 'a and c', 1, 1, 4, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7124, 429, 1846, 136, 'creates a button control', 'creates a button control', 0, 0, 1, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7125, 290, 1847, 89, 'Virtual Machine', 'Virtual Machine', 0, 0, 3, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7126, 289, 1847, 89, 'Virtual memory', 'Virtual memory', 1, 0, 2, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7127, 712, 1847, 89, 'None of them', 'None of them', 0, 1, 4, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7128, 288, 1847, 89, 'Virtual private network', 'Virtual private network', 0, 0, 1, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7129, 142, 1848, 40, 'object.', 'object.', 0, 0, 2, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7130, 141, 1848, 40, 'type.', 'type.', 1, 1, 1, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7131, 143, 1848, 40, 'Both of the above.', 'Both of the above.', 0, 0, 3, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7132, 125, 1849, 34, '&</a>', '&</a>', 0, 0, 3, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7133, 123, 1849, 34, 'sizeof', 'sizeof', 1, 1, 1, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7134, 124, 1849, 34, 'typeof', 'typeof', 0, 0, 2, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7135, 902, 1849, 34, '*', '*', 0, 0, 4, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7136, 195, 1850, 58, '0 2 4 6 8', '0 2 4 6 8', 1, 1, 1, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7137, 917, 1850, 58, '1 2 3 4 5 6 7 8 9 10', '1 2 3 4 5 6 7 8 9 10', 0, 0, 4, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7138, 197, 1850, 58, '0 1 2 3 4 5 6 7 8 9', '0 1 2 3 4 5 6 7 8 9', 0, 0, 3, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7139, 196, 1850, 58, '1 3 5 7 9', '1 3 5 7 9', 0, 0, 2, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7140, 255, 1851, 78, 'ASCII', 'ASCII', 0, 0, 1, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7141, 256, 1851, 78, 'Unicode', 'Unicode', 1, 1, 2, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7142, 257, 1851, 78, 'EBCDIC', 'EBCDIC', 0, 0, 3, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7143, 726, 1851, 78, 'ANSI', 'ANSI', 0, 0, 4, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7144, 643, 1852, 207, 'Application Debug Bridge', 'Application Debug Bridge', 0, 0, 2, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7145, 642, 1852, 207, 'Android Debug Bridge', 'Android Debug Bridge', 1, 1, 1, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7146, 825, 1852, 207, 'Application data bridge', 'Application data bridge', 0, 0, 4, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7147, 644, 1852, 207, 'Android data bridge', 'Android data bridge', 0, 0, 3, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7148, 355, 1853, 111, '(π/2 , π)', '(π/2 , π)', 1, 0, 2, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7149, 1080, 1853, 111, '(3 π / 2 , 2 π)', '(3 π / 2 , 2 π)', 0, 1, 4, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7150, 354, 1853, 111, '(0 , π/2)', '(0 , π/2)', 0, 0, 1, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7151, 356, 1853, 111, '(π , 3 π / 2)', '(π , 3 π / 2)', 0, 0, 3, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7152, 637, 1854, 205, 'Video Driver', 'Video Driver', 0, 0, 2, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7153, 636, 1854, 205, 'Device Driver', 'Device Driver', 0, 0, 1, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7154, 823, 1854, 205, 'Bluetooth driver', 'Bluetooth driver', 0, 1, 4, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7155, 638, 1854, 205, 'WiFi driver', 'WiFi driver', 1, 0, 3, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7156, 417, 1855, 132, 'If', 'If', 0, 0, 1, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7157, 418, 1855, 132, 'Switch', 'Switch', 1, 1, 2, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7158, 419, 1855, 132, 'For', 'For', 0, 0, 3, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7159, 1009, 1855, 132, 'While', 'While', 0, 0, 4, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7160, 365, 1856, 114, 'mean = 15 , standard deviation = 1', 'mean = 15 , standard deviation = 1', 1, 0, 3, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7161, 363, 1856, 114, 'mean = 15 , standard deviation = 6', 'mean = 15 , standard deviation = 6', 0, 1, 1, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7162, 364, 1856, 114, 'mean = 10 , standard deviation = 6', 'mean = 10 , standard deviation = 6', 0, 0, 2, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7163, 1083, 1856, 114, 'mean = 10 , standard deviation = 1', 'mean = 10 , standard deviation = 1', 0, 0, 4, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7164, 863, 1857, 248, 'none of the choices', 'none of the choices', 0, 0, 4, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7165, 860, 1857, 248, 'To send the data from an application to another application', 'To send the data from an application to another application', 0, 0, 1, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7166, 861, 1857, 248, 'To store the data in a database', 'To store the data in a database', 0, 0, 2, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7167, 862, 1857, 248, 'To share the data between applications', 'To share the data between applications', 1, 1, 3, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7168, 259, 1858, 79, 'ALU', 'ALU', 0, 0, 2, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7169, 258, 1858, 79, 'Control unit', 'Control unit', 0, 0, 1, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7170, 725, 1858, 79, 'Primary Storage', 'Primary Storage', 1, 1, 4, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7171, 260, 1858, 79, 'Registers', 'Registers', 0, 0, 3, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7172, 415, 1859, 131, 'Enable()', 'Enable()', 0, 0, 2, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7173, 416, 1859, 131, 'Show()', 'Show()', 1, 1, 3, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7174, 414, 1859, 131, 'Get()', 'Get()', 0, 0, 1, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7175, 435, 1860, 138, 'Trys', 'Trys', 0, 0, 1, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7176, 436, 1860, 138, 'Catches', 'Catches', 0, 0, 2, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7177, 1014, 1860, 138, 'a and b', 'a and b', 0, 0, 4, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7178, 437, 1860, 138, 'Throws', 'Throws', 1, 1, 3, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7179, 1007, 1861, 124, 'Explicit Types', 'Explicit Types', 0, 0, 4, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7180, 393, 1861, 124, 'Reference type', 'Reference type', 1, 1, 1, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7181, 394, 1861, 124, 'Value types', 'Value types', 0, 0, 2, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7182, 395, 1861, 124, 'Data Type', 'Data Type', 0, 0, 3, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7183, 1034, 1862, 278, 'Message1\nMessage2\nMessage3\nMessage4', 'Message1<br />\nMessage2<br />\nMessage3<br />\nMessage4', 0, 0, 2, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7184, 1036, 1862, 278, 'Message1\nMessage3\nMessage2\nMessage4', 'Message1<br />\nMessage3<br />\nMessage2<br />\nMessage4', 0, 1, 4, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7185, 1033, 1862, 278, 'Message1\nMessage4', 'Message1<br />\nMessage4', 0, 0, 1, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7186, 1035, 1862, 278, 'Message1\nMessage3\nMessage4', 'Message1<br />\nMessage3<br />\nMessage4', 1, 0, 3, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7187, 1092, 1863, 286, '0.057', '0.057', 1, 0, 1, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7188, 1094, 1863, 286, '0.001', '0.001', 0, 0, 3, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7189, 1093, 1863, 286, '0.478', '0.478', 0, 1, 2, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7190, 1095, 1863, 286, '0', '0', 0, 0, 4, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7191, 476, 1864, 151, 'Intersection', 'Intersection', 1, 0, 3, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7192, 475, 1864, 151, 'Difference', 'Difference', 0, 0, 2, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7193, 474, 1864, 151, 'Union', 'Union', 0, 1, 1, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7194, 939, 1864, 151, 'Complement', 'Complement', 0, 0, 4, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7195, 254, 1865, 77, 'run time error', 'run time error', 0, 0, 3, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7196, 727, 1865, 77, 'linker error', 'linker error', 0, 1, 4, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7197, 253, 1865, 77, 'syntax error', 'syntax error', 0, 0, 2, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7198, 252, 1865, 77, 'logic error', 'logic error', 1, 0, 1, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7199, 665, 1866, 214, 'MAC kernel', 'MAC kernel', 0, 0, 3, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7200, 664, 1866, 214, 'Windows kernel', 'Windows kernel', 0, 1, 2, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7201, 663, 1866, 214, 'Linux kernel', 'Linux kernel', 1, 0, 1, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7202, 832, 1866, 214, 'Hybrid kernel', 'Hybrid kernel', 0, 0, 4, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7203, 432, 1867, 137, 'Override the parent class methods but maintain the implementation', 'Override the parent class methods but maintain the implementation', 0, 0, 1, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7204, 1013, 1867, 137, 'Are Virtual', 'Are Virtual', 0, 0, 4, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7205, 434, 1867, 137, 'Have different return types and arguments than the parent class', 'Have different return types and arguments than the parent class', 0, 0, 3, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7206, 433, 1867, 137, 'Maintain the same return type and arguments as the parent class, but implement it differently', 'Maintain the same return type and arguments as the parent class, but implement it differently', 1, 1, 2, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7207, 250, 1868, 76, 'buffering', 'buffering', 0, 0, 2, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7208, 728, 1868, 76, 'back up', 'back up', 1, 0, 4, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7209, 251, 1868, 76, 'virtual memory', 'virtual memory', 0, 1, 3, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7210, 249, 1868, 76, 'spooling', 'spooling', 0, 0, 1, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7211, 319, 1869, 99, '1.756', '1.756', 0, 0, 2, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7212, 318, 1869, 99, '6.25', '6.25', 0, 0, 1, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7213, 1068, 1869, 99, '4.753', '4.753', 0, 1, 4, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7214, 320, 1869, 99, '2.322', '2.322', 1, 0, 3, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7215, 361, 1870, 113, '3!', '3!', 1, 0, 2, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7216, 1082, 1870, 113, '3! * 2!', '3! * 2!', 0, 1, 4, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7217, 362, 1870, 113, '2!', '2!', 0, 0, 3, '2019-09-02 13:26:57', '2019-09-02 13:30:52'),
(7218, 360, 1870, 113, '5!', '5!', 0, 0, 1, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7219, 938, 1871, 150, '{1, 6}', '{1, 6}', 0, 0, 4, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7220, 471, 1871, 150, '{1, 2}', '{1, 2}', 1, 0, 1, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7221, 472, 1871, 150, '{5, 6}', '{5, 6}', 0, 1, 2, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7222, 473, 1871, 150, '{2, 5}', '{2, 5}', 0, 0, 3, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7223, 1091, 1872, 285, 'π', 'π', 1, 0, 4, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7224, 1089, 1872, 285, '2 π', '2 π', 0, 0, 2, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7225, 1088, 1872, 285, '4 π <sup>2</sup>', '4 π <sup>2</sup>', 0, 1, 1, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7226, 1090, 1872, 285, '4 π', '4 π', 0, 0, 3, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7227, 846, 1873, 244, 'commit()', 'commit()', 0, 0, 3, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7228, 847, 1873, 244, 'none of these', 'none of these', 0, 0, 4, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7229, 844, 1873, 244, 'commitUpdates()', 'commitUpdates()', 1, 1, 1, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7230, 845, 1873, 244, 'updates()', 'updates()', 0, 0, 2, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7231, 245, 1874, 74, 'Computer', 'Computer', 1, 0, 3, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7232, 730, 1874, 74, 'CPU', 'CPU', 0, 0, 4, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7233, 243, 1874, 74, 'Operating System', 'Operating System', 0, 1, 1, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7234, 244, 1874, 74, 'Motherboard', 'Motherboard', 0, 0, 2, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7235, 732, 1875, 72, 'Disk optimization software', 'Disk optimization software', 0, 0, 4, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7236, 237, 1875, 72, 'Operating system software', 'Operating system software', 0, 1, 1, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7237, 238, 1875, 72, 'Utility software', 'Utility software', 1, 0, 2, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7238, 239, 1875, 72, 'Anti-virus software', 'Anti-virus software', 0, 0, 3, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7239, 842, 1876, 243, 'manifest.XML', 'manifest.XML', 0, 0, 3, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7240, 843, 1876, 243, 'application', 'application', 0, 0, 4, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7241, 840, 1876, 243, 'R.style', 'R.style', 1, 1, 1, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7242, 841, 1876, 243, 'X.style', 'X.style', 0, 0, 2, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7243, 267, 1877, 82, '-23', '-23', 0, 1, 1, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7244, 722, 1877, 82, '22', '22', 0, 0, 4, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7245, 268, 1877, 82, '-9', '-9', 1, 0, 2, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7246, 269, 1877, 82, '-7', '-7', 0, 0, 3, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7247, 894, 1878, 256, 'A & B', 'A & B', 1, 1, 3, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7248, 893, 1878, 256, 'Cursor is used to store the temporary result.', 'Cursor is used to store the temporary result.', 0, 0, 2, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7249, 892, 1878, 256, 'Content values are key pair values, which are updated or inserted in the database', 'Content values are key pair values, which are updated or inserted in the database', 0, 0, 1, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7250, 895, 1878, 256, 'Cursor is used to store data permanently.', 'Cursor is used to store data permanently.', 0, 0, 4, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7251, 174, 1879, 51, '9', '9', 0, 0, 1, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7252, 911, 1879, 51, 'Runtime error', 'Runtime error', 0, 1, 4, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7253, 176, 1879, 51, 'Compilation error', 'Compilation error', 1, 0, 3, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7254, 175, 1879, 51, '8', '8', 0, 0, 2, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7255, 292, 1880, 90, 'byte', 'byte', 1, 0, 2, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7256, 711, 1880, 90, 'megabyte', 'megabyte', 0, 1, 4, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7257, 291, 1880, 90, 'bit', 'bit', 0, 0, 1, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7258, 293, 1880, 90, 'kilobyte', 'kilobyte', 0, 0, 3, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7259, 442, 1881, 140, 'Reference type', 'Reference type', 0, 0, 2, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7260, 441, 1881, 140, 'Constant', 'Constant', 0, 0, 1, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7261, 443, 1881, 140, 'Variable', 'Variable', 1, 1, 3, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7262, 1016, 1881, 140, 'Object', 'Object', 0, 0, 4, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7263, 408, 1882, 129, 'GroupBox control', 'GroupBox control', 0, 0, 1, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7264, 410, 1882, 129, 'ListView Control', 'ListView Control', 0, 0, 3, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7265, 409, 1882, 129, 'LinkLabel control', 'LinkLabel control', 1, 1, 2, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7266, 468, 1883, 149, '{1, 2, 6, 1}', '{1, 2, 6, 1}', 0, 0, 1, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7267, 469, 1883, 149, '{1, 2, 5, 6}', '{1, 2, 5, 6}', 1, 1, 2, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7268, 937, 1883, 149, '{1, 5, 6, 3}', '{1, 5, 6, 3}', 0, 0, 4, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7269, 470, 1883, 149, '{1, 2, 1, 2}', '{1, 2, 1, 2}', 0, 0, 3, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7270, 918, 1884, 59, '1', '1', 1, 0, 4, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7271, 198, 1884, 59, '3', '3', 0, 1, 1, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7272, 199, 1884, 59, '0', '0', 0, 0, 2, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7273, 200, 1884, 59, '6', '6', 0, 0, 3, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7274, 467, 1885, 148, '7', '7', 0, 0, 3, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7275, 466, 1885, 148, '6', '6', 0, 0, 2, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7276, 936, 1885, 148, '9', '9', 0, 0, 4, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7277, 465, 1885, 148, '8', '8', 1, 1, 1, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7278, 3, 1886, 1, 'x = 2', 'x = 2', 0, 0, 3, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7279, 2, 1886, 1, 'x = 4', 'x = 4', 0, 1, 2, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7280, 1, 1886, 1, 'x = 1', 'x = 1', 1, 0, 1, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7281, 852, 1887, 246, 'res/', 'res/', 0, 0, 1, '2019-09-02 13:26:58', '2019-09-02 13:30:52'),
(7282, 853, 1887, 246, 'assets/', 'assets/', 0, 1, 2, '2019-09-02 13:26:58', '2019-09-02 13:30:53'),
(7283, 854, 1887, 246, 'src/', 'src/', 1, 0, 3, '2019-09-02 13:26:58', '2019-09-02 13:30:53'),
(7284, 855, 1887, 246, 'bin/', 'bin/', 0, 0, 4, '2019-09-02 13:26:58', '2019-09-02 13:30:53'),
(7285, 820, 1888, 202, 'Database', 'Database', 0, 0, 4, '2019-09-02 13:26:58', '2019-09-02 13:30:53'),
(7286, 627, 1888, 202, 'Desktop Operatng System', 'Desktop Operatng System', 0, 0, 1, '2019-09-02 13:26:58', '2019-09-02 13:30:53'),
(7287, 629, 1888, 202, 'Mobile Operating System', 'Mobile Operating System', 1, 1, 3, '2019-09-02 13:26:58', '2019-09-02 13:30:53'),
(7288, 628, 1888, 202, 'Programming Language', 'Programming Language', 0, 0, 2, '2019-09-02 13:26:58', '2019-09-02 13:30:53'),
(7289, 147, 1889, 42, 'static', 'static', 0, 0, 1, '2019-09-02 13:26:58', '2019-09-02 13:30:53'),
(7290, 907, 1889, 42, 'private', 'private', 0, 0, 4, '2019-09-02 13:26:58', '2019-09-02 13:30:53'),
(7291, 148, 1889, 42, 'Boolean', 'Boolean', 1, 1, 2, '2019-09-02 13:26:58', '2019-09-02 13:30:53'),
(7292, 149, 1889, 42, 'void', 'void', 0, 0, 3, '2019-09-02 13:26:58', '2019-09-02 13:30:53'),
(7293, 179, 1890, 52, '400', '400', 0, 0, 3, '2019-09-02 13:26:58', '2019-09-02 13:30:53'),
(7294, 178, 1890, 52, '200', '200', 1, 1, 2, '2019-09-02 13:26:58', '2019-09-02 13:30:53'),
(7295, 912, 1890, 52, '100', '100', 0, 0, 4, '2019-09-02 13:26:58', '2019-09-02 13:30:53');
INSERT INTO `answer_sheet_test_question_choices` (`id`, `choice_id`, `answer_sheet_test_question_id`, `test_question_id`, `body`, `body_html`, `is_correct`, `is_selected`, `pos_order`, `created_at`, `updated_at`) VALUES
(7296, 177, 1890, 52, '12', '12', 0, 0, 1, '2019-09-02 13:26:58', '2019-09-02 13:30:53'),
(7297, 1054, 1891, 283, 'Set the CausesValidation property of the text box to true.', 'Set the CausesValidation property of the text box to true.', 0, 0, 2, '2019-09-02 13:26:58', '2019-09-02 13:30:53'),
(7298, 1056, 1891, 283, 'Set the CausesValidation property of the Help button to true.', 'Set the CausesValidation property of the Help button to true.', 0, 0, 4, '2019-09-02 13:26:58', '2019-09-02 13:30:53'),
(7299, 1055, 1891, 283, 'Set the CausesValidation property of the Help button to false.', 'Set the CausesValidation property of the Help button to false.', 1, 1, 3, '2019-09-02 13:26:58', '2019-09-02 13:30:53'),
(7300, 1053, 1891, 283, 'Set the CausesValidation property of the text box to false.', 'Set the CausesValidation property of the text box to false.', 0, 0, 1, '2019-09-02 13:26:58', '2019-09-02 13:30:53'),
(7301, 666, 1892, 215, '3.0 (Honeycomb)', '3.0 (Honeycomb)', 0, 0, 1, '2019-09-02 13:26:58', '2019-09-02 13:30:53'),
(7302, 668, 1892, 215, '2.6', '2.6', 0, 0, 3, '2019-09-02 13:26:58', '2019-09-02 13:30:53'),
(7303, 667, 1892, 215, '2.3 (Gingerbread)', '2.3 (Gingerbread)', 1, 1, 2, '2019-09-02 13:26:58', '2019-09-02 13:30:53'),
(7304, 833, 1892, 215, '2.2 (Froyo)', '2.2 (Froyo)', 0, 0, 4, '2019-09-02 13:26:58', '2019-09-02 13:30:53'),
(7305, 145, 1893, 41, 'public int main(String[] args)', 'public int main(String[] args)', 0, 0, 2, '2019-09-02 13:26:58', '2019-09-02 13:30:53'),
(7306, 146, 1893, 41, 'public static void main(String[] args)', 'public static void main(String[] args)', 1, 1, 3, '2019-09-02 13:26:58', '2019-09-02 13:30:53'),
(7307, 144, 1893, 41, 'public static int main(String[] args)', 'public static int main(String[] args)', 0, 0, 1, '2019-09-02 13:26:58', '2019-09-02 13:30:53'),
(7308, 300, 1894, 93, 'x ≤ 5', 'x ≤ 5', 0, 0, 1, '2019-09-02 13:26:58', '2019-09-02 13:30:53'),
(7309, 1062, 1894, 93, 'x ≤ -5', 'x ≤ -5', 0, 1, 4, '2019-09-02 13:26:58', '2019-09-02 13:30:53'),
(7310, 301, 1894, 93, 'x ≥ 5', 'x ≥ 5', 1, 0, 2, '2019-09-02 13:26:58', '2019-09-02 13:30:53'),
(7311, 302, 1894, 93, 'x ≥ -5', 'x ≥ -5', 0, 0, 3, '2019-09-02 13:26:58', '2019-09-02 13:30:53'),
(7312, 657, 1895, 212, 'Apple', 'Apple', 0, 0, 1, '2019-09-02 13:26:58', '2019-09-02 13:30:53'),
(7313, 659, 1895, 212, 'Nokia', 'Nokia', 0, 0, 3, '2019-09-02 13:26:58', '2019-09-02 13:30:53'),
(7314, 830, 1895, 212, 'No company', 'No company', 0, 0, 4, '2019-09-02 13:26:58', '2019-09-02 13:30:53'),
(7315, 658, 1895, 212, 'Google', 'Google', 1, 1, 2, '2019-09-02 13:26:58', '2019-09-02 13:30:53'),
(7316, 635, 1896, 204, 'Video calling', 'Video calling', 0, 0, 3, '2019-09-02 13:26:59', '2019-09-02 13:30:53'),
(7317, 822, 1896, 204, 'All of the choices', 'All of the choices', 1, 0, 4, '2019-09-02 13:26:59', '2019-09-02 13:30:53'),
(7318, 634, 1896, 204, 'Bluetooth', 'Bluetooth', 0, 1, 2, '2019-09-02 13:26:59', '2019-09-02 13:30:53'),
(7319, 633, 1896, 204, 'Multitasking', 'Multitasking', 0, 0, 1, '2019-09-02 13:26:59', '2019-09-02 13:30:53'),
(7320, 885, 1897, 254, 'Cookies management', 'Cookies management', 0, 0, 2, '2019-09-02 13:26:59', '2019-09-02 13:30:53'),
(7321, 886, 1897, 254, 'Authentication management', 'Authentication management', 0, 0, 3, '2019-09-02 13:26:59', '2019-09-02 13:30:53'),
(7322, 884, 1897, 254, 'httprequest(get/post) and returns response from the server', 'httprequest(get/post) and returns response from the server', 1, 1, 1, '2019-09-02 13:26:59', '2019-09-02 13:30:53'),
(7323, 887, 1897, 254, 'None of the above', 'None of the above', 0, 0, 4, '2019-09-02 13:26:59', '2019-09-02 13:30:53'),
(7324, 707, 1898, 225, '44', '44', 0, 0, 3, '2019-09-02 13:26:59', '2019-09-02 13:30:53'),
(7325, 705, 1898, 225, '531', '531', 0, 1, 1, '2019-09-02 13:26:59', '2019-09-02 13:30:53'),
(7326, 714, 1898, 225, '135', '135', 0, 0, 4, '2019-09-02 13:26:59', '2019-09-02 13:30:53'),
(7327, 706, 1898, 225, '127', '127', 1, 0, 2, '2019-09-02 13:26:59', '2019-09-02 13:30:53'),
(7328, 136, 1899, 38, 'It is followed by one or more catch blocks.', 'It is followed by one or more catch blocks.', 0, 0, 2, '2019-09-02 13:26:59', '2019-09-02 13:30:53'),
(7329, 135, 1899, 38, 'A try block identifies a block of code for which particular exceptions is activated.', 'A try block identifies a block of code for which particular exceptions is activated.', 0, 1, 1, '2019-09-02 13:26:59', '2019-09-02 13:30:53'),
(7330, 137, 1899, 38, 'A and B', 'A and B', 1, 0, 3, '2019-09-02 13:26:59', '2019-09-02 13:30:53'),
(7331, 508, 1900, 162, 'n( B U C)=0', 'n( B U C)=0', 0, 0, 2, '2019-09-02 13:26:59', '2019-09-02 13:30:53'),
(7332, 950, 1900, 162, 'All of the mentioned', 'All of the mentioned', 1, 0, 4, '2019-09-02 13:26:59', '2019-09-02 13:30:53'),
(7333, 509, 1900, 162, 'n( A U B U C)=90', 'n( A U B U C)=90', 0, 1, 3, '2019-09-02 13:26:59', '2019-09-02 13:30:53'),
(7334, 507, 1900, 162, 'n(A U B)=0', 'n(A U B)=0', 0, 0, 1, '2019-09-02 13:26:59', '2019-09-02 13:30:53'),
(7335, 333, 1901, 104, '(x-7)<sup>2</sup> +8', '(x-7)<sup>2</sup> +8', 0, 0, 1, '2019-09-02 13:32:33', '2019-09-02 13:38:59'),
(7336, 1073, 1901, 104, '(x+5)<sup>2</sup> -16', '(x+5)<sup>2</sup> -16', 0, 0, 4, '2019-09-02 13:32:33', '2019-09-02 13:38:59'),
(7337, 335, 1901, 104, '(x+7)<sup>2</sup> -8', '(x+7)<sup>2</sup> -8', 0, 0, 3, '2019-09-02 13:32:33', '2019-09-02 13:38:59'),
(7338, 334, 1901, 104, '(x+5)<sup>2</sup> +16', '(x+5)<sup>2</sup> +16', 1, 1, 2, '2019-09-02 13:32:33', '2019-09-02 13:38:59'),
(7339, 1077, 1902, 108, '1 500 000', '1 500 000', 0, 0, 4, '2019-09-02 13:32:33', '2019-09-02 13:38:59'),
(7340, 347, 1902, 108, '1 000 000', '1 000 000', 0, 0, 3, '2019-09-02 13:32:33', '2019-09-02 13:38:59'),
(7341, 345, 1902, 108, '1 846 000', '1 846 000', 1, 1, 1, '2019-09-02 13:32:33', '2019-09-02 13:38:59'),
(7342, 346, 1902, 108, '1 852 000', '1 852 000', 0, 0, 2, '2019-09-02 13:32:33', '2019-09-02 13:38:59'),
(7343, 920, 1903, 61, 'first generation memory', 'first generation memory', 0, 0, 4, '2019-09-02 13:32:33', '2019-09-02 13:38:59'),
(7344, 206, 1903, 61, 'heap space and stack space', 'heap space and stack space', 0, 0, 3, '2019-09-02 13:32:33', '2019-09-02 13:38:59'),
(7345, 205, 1903, 61, 'stack space', 'stack space', 0, 0, 2, '2019-09-02 13:32:33', '2019-09-02 13:38:59'),
(7346, 204, 1903, 61, 'heap space', 'heap space', 1, 1, 1, '2019-09-02 13:32:33', '2019-09-02 13:38:59'),
(7347, 137, 1904, 38, 'A and B', 'A and B', 1, 1, 3, '2019-09-02 13:32:33', '2019-09-02 13:38:59'),
(7348, 135, 1904, 38, 'A try block identifies a block of code for which particular exceptions is activated.', 'A try block identifies a block of code for which particular exceptions is activated.', 0, 0, 1, '2019-09-02 13:32:33', '2019-09-02 13:38:59'),
(7349, 136, 1904, 38, 'It is followed by one or more catch blocks.', 'It is followed by one or more catch blocks.', 0, 0, 2, '2019-09-02 13:32:33', '2019-09-02 13:38:59'),
(7350, 843, 1905, 243, 'application', 'application', 0, 0, 4, '2019-09-02 13:32:33', '2019-09-02 13:38:59'),
(7351, 840, 1905, 243, 'R.style', 'R.style', 1, 1, 1, '2019-09-02 13:32:33', '2019-09-02 13:38:59'),
(7352, 841, 1905, 243, 'X.style', 'X.style', 0, 0, 2, '2019-09-02 13:32:33', '2019-09-02 13:38:59'),
(7353, 842, 1905, 243, 'manifest.XML', 'manifest.XML', 0, 0, 3, '2019-09-02 13:32:33', '2019-09-02 13:38:59'),
(7354, 442, 1906, 140, 'Reference type', 'Reference type', 0, 0, 2, '2019-09-02 13:32:33', '2019-09-02 13:38:59'),
(7355, 1016, 1906, 140, 'Object', 'Object', 0, 0, 4, '2019-09-02 13:32:33', '2019-09-02 13:38:59'),
(7356, 441, 1906, 140, 'Constant', 'Constant', 0, 0, 1, '2019-09-02 13:32:33', '2019-09-02 13:38:59'),
(7357, 443, 1906, 140, 'Variable', 'Variable', 1, 1, 3, '2019-09-02 13:32:33', '2019-09-02 13:38:59'),
(7358, 1053, 1907, 283, 'Set the CausesValidation property of the text box to false.', 'Set the CausesValidation property of the text box to false.', 0, 0, 1, '2019-09-02 13:32:33', '2019-09-02 13:38:59'),
(7359, 1054, 1907, 283, 'Set the CausesValidation property of the text box to true.', 'Set the CausesValidation property of the text box to true.', 0, 0, 2, '2019-09-02 13:32:33', '2019-09-02 13:38:59'),
(7360, 1056, 1907, 283, 'Set the CausesValidation property of the Help button to true.', 'Set the CausesValidation property of the Help button to true.', 0, 0, 4, '2019-09-02 13:32:33', '2019-09-02 13:38:59'),
(7361, 1055, 1907, 283, 'Set the CausesValidation property of the Help button to false.', 'Set the CausesValidation property of the Help button to false.', 1, 1, 3, '2019-09-02 13:32:33', '2019-09-02 13:38:59'),
(7362, 267, 1908, 82, '-23', '-23', 0, 0, 1, '2019-09-02 13:32:33', '2019-09-02 13:38:59'),
(7363, 268, 1908, 82, '-9', '-9', 1, 1, 2, '2019-09-02 13:32:33', '2019-09-02 13:38:59'),
(7364, 722, 1908, 82, '22', '22', 0, 0, 4, '2019-09-02 13:32:33', '2019-09-02 13:38:59'),
(7365, 269, 1908, 82, '-7', '-7', 0, 0, 3, '2019-09-02 13:32:33', '2019-09-02 13:38:59'),
(7366, 631, 1909, 203, 'MPEG', 'MPEG', 0, 0, 2, '2019-09-02 13:32:33', '2019-09-02 13:38:59'),
(7367, 632, 1909, 203, 'AVI', 'AVI', 1, 1, 3, '2019-09-02 13:32:33', '2019-09-02 13:38:59'),
(7368, 821, 1909, 203, 'MIDI', 'MIDI', 0, 0, 4, '2019-09-02 13:32:33', '2019-09-02 13:38:59'),
(7369, 630, 1909, 203, 'MP4', 'MP4', 0, 0, 1, '2019-09-02 13:32:33', '2019-09-02 13:38:59'),
(7370, 701, 1910, 223, '110100', '110100', 1, 1, 3, '2019-09-02 13:32:33', '2019-09-02 13:38:59'),
(7371, 699, 1910, 223, '110011', '110011', 0, 0, 1, '2019-09-02 13:32:33', '2019-09-02 13:38:59'),
(7372, 700, 1910, 223, '100001', '100001', 0, 0, 2, '2019-09-02 13:32:33', '2019-09-02 13:38:59'),
(7373, 718, 1910, 223, '100100', '100100', 0, 0, 4, '2019-09-02 13:32:33', '2019-09-02 13:38:59'),
(7374, 196, 1911, 58, '1 3 5 7 9', '1 3 5 7 9', 0, 0, 2, '2019-09-02 13:32:33', '2019-09-02 13:38:59'),
(7375, 195, 1911, 58, '0 2 4 6 8', '0 2 4 6 8', 1, 1, 1, '2019-09-02 13:32:33', '2019-09-02 13:38:59'),
(7376, 197, 1911, 58, '0 1 2 3 4 5 6 7 8 9', '0 1 2 3 4 5 6 7 8 9', 0, 0, 3, '2019-09-02 13:32:33', '2019-09-02 13:38:59'),
(7377, 917, 1911, 58, '1 2 3 4 5 6 7 8 9 10', '1 2 3 4 5 6 7 8 9 10', 0, 0, 4, '2019-09-02 13:32:33', '2019-09-02 13:38:59'),
(7378, 474, 1912, 151, 'Union', 'Union', 0, 0, 1, '2019-09-02 13:32:33', '2019-09-02 13:38:59'),
(7379, 476, 1912, 151, 'Intersection', 'Intersection', 1, 1, 3, '2019-09-02 13:32:33', '2019-09-02 13:38:59'),
(7380, 939, 1912, 151, 'Complement', 'Complement', 0, 0, 4, '2019-09-02 13:32:33', '2019-09-02 13:38:59'),
(7381, 475, 1912, 151, 'Difference', 'Difference', 0, 0, 2, '2019-09-02 13:32:33', '2019-09-02 13:38:59'),
(7382, 114, 1913, 31, '10', '10', 0, 0, 1, '2019-09-02 13:32:33', '2019-09-02 13:38:59'),
(7383, 116, 1913, 31, '12', '12', 0, 1, 3, '2019-09-02 13:32:33', '2019-09-02 13:38:59'),
(7384, 115, 1913, 31, '20', '20', 1, 0, 2, '2019-09-02 13:32:33', '2019-09-02 13:38:59'),
(7385, 469, 1914, 149, '{1, 2, 5, 6}', '{1, 2, 5, 6}', 1, 1, 2, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7386, 470, 1914, 149, '{1, 2, 1, 2}', '{1, 2, 1, 2}', 0, 0, 3, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7387, 468, 1914, 149, '{1, 2, 6, 1}', '{1, 2, 6, 1}', 0, 0, 1, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7388, 937, 1914, 149, '{1, 5, 6, 3}', '{1, 5, 6, 3}', 0, 0, 4, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7389, 193, 1915, 57, 'Column', 'Column', 0, 0, 2, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7390, 192, 1915, 57, 'Row', 'Row', 1, 1, 1, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7391, 194, 1915, 57, 'Both Row and Column', 'Both Row and Column', 0, 0, 3, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7392, 455, 1916, 144, '3', '3', 0, 0, 3, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7393, 454, 1916, 144, '5', '5', 1, 1, 2, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7394, 453, 1916, 144, '10', '10', 0, 0, 1, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7395, 932, 1916, 144, '20', '20', 0, 0, 4, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7396, 289, 1917, 89, 'Virtual memory', 'Virtual memory', 1, 0, 2, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7397, 288, 1917, 89, 'Virtual private network', 'Virtual private network', 0, 1, 1, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7398, 712, 1917, 89, 'None of them', 'None of them', 0, 0, 4, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7399, 290, 1917, 89, 'Virtual Machine', 'Virtual Machine', 0, 0, 3, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7400, 906, 1918, 39, 'Not assigned', 'Not assigned', 0, 0, 4, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7401, 140, 1918, 39, 'Depends upon the type of variable', 'Depends upon the type of variable', 1, 0, 3, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7402, 138, 1918, 39, 'null', 'null', 0, 1, 1, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7403, 139, 1918, 39, '0', '0', 0, 0, 2, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7404, 688, 1919, 220, 'scanner', 'scanner', 1, 0, 2, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7405, 687, 1919, 220, 'digital camera', 'digital camera', 0, 0, 1, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7406, 709, 1919, 220, 'RFID readers', 'RFID readers', 0, 1, 4, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7407, 689, 1919, 220, 'MICR', 'MICR', 0, 0, 3, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7408, 644, 1920, 207, 'Android data bridge', 'Android data bridge', 0, 0, 3, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7409, 825, 1920, 207, 'Application data bridge', 'Application data bridge', 0, 0, 4, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7410, 642, 1920, 207, 'Android Debug Bridge', 'Android Debug Bridge', 1, 1, 1, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7411, 643, 1920, 207, 'Application Debug Bridge', 'Application Debug Bridge', 0, 0, 2, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7412, 256, 1921, 78, 'Unicode', 'Unicode', 1, 1, 2, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7413, 257, 1921, 78, 'EBCDIC', 'EBCDIC', 0, 0, 3, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7414, 255, 1921, 78, 'ASCII', 'ASCII', 0, 0, 1, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7415, 726, 1921, 78, 'ANSI', 'ANSI', 0, 0, 4, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7416, 447, 1922, 142, '{1, 2, 3}', '{1, 2, 3}', 0, 0, 1, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7417, 449, 1922, 142, '{1, 2, 5, 9}', '{1, 2, 5, 9}', 0, 0, 3, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7418, 930, 1922, 142, '{1, 5, 7, 9, 11}', '{1, 5, 7, 9, 11}', 0, 0, 4, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7419, 448, 1922, 142, '{1, 3, 5, 7, 9}', '{1, 3, 5, 7, 9}', 1, 1, 2, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7420, 3, 1923, 1, 'x = 2', 'x = 2', 0, 0, 3, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7421, 1, 1923, 1, 'x = 1', 'x = 1', 1, 1, 1, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7422, 2, 1923, 1, 'x = 4', 'x = 4', 0, 0, 2, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7423, 855, 1924, 246, 'bin/', 'bin/', 0, 0, 4, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7424, 852, 1924, 246, 'res/', 'res/', 0, 0, 1, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7425, 854, 1924, 246, 'src/', 'src/', 1, 1, 3, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7426, 853, 1924, 246, 'assets/', 'assets/', 0, 0, 2, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7427, 953, 1925, 260, '30', '30', 0, 0, 3, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7428, 954, 1925, 260, '10', '10', 0, 0, 4, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7429, 952, 1925, 260, '20', '20', 0, 0, 2, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7430, 951, 1925, 260, '35', '35', 1, 1, 1, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7431, 379, 1926, 119, 'do while', 'do while', 0, 0, 2, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7432, 380, 1926, 119, 'while', 'while', 0, 0, 3, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7433, 378, 1926, 119, 'forEach loop', 'forEach loop', 0, 0, 1, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7434, 1002, 1926, 119, 'for loop', 'for loop', 1, 1, 4, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7435, 369, 1927, 116, 'an odd function', 'an odd function', 0, 0, 1, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7436, 371, 1927, 116, 'neither odd nor even', 'neither odd nor even', 0, 1, 3, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7437, 370, 1927, 116, 'an even function', 'an even function', 1, 0, 2, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7438, 1085, 1927, 116, 'even and odd', 'even and odd', 0, 0, 4, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7439, 141, 1928, 40, 'type.', 'type.', 1, 1, 1, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7440, 143, 1928, 40, 'Both of the above.', 'Both of the above.', 0, 0, 3, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7441, 142, 1928, 40, 'object.', 'object.', 0, 0, 2, '2019-09-02 13:32:34', '2019-09-02 13:38:59'),
(7442, 465, 1929, 148, '8', '8', 1, 1, 1, '2019-09-02 13:32:34', '2019-09-02 13:39:00'),
(7443, 466, 1929, 148, '6', '6', 0, 0, 2, '2019-09-02 13:32:34', '2019-09-02 13:39:00'),
(7444, 467, 1929, 148, '7', '7', 0, 0, 3, '2019-09-02 13:32:34', '2019-09-02 13:39:00'),
(7445, 936, 1929, 148, '9', '9', 0, 0, 4, '2019-09-02 13:32:34', '2019-09-02 13:39:00'),
(7446, 1034, 1930, 278, 'Message1\nMessage2\nMessage3\nMessage4', 'Message1<br />\nMessage2<br />\nMessage3<br />\nMessage4', 0, 0, 2, '2019-09-02 13:32:34', '2019-09-02 13:39:00'),
(7447, 1033, 1930, 278, 'Message1\nMessage4', 'Message1<br />\nMessage4', 0, 0, 1, '2019-09-02 13:32:34', '2019-09-02 13:39:00'),
(7448, 1035, 1930, 278, 'Message1\nMessage3\nMessage4', 'Message1<br />\nMessage3<br />\nMessage4', 1, 1, 3, '2019-09-02 13:32:34', '2019-09-02 13:39:00'),
(7449, 1036, 1930, 278, 'Message1\nMessage3\nMessage2\nMessage4', 'Message1<br />\nMessage3<br />\nMessage2<br />\nMessage4', 0, 0, 4, '2019-09-02 13:32:34', '2019-09-02 13:39:00'),
(7450, 149, 1931, 42, 'void', 'void', 0, 0, 3, '2019-09-02 13:32:34', '2019-09-02 13:39:00'),
(7451, 147, 1931, 42, 'static', 'static', 0, 0, 1, '2019-09-02 13:32:34', '2019-09-02 13:39:00'),
(7452, 148, 1931, 42, 'Boolean', 'Boolean', 1, 1, 2, '2019-09-02 13:32:34', '2019-09-02 13:39:00'),
(7453, 907, 1931, 42, 'private', 'private', 0, 0, 4, '2019-09-02 13:32:34', '2019-09-02 13:39:00'),
(7454, 1094, 1932, 286, '0.001', '0.001', 0, 1, 3, '2019-09-02 13:32:34', '2019-09-02 13:39:00'),
(7455, 1093, 1932, 286, '0.478', '0.478', 0, 0, 2, '2019-09-02 13:32:34', '2019-09-02 13:39:00'),
(7456, 1095, 1932, 286, '0', '0', 0, 0, 4, '2019-09-02 13:32:34', '2019-09-02 13:39:00'),
(7457, 1092, 1932, 286, '0.057', '0.057', 1, 0, 1, '2019-09-02 13:32:34', '2019-09-02 13:39:00'),
(7458, 902, 1933, 34, '*', '*', 0, 0, 4, '2019-09-02 13:32:34', '2019-09-02 13:39:00'),
(7459, 125, 1933, 34, '&</a>', '&</a>', 0, 0, 3, '2019-09-02 13:32:34', '2019-09-02 13:39:00'),
(7460, 123, 1933, 34, 'sizeof', 'sizeof', 1, 1, 1, '2019-09-02 13:32:34', '2019-09-02 13:39:00'),
(7461, 124, 1933, 34, 'typeof', 'typeof', 0, 0, 2, '2019-09-02 13:32:34', '2019-09-02 13:39:00'),
(7462, 628, 1934, 202, 'Programming Language', 'Programming Language', 0, 0, 2, '2019-09-02 13:32:34', '2019-09-02 13:39:00'),
(7463, 820, 1934, 202, 'Database', 'Database', 0, 1, 4, '2019-09-02 13:32:34', '2019-09-02 13:39:00'),
(7464, 627, 1934, 202, 'Desktop Operatng System', 'Desktop Operatng System', 0, 0, 1, '2019-09-02 13:32:34', '2019-09-02 13:39:00'),
(7465, 629, 1934, 202, 'Mobile Operating System', 'Mobile Operating System', 1, 0, 3, '2019-09-02 13:32:34', '2019-09-02 13:39:00'),
(7466, 686, 1935, 219, 'Modem', 'Modem', 1, 1, 3, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7467, 684, 1935, 219, 'Repeater', 'Repeater', 0, 0, 1, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7468, 710, 1935, 219, 'Wireless access point', 'Wireless access point', 0, 0, 4, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7469, 685, 1935, 219, 'Switch', 'Switch', 0, 0, 2, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7470, 714, 1936, 225, '135', '135', 0, 0, 4, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7471, 706, 1936, 225, '127', '127', 1, 1, 2, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7472, 705, 1936, 225, '531', '531', 0, 0, 1, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7473, 707, 1936, 225, '44', '44', 0, 0, 3, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7474, 146, 1937, 41, 'public static void main(String[] args)', 'public static void main(String[] args)', 1, 1, 3, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7475, 145, 1937, 41, 'public int main(String[] args)', 'public int main(String[] args)', 0, 0, 2, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7476, 144, 1937, 41, 'public static int main(String[] args)', 'public static int main(String[] args)', 0, 0, 1, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7477, 435, 1938, 138, 'Trys', 'Trys', 0, 0, 1, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7478, 437, 1938, 138, 'Throws', 'Throws', 1, 1, 3, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7479, 436, 1938, 138, 'Catches', 'Catches', 0, 0, 2, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7480, 1014, 1938, 138, 'a and b', 'a and b', 0, 0, 4, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7481, 358, 1939, 112, '15', '15', 0, 0, 2, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7482, 1081, 1939, 112, '8', '8', 0, 1, 4, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7483, 359, 1939, 112, '2100', '2100', 1, 0, 3, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7484, 357, 1939, 112, '10', '10', 0, 0, 1, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7485, 174, 1940, 51, '9', '9', 0, 0, 1, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7486, 911, 1940, 51, 'Runtime error', 'Runtime error', 0, 0, 4, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7487, 175, 1940, 51, '8', '8', 0, 0, 2, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7488, 176, 1940, 51, 'Compilation error', 'Compilation error', 1, 1, 3, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7489, 384, 1941, 121, 'RElational operators', 'RElational operators', 0, 0, 1, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7490, 385, 1941, 121, 'Bitwise operators', 'Bitwise operators', 0, 0, 2, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7491, 1004, 1941, 121, 'Assignment Operators', 'Assignment Operators', 0, 0, 4, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7492, 386, 1941, 121, 'Logical operators', 'Logical operators', 1, 1, 3, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7493, 221, 1942, 66, '199', '199', 0, 0, 3, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7494, 219, 1942, 66, '121', '121', 0, 0, 1, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7495, 676, 1942, 66, '212', '212', 0, 0, 4, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7496, 220, 1942, 66, '163', '163', 1, 1, 2, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7497, 410, 1943, 129, 'ListView Control', 'ListView Control', 0, 0, 3, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7498, 408, 1943, 129, 'GroupBox control', 'GroupBox control', 0, 1, 1, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7499, 409, 1943, 129, 'LinkLabel control', 'LinkLabel control', 1, 0, 2, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7500, 893, 1944, 256, 'Cursor is used to store the temporary result.', 'Cursor is used to store the temporary result.', 0, 0, 2, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7501, 892, 1944, 256, 'Content values are key pair values, which are updated or inserted in the database', 'Content values are key pair values, which are updated or inserted in the database', 0, 0, 1, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7502, 895, 1944, 256, 'Cursor is used to store data permanently.', 'Cursor is used to store data permanently.', 0, 0, 4, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7503, 894, 1944, 256, 'A & B', 'A & B', 1, 1, 3, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7504, 635, 1945, 204, 'Video calling', 'Video calling', 0, 0, 3, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7505, 822, 1945, 204, 'All of the choices', 'All of the choices', 1, 1, 4, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7506, 634, 1945, 204, 'Bluetooth', 'Bluetooth', 0, 0, 2, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7507, 633, 1945, 204, 'Multitasking', 'Multitasking', 0, 0, 1, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7508, 680, 1946, 70, '[[#img31]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/VNrzOvOE3LpeuWi9ciBQDVlGrXxObvbfnI3kfNS4.png\" width=\"150\" height=\"150\" />', 0, 0, 4, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7509, 231, 1946, 70, '[[#img28]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/jkL1TWHhQQMAtCTbSz6HtJyZn8zhXmtgMQYX3Zpo.png\" width=\"150\" height=\"150\" />', 1, 1, 1, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7510, 232, 1946, 70, '[[#img29]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/Cf9qY75IYjLpUVFWsICWK07cAwLtqRPDIO6JjLqT.png\" width=\"150\" height=\"150\" />', 0, 0, 2, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7511, 233, 1946, 70, '[[#img30]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/5CGn3NoMP2AFTNnuWdi3jGe97XfkU7ydkF3PldTA.png\" width=\"150\" height=\"150\" />', 0, 0, 3, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7512, 488, 1947, 155, '6', '6', 0, 0, 3, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7513, 943, 1947, 155, '7', '7', 0, 0, 4, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7514, 487, 1947, 155, '5', '5', 0, 1, 2, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7515, 486, 1947, 155, '4', '4', 1, 0, 1, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7516, 293, 1948, 90, 'kilobyte', 'kilobyte', 0, 0, 3, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7517, 292, 1948, 90, 'byte', 'byte', 1, 1, 2, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7518, 711, 1948, 90, 'megabyte', 'megabyte', 0, 0, 4, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7519, 291, 1948, 90, 'bit', 'bit', 0, 0, 1, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7520, 860, 1949, 248, 'To send the data from an application to another application', 'To send the data from an application to another application', 0, 0, 1, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7521, 862, 1949, 248, 'To share the data between applications', 'To share the data between applications', 1, 1, 3, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7522, 861, 1949, 248, 'To store the data in a database', 'To store the data in a database', 0, 0, 2, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7523, 863, 1949, 248, 'none of the choices', 'none of the choices', 0, 0, 4, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7524, 931, 1950, 143, 'Three', 'Three', 0, 0, 4, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7525, 451, 1950, 143, 'Two', 'Two', 0, 0, 2, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7526, 450, 1950, 143, 'One', 'One', 1, 1, 1, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7527, 452, 1950, 143, 'Zero', 'Zero', 0, 0, 3, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7528, 415, 1951, 131, 'Enable()', 'Enable()', 0, 0, 2, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7529, 416, 1951, 131, 'Show()', 'Show()', 1, 1, 3, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7530, 414, 1951, 131, 'Get()', 'Get()', 0, 0, 1, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7531, 1023, 1952, 275, 'Several catch blocks within one try block, arranged starting with the most specific exception and ending with Exception.', 'Several catch blocks within one try block, arranged starting with the most specific exception and ending with Exception.', 1, 1, 3, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7532, 1024, 1952, 275, 'The catch blocks should be used only when a finally block is not used.', 'The catch blocks should be used only when a finally block is not used.', 0, 0, 4, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7533, 1021, 1952, 275, 'Only one catch block for each try block.', 'Only one catch block for each try block.', 0, 0, 1, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7534, 1022, 1952, 275, 'Several catch blocks for a try block, arranged in order starting with Exception and ending with the most specific exception.', 'Several catch blocks for a try block, arranged in order starting with Exception and ending with the most specific exception.', 0, 0, 2, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7535, 1106, 1953, 289, '6', '6', 0, 0, 3, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7536, 1104, 1953, 289, '5', '5', 0, 1, 1, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7537, 1105, 1953, 289, '7', '7', 1, 0, 2, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7538, 1107, 1953, 289, '8', '8', 0, 0, 4, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7539, 463, 1954, 147, 'Finite', 'Finite', 0, 0, 2, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7540, 935, 1954, 147, 'Empty', 'Empty', 0, 1, 4, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7541, 462, 1954, 147, 'Infinite', 'Infinite', 1, 0, 1, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7542, 464, 1954, 147, 'Subset', 'Subset', 0, 0, 3, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7543, 301, 1955, 93, 'x ≥ 5', 'x ≥ 5', 1, 0, 2, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7544, 1062, 1955, 93, 'x ≤ -5', 'x ≤ -5', 0, 1, 4, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7545, 300, 1955, 93, 'x ≤ 5', 'x ≤ 5', 0, 0, 1, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7546, 302, 1955, 93, 'x ≥ -5', 'x ≥ -5', 0, 0, 3, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7547, 118, 1956, 32, 'as', 'as', 0, 0, 2, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7548, 119, 1956, 32, 'foreach', 'foreach', 0, 0, 3, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7549, 117, 1956, 32, 'abstract', 'abstract', 0, 0, 1, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7550, 900, 1956, 32, 'All of the choices', 'All of the choices', 1, 1, 4, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7551, 1012, 1957, 136, 'a and c', 'a and c', 1, 1, 4, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7552, 429, 1957, 136, 'creates a button control', 'creates a button control', 0, 0, 1, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7553, 431, 1957, 136, 'instantiates button control', 'instantiates button control', 0, 0, 3, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7554, 430, 1957, 136, 'initializes a button control', 'initializes a button control', 0, 0, 2, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7555, 844, 1958, 244, 'commitUpdates()', 'commitUpdates()', 1, 1, 1, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7556, 845, 1958, 244, 'updates()', 'updates()', 0, 0, 2, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7557, 847, 1958, 244, 'none of these', 'none of these', 0, 0, 4, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7558, 846, 1958, 244, 'commit()', 'commit()', 0, 0, 3, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7559, 472, 1959, 150, '{5, 6}', '{5, 6}', 0, 0, 2, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7560, 471, 1959, 150, '{1, 2}', '{1, 2}', 1, 1, 1, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7561, 938, 1959, 150, '{1, 6}', '{1, 6}', 0, 0, 4, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7562, 473, 1959, 150, '{2, 5}', '{2, 5}', 0, 0, 3, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7563, 318, 1960, 99, '6.25', '6.25', 0, 0, 1, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7564, 1068, 1960, 99, '4.753', '4.753', 0, 0, 4, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7565, 319, 1960, 99, '1.756', '1.756', 0, 1, 2, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7566, 320, 1960, 99, '2.322', '2.322', 1, 0, 3, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7567, 944, 1961, 156, 'None of the choices', 'None of the choices', 0, 0, 4, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7568, 491, 1961, 156, '4, 12', '4, 12', 0, 0, 3, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7569, 489, 1961, 156, '4, 8', '4, 8', 0, 0, 1, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7570, 490, 1961, 156, '8, 12', '8, 12', 1, 1, 2, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7571, 360, 1962, 113, '5!', '5!', 0, 0, 1, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7572, 362, 1962, 113, '2!', '2!', 0, 0, 3, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7573, 361, 1962, 113, '3!', '3!', 1, 1, 2, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7574, 1082, 1962, 113, '3! * 2!', '3! * 2!', 0, 0, 4, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7575, 918, 1963, 59, '1', '1', 1, 1, 4, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7576, 198, 1963, 59, '3', '3', 0, 0, 1, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7577, 200, 1963, 59, '6', '6', 0, 0, 3, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7578, 199, 1963, 59, '0', '0', 0, 0, 2, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7579, 979, 1964, 267, 'greatest previous integer', 'greatest previous integer', 1, 1, 2, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7580, 980, 1964, 267, 'smallest following integer', 'smallest following integer', 0, 0, 3, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7581, 978, 1964, 267, 'smallest previous integer', 'smallest previous integer', 0, 0, 1, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7582, 403, 1965, 127, 'Textbox control', 'Textbox control', 0, 0, 2, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7583, 402, 1965, 127, 'Radio Button', 'Radio Button', 0, 0, 1, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7584, 404, 1965, 127, 'Button control', 'Button control', 1, 1, 3, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7585, 178, 1966, 52, '200', '200', 1, 1, 2, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7586, 179, 1966, 52, '400', '400', 0, 0, 3, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7587, 912, 1966, 52, '100', '100', 0, 0, 4, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7588, 177, 1966, 52, '12', '12', 0, 0, 1, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7589, 249, 1967, 76, 'spooling', 'spooling', 0, 0, 1, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7590, 250, 1967, 76, 'buffering', 'buffering', 0, 0, 2, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7591, 251, 1967, 76, 'virtual memory', 'virtual memory', 0, 1, 3, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7592, 728, 1967, 76, 'back up', 'back up', 1, 0, 4, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7593, 307, 1968, 95, 'You cannot find the square root of a negative number', 'You cannot find the square root of a negative number', 0, 0, 2, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7594, 1064, 1968, 95, '-12i', '-12i', 0, 0, 4, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7595, 306, 1968, 95, '12i', '12i', 1, 1, 1, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7596, 308, 1968, 95, '-12', '-12', 0, 0, 3, '2019-09-02 13:32:35', '2019-09-02 13:39:00'),
(7597, 1005, 1969, 122, 'Assignment opeartors', 'Assignment opeartors', 0, 0, 4, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7598, 389, 1969, 122, 'Logical operators', 'Logical operators', 0, 0, 3, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7599, 387, 1969, 122, 'unary operators', 'unary operators', 1, 1, 1, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7600, 388, 1969, 122, 'Binary operators', 'Binary operators', 0, 0, 2, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7601, 655, 1970, 211, 'Firefox', 'Firefox', 0, 0, 2, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7602, 654, 1970, 211, 'Chrome', 'Chrome', 0, 0, 1, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7603, 829, 1970, 211, 'Opera', 'Opera', 0, 0, 4, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7604, 656, 1970, 211, 'Open source Webkit', 'Open source Webkit', 1, 1, 3, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7605, 1009, 1971, 132, 'While', 'While', 0, 0, 4, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7606, 419, 1971, 132, 'For', 'For', 0, 0, 3, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7607, 417, 1971, 132, 'If', 'If', 0, 0, 1, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7608, 418, 1971, 132, 'Switch', 'Switch', 1, 1, 2, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7609, 1029, 1972, 277, 'The code will generate an error because it lacks a catch block.', 'The code will generate an error because it lacks a catch block.', 0, 0, 1, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7610, 1030, 1972, 277, 'The code will generate an error because it lacks a throw statement.', 'The code will generate an error because it lacks a throw statement.', 0, 0, 2, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7611, 1031, 1972, 277, 'The code will generate an error because the finally block is placed immediately after the try block.', 'The code will generate an error because the finally block is placed immediately after the try block.', 0, 0, 3, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7612, 1032, 1972, 277, 'The code will compile without an error.', 'The code will compile without an error.', 1, 1, 4, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7613, 253, 1973, 77, 'syntax error', 'syntax error', 0, 0, 2, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7614, 727, 1973, 77, 'linker error', 'linker error', 0, 0, 4, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7615, 252, 1973, 77, 'logic error', 'logic error', 1, 1, 1, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7616, 254, 1973, 77, 'run time error', 'run time error', 0, 0, 3, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7617, 732, 1974, 72, 'Disk optimization software', 'Disk optimization software', 0, 0, 4, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7618, 237, 1974, 72, 'Operating system software', 'Operating system software', 0, 0, 1, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7619, 238, 1974, 72, 'Utility software', 'Utility software', 1, 1, 2, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7620, 239, 1974, 72, 'Anti-virus software', 'Anti-virus software', 0, 0, 3, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7621, 509, 1975, 162, 'n( A U B U C)=90', 'n( A U B U C)=90', 0, 0, 3, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7622, 508, 1975, 162, 'n( B U C)=0', 'n( B U C)=0', 0, 0, 2, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7623, 950, 1975, 162, 'All of the mentioned', 'All of the mentioned', 1, 1, 4, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7624, 507, 1975, 162, 'n(A U B)=0', 'n(A U B)=0', 0, 0, 1, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7625, 121, 1976, 33, 'ToDouble', 'ToDouble', 1, 1, 2, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7626, 120, 1976, 33, 'ToDecimal', 'ToDecimal', 0, 0, 1, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7627, 122, 1976, 33, 'ToInt16', 'ToInt16', 0, 0, 3, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7628, 901, 1976, 33, 'ToInt32', 'ToInt32', 0, 0, 4, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7629, 226, 1977, 68, '[[#img24]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/nVLwXww7AT2RBfzhH1tPQMxdLPF1iWuunHzErZRh.png\" width=\"150\" height=\"150\" />', 0, 0, 2, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7630, 225, 1977, 68, '[[#img23]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/IyLDJJaUUQ0aIZOMyEjh4JO72W4HpXtPj2CfMKZL.png\" width=\"150\" height=\"150\" />', 1, 1, 1, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7631, 227, 1977, 68, '[[#img25]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/rDh656ehodyPQmn7CxxjGK2H29sx2bh6LDz9INfN.png\" width=\"150\" height=\"150\" />', 0, 0, 3, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7632, 679, 1977, 68, '[[#img26]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/tBuCNpani0PgWIFN01ztVOAj4FS4CBDAiTW9J8lB.png\" width=\"150\" height=\"150\" />', 0, 0, 4, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7633, 1090, 1978, 285, '4 π', '4 π', 0, 0, 3, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7634, 1089, 1978, 285, '2 π', '2 π', 0, 0, 2, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7635, 1088, 1978, 285, '4 π <sup>2</sup>', '4 π <sup>2</sup>', 0, 1, 1, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7636, 1091, 1978, 285, 'π', 'π', 1, 0, 4, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7637, 948, 1979, 160, 'B', 'B', 0, 0, 4, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7638, 502, 1979, 160, 'A U B -B', 'A U B -B', 1, 1, 2, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7639, 501, 1979, 160, 'A‘ (Complement of A)', 'A‘ (Complement of A)', 0, 0, 1, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7640, 503, 1979, 160, 'A ∩ B', 'A ∩ B', 0, 0, 3, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7641, 1076, 1980, 107, '22', '22', 1, 1, 4, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7642, 343, 1980, 107, '48', '48', 0, 0, 2, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7643, 344, 1980, 107, '-12', '-12', 0, 0, 3, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7644, 342, 1980, 107, '11', '11', 0, 0, 1, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7645, 666, 1981, 215, '3.0 (Honeycomb)', '3.0 (Honeycomb)', 0, 0, 1, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7646, 833, 1981, 215, '2.2 (Froyo)', '2.2 (Froyo)', 0, 0, 4, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7647, 668, 1981, 215, '2.6', '2.6', 0, 0, 3, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7648, 667, 1981, 215, '2.3 (Gingerbread)', '2.3 (Gingerbread)', 1, 1, 2, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7649, 988, 1982, 270, '45', '45', 0, 0, 2, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7650, 987, 1982, 270, '35', '35', 1, 1, 1, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7651, 989, 1982, 270, '25', '25', 0, 0, 3, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7652, 172, 1983, 50, 'Thread returns to the waiting state.', 'Thread returns to the waiting state.', 0, 0, 2, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7653, 173, 1983, 50, 'Thread starts running.', 'Thread starts running.', 0, 0, 3, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7654, 171, 1983, 50, 'Thread returns to the ready state.', 'Thread returns to the ready state.', 1, 1, 1, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7655, 933, 1984, 145, '{(1, 1), (a, a), (2, a), (1, b)}', '{(1, 1), (a, a), (2, a), (1, b)}', 0, 0, 4, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7656, 457, 1984, 145, '{(1, 1), (2, 2), (a, a), (b, b)}', '{(1, 1), (2, 2), (a, a), (b, b)}', 0, 0, 2, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7657, 458, 1984, 145, '{(1, a), (2, a), (1, b), (2, b)}', '{(1, a), (2, a), (1, b), (2, b)}', 1, 1, 3, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7658, 456, 1984, 145, '{(1, a), (1, b), (2, a), (b, b)}', '{(1, a), (1, b), (2, a), (b, b)}', 0, 0, 1, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7659, 877, 1985, 252, 'A bean class can be passed from one activity to another.', 'A bean class can be passed from one activity to another.', 0, 0, 2, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7660, 876, 1985, 252, 'A class used to hold states and objects', 'A class used to hold states and objects', 1, 1, 1, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7661, 879, 1985, 252, 'None of the above', 'None of the above', 0, 0, 4, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7662, 878, 1985, 252, 'A mandatory class in android', 'A mandatory class in android', 0, 0, 3, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7663, 715, 1986, 87, 'fetch, decode, execute and store', 'fetch, decode, execute and store', 1, 1, 4, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7664, 283, 1986, 87, 'decode, execute, store and fetch', 'decode, execute, store and fetch', 0, 0, 2, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7665, 282, 1986, 87, 'fetch, execute, store and decode', 'fetch, execute, store and decode', 0, 0, 1, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7666, 284, 1986, 87, 'decode, fetch, store and execute', 'decode, fetch, store and execute', 0, 0, 3, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7667, 298, 1987, 92, 'x > 1', 'x > 1', 0, 0, 2, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7668, 297, 1987, 92, 'x < 6', 'x < 6', 0, 0, 1, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7669, 1061, 1987, 92, 'x > 6', 'x > 6', 0, 0, 4, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7670, 299, 1987, 92, 'x < -1', 'x < -1', 1, 1, 3, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7671, 244, 1988, 74, 'Motherboard', 'Motherboard', 0, 0, 2, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7672, 730, 1988, 74, 'CPU', 'CPU', 0, 0, 4, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7673, 243, 1988, 74, 'Operating System', 'Operating System', 0, 0, 1, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7674, 245, 1988, 74, 'Computer', 'Computer', 1, 1, 3, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7675, 354, 1989, 111, '(0 , π/2)', '(0 , π/2)', 0, 0, 1, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7676, 1080, 1989, 111, '(3 π / 2 , 2 π)', '(3 π / 2 , 2 π)', 0, 0, 4, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7677, 356, 1989, 111, '(π , 3 π / 2)', '(π , 3 π / 2)', 0, 0, 3, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7678, 355, 1989, 111, '(π/2 , π)', '(π/2 , π)', 1, 1, 2, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7679, 395, 1990, 124, 'Data Type', 'Data Type', 0, 0, 3, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7680, 1007, 1990, 124, 'Explicit Types', 'Explicit Types', 0, 0, 4, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7681, 393, 1990, 124, 'Reference type', 'Reference type', 1, 1, 1, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7682, 394, 1990, 124, 'Value types', 'Value types', 0, 0, 2, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7683, 637, 1991, 205, 'Video Driver', 'Video Driver', 0, 0, 2, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7684, 636, 1991, 205, 'Device Driver', 'Device Driver', 0, 0, 1, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7685, 638, 1991, 205, 'WiFi driver', 'WiFi driver', 1, 1, 3, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7686, 823, 1991, 205, 'Bluetooth driver', 'Bluetooth driver', 0, 0, 4, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7687, 664, 1992, 214, 'Windows kernel', 'Windows kernel', 0, 0, 2, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7688, 665, 1992, 214, 'MAC kernel', 'MAC kernel', 0, 0, 3, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7689, 832, 1992, 214, 'Hybrid kernel', 'Hybrid kernel', 0, 0, 4, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7690, 663, 1992, 214, 'Linux kernel', 'Linux kernel', 1, 1, 1, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7691, 401, 1993, 126, 'TextBox control', 'TextBox control', 0, 0, 3, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7692, 399, 1993, 126, 'CheckListBox control', 'CheckListBox control', 0, 0, 1, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7693, 400, 1993, 126, 'ListBox control', 'ListBox control', 1, 1, 2, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7694, 434, 1994, 137, 'Have different return types and arguments than the parent class', 'Have different return types and arguments than the parent class', 0, 0, 3, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7695, 433, 1994, 137, 'Maintain the same return type and arguments as the parent class, but implement it differently', 'Maintain the same return type and arguments as the parent class, but implement it differently', 1, 1, 2, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7696, 432, 1994, 137, 'Override the parent class methods but maintain the implementation', 'Override the parent class methods but maintain the implementation', 0, 0, 1, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7697, 1013, 1994, 137, 'Are Virtual', 'Are Virtual', 0, 0, 4, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7698, 167, 1995, 48, 'JRE is an implementation of the Java Virtual Machine which executes Java programs.', 'JRE is an implementation of the Java Virtual Machine which executes Java programs.', 1, 1, 3, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7699, 165, 1995, 48, 'JRE is a java based GUI application.', 'JRE is a java based GUI application.', 0, 0, 1, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7700, 166, 1995, 48, 'JRE is an application development framework.', 'JRE is an application development framework.', 0, 0, 2, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7701, 884, 1996, 254, 'httprequest(get/post) and returns response from the server', 'httprequest(get/post) and returns response from the server', 1, 1, 1, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7702, 887, 1996, 254, 'None of the above', 'None of the above', 0, 0, 4, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7703, 886, 1996, 254, 'Authentication management', 'Authentication management', 0, 0, 3, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7704, 885, 1996, 254, 'Cookies management', 'Cookies management', 0, 0, 2, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7705, 659, 1997, 212, 'Nokia', 'Nokia', 0, 0, 3, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7706, 658, 1997, 212, 'Google', 'Google', 1, 0, 2, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7707, 830, 1997, 212, 'No company', 'No company', 0, 0, 4, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7708, 657, 1997, 212, 'Apple', 'Apple', 0, 1, 1, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7709, 725, 1998, 79, 'Primary Storage', 'Primary Storage', 1, 1, 4, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7710, 259, 1998, 79, 'ALU', 'ALU', 0, 0, 2, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7711, 260, 1998, 79, 'Registers', 'Registers', 0, 0, 3, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7712, 258, 1998, 79, 'Control unit', 'Control unit', 0, 0, 1, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7713, 314, 1999, 97, 'i - 12', 'i - 12', 1, 1, 3, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7714, 1066, 1999, 97, '3i - 10', '3i - 10', 0, 0, 4, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7715, 313, 1999, 97, '7 - 3i', '7 - 3i', 0, 0, 2, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7716, 312, 1999, 97, 'i - 5', 'i - 5', 0, 0, 1, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7717, 364, 2000, 114, 'mean = 10 , standard deviation = 6', 'mean = 10 , standard deviation = 6', 0, 0, 2, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7718, 1083, 2000, 114, 'mean = 10 , standard deviation = 1', 'mean = 10 , standard deviation = 1', 0, 0, 4, '2019-09-02 13:32:36', '2019-09-02 13:39:00');
INSERT INTO `answer_sheet_test_question_choices` (`id`, `choice_id`, `answer_sheet_test_question_id`, `test_question_id`, `body`, `body_html`, `is_correct`, `is_selected`, `pos_order`, `created_at`, `updated_at`) VALUES
(7719, 363, 2000, 114, 'mean = 15 , standard deviation = 6', 'mean = 15 , standard deviation = 6', 0, 0, 1, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7720, 365, 2000, 114, 'mean = 15 , standard deviation = 1', 'mean = 15 , standard deviation = 1', 1, 1, 3, '2019-09-02 13:32:36', '2019-09-02 13:39:00'),
(7721, 364, 2001, 114, 'mean = 10 , standard deviation = 6', 'mean = 10 , standard deviation = 6', 0, 0, 2, '2019-09-15 04:31:58', '2019-09-15 05:17:41'),
(7722, 365, 2001, 114, 'mean = 15 , standard deviation = 1', 'mean = 15 , standard deviation = 1', 1, 0, 3, '2019-09-15 04:31:58', '2019-09-15 05:17:41'),
(7723, 363, 2001, 114, 'mean = 15 , standard deviation = 6', 'mean = 15 , standard deviation = 6', 0, 1, 1, '2019-09-15 04:31:58', '2019-09-15 05:17:41'),
(7724, 1083, 2001, 114, 'mean = 10 , standard deviation = 1', 'mean = 10 , standard deviation = 1', 0, 0, 4, '2019-09-15 04:31:58', '2019-09-15 05:17:41'),
(7725, 700, 2002, 223, '100001', '100001', 0, 1, 2, '2019-09-15 04:31:58', '2019-09-15 05:17:41'),
(7726, 701, 2002, 223, '110100', '110100', 1, 0, 3, '2019-09-15 04:31:58', '2019-09-15 05:17:41'),
(7727, 718, 2002, 223, '100100', '100100', 0, 0, 4, '2019-09-15 04:31:58', '2019-09-15 05:17:41'),
(7728, 699, 2002, 223, '110011', '110011', 0, 0, 1, '2019-09-15 04:31:58', '2019-09-15 05:17:41'),
(7729, 231, 2003, 70, '[[#img28]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/jkL1TWHhQQMAtCTbSz6HtJyZn8zhXmtgMQYX3Zpo.png\" width=\"150\" height=\"150\" />', 1, 0, 1, '2019-09-15 04:31:58', '2019-09-15 05:17:41'),
(7730, 680, 2003, 70, '[[#img31]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/VNrzOvOE3LpeuWi9ciBQDVlGrXxObvbfnI3kfNS4.png\" width=\"150\" height=\"150\" />', 0, 1, 4, '2019-09-15 04:31:58', '2019-09-15 05:17:41'),
(7731, 232, 2003, 70, '[[#img29]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/Cf9qY75IYjLpUVFWsICWK07cAwLtqRPDIO6JjLqT.png\" width=\"150\" height=\"150\" />', 0, 0, 2, '2019-09-15 04:31:58', '2019-09-15 05:17:41'),
(7732, 233, 2003, 70, '[[#img30]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/5CGn3NoMP2AFTNnuWdi3jGe97XfkU7ydkF3PldTA.png\" width=\"150\" height=\"150\" />', 0, 0, 3, '2019-09-15 04:31:58', '2019-09-15 05:17:41'),
(7733, 320, 2004, 99, '2.322', '2.322', 1, 0, 3, '2019-09-15 04:31:58', '2019-09-15 05:17:41'),
(7734, 318, 2004, 99, '6.25', '6.25', 0, 1, 1, '2019-09-15 04:31:58', '2019-09-15 05:17:41'),
(7735, 1068, 2004, 99, '4.753', '4.753', 0, 0, 4, '2019-09-15 04:31:58', '2019-09-15 05:17:41'),
(7736, 319, 2004, 99, '1.756', '1.756', 0, 0, 2, '2019-09-15 04:31:58', '2019-09-15 05:17:41'),
(7737, 664, 2005, 214, 'Windows kernel', 'Windows kernel', 0, 0, 2, '2019-09-15 04:31:58', '2019-09-15 05:17:41'),
(7738, 663, 2005, 214, 'Linux kernel', 'Linux kernel', 1, 0, 1, '2019-09-15 04:31:58', '2019-09-15 05:17:41'),
(7739, 832, 2005, 214, 'Hybrid kernel', 'Hybrid kernel', 0, 1, 4, '2019-09-15 04:31:58', '2019-09-15 05:17:41'),
(7740, 665, 2005, 214, 'MAC kernel', 'MAC kernel', 0, 0, 3, '2019-09-15 04:31:58', '2019-09-15 05:17:41'),
(7741, 347, 2006, 108, '1 000 000', '1 000 000', 0, 0, 3, '2019-09-15 04:31:58', '2019-09-15 05:17:41'),
(7742, 346, 2006, 108, '1 852 000', '1 852 000', 0, 1, 2, '2019-09-15 04:31:58', '2019-09-15 05:17:41'),
(7743, 345, 2006, 108, '1 846 000', '1 846 000', 1, 0, 1, '2019-09-15 04:31:58', '2019-09-15 05:17:41'),
(7744, 1077, 2006, 108, '1 500 000', '1 500 000', 0, 0, 4, '2019-09-15 04:31:58', '2019-09-15 05:17:41'),
(7745, 403, 2007, 127, 'Textbox control', 'Textbox control', 0, 0, 2, '2019-09-15 04:31:58', '2019-09-15 05:17:41'),
(7746, 404, 2007, 127, 'Button control', 'Button control', 1, 1, 3, '2019-09-15 04:31:58', '2019-09-15 05:17:41'),
(7747, 402, 2007, 127, 'Radio Button', 'Radio Button', 0, 0, 1, '2019-09-15 04:31:58', '2019-09-15 05:17:41'),
(7748, 380, 2008, 119, 'while', 'while', 0, 0, 3, '2019-09-15 04:31:58', '2019-09-15 05:17:41'),
(7749, 1002, 2008, 119, 'for loop', 'for loop', 1, 1, 4, '2019-09-15 04:31:58', '2019-09-15 05:17:41'),
(7750, 379, 2008, 119, 'do while', 'do while', 0, 0, 2, '2019-09-15 04:31:58', '2019-09-15 05:17:41'),
(7751, 378, 2008, 119, 'forEach loop', 'forEach loop', 0, 0, 1, '2019-09-15 04:31:58', '2019-09-15 05:17:41'),
(7752, 980, 2009, 267, 'smallest following integer', 'smallest following integer', 0, 1, 3, '2019-09-15 04:31:58', '2019-09-15 05:17:41'),
(7753, 979, 2009, 267, 'greatest previous integer', 'greatest previous integer', 1, 0, 2, '2019-09-15 04:31:58', '2019-09-15 05:17:41'),
(7754, 978, 2009, 267, 'smallest previous integer', 'smallest previous integer', 0, 0, 1, '2019-09-15 04:31:58', '2019-09-15 05:17:41'),
(7755, 468, 2010, 149, '{1, 2, 6, 1}', '{1, 2, 6, 1}', 0, 0, 1, '2019-09-15 04:31:58', '2019-09-15 05:17:41'),
(7756, 937, 2010, 149, '{1, 5, 6, 3}', '{1, 5, 6, 3}', 0, 1, 4, '2019-09-15 04:31:58', '2019-09-15 05:17:41'),
(7757, 470, 2010, 149, '{1, 2, 1, 2}', '{1, 2, 1, 2}', 0, 0, 3, '2019-09-15 04:31:58', '2019-09-15 05:17:41'),
(7758, 469, 2010, 149, '{1, 2, 5, 6}', '{1, 2, 5, 6}', 1, 0, 2, '2019-09-15 04:31:58', '2019-09-15 05:17:41'),
(7759, 370, 2011, 116, 'an even function', 'an even function', 1, 1, 2, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7760, 1085, 2011, 116, 'even and odd', 'even and odd', 0, 0, 4, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7761, 369, 2011, 116, 'an odd function', 'an odd function', 0, 0, 1, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7762, 371, 2011, 116, 'neither odd nor even', 'neither odd nor even', 0, 0, 3, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7763, 389, 2012, 122, 'Logical operators', 'Logical operators', 0, 0, 3, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7764, 387, 2012, 122, 'unary operators', 'unary operators', 1, 1, 1, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7765, 1005, 2012, 122, 'Assignment opeartors', 'Assignment opeartors', 0, 0, 4, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7766, 388, 2012, 122, 'Binary operators', 'Binary operators', 0, 0, 2, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7767, 419, 2013, 132, 'For', 'For', 0, 0, 3, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7768, 417, 2013, 132, 'If', 'If', 0, 0, 1, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7769, 1009, 2013, 132, 'While', 'While', 0, 0, 4, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7770, 418, 2013, 132, 'Switch', 'Switch', 1, 1, 2, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7771, 1062, 2014, 93, 'x ≤ -5', 'x ≤ -5', 0, 0, 4, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7772, 300, 2014, 93, 'x ≤ 5', 'x ≤ 5', 0, 0, 1, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7773, 301, 2014, 93, 'x ≥ 5', 'x ≥ 5', 1, 1, 2, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7774, 302, 2014, 93, 'x ≥ -5', 'x ≥ -5', 0, 0, 3, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7775, 989, 2015, 270, '25', '25', 0, 1, 3, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7776, 988, 2015, 270, '45', '45', 0, 0, 2, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7777, 987, 2015, 270, '35', '35', 1, 0, 1, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7778, 121, 2016, 33, 'ToDouble', 'ToDouble', 1, 1, 2, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7779, 122, 2016, 33, 'ToInt16', 'ToInt16', 0, 0, 3, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7780, 901, 2016, 33, 'ToInt32', 'ToInt32', 0, 0, 4, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7781, 120, 2016, 33, 'ToDecimal', 'ToDecimal', 0, 0, 1, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7782, 226, 2017, 68, '[[#img24]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/nVLwXww7AT2RBfzhH1tPQMxdLPF1iWuunHzErZRh.png\" width=\"150\" height=\"150\" />', 0, 0, 2, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7783, 225, 2017, 68, '[[#img23]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/IyLDJJaUUQ0aIZOMyEjh4JO72W4HpXtPj2CfMKZL.png\" width=\"150\" height=\"150\" />', 1, 0, 1, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7784, 227, 2017, 68, '[[#img25]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/rDh656ehodyPQmn7CxxjGK2H29sx2bh6LDz9INfN.png\" width=\"150\" height=\"150\" />', 0, 0, 3, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7785, 679, 2017, 68, '[[#img26]]', '<img src=\"http://localhost/pnc_soa/public/storage/uploads/tBuCNpani0PgWIFN01ztVOAj4FS4CBDAiTW9J8lB.png\" width=\"150\" height=\"150\" />', 0, 1, 4, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7786, 175, 2018, 51, '8', '8', 0, 0, 2, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7787, 174, 2018, 51, '9', '9', 0, 0, 1, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7788, 911, 2018, 51, 'Runtime error', 'Runtime error', 0, 1, 4, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7789, 176, 2018, 51, 'Compilation error', 'Compilation error', 1, 0, 3, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7790, 635, 2019, 204, 'Video calling', 'Video calling', 0, 0, 3, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7791, 822, 2019, 204, 'All of the choices', 'All of the choices', 1, 1, 4, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7792, 633, 2019, 204, 'Multitasking', 'Multitasking', 0, 0, 1, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7793, 634, 2019, 204, 'Bluetooth', 'Bluetooth', 0, 0, 2, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7794, 290, 2020, 89, 'Virtual Machine', 'Virtual Machine', 0, 0, 3, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7795, 288, 2020, 89, 'Virtual private network', 'Virtual private network', 0, 0, 1, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7796, 712, 2020, 89, 'None of them', 'None of them', 0, 0, 4, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7797, 289, 2020, 89, 'Virtual memory', 'Virtual memory', 1, 1, 2, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7798, 933, 2021, 145, '{(1, 1), (a, a), (2, a), (1, b)}', '{(1, 1), (a, a), (2, a), (1, b)}', 0, 0, 4, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7799, 457, 2021, 145, '{(1, 1), (2, 2), (a, a), (b, b)}', '{(1, 1), (2, 2), (a, a), (b, b)}', 0, 1, 2, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7800, 456, 2021, 145, '{(1, a), (1, b), (2, a), (b, b)}', '{(1, a), (1, b), (2, a), (b, b)}', 0, 0, 1, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7801, 458, 2021, 145, '{(1, a), (2, a), (1, b), (2, b)}', '{(1, a), (2, a), (1, b), (2, b)}', 1, 0, 3, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7802, 895, 2022, 256, 'Cursor is used to store data permanently.', 'Cursor is used to store data permanently.', 0, 0, 4, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7803, 892, 2022, 256, 'Content values are key pair values, which are updated or inserted in the database', 'Content values are key pair values, which are updated or inserted in the database', 0, 0, 1, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7804, 894, 2022, 256, 'A & B', 'A & B', 1, 1, 3, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7805, 893, 2022, 256, 'Cursor is used to store the temporary result.', 'Cursor is used to store the temporary result.', 0, 0, 2, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7806, 830, 2023, 212, 'No company', 'No company', 0, 0, 4, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7807, 658, 2023, 212, 'Google', 'Google', 1, 1, 2, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7808, 657, 2023, 212, 'Apple', 'Apple', 0, 0, 1, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7809, 659, 2023, 212, 'Nokia', 'Nokia', 0, 0, 3, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7810, 356, 2024, 111, '(π , 3 π / 2)', '(π , 3 π / 2)', 0, 0, 3, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7811, 354, 2024, 111, '(0 , π/2)', '(0 , π/2)', 0, 0, 1, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7812, 1080, 2024, 111, '(3 π / 2 , 2 π)', '(3 π / 2 , 2 π)', 0, 0, 4, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7813, 355, 2024, 111, '(π/2 , π)', '(π/2 , π)', 1, 1, 2, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7814, 833, 2025, 215, '2.2 (Froyo)', '2.2 (Froyo)', 0, 0, 4, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7815, 666, 2025, 215, '3.0 (Honeycomb)', '3.0 (Honeycomb)', 0, 0, 1, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7816, 667, 2025, 215, '2.3 (Gingerbread)', '2.3 (Gingerbread)', 1, 1, 2, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7817, 668, 2025, 215, '2.6', '2.6', 0, 0, 3, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7818, 489, 2026, 156, '4, 8', '4, 8', 0, 1, 1, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7819, 490, 2026, 156, '8, 12', '8, 12', 1, 0, 2, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7820, 491, 2026, 156, '4, 12', '4, 12', 0, 0, 3, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7821, 944, 2026, 156, 'None of the choices', 'None of the choices', 0, 0, 4, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7822, 474, 2027, 151, 'Union', 'Union', 0, 0, 1, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7823, 939, 2027, 151, 'Complement', 'Complement', 0, 1, 4, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7824, 475, 2027, 151, 'Difference', 'Difference', 0, 0, 2, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7825, 476, 2027, 151, 'Intersection', 'Intersection', 1, 0, 3, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7826, 1076, 2028, 107, '22', '22', 1, 1, 4, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7827, 342, 2028, 107, '11', '11', 0, 0, 1, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7828, 343, 2028, 107, '48', '48', 0, 0, 2, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7829, 344, 2028, 107, '-12', '-12', 0, 0, 3, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7830, 414, 2029, 131, 'Get()', 'Get()', 0, 0, 1, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7831, 416, 2029, 131, 'Show()', 'Show()', 1, 1, 3, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7832, 415, 2029, 131, 'Enable()', 'Enable()', 0, 0, 2, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7833, 503, 2030, 160, 'A ∩ B', 'A ∩ B', 0, 1, 3, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7834, 502, 2030, 160, 'A U B -B', 'A U B -B', 1, 0, 2, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7835, 501, 2030, 160, 'A‘ (Complement of A)', 'A‘ (Complement of A)', 0, 0, 1, '2019-09-15 04:31:59', '2019-09-15 05:17:41'),
(7836, 948, 2030, 160, 'B', 'B', 0, 0, 4, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7837, 178, 2031, 52, '200', '200', 1, 1, 2, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7838, 179, 2031, 52, '400', '400', 0, 0, 3, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7839, 177, 2031, 52, '12', '12', 0, 0, 1, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7840, 912, 2031, 52, '100', '100', 0, 0, 4, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7841, 283, 2032, 87, 'decode, execute, store and fetch', 'decode, execute, store and fetch', 0, 0, 2, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7842, 282, 2032, 87, 'fetch, execute, store and decode', 'fetch, execute, store and decode', 0, 0, 1, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7843, 715, 2032, 87, 'fetch, decode, execute and store', 'fetch, decode, execute and store', 1, 1, 4, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7844, 284, 2032, 87, 'decode, fetch, store and execute', 'decode, fetch, store and execute', 0, 0, 3, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7845, 360, 2033, 113, '5!', '5!', 0, 0, 1, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7846, 1082, 2033, 113, '3! * 2!', '3! * 2!', 0, 0, 4, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7847, 361, 2033, 113, '3!', '3!', 1, 1, 2, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7848, 362, 2033, 113, '2!', '2!', 0, 0, 3, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7849, 165, 2034, 48, 'JRE is a java based GUI application.', 'JRE is a java based GUI application.', 0, 0, 1, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7850, 166, 2034, 48, 'JRE is an application development framework.', 'JRE is an application development framework.', 0, 0, 2, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7851, 167, 2034, 48, 'JRE is an implementation of the Java Virtual Machine which executes Java programs.', 'JRE is an implementation of the Java Virtual Machine which executes Java programs.', 1, 1, 3, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7852, 144, 2035, 41, 'public static int main(String[] args)', 'public static int main(String[] args)', 0, 0, 1, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7853, 145, 2035, 41, 'public int main(String[] args)', 'public int main(String[] args)', 0, 0, 2, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7854, 146, 2035, 41, 'public static void main(String[] args)', 'public static void main(String[] args)', 1, 1, 3, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7855, 885, 2036, 254, 'Cookies management', 'Cookies management', 0, 0, 2, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7856, 886, 2036, 254, 'Authentication management', 'Authentication management', 0, 0, 3, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7857, 884, 2036, 254, 'httprequest(get/post) and returns response from the server', 'httprequest(get/post) and returns response from the server', 1, 1, 1, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7858, 887, 2036, 254, 'None of the above', 'None of the above', 0, 0, 4, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7859, 726, 2037, 78, 'ANSI', 'ANSI', 0, 0, 4, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7860, 257, 2037, 78, 'EBCDIC', 'EBCDIC', 0, 0, 3, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7861, 256, 2037, 78, 'Unicode', 'Unicode', 1, 1, 2, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7862, 255, 2037, 78, 'ASCII', 'ASCII', 0, 0, 1, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7863, 1021, 2038, 275, 'Only one catch block for each try block.', 'Only one catch block for each try block.', 0, 0, 1, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7864, 1024, 2038, 275, 'The catch blocks should be used only when a finally block is not used.', 'The catch blocks should be used only when a finally block is not used.', 0, 0, 4, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7865, 1023, 2038, 275, 'Several catch blocks within one try block, arranged starting with the most specific exception and ending with Exception.', 'Several catch blocks within one try block, arranged starting with the most specific exception and ending with Exception.', 1, 1, 3, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7866, 1022, 2038, 275, 'Several catch blocks for a try block, arranged in order starting with Exception and ending with the most specific exception.', 'Several catch blocks for a try block, arranged in order starting with Exception and ending with the most specific exception.', 0, 0, 2, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7867, 197, 2039, 58, '0 1 2 3 4 5 6 7 8 9', '0 1 2 3 4 5 6 7 8 9', 0, 0, 3, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7868, 196, 2039, 58, '1 3 5 7 9', '1 3 5 7 9', 0, 0, 2, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7869, 195, 2039, 58, '0 2 4 6 8', '0 2 4 6 8', 1, 1, 1, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7870, 917, 2039, 58, '1 2 3 4 5 6 7 8 9 10', '1 2 3 4 5 6 7 8 9 10', 0, 0, 4, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7871, 1061, 2040, 92, 'x > 6', 'x > 6', 0, 0, 4, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7872, 298, 2040, 92, 'x > 1', 'x > 1', 0, 0, 2, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7873, 299, 2040, 92, 'x < -1', 'x < -1', 1, 1, 3, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7874, 297, 2040, 92, 'x < 6', 'x < 6', 0, 0, 1, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7875, 204, 2041, 61, 'heap space', 'heap space', 1, 1, 1, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7876, 920, 2041, 61, 'first generation memory', 'first generation memory', 0, 0, 4, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7877, 205, 2041, 61, 'stack space', 'stack space', 0, 0, 2, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7878, 206, 2041, 61, 'heap space and stack space', 'heap space and stack space', 0, 0, 3, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7879, 358, 2042, 112, '15', '15', 0, 0, 2, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7880, 1081, 2042, 112, '8', '8', 0, 0, 4, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7881, 359, 2042, 112, '2100', '2100', 1, 1, 3, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7882, 357, 2042, 112, '10', '10', 0, 0, 1, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7883, 879, 2043, 252, 'None of the above', 'None of the above', 0, 0, 4, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7884, 878, 2043, 252, 'A mandatory class in android', 'A mandatory class in android', 0, 0, 3, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7885, 877, 2043, 252, 'A bean class can be passed from one activity to another.', 'A bean class can be passed from one activity to another.', 0, 0, 2, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7886, 876, 2043, 252, 'A class used to hold states and objects', 'A class used to hold states and objects', 1, 1, 1, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7887, 116, 2044, 31, '12', '12', 0, 0, 3, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7888, 115, 2044, 31, '20', '20', 1, 1, 2, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7889, 114, 2044, 31, '10', '10', 0, 0, 1, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7890, 950, 2045, 162, 'All of the mentioned', 'All of the mentioned', 1, 1, 4, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7891, 507, 2045, 162, 'n(A U B)=0', 'n(A U B)=0', 0, 0, 1, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7892, 509, 2045, 162, 'n( A U B U C)=90', 'n( A U B U C)=90', 0, 0, 3, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7893, 508, 2045, 162, 'n( B U C)=0', 'n( B U C)=0', 0, 0, 2, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7894, 463, 2046, 147, 'Finite', 'Finite', 0, 0, 2, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7895, 935, 2046, 147, 'Empty', 'Empty', 0, 0, 4, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7896, 464, 2046, 147, 'Subset', 'Subset', 0, 1, 3, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7897, 462, 2046, 147, 'Infinite', 'Infinite', 1, 0, 1, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7898, 306, 2047, 95, '12i', '12i', 1, 1, 1, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7899, 308, 2047, 95, '-12', '-12', 0, 0, 3, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7900, 307, 2047, 95, 'You cannot find the square root of a negative number', 'You cannot find the square root of a negative number', 0, 0, 2, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7901, 1064, 2047, 95, '-12i', '-12i', 0, 0, 4, '2019-09-15 04:31:59', '2019-09-15 05:17:42'),
(7902, 221, 2048, 66, '199', '199', 0, 0, 3, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7903, 676, 2048, 66, '212', '212', 0, 0, 4, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7904, 220, 2048, 66, '163', '163', 1, 1, 2, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7905, 219, 2048, 66, '121', '121', 0, 0, 1, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7906, 840, 2049, 243, 'R.style', 'R.style', 1, 1, 1, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7907, 841, 2049, 243, 'X.style', 'X.style', 0, 0, 2, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7908, 842, 2049, 243, 'manifest.XML', 'manifest.XML', 0, 0, 3, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7909, 843, 2049, 243, 'application', 'application', 0, 0, 4, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7910, 1, 2050, 1, 'x = 1', 'x = 1', 1, 1, 1, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7911, 2, 2050, 1, 'x = 4', 'x = 4', 0, 0, 2, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7912, 3, 2050, 1, 'x = 2', 'x = 2', 0, 0, 3, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7913, 954, 2051, 260, '10', '10', 0, 1, 4, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7914, 951, 2051, 260, '35', '35', 1, 0, 1, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7915, 952, 2051, 260, '20', '20', 0, 0, 2, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7916, 953, 2051, 260, '30', '30', 0, 0, 3, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7917, 845, 2052, 244, 'updates()', 'updates()', 0, 1, 2, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7918, 847, 2052, 244, 'none of these', 'none of these', 0, 0, 4, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7919, 846, 2052, 244, 'commit()', 'commit()', 0, 0, 3, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7920, 844, 2052, 244, 'commitUpdates()', 'commitUpdates()', 1, 0, 1, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7921, 1053, 2053, 283, 'Set the CausesValidation property of the text box to false.', 'Set the CausesValidation property of the text box to false.', 0, 0, 1, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7922, 1054, 2053, 283, 'Set the CausesValidation property of the text box to true.', 'Set the CausesValidation property of the text box to true.', 0, 0, 2, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7923, 1055, 2053, 283, 'Set the CausesValidation property of the Help button to false.', 'Set the CausesValidation property of the Help button to false.', 1, 1, 3, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7924, 1056, 2053, 283, 'Set the CausesValidation property of the Help button to true.', 'Set the CausesValidation property of the Help button to true.', 0, 0, 4, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7925, 465, 2054, 148, '8', '8', 1, 0, 1, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7926, 467, 2054, 148, '7', '7', 0, 1, 3, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7927, 936, 2054, 148, '9', '9', 0, 0, 4, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7928, 466, 2054, 148, '6', '6', 0, 0, 2, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7929, 644, 2055, 207, 'Android data bridge', 'Android data bridge', 0, 0, 3, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7930, 643, 2055, 207, 'Application Debug Bridge', 'Application Debug Bridge', 0, 0, 2, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7931, 825, 2055, 207, 'Application data bridge', 'Application data bridge', 0, 0, 4, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7932, 642, 2055, 207, 'Android Debug Bridge', 'Android Debug Bridge', 1, 1, 1, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7933, 687, 2056, 220, 'digital camera', 'digital camera', 0, 0, 1, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7934, 709, 2056, 220, 'RFID readers', 'RFID readers', 0, 0, 4, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7935, 689, 2056, 220, 'MICR', 'MICR', 0, 0, 3, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7936, 688, 2056, 220, 'scanner', 'scanner', 1, 1, 2, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7937, 907, 2057, 42, 'private', 'private', 0, 0, 4, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7938, 147, 2057, 42, 'static', 'static', 0, 0, 1, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7939, 149, 2057, 42, 'void', 'void', 0, 0, 3, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7940, 148, 2057, 42, 'Boolean', 'Boolean', 1, 1, 2, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7941, 451, 2058, 143, 'Two', 'Two', 0, 0, 2, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7942, 931, 2058, 143, 'Three', 'Three', 0, 1, 4, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7943, 452, 2058, 143, 'Zero', 'Zero', 0, 0, 3, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7944, 450, 2058, 143, 'One', 'One', 1, 0, 1, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7945, 171, 2059, 50, 'Thread returns to the ready state.', 'Thread returns to the ready state.', 1, 1, 1, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7946, 173, 2059, 50, 'Thread starts running.', 'Thread starts running.', 0, 0, 3, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7947, 172, 2059, 50, 'Thread returns to the waiting state.', 'Thread returns to the waiting state.', 0, 0, 2, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7948, 1007, 2060, 124, 'Explicit Types', 'Explicit Types', 0, 0, 4, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7949, 395, 2060, 124, 'Data Type', 'Data Type', 0, 0, 3, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7950, 393, 2060, 124, 'Reference type', 'Reference type', 1, 1, 1, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7951, 394, 2060, 124, 'Value types', 'Value types', 0, 0, 2, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7952, 143, 2061, 40, 'Both of the above.', 'Both of the above.', 0, 0, 3, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7953, 141, 2061, 40, 'type.', 'type.', 1, 1, 1, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7954, 142, 2061, 40, 'object.', 'object.', 0, 0, 2, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7955, 429, 2062, 136, 'creates a button control', 'creates a button control', 0, 0, 1, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7956, 430, 2062, 136, 'initializes a button control', 'initializes a button control', 0, 0, 2, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7957, 431, 2062, 136, 'instantiates button control', 'instantiates button control', 0, 0, 3, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7958, 1012, 2062, 136, 'a and c', 'a and c', 1, 1, 4, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7959, 728, 2063, 76, 'back up', 'back up', 1, 1, 4, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7960, 251, 2063, 76, 'virtual memory', 'virtual memory', 0, 0, 3, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7961, 250, 2063, 76, 'buffering', 'buffering', 0, 0, 2, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7962, 249, 2063, 76, 'spooling', 'spooling', 0, 0, 1, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7963, 900, 2064, 32, 'All of the choices', 'All of the choices', 1, 1, 4, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7964, 117, 2064, 32, 'abstract', 'abstract', 0, 0, 1, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7965, 119, 2064, 32, 'foreach', 'foreach', 0, 0, 3, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7966, 118, 2064, 32, 'as', 'as', 0, 0, 2, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7967, 386, 2065, 121, 'Logical operators', 'Logical operators', 1, 1, 3, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7968, 1004, 2065, 121, 'Assignment Operators', 'Assignment Operators', 0, 0, 4, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7969, 385, 2065, 121, 'Bitwise operators', 'Bitwise operators', 0, 0, 2, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7970, 384, 2065, 121, 'RElational operators', 'RElational operators', 0, 0, 1, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7971, 852, 2066, 246, 'res/', 'res/', 0, 0, 1, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7972, 854, 2066, 246, 'src/', 'src/', 1, 1, 3, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7973, 855, 2066, 246, 'bin/', 'bin/', 0, 0, 4, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7974, 853, 2066, 246, 'assets/', 'assets/', 0, 0, 2, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7975, 1066, 2067, 97, '3i - 10', '3i - 10', 0, 0, 4, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7976, 313, 2067, 97, '7 - 3i', '7 - 3i', 0, 0, 2, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7977, 312, 2067, 97, 'i - 5', 'i - 5', 0, 0, 1, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7978, 314, 2067, 97, 'i - 12', 'i - 12', 1, 1, 3, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7979, 655, 2068, 211, 'Firefox', 'Firefox', 0, 0, 2, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7980, 829, 2068, 211, 'Opera', 'Opera', 0, 0, 4, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7981, 656, 2068, 211, 'Open source Webkit', 'Open source Webkit', 1, 1, 3, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7982, 654, 2068, 211, 'Chrome', 'Chrome', 0, 0, 1, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7983, 1089, 2069, 285, '2 π', '2 π', 0, 0, 2, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7984, 1091, 2069, 285, 'π', 'π', 1, 1, 4, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7985, 1088, 2069, 285, '4 π <sup>2</sup>', '4 π <sup>2</sup>', 0, 0, 1, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7986, 1090, 2069, 285, '4 π', '4 π', 0, 0, 3, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7987, 727, 2070, 77, 'linker error', 'linker error', 0, 0, 4, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7988, 252, 2070, 77, 'logic error', 'logic error', 1, 1, 1, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7989, 254, 2070, 77, 'run time error', 'run time error', 0, 0, 3, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7990, 253, 2070, 77, 'syntax error', 'syntax error', 0, 0, 2, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7991, 638, 2071, 205, 'WiFi driver', 'WiFi driver', 1, 1, 3, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7992, 823, 2071, 205, 'Bluetooth driver', 'Bluetooth driver', 0, 0, 4, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7993, 637, 2071, 205, 'Video Driver', 'Video Driver', 0, 0, 2, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7994, 636, 2071, 205, 'Device Driver', 'Device Driver', 0, 0, 1, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7995, 259, 2072, 79, 'ALU', 'ALU', 0, 0, 2, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7996, 725, 2072, 79, 'Primary Storage', 'Primary Storage', 1, 1, 4, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7997, 258, 2072, 79, 'Control unit', 'Control unit', 0, 0, 1, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7998, 260, 2072, 79, 'Registers', 'Registers', 0, 0, 3, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(7999, 711, 2073, 90, 'megabyte', 'megabyte', 0, 0, 4, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(8000, 292, 2073, 90, 'byte', 'byte', 1, 1, 2, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(8001, 291, 2073, 90, 'bit', 'bit', 0, 0, 1, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(8002, 293, 2073, 90, 'kilobyte', 'kilobyte', 0, 0, 3, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(8003, 433, 2074, 137, 'Maintain the same return type and arguments as the parent class, but implement it differently', 'Maintain the same return type and arguments as the parent class, but implement it differently', 1, 1, 2, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(8004, 1013, 2074, 137, 'Are Virtual', 'Are Virtual', 0, 0, 4, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(8005, 434, 2074, 137, 'Have different return types and arguments than the parent class', 'Have different return types and arguments than the parent class', 0, 0, 3, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(8006, 432, 2074, 137, 'Override the parent class methods but maintain the implementation', 'Override the parent class methods but maintain the implementation', 0, 0, 1, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(8007, 932, 2075, 144, '20', '20', 0, 0, 4, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(8008, 454, 2075, 144, '5', '5', 1, 1, 2, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(8009, 453, 2075, 144, '10', '10', 0, 0, 1, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(8010, 455, 2075, 144, '3', '3', 0, 0, 3, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(8011, 722, 2076, 82, '22', '22', 0, 0, 4, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(8012, 269, 2076, 82, '-7', '-7', 0, 0, 3, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(8013, 267, 2076, 82, '-23', '-23', 0, 0, 1, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(8014, 268, 2076, 82, '-9', '-9', 1, 1, 2, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(8015, 244, 2077, 74, 'Motherboard', 'Motherboard', 0, 0, 2, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(8016, 730, 2077, 74, 'CPU', 'CPU', 0, 1, 4, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(8017, 245, 2077, 74, 'Computer', 'Computer', 1, 0, 3, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(8018, 243, 2077, 74, 'Operating System', 'Operating System', 0, 0, 1, '2019-09-15 04:32:00', '2019-09-15 05:17:42'),
(8019, 409, 2078, 129, 'LinkLabel control', 'LinkLabel control', 1, 1, 2, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8020, 410, 2078, 129, 'ListView Control', 'ListView Control', 0, 0, 3, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8021, 408, 2078, 129, 'GroupBox control', 'GroupBox control', 0, 0, 1, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8022, 1093, 2079, 286, '0.478', '0.478', 0, 0, 2, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8023, 1092, 2079, 286, '0.057', '0.057', 1, 1, 1, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8024, 1095, 2079, 286, '0', '0', 0, 0, 4, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8025, 1094, 2079, 286, '0.001', '0.001', 0, 0, 3, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8026, 399, 2080, 126, 'CheckListBox control', 'CheckListBox control', 0, 0, 1, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8027, 401, 2080, 126, 'TextBox control', 'TextBox control', 0, 0, 3, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8028, 400, 2080, 126, 'ListBox control', 'ListBox control', 1, 1, 2, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8029, 488, 2081, 155, '6', '6', 0, 0, 3, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8030, 486, 2081, 155, '4', '4', 1, 1, 1, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8031, 487, 2081, 155, '5', '5', 0, 0, 2, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8032, 943, 2081, 155, '7', '7', 0, 0, 4, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8033, 938, 2082, 150, '{1, 6}', '{1, 6}', 0, 0, 4, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8034, 471, 2082, 150, '{1, 2}', '{1, 2}', 1, 1, 1, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8035, 473, 2082, 150, '{2, 5}', '{2, 5}', 0, 0, 3, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8036, 472, 2082, 150, '{5, 6}', '{5, 6}', 0, 0, 2, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8037, 139, 2083, 39, '0', '0', 0, 0, 2, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8038, 906, 2083, 39, 'Not assigned', 'Not assigned', 0, 1, 4, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8039, 138, 2083, 39, 'null', 'null', 0, 0, 1, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8040, 140, 2083, 39, 'Depends upon the type of variable', 'Depends upon the type of variable', 1, 0, 3, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8041, 136, 2084, 38, 'It is followed by one or more catch blocks.', 'It is followed by one or more catch blocks.', 0, 0, 2, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8042, 137, 2084, 38, 'A and B', 'A and B', 1, 1, 3, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8043, 135, 2084, 38, 'A try block identifies a block of code for which particular exceptions is activated.', 'A try block identifies a block of code for which particular exceptions is activated.', 0, 0, 1, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8044, 1104, 2085, 289, '5', '5', 0, 0, 1, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8045, 1107, 2085, 289, '8', '8', 0, 0, 4, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8046, 1105, 2085, 289, '7', '7', 1, 1, 2, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8047, 1106, 2085, 289, '6', '6', 0, 0, 3, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8048, 1035, 2086, 278, 'Message1\nMessage3\nMessage4', 'Message1<br />\nMessage3<br />\nMessage4', 1, 0, 3, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8049, 1036, 2086, 278, 'Message1\nMessage3\nMessage2\nMessage4', 'Message1<br />\nMessage3<br />\nMessage2<br />\nMessage4', 0, 1, 4, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8050, 1034, 2086, 278, 'Message1\nMessage2\nMessage3\nMessage4', 'Message1<br />\nMessage2<br />\nMessage3<br />\nMessage4', 0, 0, 2, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8051, 1033, 2086, 278, 'Message1\nMessage4', 'Message1<br />\nMessage4', 0, 0, 1, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8052, 192, 2087, 57, 'Row', 'Row', 1, 0, 1, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8053, 193, 2087, 57, 'Column', 'Column', 0, 1, 2, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8054, 194, 2087, 57, 'Both Row and Column', 'Both Row and Column', 0, 0, 3, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8055, 930, 2088, 142, '{1, 5, 7, 9, 11}', '{1, 5, 7, 9, 11}', 0, 1, 4, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8056, 448, 2088, 142, '{1, 3, 5, 7, 9}', '{1, 3, 5, 7, 9}', 1, 0, 2, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8057, 449, 2088, 142, '{1, 2, 5, 9}', '{1, 2, 5, 9}', 0, 0, 3, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8058, 447, 2088, 142, '{1, 2, 3}', '{1, 2, 3}', 0, 0, 1, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8059, 1029, 2089, 277, 'The code will generate an error because it lacks a catch block.', 'The code will generate an error because it lacks a catch block.', 0, 0, 1, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8060, 1030, 2089, 277, 'The code will generate an error because it lacks a throw statement.', 'The code will generate an error because it lacks a throw statement.', 0, 0, 2, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8061, 1031, 2089, 277, 'The code will generate an error because the finally block is placed immediately after the try block.', 'The code will generate an error because the finally block is placed immediately after the try block.', 0, 1, 3, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8062, 1032, 2089, 277, 'The code will compile without an error.', 'The code will compile without an error.', 1, 0, 4, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8063, 630, 2090, 203, 'MP4', 'MP4', 0, 0, 1, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8064, 821, 2090, 203, 'MIDI', 'MIDI', 0, 0, 4, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8065, 632, 2090, 203, 'AVI', 'AVI', 1, 1, 3, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8066, 631, 2090, 203, 'MPEG', 'MPEG', 0, 0, 2, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8067, 125, 2091, 34, '&</a>', '&</a>', 0, 0, 3, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8068, 123, 2091, 34, 'sizeof', 'sizeof', 1, 1, 1, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8069, 902, 2091, 34, '*', '*', 0, 0, 4, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8070, 124, 2091, 34, 'typeof', 'typeof', 0, 0, 2, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8071, 732, 2092, 72, 'Disk optimization software', 'Disk optimization software', 0, 0, 4, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8072, 238, 2092, 72, 'Utility software', 'Utility software', 1, 0, 2, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8073, 237, 2092, 72, 'Operating system software', 'Operating system software', 0, 1, 1, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8074, 239, 2092, 72, 'Anti-virus software', 'Anti-virus software', 0, 0, 3, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8075, 442, 2093, 140, 'Reference type', 'Reference type', 0, 0, 2, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8076, 1016, 2093, 140, 'Object', 'Object', 0, 0, 4, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8077, 441, 2093, 140, 'Constant', 'Constant', 0, 1, 1, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8078, 443, 2093, 140, 'Variable', 'Variable', 1, 0, 3, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8079, 861, 2094, 248, 'To store the data in a database', 'To store the data in a database', 0, 0, 2, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8080, 860, 2094, 248, 'To send the data from an application to another application', 'To send the data from an application to another application', 0, 0, 1, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8081, 863, 2094, 248, 'none of the choices', 'none of the choices', 0, 0, 4, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8082, 862, 2094, 248, 'To share the data between applications', 'To share the data between applications', 1, 1, 3, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8083, 198, 2095, 59, '3', '3', 0, 0, 1, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8084, 200, 2095, 59, '6', '6', 0, 0, 3, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8085, 199, 2095, 59, '0', '0', 0, 0, 2, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8086, 918, 2095, 59, '1', '1', 1, 1, 4, '2019-09-15 04:32:00', '2019-09-15 05:17:43'),
(8087, 1073, 2096, 104, '(x+5)<sup>2</sup> -16', '(x+5)<sup>2</sup> -16', 0, 0, 4, '2019-09-15 04:32:01', '2019-09-15 05:17:43'),
(8088, 335, 2096, 104, '(x+7)<sup>2</sup> -8', '(x+7)<sup>2</sup> -8', 0, 0, 3, '2019-09-15 04:32:01', '2019-09-15 05:17:43'),
(8089, 333, 2096, 104, '(x-7)<sup>2</sup> +8', '(x-7)<sup>2</sup> +8', 0, 0, 1, '2019-09-15 04:32:01', '2019-09-15 05:17:43'),
(8090, 334, 2096, 104, '(x+5)<sup>2</sup> +16', '(x+5)<sup>2</sup> +16', 1, 1, 2, '2019-09-15 04:32:01', '2019-09-15 05:17:43'),
(8091, 628, 2097, 202, 'Programming Language', 'Programming Language', 0, 0, 2, '2019-09-15 04:32:01', '2019-09-15 05:17:43'),
(8092, 629, 2097, 202, 'Mobile Operating System', 'Mobile Operating System', 1, 1, 3, '2019-09-15 04:32:01', '2019-09-15 05:17:43'),
(8093, 820, 2097, 202, 'Database', 'Database', 0, 0, 4, '2019-09-15 04:32:01', '2019-09-15 05:17:43'),
(8094, 627, 2097, 202, 'Desktop Operatng System', 'Desktop Operatng System', 0, 0, 1, '2019-09-15 04:32:01', '2019-09-15 05:17:43'),
(8095, 436, 2098, 138, 'Catches', 'Catches', 0, 0, 2, '2019-09-15 04:32:01', '2019-09-15 05:17:43'),
(8096, 437, 2098, 138, 'Throws', 'Throws', 1, 0, 3, '2019-09-15 04:32:01', '2019-09-15 05:17:43'),
(8097, 1014, 2098, 138, 'a and b', 'a and b', 0, 1, 4, '2019-09-15 04:32:01', '2019-09-15 05:17:43'),
(8098, 435, 2098, 138, 'Trys', 'Trys', 0, 0, 1, '2019-09-15 04:32:01', '2019-09-15 05:17:43'),
(8099, 705, 2099, 225, '531', '531', 0, 0, 1, '2019-09-15 04:32:01', '2019-09-15 05:17:43'),
(8100, 714, 2099, 225, '135', '135', 0, 0, 4, '2019-09-15 04:32:01', '2019-09-15 05:17:43'),
(8101, 707, 2099, 225, '44', '44', 0, 0, 3, '2019-09-15 04:32:01', '2019-09-15 05:17:43'),
(8102, 706, 2099, 225, '127', '127', 1, 1, 2, '2019-09-15 04:32:01', '2019-09-15 05:17:43'),
(8103, 686, 2100, 219, 'Modem', 'Modem', 1, 1, 3, '2019-09-15 04:32:01', '2019-09-15 05:17:43'),
(8104, 710, 2100, 219, 'Wireless access point', 'Wireless access point', 0, 0, 4, '2019-09-15 04:32:01', '2019-09-15 05:17:43'),
(8105, 685, 2100, 219, 'Switch', 'Switch', 0, 0, 2, '2019-09-15 04:32:01', '2019-09-15 05:17:43'),
(8106, 684, 2100, 219, 'Repeater', 'Repeater', 0, 0, 1, '2019-09-15 04:32:01', '2019-09-15 05:17:43');

-- --------------------------------------------------------

--
-- Table structure for table `assessments`
--

CREATE TABLE `assessments` (
  `id` int(10) UNSIGNED NOT NULL,
  `assessment_code` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL,
  `exam_id` int(11) NOT NULL,
  `student_id` int(11) NOT NULL,
  `student_outcome_id` int(11) NOT NULL,
  `time_consumed` double NOT NULL,
  `item_analysis` tinyint(1) DEFAULT '0',
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `assessments`
--

INSERT INTO `assessments` (`id`, `assessment_code`, `exam_id`, `student_id`, `student_outcome_id`, `time_consumed`, `item_analysis`, `created_at`, `updated_at`) VALUES
(1, '2019090001', 1, 9, 7, 181, 1, '2019-08-31 22:07:25', '2019-09-03 02:32:36'),
(2, '2019090002', 1, 9, 7, 189, 1, '2019-08-31 22:12:32', '2019-09-03 02:32:36'),
(3, '2019090003', 1, 35, 7, 668, 1, '2019-09-01 23:41:05', '2019-09-03 02:32:36'),
(4, '2019090004', 1, 34, 7, 603, 1, '2019-09-01 23:54:19', '2019-09-03 02:32:36'),
(5, '2019090005', 1, 33, 7, 316, 1, '2019-09-02 02:25:18', '2019-09-03 02:32:36'),
(6, '2019090006', 1, 32, 7, 276, 1, '2019-09-02 02:33:34', '2019-09-03 02:32:36'),
(7, '2019090007', 1, 29, 7, 311, 1, '2019-09-02 02:39:37', '2019-09-03 02:32:36'),
(8, '2019090008', 1, 28, 7, 472, 1, '2019-09-02 02:48:50', '2019-09-03 02:32:36'),
(9, '2019090009', 1, 25, 7, 297, 1, '2019-09-02 02:55:20', '2019-09-03 02:32:36'),
(10, '2019090010', 1, 24, 7, 657, 1, '2019-09-02 03:09:06', '2019-09-03 02:32:36'),
(11, '2019090011', 1, 23, 7, 437, 1, '2019-09-02 03:18:49', '2019-09-03 02:32:36'),
(12, '2019090012', 1, 21, 7, 334, 1, '2019-09-02 03:26:37', '2019-09-03 02:32:36'),
(13, '2019090013', 1, 20, 7, 420, 1, '2019-09-02 03:34:35', '2019-09-03 02:32:36'),
(14, '2019090014', 1, 19, 7, 356, 1, '2019-09-02 03:44:06', '2019-09-03 02:32:36'),
(15, '2019090015', 1, 18, 7, 997, 1, '2019-09-02 04:01:30', '2019-09-03 02:32:37'),
(16, '2019090016', 1, 17, 7, 386, 1, '2019-09-02 04:09:06', '2019-09-03 02:32:37'),
(17, '2019090017', 1, 16, 7, 568, 1, '2019-09-02 04:19:23', '2019-09-03 02:32:37'),
(18, '2019090018', 1, 10, 7, 333, 1, '2019-09-02 13:19:12', '2019-09-03 02:32:37'),
(19, '2019090019', 1, 11, 7, 238, 1, '2019-09-02 13:30:53', '2019-09-03 02:32:37'),
(20, '2019090020', 1, 13, 7, 388, 1, '2019-09-02 13:39:00', '2019-09-03 02:32:37'),
(21, '2019090021', 1, 36, 7, 2745, 0, '2019-09-15 05:17:43', '2019-09-15 05:17:43');

-- --------------------------------------------------------

--
-- Table structure for table `assessment_details`
--

CREATE TABLE `assessment_details` (
  `id` int(10) UNSIGNED NOT NULL,
  `assessment_id` int(11) NOT NULL,
  `test_question_id` int(11) NOT NULL,
  `choice_id` int(11) DEFAULT NULL,
  `is_correct` int(11) NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `assessment_details`
--

INSERT INTO `assessment_details` (`id`, `assessment_id`, `test_question_id`, `choice_id`, `is_correct`, `created_at`, `updated_at`) VALUES
(1, 1, 289, 1107, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(2, 1, 142, 447, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(3, 1, 51, 911, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(4, 1, 114, 364, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(5, 1, 214, 832, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(6, 1, 137, 432, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(7, 1, 267, 980, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(8, 1, 215, 833, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(9, 1, 126, 401, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(10, 1, 254, 886, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(11, 1, 97, 313, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(12, 1, 40, 143, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(13, 1, 38, 136, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(14, 1, 57, 194, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(15, 1, 52, 179, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(16, 1, 112, 1081, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(17, 1, 244, 846, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(18, 1, 275, 1024, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(19, 1, 87, 282, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(20, 1, 246, 855, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(21, 1, 121, 384, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(22, 1, 108, 1077, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(23, 1, 148, 467, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(24, 1, 42, 149, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(25, 1, 252, 878, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(26, 1, 34, 124, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(27, 1, 136, 429, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(28, 1, 285, 1088, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(29, 1, 248, 863, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(30, 1, 223, 718, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(31, 1, 155, 487, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(32, 1, 212, 830, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(33, 1, 48, 166, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(34, 1, 132, 419, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(35, 1, 147, 935, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(36, 1, 99, 1068, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(37, 1, 93, 300, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(38, 1, 243, 843, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(39, 1, 78, 726, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(40, 1, 145, 933, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(41, 1, 111, 354, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(42, 1, 116, 369, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(43, 1, 32, 117, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(44, 1, 256, 895, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(45, 1, 278, 1035, 1, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(46, 1, 124, 395, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(47, 1, 33, 122, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(48, 1, 140, 1016, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(49, 1, 127, 403, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(50, 1, 143, 451, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(51, 1, 286, 1093, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(52, 1, 203, 821, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(53, 1, 204, 633, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(54, 1, 270, 989, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(55, 1, 59, 200, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(56, 1, 70, 233, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(57, 1, 72, 732, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(58, 1, 162, 508, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(59, 1, 89, 288, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(60, 1, 79, 259, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(61, 1, 211, 654, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(62, 1, 77, 254, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(63, 1, 205, 823, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(64, 1, 66, 219, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(65, 1, 68, 226, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(66, 1, 283, 1053, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(67, 1, 95, 307, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(68, 1, 92, 298, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(69, 1, 225, 714, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(70, 1, 151, 475, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(71, 1, 131, 414, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(72, 1, 138, 1014, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(73, 1, 119, 378, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(74, 1, 260, 952, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(75, 1, 61, 206, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(76, 1, 129, 408, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(77, 1, 113, 360, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(78, 1, 219, 710, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(79, 1, 76, 251, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(80, 1, 39, 139, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(81, 1, 150, 938, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(82, 1, 122, 1005, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(83, 1, 58, 197, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(84, 1, 41, 144, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(85, 1, 104, 333, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(86, 1, 90, 711, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(87, 1, 202, 820, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(88, 1, 144, 455, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(89, 1, 156, 944, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(90, 1, 220, 689, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(91, 1, 107, 342, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(92, 1, 207, 644, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(93, 1, 50, 173, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(94, 1, 1, 3, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(95, 1, 82, 269, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(96, 1, 74, 730, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(97, 1, 160, 501, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(98, 1, 149, 468, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(99, 1, 277, 1031, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(100, 1, 31, 114, 0, '2019-08-31 22:07:25', '2019-08-31 22:07:25'),
(101, 2, 58, 195, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(102, 2, 225, 707, 0, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(103, 2, 254, 884, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(104, 2, 108, 345, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(105, 2, 77, 253, 0, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(106, 2, 34, 123, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(107, 2, 289, 1105, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(108, 2, 68, 225, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(109, 2, 32, 900, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(110, 2, 205, 638, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(111, 2, 150, 471, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(112, 2, 1, 1, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(113, 2, 160, 502, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(114, 2, 252, 876, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(115, 2, 138, 437, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(116, 2, 31, 115, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(117, 2, 277, 1032, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(118, 2, 89, 289, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(119, 2, 50, 171, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(120, 2, 244, 844, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(121, 2, 207, 642, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(122, 2, 40, 141, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(123, 2, 76, 728, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(124, 2, 147, 462, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(125, 2, 248, 862, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(126, 2, 124, 393, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(127, 2, 78, 256, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(128, 2, 72, 238, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(129, 2, 42, 148, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(130, 2, 145, 458, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(131, 2, 136, 1012, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(132, 2, 104, 334, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(133, 2, 278, 1035, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(134, 2, 142, 448, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(135, 2, 137, 433, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(136, 2, 113, 361, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(137, 2, 57, 192, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(138, 2, 93, 301, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(139, 2, 156, 490, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(140, 2, 219, 686, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(141, 2, 119, 1002, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(142, 2, 129, 409, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(143, 2, 79, 725, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(144, 2, 116, 370, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(145, 2, 148, 465, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(146, 2, 215, 667, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(147, 2, 267, 979, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(148, 2, 132, 418, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(149, 2, 202, 629, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(150, 2, 127, 404, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(151, 2, 286, 1092, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(152, 2, 92, 299, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(153, 2, 111, 355, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(154, 2, 122, 387, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(155, 2, 151, 476, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(156, 2, 87, 715, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(157, 2, 203, 632, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(158, 2, 162, 950, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(159, 2, 82, 268, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(160, 2, 211, 656, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(161, 2, 114, 365, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(162, 2, 90, 292, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(163, 2, 52, 178, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(164, 2, 204, 822, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(165, 2, 59, 918, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(166, 2, 107, 1076, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(167, 2, 121, 386, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(168, 2, 256, 894, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(169, 2, 243, 840, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(170, 2, 283, 1055, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(171, 2, 38, 137, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(172, 2, 48, 167, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(173, 2, 97, 314, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(174, 2, 74, 245, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(175, 2, 66, 220, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(176, 2, 143, 450, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(177, 2, 223, 701, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(178, 2, 260, 951, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(179, 2, 33, 121, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(180, 2, 220, 688, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(181, 2, 212, 658, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(182, 2, 95, 306, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(183, 2, 112, 359, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(184, 2, 214, 663, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(185, 2, 285, 1091, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(186, 2, 140, 443, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(187, 2, 270, 987, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(188, 2, 126, 400, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(189, 2, 144, 454, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(190, 2, 155, 486, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(191, 2, 51, 176, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(192, 2, 246, 854, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(193, 2, 39, 140, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(194, 2, 99, 320, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(195, 2, 275, 1023, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(196, 2, 61, 204, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(197, 2, 131, 416, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(198, 2, 41, 146, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(199, 2, 149, 469, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(200, 2, 70, 231, 1, '2019-08-31 22:12:32', '2019-08-31 22:12:32'),
(201, 3, 202, 629, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(202, 3, 95, 306, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(203, 3, 142, 448, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(204, 3, 89, 289, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(205, 3, 111, 355, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(206, 3, 219, 686, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(207, 3, 32, 900, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(208, 3, 68, 225, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(209, 3, 225, 706, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(210, 3, 150, 471, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(211, 3, 277, 1032, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(212, 3, 286, 1092, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(213, 3, 40, 141, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(214, 3, 278, 1035, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(215, 3, 66, 220, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(216, 3, 122, 387, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(217, 3, 143, 450, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(218, 3, 129, 409, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(219, 3, 70, 231, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(220, 3, 211, 656, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(221, 3, 207, 642, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(222, 3, 112, 359, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(223, 3, 99, 320, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(224, 3, 147, 462, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(225, 3, 260, 951, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(226, 3, 144, 454, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(227, 3, 248, 862, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(228, 3, 59, 918, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(229, 3, 90, 292, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(230, 3, 107, 1076, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(231, 3, 267, 979, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(232, 3, 155, 486, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(233, 3, 127, 404, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(234, 3, 108, 345, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(235, 3, 246, 855, 0, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(236, 3, 41, 146, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(237, 3, 74, 245, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(238, 3, 289, 1105, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(239, 3, 121, 386, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(240, 3, 203, 632, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(241, 3, 116, 370, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(242, 3, 1, 1, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(243, 3, 113, 361, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(244, 3, 34, 123, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(245, 3, 285, 1091, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(246, 3, 76, 728, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(247, 3, 93, 301, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(248, 3, 283, 1055, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(249, 3, 223, 701, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(250, 3, 48, 167, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(251, 3, 160, 502, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(252, 3, 42, 148, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(253, 3, 51, 176, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(254, 3, 215, 667, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(255, 3, 162, 950, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(256, 3, 148, 465, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(257, 3, 87, 715, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(258, 3, 104, 334, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(259, 3, 124, 393, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(260, 3, 39, 140, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(261, 3, 137, 433, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(262, 3, 50, 171, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(263, 3, 126, 400, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(264, 3, 244, 844, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(265, 3, 97, 314, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(266, 3, 33, 121, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(267, 3, 156, 490, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(268, 3, 138, 437, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(269, 3, 220, 709, 0, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(270, 3, 58, 195, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(271, 3, 57, 192, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(272, 3, 149, 469, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(273, 3, 140, 443, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(274, 3, 52, 178, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(275, 3, 214, 663, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(276, 3, 119, 1002, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(277, 3, 270, 987, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(278, 3, 252, 876, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(279, 3, 131, 416, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(280, 3, 136, 1012, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(281, 3, 275, 1023, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(282, 3, 132, 418, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(283, 3, 77, 252, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(284, 3, 82, 268, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(285, 3, 212, 658, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(286, 3, 243, 840, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(287, 3, 145, 458, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(288, 3, 92, 299, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(289, 3, 78, 256, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(290, 3, 204, 822, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(291, 3, 38, 137, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(292, 3, 256, 894, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(293, 3, 205, 638, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(294, 3, 72, 238, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(295, 3, 31, 115, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(296, 3, 151, 476, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(297, 3, 61, 204, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(298, 3, 79, 725, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(299, 3, 254, 884, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(300, 3, 114, 365, 1, '2019-09-01 23:41:05', '2019-09-01 23:41:05'),
(301, 4, 129, 408, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(302, 4, 99, 320, 1, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(303, 4, 267, 978, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(304, 4, 244, 844, 1, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(305, 4, 211, 654, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(306, 4, 74, 244, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(307, 4, 219, 710, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(308, 4, 260, 952, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(309, 4, 108, 345, 1, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(310, 4, 155, 487, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(311, 4, 121, 384, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(312, 4, 76, 728, 1, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(313, 4, 202, 627, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(314, 4, 39, 138, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(315, 4, 40, 143, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(316, 4, 283, 1054, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(317, 4, 289, 1105, 1, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(318, 4, 142, 448, 1, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(319, 4, 137, 434, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(320, 4, 87, 282, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(321, 4, 119, 378, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(322, 4, 285, 1089, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(323, 4, 82, 267, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(324, 4, 61, 920, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(325, 4, 225, 705, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(326, 4, 42, 148, 1, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(327, 4, 124, 394, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(328, 4, 207, 644, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(329, 4, 278, 1034, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(330, 4, 162, 507, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(331, 4, 95, 307, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(332, 4, 160, 501, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(333, 4, 252, 878, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(334, 4, 107, 342, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(335, 4, 32, 900, 1, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(336, 4, 204, 635, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(337, 4, 143, 452, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(338, 4, 149, 470, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(339, 4, 116, 369, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(340, 4, 246, 854, 1, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(341, 4, 144, 932, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(342, 4, 127, 402, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(343, 4, 215, 667, 1, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(344, 4, 256, 894, 1, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(345, 4, 77, 727, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(346, 4, 104, 335, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(347, 4, 126, 399, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(348, 4, 51, 176, 1, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(349, 4, 68, 225, 1, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(350, 4, 275, 1022, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(351, 4, 145, 933, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(352, 4, 136, 430, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(353, 4, 52, 177, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(354, 4, 203, 632, 1, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(355, 4, 38, 135, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(356, 4, 59, 200, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(357, 4, 147, 935, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(358, 4, 223, 701, 1, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(359, 4, 220, 688, 1, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(360, 4, 33, 120, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(361, 4, 113, 362, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(362, 4, 48, 165, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(363, 4, 57, 192, 1, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(364, 4, 205, 638, 1, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(365, 4, 66, 220, 1, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(366, 4, 140, 1016, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(367, 4, 114, 364, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(368, 4, 78, 256, 1, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(369, 4, 254, 884, 1, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(370, 4, 79, 260, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(371, 4, 148, 936, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(372, 4, 111, 354, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(373, 4, 34, 123, 1, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(374, 4, 138, 436, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(375, 4, 92, 297, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(376, 4, 93, 1062, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(377, 4, 1, 2, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(378, 4, 41, 146, 1, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(379, 4, 132, 419, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(380, 4, 150, 473, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(381, 4, 212, 658, 1, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(382, 4, 70, 231, 1, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(383, 4, 72, 732, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(384, 4, 31, 115, 1, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(385, 4, 243, 840, 1, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(386, 4, 58, 195, 1, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(387, 4, 50, 171, 1, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(388, 4, 277, 1031, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(389, 4, 112, 358, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(390, 4, 90, 291, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(391, 4, 156, 944, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(392, 4, 214, 663, 1, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(393, 4, 97, 313, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(394, 4, 270, 987, 1, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(395, 4, 131, 415, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(396, 4, 151, 476, 1, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(397, 4, 89, 712, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(398, 4, 286, 1095, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(399, 4, 122, 389, 0, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(400, 4, 248, 862, 1, '2019-09-01 23:54:19', '2019-09-01 23:54:19'),
(401, 5, 78, 726, 0, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(402, 5, 202, 629, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(403, 5, 252, 876, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(404, 5, 39, 140, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(405, 5, 82, 267, 0, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(406, 5, 77, 252, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(407, 5, 87, 284, 0, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(408, 5, 119, 1002, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(409, 5, 40, 141, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(410, 5, 66, 220, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(411, 5, 137, 433, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(412, 5, 114, 1083, 0, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(413, 5, 116, 371, 0, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(414, 5, 113, 360, 0, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(415, 5, 143, 450, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(416, 5, 286, 1095, 0, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(417, 5, 38, 135, 0, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(418, 5, 131, 416, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(419, 5, 214, 663, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(420, 5, 48, 167, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(421, 5, 243, 840, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(422, 5, 95, 306, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(423, 5, 42, 907, 0, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(424, 5, 111, 355, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(425, 5, 219, 685, 0, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(426, 5, 225, 706, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(427, 5, 41, 146, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(428, 5, 31, 114, 0, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(429, 5, 97, 314, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(430, 5, 99, 320, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(431, 5, 156, 490, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(432, 5, 50, 173, 0, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(433, 5, 285, 1091, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(434, 5, 33, 901, 0, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(435, 5, 108, 1077, 0, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(436, 5, 142, 448, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(437, 5, 144, 454, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(438, 5, 52, 178, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(439, 5, 207, 642, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(440, 5, 254, 884, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(441, 5, 246, 854, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(442, 5, 147, 462, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(443, 5, 162, 950, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(444, 5, 278, 1035, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(445, 5, 92, 1061, 0, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(446, 5, 129, 409, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(447, 5, 248, 862, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(448, 5, 138, 437, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(449, 5, 244, 844, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(450, 5, 149, 469, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(451, 5, 74, 245, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(452, 5, 204, 822, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(453, 5, 220, 688, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(454, 5, 275, 1023, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(455, 5, 79, 725, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(456, 5, 70, 231, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(457, 5, 260, 951, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(458, 5, 145, 458, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(459, 5, 212, 658, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(460, 5, 104, 334, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(461, 5, 205, 638, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(462, 5, 93, 301, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(463, 5, 107, 344, 0, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(464, 5, 267, 979, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(465, 5, 215, 667, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(466, 5, 203, 632, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(467, 5, 132, 418, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(468, 5, 72, 238, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(469, 5, 1, 1, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(470, 5, 89, 289, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(471, 5, 59, 918, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(472, 5, 150, 471, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(473, 5, 34, 124, 0, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(474, 5, 112, 359, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(475, 5, 140, 443, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(476, 5, 211, 656, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(477, 5, 283, 1055, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(478, 5, 61, 205, 0, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(479, 5, 58, 197, 0, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(480, 5, 148, 465, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(481, 5, 151, 476, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(482, 5, 76, 728, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(483, 5, 160, 502, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(484, 5, 277, 1032, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(485, 5, 122, 387, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(486, 5, 223, 701, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(487, 5, 57, 192, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(488, 5, 270, 987, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(489, 5, 121, 386, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(490, 5, 289, 1105, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(491, 5, 256, 894, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(492, 5, 127, 404, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(493, 5, 51, 176, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(494, 5, 32, 900, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(495, 5, 126, 400, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(496, 5, 68, 679, 0, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(497, 5, 124, 393, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(498, 5, 136, 1012, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(499, 5, 90, 292, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(500, 5, 155, 486, 1, '2019-09-02 02:25:18', '2019-09-02 02:25:18'),
(501, 6, 113, 361, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(502, 6, 79, 725, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(503, 6, 246, 854, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(504, 6, 220, 688, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(505, 6, 99, 319, 0, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(506, 6, 50, 171, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(507, 6, 225, 706, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(508, 6, 215, 667, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(509, 6, 151, 476, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(510, 6, 61, 204, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(511, 6, 77, 252, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(512, 6, 140, 443, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(513, 6, 150, 938, 0, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(514, 6, 256, 894, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(515, 6, 214, 665, 0, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(516, 6, 1, 3, 0, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(517, 6, 119, 380, 0, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(518, 6, 248, 862, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(519, 6, 31, 115, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(520, 6, 52, 178, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(521, 6, 114, 1083, 0, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(522, 6, 97, 313, 0, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(523, 6, 66, 220, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(524, 6, 252, 879, 0, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(525, 6, 286, 1092, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(526, 6, 87, 715, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(527, 6, 122, 387, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(528, 6, 78, 256, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(529, 6, 144, 454, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(530, 6, 243, 843, 0, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(531, 6, 283, 1055, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(532, 6, 149, 469, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(533, 6, 205, 638, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(534, 6, 116, 371, 0, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(535, 6, 260, 952, 0, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(536, 6, 92, 1061, 0, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(537, 6, 95, 306, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(538, 6, 156, 490, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(539, 6, 70, 231, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(540, 6, 40, 141, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(541, 6, 244, 844, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(542, 6, 132, 418, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(543, 6, 138, 436, 0, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(544, 6, 108, 345, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(545, 6, 42, 148, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(546, 6, 270, 988, 0, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(547, 6, 212, 658, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(548, 6, 207, 642, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(549, 6, 111, 355, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(550, 6, 285, 1091, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(551, 6, 277, 1029, 0, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(552, 6, 90, 292, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(553, 6, 204, 822, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(554, 6, 137, 433, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(555, 6, 202, 629, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(556, 6, 147, 462, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(557, 6, 107, 1076, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(558, 6, 39, 140, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(559, 6, 112, 358, 0, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(560, 6, 48, 167, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(561, 6, 51, 176, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(562, 6, 104, 333, 0, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(563, 6, 143, 450, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(564, 6, 127, 404, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(565, 6, 33, 121, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(566, 6, 211, 656, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(567, 6, 74, 245, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(568, 6, 160, 502, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(569, 6, 121, 1004, 0, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(570, 6, 38, 137, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(571, 6, 57, 192, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(572, 6, 41, 145, 0, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(573, 6, 142, 448, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(574, 6, 82, 268, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(575, 6, 148, 465, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(576, 6, 68, 225, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(577, 6, 131, 414, 0, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(578, 6, 34, 123, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(579, 6, 289, 1105, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(580, 6, 162, 950, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(581, 6, 72, 238, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(582, 6, 203, 632, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(583, 6, 124, 394, 0, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(584, 6, 59, 199, 0, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(585, 6, 254, 884, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(586, 6, 126, 401, 0, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(587, 6, 219, 686, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(588, 6, 89, 289, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(589, 6, 223, 701, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(590, 6, 155, 486, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(591, 6, 32, 900, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(592, 6, 129, 409, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(593, 6, 136, 430, 0, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(594, 6, 58, 195, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(595, 6, 267, 979, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(596, 6, 76, 728, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(597, 6, 145, 458, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(598, 6, 278, 1035, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(599, 6, 275, 1023, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(600, 6, 93, 301, 1, '2019-09-02 02:33:34', '2019-09-02 02:33:34'),
(601, 7, 243, 840, 1, '2019-09-02 02:39:37', '2019-09-02 02:39:37'),
(602, 7, 68, 225, 1, '2019-09-02 02:39:37', '2019-09-02 02:39:37'),
(603, 7, 244, 844, 1, '2019-09-02 02:39:37', '2019-09-02 02:39:37'),
(604, 7, 90, 292, 1, '2019-09-02 02:39:37', '2019-09-02 02:39:37'),
(605, 7, 89, 289, 1, '2019-09-02 02:39:37', '2019-09-02 02:39:37'),
(606, 7, 138, 437, 1, '2019-09-02 02:39:37', '2019-09-02 02:39:37'),
(607, 7, 252, 876, 1, '2019-09-02 02:39:37', '2019-09-02 02:39:37'),
(608, 7, 246, 854, 1, '2019-09-02 02:39:37', '2019-09-02 02:39:37'),
(609, 7, 126, 400, 1, '2019-09-02 02:39:37', '2019-09-02 02:39:37'),
(610, 7, 72, 238, 1, '2019-09-02 02:39:37', '2019-09-02 02:39:37'),
(611, 7, 202, 820, 0, '2019-09-02 02:39:37', '2019-09-02 02:39:37'),
(612, 7, 214, 663, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(613, 7, 220, 688, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(614, 7, 212, 658, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(615, 7, 275, 1023, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(616, 7, 51, 176, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(617, 7, 48, 167, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(618, 7, 223, 701, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(619, 7, 270, 989, 0, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(620, 7, 149, 468, 0, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(621, 7, 124, 393, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(622, 7, 203, 632, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(623, 7, 41, 146, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(624, 7, 79, 725, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(625, 7, 142, 930, 0, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(626, 7, 74, 245, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(627, 7, 289, 1105, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(628, 7, 285, 1091, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(629, 7, 140, 443, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(630, 7, 131, 416, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(631, 7, 119, 379, 0, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(632, 7, 113, 361, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(633, 7, 39, 140, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(634, 7, 286, 1092, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(635, 7, 160, 948, 0, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(636, 7, 114, 365, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(637, 7, 50, 171, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(638, 7, 215, 667, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(639, 7, 61, 204, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(640, 7, 278, 1033, 0, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(641, 7, 162, 508, 0, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(642, 7, 87, 715, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(643, 7, 52, 178, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(644, 7, 59, 918, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(645, 7, 155, 943, 0, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(646, 7, 77, 252, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(647, 7, 92, 299, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(648, 7, 283, 1054, 0, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(649, 7, 219, 686, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(650, 7, 225, 706, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(651, 7, 207, 642, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(652, 7, 150, 473, 0, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(653, 7, 38, 137, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(654, 7, 144, 454, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(655, 7, 108, 345, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(656, 7, 256, 894, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(657, 7, 99, 320, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(658, 7, 97, 314, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(659, 7, 95, 306, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(660, 7, 82, 268, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(661, 7, 137, 1013, 0, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(662, 7, 151, 476, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(663, 7, 254, 884, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(664, 7, 143, 452, 0, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(665, 7, 145, 933, 0, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(666, 7, 78, 256, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(667, 7, 34, 123, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(668, 7, 127, 402, 0, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(669, 7, 121, 385, 0, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(670, 7, 93, 301, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(671, 7, 57, 192, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(672, 7, 156, 490, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(673, 7, 132, 1009, 0, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(674, 7, 211, 656, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(675, 7, 33, 121, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(676, 7, 1, 1, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(677, 7, 204, 822, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(678, 7, 148, 465, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(679, 7, 260, 951, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(680, 7, 40, 141, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(681, 7, 122, 389, 0, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(682, 7, 129, 410, 0, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(683, 7, 32, 900, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(684, 7, 31, 115, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(685, 7, 58, 195, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(686, 7, 267, 979, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(687, 7, 42, 148, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(688, 7, 205, 638, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(689, 7, 248, 862, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(690, 7, 277, 1030, 0, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(691, 7, 76, 728, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(692, 7, 70, 231, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(693, 7, 66, 220, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(694, 7, 147, 462, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(695, 7, 136, 429, 0, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(696, 7, 104, 334, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(697, 7, 107, 1076, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(698, 7, 116, 370, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(699, 7, 112, 359, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(700, 7, 111, 355, 1, '2019-09-02 02:39:38', '2019-09-02 02:39:38'),
(701, 8, 202, 627, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(702, 8, 108, 346, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(703, 8, 42, 907, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(704, 8, 104, 333, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(705, 8, 57, 194, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(706, 8, 124, 393, 1, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(707, 8, 32, 118, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(708, 8, 145, 456, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(709, 8, 267, 978, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(710, 8, 277, 1031, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(711, 8, 142, 930, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(712, 8, 243, 841, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(713, 8, 38, 136, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(714, 8, 219, 686, 1, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(715, 8, 34, 902, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(716, 8, 90, 292, 1, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(717, 8, 87, 715, 1, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(718, 8, 283, 1053, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(719, 8, 122, 388, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(720, 8, 285, 1088, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(721, 8, 121, 384, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(722, 8, 113, 1082, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(723, 8, 140, 441, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(724, 8, 79, 725, 1, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(725, 8, 162, 950, 1, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(726, 8, 212, 659, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(727, 8, 260, 952, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(728, 8, 127, 402, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(729, 8, 99, 1068, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(730, 8, 95, 308, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(731, 8, 286, 1093, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(732, 8, 131, 414, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(733, 8, 270, 987, 1, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(734, 8, 138, 436, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(735, 8, 248, 861, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(736, 8, 289, 1104, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(737, 8, 244, 846, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(738, 8, 89, 288, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(739, 8, 82, 269, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(740, 8, 33, 901, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(741, 8, 52, 177, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(742, 8, 112, 358, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(743, 8, 223, 700, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(744, 8, 215, 833, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(745, 8, 39, 138, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(746, 8, 136, 1012, 1, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(747, 8, 220, 709, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(748, 8, 59, 198, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50');
INSERT INTO `assessment_details` (`id`, `assessment_id`, `test_question_id`, `choice_id`, `is_correct`, `created_at`, `updated_at`) VALUES
(749, 8, 61, 204, 1, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(750, 8, 97, 312, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(751, 8, 1, 3, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(752, 8, 203, 821, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(753, 8, 214, 665, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(754, 8, 137, 432, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(755, 8, 70, 680, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(756, 8, 48, 165, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(757, 8, 74, 244, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(758, 8, 256, 892, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(759, 8, 50, 172, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(760, 8, 77, 253, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(761, 8, 116, 369, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(762, 8, 207, 644, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(763, 8, 40, 141, 1, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(764, 8, 275, 1021, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(765, 8, 148, 467, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(766, 8, 225, 707, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(767, 8, 278, 1036, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(768, 8, 149, 468, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(769, 8, 143, 931, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(770, 8, 246, 855, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(771, 8, 41, 146, 1, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(772, 8, 31, 116, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(773, 8, 252, 877, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(774, 8, 107, 344, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(775, 8, 93, 302, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(776, 8, 151, 476, 1, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(777, 8, 129, 409, 1, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(778, 8, 155, 488, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(779, 8, 72, 237, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(780, 8, 68, 226, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(781, 8, 58, 197, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(782, 8, 51, 174, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(783, 8, 254, 887, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(784, 8, 147, 935, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(785, 8, 144, 453, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(786, 8, 205, 637, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(787, 8, 66, 220, 1, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(788, 8, 132, 419, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(789, 8, 160, 501, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(790, 8, 150, 473, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(791, 8, 211, 829, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(792, 8, 114, 365, 1, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(793, 8, 76, 728, 1, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(794, 8, 156, 489, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(795, 8, 119, 378, 0, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(796, 8, 126, 400, 1, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(797, 8, 204, 822, 1, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(798, 8, 111, 355, 1, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(799, 8, 78, 256, 1, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(800, 8, 92, 299, 1, '2019-09-02 02:48:50', '2019-09-02 02:48:50'),
(801, 9, 204, 822, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(802, 9, 99, 319, 0, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(803, 9, 246, 854, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(804, 9, 33, 120, 0, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(805, 9, 112, 357, 0, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(806, 9, 76, 728, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(807, 9, 114, 363, 0, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(808, 9, 254, 884, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(809, 9, 1, 2, 0, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(810, 9, 72, 732, 0, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(811, 9, 104, 1073, 0, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(812, 9, 87, 282, 0, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(813, 9, 119, 378, 0, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(814, 9, 40, 142, 0, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(815, 9, 162, 950, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(816, 9, 285, 1091, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(817, 9, 136, 1012, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(818, 9, 212, 658, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(819, 9, 74, 730, 0, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(820, 9, 256, 894, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(821, 9, 151, 476, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(822, 9, 289, 1105, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(823, 9, 243, 840, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(824, 9, 150, 471, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(825, 9, 70, 232, 0, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(826, 9, 160, 502, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(827, 9, 89, 289, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(828, 9, 143, 450, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(829, 9, 48, 165, 0, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(830, 9, 270, 987, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(831, 9, 223, 701, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(832, 9, 131, 416, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(833, 9, 107, 1076, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(834, 9, 267, 979, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(835, 9, 155, 943, 0, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(836, 9, 286, 1092, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(837, 9, 90, 292, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(838, 9, 113, 361, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(839, 9, 38, 136, 0, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(840, 9, 147, 935, 0, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(841, 9, 51, 175, 0, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(842, 9, 79, 725, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(843, 9, 278, 1033, 0, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(844, 9, 127, 402, 0, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(845, 9, 202, 629, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(846, 9, 244, 844, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(847, 9, 207, 642, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(848, 9, 149, 468, 0, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(849, 9, 95, 306, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(850, 9, 61, 920, 0, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(851, 9, 156, 491, 0, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(852, 9, 219, 686, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(853, 9, 93, 301, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(854, 9, 203, 632, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(855, 9, 32, 119, 0, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(856, 9, 59, 198, 0, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(857, 9, 214, 663, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(858, 9, 58, 917, 0, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(859, 9, 215, 667, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(860, 9, 138, 437, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(861, 9, 148, 466, 0, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(862, 9, 145, 457, 0, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(863, 9, 97, 314, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(864, 9, 126, 400, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(865, 9, 108, 346, 0, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(866, 9, 42, 907, 0, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(867, 9, 124, 393, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(868, 9, 137, 433, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(869, 9, 121, 386, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(870, 9, 205, 638, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(871, 9, 220, 688, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(872, 9, 132, 418, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(873, 9, 252, 876, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(874, 9, 140, 443, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(875, 9, 277, 1031, 0, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(876, 9, 275, 1023, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(877, 9, 248, 863, 0, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(878, 9, 82, 268, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(879, 9, 66, 220, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(880, 9, 225, 706, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(881, 9, 52, 177, 0, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(882, 9, 68, 225, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(883, 9, 111, 1080, 0, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(884, 9, 41, 144, 0, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(885, 9, 211, 654, 0, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(886, 9, 57, 193, 0, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(887, 9, 50, 172, 0, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(888, 9, 129, 409, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(889, 9, 39, 139, 0, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(890, 9, 283, 1055, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(891, 9, 31, 114, 0, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(892, 9, 77, 727, 0, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(893, 9, 116, 369, 0, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(894, 9, 92, 297, 0, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(895, 9, 144, 453, 0, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(896, 9, 34, 902, 0, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(897, 9, 78, 256, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(898, 9, 122, 387, 1, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(899, 9, 142, 930, 0, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(900, 9, 260, 954, 0, '2019-09-02 02:55:20', '2019-09-02 02:55:20'),
(901, 10, 34, 124, 0, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(902, 10, 203, 632, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(903, 10, 160, 502, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(904, 10, 79, 260, 0, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(905, 10, 151, 476, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(906, 10, 1, 1, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(907, 10, 286, 1092, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(908, 10, 252, 878, 0, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(909, 10, 205, 638, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(910, 10, 48, 166, 0, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(911, 10, 97, 314, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(912, 10, 82, 268, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(913, 10, 121, 385, 0, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(914, 10, 93, 301, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(915, 10, 95, 306, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(916, 10, 113, 361, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(917, 10, 147, 462, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(918, 10, 144, 454, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(919, 10, 42, 907, 0, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(920, 10, 244, 844, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(921, 10, 260, 951, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(922, 10, 104, 334, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(923, 10, 267, 979, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(924, 10, 225, 706, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(925, 10, 155, 486, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(926, 10, 38, 136, 0, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(927, 10, 277, 1030, 0, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(928, 10, 289, 1105, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(929, 10, 126, 401, 0, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(930, 10, 107, 1076, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(931, 10, 243, 842, 0, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(932, 10, 87, 283, 0, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(933, 10, 278, 1036, 0, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(934, 10, 61, 205, 0, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(935, 10, 124, 393, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(936, 10, 148, 465, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(937, 10, 149, 469, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(938, 10, 40, 143, 0, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(939, 10, 89, 288, 0, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(940, 10, 59, 918, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(941, 10, 74, 245, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(942, 10, 150, 938, 0, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(943, 10, 51, 176, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(944, 10, 212, 659, 0, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(945, 10, 220, 689, 0, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(946, 10, 131, 416, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(947, 10, 283, 1055, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(948, 10, 127, 404, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(949, 10, 223, 699, 0, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(950, 10, 39, 140, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(951, 10, 41, 146, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(952, 10, 145, 456, 0, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(953, 10, 275, 1023, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(954, 10, 57, 192, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(955, 10, 162, 508, 0, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(956, 10, 114, 365, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(957, 10, 256, 894, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(958, 10, 68, 679, 0, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(959, 10, 137, 433, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(960, 10, 156, 944, 0, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(961, 10, 32, 900, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(962, 10, 58, 195, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(963, 10, 143, 450, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(964, 10, 50, 171, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(965, 10, 31, 115, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(966, 10, 204, 633, 0, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(967, 10, 219, 684, 0, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(968, 10, 72, 238, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(969, 10, 202, 629, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(970, 10, 33, 121, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(971, 10, 254, 884, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(972, 10, 70, 232, 0, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(973, 10, 90, 292, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(974, 10, 129, 409, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(975, 10, 214, 663, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(976, 10, 285, 1091, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(977, 10, 112, 359, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(978, 10, 66, 220, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(979, 10, 140, 443, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(980, 10, 132, 418, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(981, 10, 78, 256, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(982, 10, 246, 854, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(983, 10, 211, 656, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(984, 10, 116, 370, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(985, 10, 92, 299, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(986, 10, 76, 728, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(987, 10, 248, 861, 0, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(988, 10, 142, 449, 0, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(989, 10, 108, 345, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(990, 10, 52, 178, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(991, 10, 111, 355, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(992, 10, 119, 1002, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(993, 10, 99, 320, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(994, 10, 122, 387, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(995, 10, 138, 437, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(996, 10, 136, 1012, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(997, 10, 77, 254, 0, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(998, 10, 207, 643, 0, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(999, 10, 215, 668, 0, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(1000, 10, 270, 987, 1, '2019-09-02 03:09:06', '2019-09-02 03:09:06'),
(1001, 11, 108, 345, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1002, 11, 87, 282, 0, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1003, 11, 150, 471, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1004, 11, 156, 491, 0, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1005, 11, 59, 918, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1006, 11, 124, 393, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1007, 11, 127, 404, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1008, 11, 142, 930, 0, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1009, 11, 286, 1092, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1010, 11, 79, 725, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1011, 11, 113, 361, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1012, 11, 89, 289, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1013, 11, 68, 226, 0, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1014, 11, 270, 987, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1015, 11, 34, 123, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1016, 11, 76, 728, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1017, 11, 145, 457, 0, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1018, 11, 219, 710, 0, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1019, 11, 267, 979, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1020, 11, 144, 455, 0, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1021, 11, 260, 951, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1022, 11, 70, 231, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1023, 11, 277, 1032, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1024, 11, 246, 852, 0, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1025, 11, 143, 450, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1026, 11, 289, 1105, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1027, 11, 132, 418, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1028, 11, 203, 632, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1029, 11, 41, 146, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1030, 11, 140, 443, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1031, 11, 61, 204, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1032, 11, 40, 141, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1033, 11, 149, 469, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1034, 11, 95, 306, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1035, 11, 33, 121, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1036, 11, 93, 301, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1037, 11, 58, 195, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1038, 11, 211, 656, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1039, 11, 66, 221, 0, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1040, 11, 74, 245, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1041, 11, 252, 876, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1042, 11, 39, 906, 0, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1043, 11, 204, 822, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1044, 11, 225, 706, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1045, 11, 97, 314, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1046, 11, 99, 320, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1047, 11, 223, 701, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1048, 11, 148, 465, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1049, 11, 92, 299, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1050, 11, 248, 862, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1051, 11, 205, 636, 0, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1052, 11, 111, 355, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1053, 11, 202, 820, 0, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1054, 11, 160, 502, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1055, 11, 48, 166, 0, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1056, 11, 283, 1055, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1057, 11, 212, 658, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1058, 11, 254, 884, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1059, 11, 112, 359, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1060, 11, 147, 462, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1061, 11, 136, 1012, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1062, 11, 131, 416, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1063, 11, 256, 894, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1064, 11, 215, 668, 0, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1065, 11, 137, 433, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1066, 11, 78, 255, 0, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1067, 11, 31, 115, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1068, 11, 119, 1002, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1069, 11, 51, 176, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1070, 11, 90, 292, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1071, 11, 214, 663, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1072, 11, 121, 386, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1073, 11, 1, 1, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1074, 11, 52, 178, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1075, 11, 151, 476, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1076, 11, 42, 148, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1077, 11, 38, 137, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1078, 11, 244, 845, 0, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1079, 11, 116, 370, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1080, 11, 220, 709, 0, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1081, 11, 275, 1023, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1082, 11, 122, 387, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1083, 11, 32, 900, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1084, 11, 129, 409, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1085, 11, 104, 334, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1086, 11, 82, 268, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1087, 11, 155, 486, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1088, 11, 50, 171, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1089, 11, 278, 1035, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1090, 11, 207, 643, 0, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1091, 11, 72, 238, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1092, 11, 138, 437, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1093, 11, 126, 400, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1094, 11, 162, 950, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1095, 11, 107, 1076, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1096, 11, 114, 365, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1097, 11, 243, 840, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1098, 11, 285, 1091, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1099, 11, 77, 252, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1100, 11, 57, 192, 1, '2019-09-02 03:18:49', '2019-09-02 03:18:49'),
(1101, 12, 107, 1076, 1, '2019-09-02 03:26:37', '2019-09-02 03:26:37'),
(1102, 12, 283, 1055, 1, '2019-09-02 03:26:37', '2019-09-02 03:26:37'),
(1103, 12, 260, 951, 1, '2019-09-02 03:26:37', '2019-09-02 03:26:37'),
(1104, 12, 285, 1091, 1, '2019-09-02 03:26:37', '2019-09-02 03:26:37'),
(1105, 12, 132, 418, 1, '2019-09-02 03:26:37', '2019-09-02 03:26:37'),
(1106, 12, 286, 1093, 0, '2019-09-02 03:26:37', '2019-09-02 03:26:37'),
(1107, 12, 41, 146, 1, '2019-09-02 03:26:37', '2019-09-02 03:26:37'),
(1108, 12, 68, 227, 0, '2019-09-02 03:26:37', '2019-09-02 03:26:37'),
(1109, 12, 32, 900, 1, '2019-09-02 03:26:37', '2019-09-02 03:26:37'),
(1110, 12, 162, 950, 1, '2019-09-02 03:26:37', '2019-09-02 03:26:37'),
(1111, 12, 211, 656, 1, '2019-09-02 03:26:37', '2019-09-02 03:26:37'),
(1112, 12, 254, 884, 1, '2019-09-02 03:26:37', '2019-09-02 03:26:37'),
(1113, 12, 99, 320, 1, '2019-09-02 03:26:37', '2019-09-02 03:26:37'),
(1114, 12, 151, 476, 1, '2019-09-02 03:26:37', '2019-09-02 03:26:37'),
(1115, 12, 145, 456, 0, '2019-09-02 03:26:37', '2019-09-02 03:26:37'),
(1116, 12, 256, 894, 1, '2019-09-02 03:26:37', '2019-09-02 03:26:37'),
(1117, 12, 155, 486, 1, '2019-09-02 03:26:37', '2019-09-02 03:26:37'),
(1118, 12, 127, 404, 1, '2019-09-02 03:26:37', '2019-09-02 03:26:37'),
(1119, 12, 248, 862, 1, '2019-09-02 03:26:37', '2019-09-02 03:26:37'),
(1120, 12, 225, 706, 1, '2019-09-02 03:26:37', '2019-09-02 03:26:37'),
(1121, 12, 124, 393, 1, '2019-09-02 03:26:37', '2019-09-02 03:26:37'),
(1122, 12, 138, 437, 1, '2019-09-02 03:26:37', '2019-09-02 03:26:37'),
(1123, 12, 278, 1035, 1, '2019-09-02 03:26:37', '2019-09-02 03:26:37'),
(1124, 12, 97, 314, 1, '2019-09-02 03:26:37', '2019-09-02 03:26:37'),
(1125, 12, 61, 204, 1, '2019-09-02 03:26:37', '2019-09-02 03:26:37'),
(1126, 12, 111, 355, 1, '2019-09-02 03:26:37', '2019-09-02 03:26:37'),
(1127, 12, 246, 854, 1, '2019-09-02 03:26:37', '2019-09-02 03:26:37'),
(1128, 12, 59, 918, 1, '2019-09-02 03:26:37', '2019-09-02 03:26:37'),
(1129, 12, 147, 462, 1, '2019-09-02 03:26:37', '2019-09-02 03:26:37'),
(1130, 12, 243, 841, 0, '2019-09-02 03:26:37', '2019-09-02 03:26:37'),
(1131, 12, 1, 1, 1, '2019-09-02 03:26:37', '2019-09-02 03:26:37'),
(1132, 12, 78, 256, 1, '2019-09-02 03:26:37', '2019-09-02 03:26:37'),
(1133, 12, 212, 830, 0, '2019-09-02 03:26:37', '2019-09-02 03:26:37'),
(1134, 12, 148, 465, 1, '2019-09-02 03:26:37', '2019-09-02 03:26:37'),
(1135, 12, 267, 979, 1, '2019-09-02 03:26:37', '2019-09-02 03:26:37'),
(1136, 12, 48, 167, 1, '2019-09-02 03:26:37', '2019-09-02 03:26:37'),
(1137, 12, 252, 876, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1138, 12, 31, 115, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1139, 12, 66, 220, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1140, 12, 42, 148, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1141, 12, 95, 306, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1142, 12, 244, 844, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1143, 12, 275, 1023, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1144, 12, 34, 123, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1145, 12, 156, 490, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1146, 12, 87, 715, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1147, 12, 74, 245, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1148, 12, 57, 192, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1149, 12, 76, 251, 0, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1150, 12, 131, 416, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1151, 12, 92, 299, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1152, 12, 51, 176, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1153, 12, 160, 503, 0, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1154, 12, 215, 667, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1155, 12, 33, 121, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1156, 12, 113, 362, 0, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1157, 12, 207, 642, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1158, 12, 108, 345, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1159, 12, 202, 629, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1160, 12, 72, 238, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1161, 12, 205, 638, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1162, 12, 93, 301, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1163, 12, 114, 365, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1164, 12, 112, 359, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1165, 12, 203, 632, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1166, 12, 136, 1012, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1167, 12, 116, 370, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1168, 12, 122, 387, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1169, 12, 79, 725, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1170, 12, 39, 140, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1171, 12, 50, 171, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1172, 12, 121, 384, 0, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1173, 12, 270, 987, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1174, 12, 149, 469, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1175, 12, 82, 268, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1176, 12, 150, 471, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1177, 12, 219, 686, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1178, 12, 204, 822, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1179, 12, 104, 334, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1180, 12, 58, 195, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1181, 12, 137, 433, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1182, 12, 70, 231, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1183, 12, 90, 292, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1184, 12, 223, 701, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1185, 12, 126, 400, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1186, 12, 144, 454, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1187, 12, 142, 448, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1188, 12, 40, 143, 0, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1189, 12, 214, 664, 0, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1190, 12, 89, 289, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1191, 12, 38, 137, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1192, 12, 119, 1002, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1193, 12, 52, 179, 0, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1194, 12, 289, 1105, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1195, 12, 220, 709, 0, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1196, 12, 143, 450, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1197, 12, 277, 1032, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1198, 12, 140, 1016, 0, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1199, 12, 77, 252, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1200, 12, 129, 409, 1, '2019-09-02 03:26:38', '2019-09-02 03:26:38'),
(1201, 13, 59, 918, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1202, 13, 148, 465, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1203, 13, 277, 1032, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1204, 13, 283, 1053, 0, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1205, 13, 147, 462, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1206, 13, 40, 142, 0, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1207, 13, 77, 252, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1208, 13, 137, 1013, 0, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1209, 13, 278, 1036, 0, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1210, 13, 97, 1066, 0, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1211, 13, 132, 417, 0, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1212, 13, 127, 404, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1213, 13, 145, 458, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1214, 13, 160, 502, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1215, 13, 275, 1023, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1216, 13, 70, 231, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1217, 13, 42, 148, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1218, 13, 126, 400, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1219, 13, 89, 289, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1220, 13, 122, 387, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1221, 13, 74, 245, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1222, 13, 207, 644, 0, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1223, 13, 114, 365, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1224, 13, 214, 663, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1225, 13, 76, 728, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1226, 13, 155, 486, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1227, 13, 58, 195, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1228, 13, 142, 448, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1229, 13, 285, 1091, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1230, 13, 1, 1, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1231, 13, 66, 220, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1232, 13, 252, 876, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1233, 13, 87, 715, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1234, 13, 116, 370, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1235, 13, 243, 840, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1236, 13, 68, 225, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1237, 13, 286, 1092, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1238, 13, 248, 862, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1239, 13, 48, 167, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1240, 13, 52, 178, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1241, 13, 144, 454, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1242, 13, 223, 701, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1243, 13, 121, 386, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1244, 13, 289, 1105, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1245, 13, 156, 490, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1246, 13, 33, 121, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1247, 13, 205, 638, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1248, 13, 219, 686, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1249, 13, 119, 1002, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1250, 13, 260, 951, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1251, 13, 92, 299, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1252, 13, 108, 346, 0, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1253, 13, 57, 193, 0, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1254, 13, 162, 950, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1255, 13, 203, 821, 0, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1256, 13, 41, 146, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1257, 13, 61, 204, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1258, 13, 112, 359, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1259, 13, 124, 393, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1260, 13, 72, 238, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1261, 13, 204, 822, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1262, 13, 104, 334, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1263, 13, 140, 443, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1264, 13, 267, 979, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1265, 13, 138, 437, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1266, 13, 38, 137, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1267, 13, 78, 256, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1268, 13, 82, 268, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1269, 13, 90, 292, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1270, 13, 244, 844, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1271, 13, 212, 658, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1272, 13, 32, 900, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1273, 13, 113, 361, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1274, 13, 220, 688, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1275, 13, 254, 887, 0, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1276, 13, 79, 725, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1277, 13, 50, 171, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1278, 13, 111, 355, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1279, 13, 246, 854, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1280, 13, 151, 476, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1281, 13, 215, 667, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1282, 13, 51, 176, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1283, 13, 39, 140, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1284, 13, 34, 123, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1285, 13, 136, 1012, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1286, 13, 131, 416, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1287, 13, 256, 895, 0, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1288, 13, 99, 320, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1289, 13, 202, 629, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1290, 13, 149, 469, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1291, 13, 95, 306, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1292, 13, 93, 1062, 0, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1293, 13, 107, 1076, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1294, 13, 31, 115, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1295, 13, 270, 987, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1296, 13, 150, 471, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1297, 13, 143, 450, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1298, 13, 211, 656, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1299, 13, 225, 706, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1300, 13, 129, 409, 1, '2019-09-02 03:34:35', '2019-09-02 03:34:35'),
(1301, 14, 140, 443, 1, '2019-09-02 03:44:06', '2019-09-02 03:44:06'),
(1302, 14, 137, 432, 0, '2019-09-02 03:44:06', '2019-09-02 03:44:06'),
(1303, 14, 275, 1023, 1, '2019-09-02 03:44:06', '2019-09-02 03:44:06'),
(1304, 14, 145, 456, 0, '2019-09-02 03:44:06', '2019-09-02 03:44:06'),
(1305, 14, 138, 437, 1, '2019-09-02 03:44:06', '2019-09-02 03:44:06'),
(1306, 14, 78, 257, 0, '2019-09-02 03:44:06', '2019-09-02 03:44:06'),
(1307, 14, 89, 288, 0, '2019-09-02 03:44:06', '2019-09-02 03:44:06'),
(1308, 14, 151, 476, 1, '2019-09-02 03:44:06', '2019-09-02 03:44:06'),
(1309, 14, 126, 400, 1, '2019-09-02 03:44:06', '2019-09-02 03:44:06'),
(1310, 14, 95, 1064, 0, '2019-09-02 03:44:06', '2019-09-02 03:44:06'),
(1311, 14, 204, 822, 1, '2019-09-02 03:44:06', '2019-09-02 03:44:06'),
(1312, 14, 277, 1031, 0, '2019-09-02 03:44:06', '2019-09-02 03:44:06'),
(1313, 14, 212, 658, 1, '2019-09-02 03:44:06', '2019-09-02 03:44:06'),
(1314, 14, 82, 269, 0, '2019-09-02 03:44:06', '2019-09-02 03:44:06'),
(1315, 14, 57, 192, 1, '2019-09-02 03:44:06', '2019-09-02 03:44:06'),
(1316, 14, 99, 319, 0, '2019-09-02 03:44:06', '2019-09-02 03:44:06'),
(1317, 14, 41, 146, 1, '2019-09-02 03:44:06', '2019-09-02 03:44:06'),
(1318, 14, 121, 386, 1, '2019-09-02 03:44:06', '2019-09-02 03:44:06'),
(1319, 14, 270, 987, 1, '2019-09-02 03:44:06', '2019-09-02 03:44:06'),
(1320, 14, 147, 462, 1, '2019-09-02 03:44:06', '2019-09-02 03:44:06'),
(1321, 14, 72, 239, 0, '2019-09-02 03:44:06', '2019-09-02 03:44:06'),
(1322, 14, 225, 707, 0, '2019-09-02 03:44:06', '2019-09-02 03:44:06'),
(1323, 14, 162, 950, 1, '2019-09-02 03:44:06', '2019-09-02 03:44:06'),
(1324, 14, 87, 282, 0, '2019-09-02 03:44:06', '2019-09-02 03:44:06'),
(1325, 14, 246, 854, 1, '2019-09-02 03:44:06', '2019-09-02 03:44:06'),
(1326, 14, 107, 1076, 1, '2019-09-02 03:44:06', '2019-09-02 03:44:06'),
(1327, 14, 267, 979, 1, '2019-09-02 03:44:06', '2019-09-02 03:44:06'),
(1328, 14, 61, 204, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1329, 14, 70, 233, 0, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1330, 14, 77, 252, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1331, 14, 1, 1, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1332, 14, 205, 638, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1333, 14, 93, 301, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1334, 14, 142, 448, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1335, 14, 285, 1091, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1336, 14, 42, 147, 0, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1337, 14, 76, 728, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1338, 14, 256, 894, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1339, 14, 136, 1012, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1340, 14, 124, 393, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1341, 14, 92, 299, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1342, 14, 283, 1055, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1343, 14, 51, 174, 0, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1344, 14, 31, 116, 0, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1345, 14, 59, 198, 0, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1346, 14, 202, 627, 0, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1347, 14, 211, 656, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1348, 14, 254, 886, 0, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1349, 14, 38, 135, 0, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1350, 14, 144, 453, 0, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1351, 14, 97, 314, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1352, 14, 34, 123, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1353, 14, 122, 387, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1354, 14, 289, 1105, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1355, 14, 66, 219, 0, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1356, 14, 214, 663, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1357, 14, 219, 710, 0, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1358, 14, 32, 900, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1359, 14, 160, 502, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1360, 14, 129, 409, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1361, 14, 132, 418, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1362, 14, 127, 404, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1363, 14, 223, 701, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1364, 14, 278, 1035, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1365, 14, 50, 171, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1366, 14, 150, 471, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1367, 14, 244, 844, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1368, 14, 68, 225, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1369, 14, 111, 356, 0, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1370, 14, 116, 370, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1371, 14, 52, 178, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1372, 14, 286, 1092, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1373, 14, 104, 334, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1374, 14, 149, 469, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1375, 14, 48, 167, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1376, 14, 33, 121, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1377, 14, 155, 943, 0, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1378, 14, 215, 667, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1379, 14, 207, 642, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1380, 14, 108, 345, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1381, 14, 243, 840, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1382, 14, 220, 688, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1383, 14, 203, 630, 0, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1384, 14, 156, 490, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1385, 14, 74, 245, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1386, 14, 39, 906, 0, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1387, 14, 131, 415, 0, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1388, 14, 260, 951, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1389, 14, 252, 877, 0, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1390, 14, 148, 465, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1391, 14, 58, 197, 0, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1392, 14, 90, 293, 0, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1393, 14, 114, 365, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1394, 14, 40, 141, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1395, 14, 248, 860, 0, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1396, 14, 79, 725, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1397, 14, 119, 1002, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1398, 14, 113, 360, 0, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1399, 14, 112, 359, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1400, 14, 143, 450, 1, '2019-09-02 03:44:07', '2019-09-02 03:44:07'),
(1401, 15, 114, 365, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1402, 15, 72, 239, 0, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1403, 15, 48, 167, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1404, 15, 122, 387, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1405, 15, 256, 894, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1406, 15, 59, 918, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1407, 15, 108, 345, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1408, 15, 148, 465, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1409, 15, 74, 245, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1410, 15, 203, 632, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1411, 15, 90, 292, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1412, 15, 107, 1076, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1413, 15, 97, 314, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1414, 15, 283, 1055, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1415, 15, 92, 299, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1416, 15, 99, 320, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1417, 15, 51, 176, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1418, 15, 124, 393, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1419, 15, 42, 148, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1420, 15, 33, 121, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1421, 15, 57, 192, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1422, 15, 136, 1012, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1423, 15, 248, 862, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1424, 15, 39, 140, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1425, 15, 119, 1002, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1426, 15, 260, 951, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1427, 15, 104, 334, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1428, 15, 70, 231, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1429, 15, 212, 658, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1430, 15, 121, 386, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1431, 15, 223, 701, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1432, 15, 116, 370, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1433, 15, 50, 171, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1434, 15, 246, 854, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1435, 15, 127, 404, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1436, 15, 286, 1092, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1437, 15, 155, 486, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1438, 15, 1, 1, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1439, 15, 76, 728, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1440, 15, 204, 822, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1441, 15, 140, 1016, 0, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1442, 15, 112, 359, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1443, 15, 220, 688, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1444, 15, 267, 979, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1445, 15, 126, 401, 0, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1446, 15, 156, 490, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1447, 15, 38, 137, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1448, 15, 150, 471, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1449, 15, 160, 502, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1450, 15, 202, 820, 0, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1451, 15, 285, 1091, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1452, 15, 289, 1107, 0, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1453, 15, 93, 302, 0, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1454, 15, 138, 437, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1455, 15, 278, 1035, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1456, 15, 252, 876, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1457, 15, 58, 195, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1458, 15, 225, 706, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1459, 15, 205, 638, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1460, 15, 270, 987, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1461, 15, 52, 178, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1462, 15, 79, 725, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1463, 15, 87, 715, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1464, 15, 111, 354, 0, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1465, 15, 31, 115, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1466, 15, 41, 146, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1467, 15, 243, 840, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1468, 15, 129, 409, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1469, 15, 254, 884, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1470, 15, 40, 141, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1471, 15, 214, 663, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1472, 15, 244, 846, 0, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1473, 15, 277, 1032, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1474, 15, 211, 656, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1475, 15, 162, 950, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1476, 15, 144, 454, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1477, 15, 68, 225, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1478, 15, 95, 306, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1479, 15, 78, 256, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30');
INSERT INTO `assessment_details` (`id`, `assessment_id`, `test_question_id`, `choice_id`, `is_correct`, `created_at`, `updated_at`) VALUES
(1480, 15, 131, 416, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1481, 15, 215, 667, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1482, 15, 61, 204, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1483, 15, 142, 449, 0, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1484, 15, 66, 220, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1485, 15, 113, 1082, 0, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1486, 15, 149, 469, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1487, 15, 143, 450, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1488, 15, 145, 458, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1489, 15, 219, 686, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1490, 15, 89, 289, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1491, 15, 132, 418, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1492, 15, 151, 476, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1493, 15, 34, 123, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1494, 15, 275, 1023, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1495, 15, 147, 464, 0, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1496, 15, 77, 252, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1497, 15, 82, 268, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1498, 15, 32, 900, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1499, 15, 207, 642, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1500, 15, 137, 433, 1, '2019-09-02 04:01:30', '2019-09-02 04:01:30'),
(1501, 16, 219, 686, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1502, 16, 74, 245, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1503, 16, 126, 400, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1504, 16, 254, 884, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1505, 16, 1, 1, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1506, 16, 122, 387, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1507, 16, 121, 386, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1508, 16, 275, 1023, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1509, 16, 205, 638, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1510, 16, 267, 979, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1511, 16, 156, 490, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1512, 16, 286, 1092, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1513, 16, 246, 854, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1514, 16, 87, 715, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1515, 16, 107, 1076, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1516, 16, 270, 989, 0, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1517, 16, 114, 363, 0, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1518, 16, 61, 204, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1519, 16, 32, 900, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1520, 16, 214, 663, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1521, 16, 97, 314, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1522, 16, 225, 706, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1523, 16, 124, 393, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1524, 16, 42, 148, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1525, 16, 41, 145, 0, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1526, 16, 138, 435, 0, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1527, 16, 162, 950, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1528, 16, 95, 306, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1529, 16, 150, 471, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1530, 16, 112, 359, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1531, 16, 82, 268, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1532, 16, 277, 1032, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1533, 16, 248, 862, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1534, 16, 256, 894, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1535, 16, 129, 409, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1536, 16, 51, 176, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1537, 16, 147, 462, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1538, 16, 66, 220, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1539, 16, 68, 227, 0, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1540, 16, 285, 1091, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1541, 16, 155, 486, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1542, 16, 89, 289, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1543, 16, 52, 178, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1544, 16, 132, 1009, 0, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1545, 16, 57, 192, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1546, 16, 111, 355, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1547, 16, 39, 140, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1548, 16, 243, 840, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1549, 16, 260, 951, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1550, 16, 116, 370, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1551, 16, 202, 629, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1552, 16, 142, 448, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1553, 16, 76, 728, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1554, 16, 93, 300, 0, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1555, 16, 77, 252, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1556, 16, 127, 404, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1557, 16, 148, 465, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1558, 16, 40, 141, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1559, 16, 79, 725, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1560, 16, 34, 123, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1561, 16, 207, 825, 0, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1562, 16, 72, 238, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1563, 16, 278, 1035, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1564, 16, 140, 443, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1565, 16, 92, 299, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1566, 16, 145, 458, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1567, 16, 203, 632, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1568, 16, 143, 450, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1569, 16, 104, 334, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1570, 16, 136, 1012, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1571, 16, 137, 433, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1572, 16, 244, 844, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1573, 16, 211, 656, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1574, 16, 48, 166, 0, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1575, 16, 144, 454, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1576, 16, 31, 115, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1577, 16, 90, 292, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1578, 16, 59, 918, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1579, 16, 33, 121, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1580, 16, 108, 345, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1581, 16, 50, 171, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1582, 16, 223, 699, 0, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1583, 16, 215, 667, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1584, 16, 131, 416, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1585, 16, 78, 256, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1586, 16, 252, 876, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1587, 16, 151, 476, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1588, 16, 58, 195, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1589, 16, 204, 822, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1590, 16, 220, 688, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1591, 16, 119, 1002, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1592, 16, 160, 502, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1593, 16, 38, 137, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1594, 16, 113, 361, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1595, 16, 289, 1105, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1596, 16, 212, 658, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1597, 16, 283, 1055, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1598, 16, 70, 231, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1599, 16, 99, 320, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1600, 16, 149, 469, 1, '2019-09-02 04:09:06', '2019-09-02 04:09:06'),
(1601, 17, 77, 252, 1, '2019-09-02 04:19:23', '2019-09-02 04:19:23'),
(1602, 17, 225, 706, 1, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1603, 17, 155, 943, 0, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1604, 17, 59, 918, 1, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1605, 17, 289, 1106, 0, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1606, 17, 89, 289, 1, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1607, 17, 205, 638, 1, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1608, 17, 211, 654, 0, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1609, 17, 41, 146, 1, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1610, 17, 76, 728, 1, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1611, 17, 1, 3, 0, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1612, 17, 74, 245, 1, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1613, 17, 148, 936, 0, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1614, 17, 97, 314, 1, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1615, 17, 212, 657, 0, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1616, 17, 124, 393, 1, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1617, 17, 32, 118, 0, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1618, 17, 61, 204, 1, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1619, 17, 50, 171, 1, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1620, 17, 92, 299, 1, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1621, 17, 127, 404, 1, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1622, 17, 149, 470, 0, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1623, 17, 58, 195, 1, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1624, 17, 126, 400, 1, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1625, 17, 204, 822, 1, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1626, 17, 203, 821, 0, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1627, 17, 147, 462, 1, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1628, 17, 267, 979, 1, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1629, 17, 31, 114, 0, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1630, 17, 283, 1056, 0, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1631, 17, 132, 418, 1, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1632, 17, 52, 178, 1, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1633, 17, 220, 709, 0, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1634, 17, 114, 365, 1, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1635, 17, 79, 725, 1, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1636, 17, 244, 844, 1, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1637, 17, 143, 450, 1, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1638, 17, 144, 455, 0, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1639, 17, 82, 269, 0, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1640, 17, 112, 359, 1, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1641, 17, 119, 1002, 1, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1642, 17, 66, 221, 0, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1643, 17, 51, 175, 0, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1644, 17, 285, 1091, 1, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1645, 17, 131, 414, 0, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1646, 17, 219, 710, 0, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1647, 17, 151, 476, 1, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1648, 17, 129, 410, 0, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1649, 17, 162, 509, 0, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1650, 17, 38, 135, 0, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1651, 17, 113, 362, 0, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1652, 17, 202, 628, 0, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1653, 17, 145, 457, 0, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1654, 17, 214, 664, 0, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1655, 17, 138, 437, 1, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1656, 17, 275, 1022, 0, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1657, 17, 111, 1080, 0, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1658, 17, 39, 140, 1, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1659, 17, 87, 282, 0, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1660, 17, 278, 1035, 1, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1661, 17, 256, 894, 1, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1662, 17, 90, 291, 0, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1663, 17, 286, 1093, 0, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1664, 17, 72, 237, 0, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1665, 17, 33, 121, 1, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1666, 17, 104, 333, 0, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1667, 17, 42, 148, 1, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1668, 17, 136, 430, 0, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1669, 17, 95, 307, 0, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1670, 17, 48, 167, 1, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1671, 17, 215, 667, 1, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1672, 17, 248, 862, 1, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1673, 17, 108, 1077, 0, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1674, 17, 260, 954, 0, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1675, 17, 137, 434, 0, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1676, 17, 140, 441, 0, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1677, 17, 93, 300, 0, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1678, 17, 122, 389, 0, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1679, 17, 160, 948, 0, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1680, 17, 142, 930, 0, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1681, 17, 223, 701, 1, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1682, 17, 68, 226, 0, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1683, 17, 150, 471, 1, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1684, 17, 57, 192, 1, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1685, 17, 156, 490, 1, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1686, 17, 107, 344, 0, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1687, 17, 207, 642, 1, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1688, 17, 270, 987, 1, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1689, 17, 116, 369, 0, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1690, 17, 34, 123, 1, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1691, 17, 121, 386, 1, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1692, 17, 78, 726, 0, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1693, 17, 40, 141, 1, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1694, 17, 246, 853, 0, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1695, 17, 243, 840, 1, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1696, 17, 252, 877, 0, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1697, 17, 254, 887, 0, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1698, 17, 70, 680, 0, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1699, 17, 277, 1032, 1, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1700, 17, 99, 1068, 0, '2019-09-02 04:19:24', '2019-09-02 04:19:24'),
(1701, 18, 145, 456, 0, '2019-09-02 13:19:12', '2019-09-02 13:19:12'),
(1702, 18, 223, 701, 1, '2019-09-02 13:19:12', '2019-09-02 13:19:12'),
(1703, 18, 127, 404, 1, '2019-09-02 13:19:12', '2019-09-02 13:19:12'),
(1704, 18, 79, 725, 1, '2019-09-02 13:19:12', '2019-09-02 13:19:12'),
(1705, 18, 1, 1, 1, '2019-09-02 13:19:12', '2019-09-02 13:19:12'),
(1706, 18, 82, 268, 1, '2019-09-02 13:19:12', '2019-09-02 13:19:12'),
(1707, 18, 267, 979, 1, '2019-09-02 13:19:12', '2019-09-02 13:19:12'),
(1708, 18, 207, 642, 1, '2019-09-02 13:19:12', '2019-09-02 13:19:12'),
(1709, 18, 57, 193, 0, '2019-09-02 13:19:12', '2019-09-02 13:19:12'),
(1710, 18, 155, 943, 0, '2019-09-02 13:19:12', '2019-09-02 13:19:12'),
(1711, 18, 119, 1002, 1, '2019-09-02 13:19:12', '2019-09-02 13:19:12'),
(1712, 18, 34, 123, 1, '2019-09-02 13:19:12', '2019-09-02 13:19:12'),
(1713, 18, 50, 171, 1, '2019-09-02 13:19:12', '2019-09-02 13:19:12'),
(1714, 18, 156, 490, 1, '2019-09-02 13:19:12', '2019-09-02 13:19:12'),
(1715, 18, 137, 433, 1, '2019-09-02 13:19:12', '2019-09-02 13:19:12'),
(1716, 18, 248, 860, 0, '2019-09-02 13:19:12', '2019-09-02 13:19:12'),
(1717, 18, 150, 471, 1, '2019-09-02 13:19:12', '2019-09-02 13:19:12'),
(1718, 18, 220, 709, 0, '2019-09-02 13:19:12', '2019-09-02 13:19:12'),
(1719, 18, 278, 1035, 1, '2019-09-02 13:19:12', '2019-09-02 13:19:12'),
(1720, 18, 252, 877, 0, '2019-09-02 13:19:12', '2019-09-02 13:19:12'),
(1721, 18, 77, 254, 0, '2019-09-02 13:19:12', '2019-09-02 13:19:12'),
(1722, 18, 97, 314, 1, '2019-09-02 13:19:12', '2019-09-02 13:19:12'),
(1723, 18, 136, 1012, 1, '2019-09-02 13:19:12', '2019-09-02 13:19:12'),
(1724, 18, 76, 251, 0, '2019-09-02 13:19:12', '2019-09-02 13:19:12'),
(1725, 18, 132, 418, 1, '2019-09-02 13:19:12', '2019-09-02 13:19:12'),
(1726, 18, 113, 361, 1, '2019-09-02 13:19:12', '2019-09-02 13:19:12'),
(1727, 18, 93, 301, 1, '2019-09-02 13:19:12', '2019-09-02 13:19:12'),
(1728, 18, 89, 289, 1, '2019-09-02 13:19:12', '2019-09-02 13:19:12'),
(1729, 18, 39, 138, 0, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1730, 18, 33, 121, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1731, 18, 160, 502, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1732, 18, 38, 137, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1733, 18, 204, 822, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1734, 18, 78, 256, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1735, 18, 66, 220, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1736, 18, 143, 450, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1737, 18, 61, 204, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1738, 18, 215, 667, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1739, 18, 41, 146, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1740, 18, 225, 706, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1741, 18, 59, 918, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1742, 18, 211, 656, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1743, 18, 122, 387, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1744, 18, 124, 393, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1745, 18, 285, 1091, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1746, 18, 286, 1092, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1747, 18, 289, 1105, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1748, 18, 87, 715, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1749, 18, 107, 1076, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1750, 18, 40, 141, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1751, 18, 212, 658, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1752, 18, 277, 1032, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1753, 18, 149, 470, 0, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1754, 18, 52, 178, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1755, 18, 111, 355, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1756, 18, 31, 115, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1757, 18, 51, 176, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1758, 18, 151, 476, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1759, 18, 112, 359, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1760, 18, 148, 465, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1761, 18, 214, 663, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1762, 18, 275, 1023, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1763, 18, 246, 854, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1764, 18, 116, 370, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1765, 18, 108, 345, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1766, 18, 48, 167, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1767, 18, 243, 840, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1768, 18, 42, 907, 0, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1769, 18, 260, 951, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1770, 18, 126, 400, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1771, 18, 256, 894, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1772, 18, 244, 844, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1773, 18, 70, 231, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1774, 18, 254, 885, 0, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1775, 18, 140, 1016, 0, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1776, 18, 270, 987, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1777, 18, 92, 298, 0, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1778, 18, 144, 454, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1779, 18, 147, 462, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1780, 18, 129, 409, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1781, 18, 219, 685, 0, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1782, 18, 202, 627, 0, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1783, 18, 58, 195, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1784, 18, 121, 384, 0, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1785, 18, 99, 1068, 0, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1786, 18, 205, 638, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1787, 18, 114, 365, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1788, 18, 74, 244, 0, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1789, 18, 72, 238, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1790, 18, 104, 334, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1791, 18, 138, 436, 0, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1792, 18, 203, 631, 0, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1793, 18, 68, 225, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1794, 18, 90, 711, 0, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1795, 18, 142, 448, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1796, 18, 95, 307, 0, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1797, 18, 162, 950, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1798, 18, 131, 414, 0, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1799, 18, 283, 1055, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1800, 18, 32, 900, 1, '2019-09-02 13:19:13', '2019-09-02 13:19:13'),
(1801, 19, 70, 231, 1, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1802, 19, 143, 450, 1, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1803, 19, 32, 900, 1, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1804, 19, 252, 878, 0, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1805, 19, 61, 920, 0, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1806, 19, 112, 1081, 0, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1807, 19, 203, 632, 1, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1808, 19, 97, 313, 0, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1809, 19, 147, 462, 1, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1810, 19, 68, 225, 1, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1811, 19, 107, 342, 0, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1812, 19, 119, 380, 0, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1813, 19, 270, 987, 1, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1814, 19, 160, 502, 1, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1815, 19, 87, 715, 1, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1816, 19, 50, 173, 0, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1817, 19, 121, 1004, 0, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1818, 19, 211, 829, 0, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1819, 19, 31, 115, 1, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1820, 19, 145, 458, 1, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1821, 19, 95, 308, 0, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1822, 19, 39, 140, 1, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1823, 19, 144, 454, 1, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1824, 19, 275, 1022, 0, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1825, 19, 108, 1077, 0, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1826, 19, 127, 403, 0, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1827, 19, 104, 333, 0, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1828, 19, 220, 689, 0, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1829, 19, 142, 448, 1, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1830, 19, 33, 901, 0, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1831, 19, 116, 370, 1, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1832, 19, 289, 1106, 0, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1833, 19, 66, 220, 1, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1834, 19, 267, 979, 1, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1835, 19, 126, 401, 0, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1836, 19, 122, 1005, 0, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1837, 19, 277, 1032, 1, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1838, 19, 260, 953, 0, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1839, 19, 92, 1061, 0, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1840, 19, 48, 166, 0, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1841, 19, 223, 701, 1, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1842, 19, 155, 488, 0, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1843, 19, 57, 192, 1, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1844, 19, 219, 686, 1, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1845, 19, 156, 490, 1, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1846, 19, 136, 1012, 1, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1847, 19, 89, 712, 0, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1848, 19, 40, 141, 1, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1849, 19, 34, 123, 1, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1850, 19, 58, 195, 1, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1851, 19, 78, 256, 1, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1852, 19, 207, 642, 1, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1853, 19, 111, 1080, 0, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1854, 19, 205, 823, 0, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1855, 19, 132, 418, 1, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1856, 19, 114, 363, 0, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1857, 19, 248, 862, 1, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1858, 19, 79, 725, 1, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1859, 19, 131, 416, 1, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1860, 19, 138, 437, 1, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1861, 19, 124, 393, 1, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1862, 19, 278, 1036, 0, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1863, 19, 286, 1093, 0, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1864, 19, 151, 474, 0, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1865, 19, 77, 727, 0, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1866, 19, 214, 664, 0, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1867, 19, 137, 433, 1, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1868, 19, 76, 251, 0, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1869, 19, 99, 1068, 0, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1870, 19, 113, 1082, 0, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1871, 19, 150, 472, 0, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1872, 19, 285, 1088, 0, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1873, 19, 244, 844, 1, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1874, 19, 74, 243, 0, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1875, 19, 72, 237, 0, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1876, 19, 243, 840, 1, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1877, 19, 82, 267, 0, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1878, 19, 256, 894, 1, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1879, 19, 51, 911, 0, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1880, 19, 90, 711, 0, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1881, 19, 140, 443, 1, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1882, 19, 129, 409, 1, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1883, 19, 149, 469, 1, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1884, 19, 59, 198, 0, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1885, 19, 148, 465, 1, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1886, 19, 1, 2, 0, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1887, 19, 246, 853, 0, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1888, 19, 202, 629, 1, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1889, 19, 42, 148, 1, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1890, 19, 52, 178, 1, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1891, 19, 283, 1055, 1, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1892, 19, 215, 667, 1, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1893, 19, 41, 146, 1, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1894, 19, 93, 1062, 0, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1895, 19, 212, 658, 1, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1896, 19, 204, 634, 0, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1897, 19, 254, 884, 1, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1898, 19, 225, 705, 0, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1899, 19, 38, 135, 0, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1900, 19, 162, 509, 0, '2019-09-02 13:30:53', '2019-09-02 13:30:53'),
(1901, 20, 104, 334, 1, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1902, 20, 108, 345, 1, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1903, 20, 61, 204, 1, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1904, 20, 38, 137, 1, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1905, 20, 243, 840, 1, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1906, 20, 140, 443, 1, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1907, 20, 283, 1055, 1, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1908, 20, 82, 268, 1, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1909, 20, 203, 632, 1, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1910, 20, 223, 701, 1, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1911, 20, 58, 195, 1, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1912, 20, 151, 476, 1, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1913, 20, 31, 116, 0, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1914, 20, 149, 469, 1, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1915, 20, 57, 192, 1, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1916, 20, 144, 454, 1, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1917, 20, 89, 288, 0, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1918, 20, 39, 138, 0, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1919, 20, 220, 709, 0, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1920, 20, 207, 642, 1, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1921, 20, 78, 256, 1, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1922, 20, 142, 448, 1, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1923, 20, 1, 1, 1, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1924, 20, 246, 854, 1, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1925, 20, 260, 951, 1, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1926, 20, 119, 1002, 1, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1927, 20, 116, 371, 0, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1928, 20, 40, 141, 1, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1929, 20, 148, 465, 1, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1930, 20, 278, 1035, 1, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1931, 20, 42, 148, 1, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1932, 20, 286, 1094, 0, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1933, 20, 34, 123, 1, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1934, 20, 202, 820, 0, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1935, 20, 219, 686, 1, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1936, 20, 225, 706, 1, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1937, 20, 41, 146, 1, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1938, 20, 138, 437, 1, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1939, 20, 112, 1081, 0, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1940, 20, 51, 176, 1, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1941, 20, 121, 386, 1, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1942, 20, 66, 220, 1, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1943, 20, 129, 408, 0, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1944, 20, 256, 894, 1, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1945, 20, 204, 822, 1, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1946, 20, 70, 231, 1, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1947, 20, 155, 487, 0, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1948, 20, 90, 292, 1, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1949, 20, 248, 862, 1, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1950, 20, 143, 450, 1, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1951, 20, 131, 416, 1, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1952, 20, 275, 1023, 1, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1953, 20, 289, 1104, 0, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1954, 20, 147, 935, 0, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1955, 20, 93, 1062, 0, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1956, 20, 32, 900, 1, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1957, 20, 136, 1012, 1, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1958, 20, 244, 844, 1, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1959, 20, 150, 471, 1, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1960, 20, 99, 319, 0, '2019-09-02 13:39:00', '2019-09-02 13:39:00'),
(1961, 20, 156, 490, 1, '2019-09-02 13:39:01', '2019-09-02 13:39:01'),
(1962, 20, 113, 361, 1, '2019-09-02 13:39:01', '2019-09-02 13:39:01'),
(1963, 20, 59, 918, 1, '2019-09-02 13:39:01', '2019-09-02 13:39:01'),
(1964, 20, 267, 979, 1, '2019-09-02 13:39:01', '2019-09-02 13:39:01'),
(1965, 20, 127, 404, 1, '2019-09-02 13:39:01', '2019-09-02 13:39:01'),
(1966, 20, 52, 178, 1, '2019-09-02 13:39:01', '2019-09-02 13:39:01'),
(1967, 20, 76, 251, 0, '2019-09-02 13:39:01', '2019-09-02 13:39:01'),
(1968, 20, 95, 306, 1, '2019-09-02 13:39:01', '2019-09-02 13:39:01'),
(1969, 20, 122, 387, 1, '2019-09-02 13:39:01', '2019-09-02 13:39:01'),
(1970, 20, 211, 656, 1, '2019-09-02 13:39:01', '2019-09-02 13:39:01'),
(1971, 20, 132, 418, 1, '2019-09-02 13:39:01', '2019-09-02 13:39:01'),
(1972, 20, 277, 1032, 1, '2019-09-02 13:39:01', '2019-09-02 13:39:01'),
(1973, 20, 77, 252, 1, '2019-09-02 13:39:01', '2019-09-02 13:39:01'),
(1974, 20, 72, 238, 1, '2019-09-02 13:39:01', '2019-09-02 13:39:01'),
(1975, 20, 162, 950, 1, '2019-09-02 13:39:01', '2019-09-02 13:39:01'),
(1976, 20, 33, 121, 1, '2019-09-02 13:39:01', '2019-09-02 13:39:01'),
(1977, 20, 68, 225, 1, '2019-09-02 13:39:01', '2019-09-02 13:39:01'),
(1978, 20, 285, 1088, 0, '2019-09-02 13:39:01', '2019-09-02 13:39:01'),
(1979, 20, 160, 502, 1, '2019-09-02 13:39:01', '2019-09-02 13:39:01'),
(1980, 20, 107, 1076, 1, '2019-09-02 13:39:01', '2019-09-02 13:39:01'),
(1981, 20, 215, 667, 1, '2019-09-02 13:39:01', '2019-09-02 13:39:01'),
(1982, 20, 270, 987, 1, '2019-09-02 13:39:01', '2019-09-02 13:39:01'),
(1983, 20, 50, 171, 1, '2019-09-02 13:39:01', '2019-09-02 13:39:01'),
(1984, 20, 145, 458, 1, '2019-09-02 13:39:01', '2019-09-02 13:39:01'),
(1985, 20, 252, 876, 1, '2019-09-02 13:39:01', '2019-09-02 13:39:01'),
(1986, 20, 87, 715, 1, '2019-09-02 13:39:01', '2019-09-02 13:39:01'),
(1987, 20, 92, 299, 1, '2019-09-02 13:39:01', '2019-09-02 13:39:01'),
(1988, 20, 74, 245, 1, '2019-09-02 13:39:01', '2019-09-02 13:39:01'),
(1989, 20, 111, 355, 1, '2019-09-02 13:39:01', '2019-09-02 13:39:01'),
(1990, 20, 124, 393, 1, '2019-09-02 13:39:01', '2019-09-02 13:39:01'),
(1991, 20, 205, 638, 1, '2019-09-02 13:39:01', '2019-09-02 13:39:01'),
(1992, 20, 214, 663, 1, '2019-09-02 13:39:01', '2019-09-02 13:39:01'),
(1993, 20, 126, 400, 1, '2019-09-02 13:39:01', '2019-09-02 13:39:01'),
(1994, 20, 137, 433, 1, '2019-09-02 13:39:01', '2019-09-02 13:39:01'),
(1995, 20, 48, 167, 1, '2019-09-02 13:39:01', '2019-09-02 13:39:01'),
(1996, 20, 254, 884, 1, '2019-09-02 13:39:01', '2019-09-02 13:39:01'),
(1997, 20, 212, 657, 0, '2019-09-02 13:39:01', '2019-09-02 13:39:01'),
(1998, 20, 79, 725, 1, '2019-09-02 13:39:01', '2019-09-02 13:39:01'),
(1999, 20, 97, 314, 1, '2019-09-02 13:39:01', '2019-09-02 13:39:01'),
(2000, 20, 114, 365, 1, '2019-09-02 13:39:01', '2019-09-02 13:39:01'),
(2001, 21, 114, 363, 0, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2002, 21, 223, 700, 0, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2003, 21, 70, 680, 0, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2004, 21, 99, 318, 0, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2005, 21, 214, 832, 0, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2006, 21, 108, 346, 0, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2007, 21, 127, 404, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2008, 21, 119, 1002, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2009, 21, 267, 980, 0, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2010, 21, 149, 937, 0, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2011, 21, 116, 370, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2012, 21, 122, 387, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2013, 21, 132, 418, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2014, 21, 93, 301, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2015, 21, 270, 989, 0, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2016, 21, 33, 121, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2017, 21, 68, 679, 0, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2018, 21, 51, 911, 0, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2019, 21, 204, 822, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2020, 21, 89, 289, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2021, 21, 145, 457, 0, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2022, 21, 256, 894, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2023, 21, 212, 658, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2024, 21, 111, 355, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2025, 21, 215, 667, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2026, 21, 156, 489, 0, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2027, 21, 151, 939, 0, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2028, 21, 107, 1076, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2029, 21, 131, 416, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2030, 21, 160, 503, 0, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2031, 21, 52, 178, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2032, 21, 87, 715, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2033, 21, 113, 361, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2034, 21, 48, 167, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2035, 21, 41, 146, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2036, 21, 254, 884, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2037, 21, 78, 256, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2038, 21, 275, 1023, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2039, 21, 58, 195, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2040, 21, 92, 299, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2041, 21, 61, 204, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2042, 21, 112, 359, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2043, 21, 252, 876, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2044, 21, 31, 115, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2045, 21, 162, 950, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2046, 21, 147, 464, 0, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2047, 21, 95, 306, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2048, 21, 66, 220, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2049, 21, 243, 840, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2050, 21, 1, 1, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2051, 21, 260, 954, 0, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2052, 21, 244, 845, 0, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2053, 21, 283, 1055, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2054, 21, 148, 467, 0, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2055, 21, 207, 642, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2056, 21, 220, 688, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2057, 21, 42, 148, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2058, 21, 143, 931, 0, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2059, 21, 50, 171, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2060, 21, 124, 393, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2061, 21, 40, 141, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2062, 21, 136, 1012, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2063, 21, 76, 728, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2064, 21, 32, 900, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2065, 21, 121, 386, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2066, 21, 246, 854, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2067, 21, 97, 314, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2068, 21, 211, 656, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2069, 21, 285, 1091, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2070, 21, 77, 252, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2071, 21, 205, 638, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2072, 21, 79, 725, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2073, 21, 90, 292, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2074, 21, 137, 433, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2075, 21, 144, 454, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2076, 21, 82, 268, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2077, 21, 74, 730, 0, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2078, 21, 129, 409, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2079, 21, 286, 1092, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2080, 21, 126, 400, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2081, 21, 155, 486, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2082, 21, 150, 471, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2083, 21, 39, 906, 0, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2084, 21, 38, 137, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2085, 21, 289, 1105, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2086, 21, 278, 1036, 0, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2087, 21, 57, 193, 0, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2088, 21, 142, 930, 0, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2089, 21, 277, 1031, 0, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2090, 21, 203, 632, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2091, 21, 34, 123, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2092, 21, 72, 237, 0, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2093, 21, 140, 441, 0, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2094, 21, 248, 862, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2095, 21, 59, 918, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2096, 21, 104, 334, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2097, 21, 202, 629, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2098, 21, 138, 1014, 0, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2099, 21, 225, 706, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43'),
(2100, 21, 219, 686, 1, '2019-09-15 05:17:43', '2019-09-15 05:17:43');

-- --------------------------------------------------------

--
-- Table structure for table `assessment_types`
--

CREATE TABLE `assessment_types` (
  `id` int(10) UNSIGNED NOT NULL,
  `description` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `assessment_types`
--

INSERT INTO `assessment_types` (`id`, `description`) VALUES
(1, 'Default (Objective Exam)'),
(2, 'Custom recorded assessment'),
(3, 'Programming');

-- --------------------------------------------------------

--
-- Table structure for table `choices`
--

CREATE TABLE `choices` (
  `id` int(11) NOT NULL,
  `ch_code` varchar(20) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `test_question_id` int(11) NOT NULL,
  `body` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `is_correct` tinyint(1) NOT NULL,
  `is_active` tinyint(1) NOT NULL,
  `user_id` int(11) NOT NULL,
  `pos_order` int(11) DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `choices`
--

INSERT INTO `choices` (`id`, `ch_code`, `test_question_id`, `body`, `is_correct`, `is_active`, `user_id`, `pos_order`, `created_at`, `updated_at`) VALUES
(1, 'CH000000001', 1, 'x = 1', 1, 1, 2, 1, '2019-06-29 19:56:29', '2019-08-17 22:34:57'),
(2, 'CH000000002', 1, 'x = 4', 0, 1, 2, 2, '2019-06-29 19:56:29', '2019-08-17 22:34:57'),
(3, 'CH000000003', 1, 'x = 2', 0, 1, 2, 3, '2019-06-29 19:56:29', '2019-08-17 22:34:57'),
(4, 'CH000000004', 2, '12', 0, 1, 2, 1, '2019-06-29 23:17:32', '2019-08-06 18:48:15'),
(5, 'CH000000005', 2, '11', 0, 1, 2, 2, '2019-06-29 23:17:32', '2019-08-06 18:48:16'),
(6, 'CH000000006', 2, '10', 1, 1, 2, 3, '2019-06-29 23:17:33', '2019-08-06 18:48:16'),
(7, 'CH000000007', 3, 'Audrey > Ilana > Dave', 1, 1, 2, 1, '2019-06-29 23:22:31', '2019-08-06 18:48:16'),
(8, 'CH000000008', 3, 'Audrey > Bill > Emily > Dave', 0, 1, 2, 2, '2019-06-29 23:22:31', '2019-08-06 18:48:16'),
(9, 'CH000000009', 3, 'Audrey > Dave', 0, 1, 2, 3, '2019-06-29 23:22:31', '2019-08-06 18:48:16'),
(10, 'CH000000010', 4, 'Hartford > New Haven > Providence > Canton', 0, 1, 2, 1, '2019-06-29 23:28:34', '2019-08-06 18:48:16'),
(11, 'CH000000011', 4, 'Hartford > Sturbridge > Weston > Canton', 1, 1, 2, 2, '2019-06-29 23:28:34', '2019-08-06 18:48:16'),
(12, 'CH000000012', 4, 'Hartford > Springfield > Sturbridge > Weston > Canton', 0, 1, 2, 3, '2019-06-29 23:28:34', '2019-08-06 18:48:16'),
(13, 'CH000000013', 5, 'Insertion Sort', 0, 1, 2, 1, '2019-06-29 23:32:18', '2019-08-17 22:40:00'),
(14, 'CH000000014', 5, 'Merge Sort', 0, 1, 2, 2, '2019-06-29 23:32:18', '2019-08-17 22:40:00'),
(15, 'CH000000015', 5, 'Quick Sort', 1, 1, 2, 3, '2019-06-29 23:32:18', '2019-08-17 22:40:00'),
(16, 'CH000000016', 5, 'Bubble Sort', 0, 1, 2, 4, '2019-06-29 23:32:18', '2019-08-17 22:40:00'),
(17, 'CH000000017', 6, 'Queue', 0, 1, 2, 1, '2019-06-29 23:38:24', '2019-08-17 22:40:23'),
(18, 'CH000000018', 6, 'Stack', 0, 1, 2, 2, '2019-06-29 23:38:24', '2019-08-17 22:40:23'),
(19, 'CH000000019', 6, 'Arrays', 0, 1, 2, 3, '2019-06-29 23:38:25', '2019-08-17 22:40:23'),
(20, 'CH000000020', 6, 'All of the above', 1, 1, 2, 4, '2019-06-29 23:38:25', '2019-08-17 22:40:23'),
(21, 'CH000000021', 7, '5', 0, 1, 2, 1, '2019-06-29 23:39:38', '2019-08-17 22:41:14'),
(22, 'CH000000022', 7, '4', 0, 1, 2, 2, '2019-06-29 23:39:38', '2019-08-17 22:41:14'),
(23, 'CH000000023', 7, '3', 0, 1, 2, 3, '2019-06-29 23:39:38', '2019-08-17 22:41:14'),
(24, 'CH000000024', 7, '2', 1, 1, 2, 4, '2019-06-29 23:39:38', '2019-08-17 22:41:14'),
(25, 'CH000000025', 8, 'The matrix A itself', 1, 1, 2, 1, '2019-06-29 23:44:26', '2019-08-17 22:41:55'),
(26, 'CH000000026', 8, 'Transpose of matrix A', 0, 1, 2, 2, '2019-06-29 23:44:26', '2019-08-17 22:41:55'),
(27, 'CH000000027', 8, 'Adding 100 to the upper diagonal elements and subtracting 100 from diagonal elements of A', 0, 1, 2, 3, '2019-06-29 23:44:26', '2019-08-17 22:41:55'),
(28, 'CH000000028', 8, 'None of the above', 0, 1, 2, 4, '2019-06-29 23:44:26', '2019-08-17 22:41:55'),
(29, 'CH000000029', 9, 'int arr[20];', 1, 1, 2, 1, '2019-06-29 23:48:40', '2019-08-17 22:42:39'),
(30, 'CH000000030', 9, 'int arr;', 0, 1, 2, 2, '2019-06-29 23:48:41', '2019-08-17 22:42:39'),
(31, 'CH000000031', 9, 'arr{20};', 0, 1, 2, 3, '2019-06-29 23:48:41', '2019-08-17 22:42:39'),
(32, 'CH000000032', 9, 'array arr[20];', 0, 1, 2, 4, '2019-06-29 23:48:41', '2019-08-17 22:42:39'),
(33, 'CH000000033', 10, 'Prints all nodes of linked lists', 0, 1, 2, 1, '2019-06-29 23:51:28', '2019-08-17 22:43:22'),
(34, 'CH000000034', 10, 'Prints all nodes of linked list in reverse order', 1, 1, 2, 2, '2019-06-29 23:51:28', '2019-08-17 22:43:22'),
(35, 'CH000000035', 10, 'Prints alternate nodes of Linked List', 0, 1, 2, 3, '2019-06-29 23:51:28', '2019-08-17 22:43:22'),
(36, 'CH000000036', 10, 'Prints alternate nodes in reverse order', 0, 1, 2, 4, '2019-06-29 23:51:28', '2019-08-17 22:43:22'),
(37, 'CH000000037', 11, 'Arrays have better cache locality that can make them better in terms of performance.', 0, 1, 2, 1, '2019-06-29 23:52:51', '2019-08-17 22:43:52'),
(38, 'CH000000038', 11, 'It is easy to insert and delete elements in Linked List', 0, 1, 2, 2, '2019-06-29 23:52:51', '2019-08-17 22:43:52'),
(39, 'CH000000039', 11, 'Random access is not allowed in a typical implementation of Linked Lists', 0, 1, 2, 3, '2019-06-29 23:52:51', '2019-08-17 22:43:52'),
(40, 'CH000000040', 11, 'All of the above', 1, 1, 2, 4, '2019-06-29 23:52:51', '2019-08-17 22:43:52'),
(41, 'CH000000041', 12, 'Insertion sort', 0, 1, 2, 1, '2019-06-29 23:54:26', '2019-08-17 22:44:25'),
(42, 'CH000000042', 12, 'Quick Sort', 0, 1, 2, 2, '2019-06-29 23:54:26', '2019-08-17 22:44:25'),
(43, 'CH000000043', 12, 'Heap Sort', 0, 1, 2, 3, '2019-06-29 23:54:26', '2019-08-17 22:44:25'),
(44, 'CH000000044', 12, 'Merge Sort', 1, 1, 2, 4, '2019-06-29 23:54:27', '2019-08-17 22:44:25'),
(45, 'CH000000045', 13, '*head_ref = prev;', 1, 1, 2, 1, '2019-06-29 23:56:54', '2019-08-17 22:44:55'),
(46, 'CH000000046', 13, '*head_ref = current;', 0, 1, 2, 2, '2019-06-29 23:56:55', '2019-08-17 22:44:55'),
(47, 'CH000000047', 13, '*head_ref = next;', 0, 1, 2, 3, '2019-06-29 23:56:55', '2019-08-17 22:44:55'),
(48, 'CH000000048', 13, '*head_ref = NULL;', 0, 1, 2, 4, '2019-06-29 23:56:55', '2019-08-17 22:44:55'),
(49, 'CH000000049', 14, '1 4 6 6 4 1', 0, 1, 2, 1, '2019-06-30 00:00:04', '2019-08-17 22:45:28'),
(50, 'CH000000050', 14, '1 3 5 1 3 5', 0, 1, 2, 2, '2019-06-30 00:00:04', '2019-08-17 22:45:28'),
(51, 'CH000000051', 14, '1 2 3 5', 0, 1, 2, 3, '2019-06-30 00:00:04', '2019-08-17 22:45:28'),
(52, 'CH000000052', 14, '1 3 5 5 3 1', 1, 1, 2, 4, '2019-06-30 00:00:04', '2019-08-17 22:45:28'),
(53, 'CH000000053', 15, 'Managing function calls', 0, 1, 2, 1, '2019-06-30 00:04:32', '2019-08-17 22:46:04'),
(54, 'CH000000054', 15, 'The stock span problem', 0, 1, 2, 2, '2019-06-30 00:04:32', '2019-08-17 22:46:04'),
(55, 'CH000000055', 15, 'Arithmetic expression evaluation', 0, 1, 2, 3, '2019-06-30 00:04:32', '2019-08-17 22:46:04'),
(56, 'CH000000056', 15, 'All of the above', 1, 1, 2, 4, '2019-06-30 00:04:32', '2019-08-17 22:46:04'),
(57, 'CH000000057', 16, 'In push operation, if new nodes are inserted at the beginning of linked list, then in pop operation, nodes must be removed from end.', 0, 1, 2, 1, '2019-06-30 00:05:58', '2019-08-17 22:46:25'),
(58, 'CH000000058', 16, 'In push operation, if new nodes are inserted at the end, then in pop operation, nodes must be removed from the beginning.', 0, 1, 2, 2, '2019-06-30 00:05:58', '2019-08-17 22:46:25'),
(59, 'CH000000059', 16, 'Both of the above', 0, 1, 2, 3, '2019-06-30 00:05:58', '2019-08-17 22:46:25'),
(60, 'CH000000060', 16, 'None of the above', 1, 1, 2, 4, '2019-06-30 00:05:58', '2019-08-17 22:46:25'),
(61, 'CH000000061', 17, '284', 0, 1, 2, 1, '2019-06-30 00:08:07', '2019-08-17 22:46:56'),
(62, 'CH000000062', 17, '213', 0, 1, 2, 2, '2019-06-30 00:08:07', '2019-08-17 22:46:56'),
(63, 'CH000000063', 17, '142', 1, 1, 2, 3, '2019-06-30 00:08:07', '2019-08-17 22:46:56'),
(64, 'CH000000064', 17, '71', 0, 1, 2, 4, '2019-06-30 00:08:07', '2019-08-17 22:46:56'),
(65, 'CH000000065', 18, 'Queue', 0, 1, 2, 1, '2019-06-30 00:09:55', '2019-08-17 22:47:27'),
(66, 'CH000000066', 18, 'Stack', 1, 1, 2, 2, '2019-06-30 00:09:55', '2019-08-17 22:47:27'),
(67, 'CH000000067', 18, 'Tree', 0, 1, 2, 3, '2019-06-30 00:09:55', '2019-08-17 22:47:27'),
(68, 'CH000000068', 19, 'Every binary tree is either complete or full.', 0, 1, 2, 1, '2019-06-30 00:36:10', '2019-08-17 22:47:45'),
(69, 'CH000000069', 19, 'Every complete binary tree is also a full binary tree.', 0, 1, 2, 2, '2019-06-30 00:36:10', '2019-08-17 22:47:45'),
(70, 'CH000000070', 19, 'No binary tree is both complete and full.', 0, 1, 2, 3, '2019-06-30 00:36:10', '2019-08-17 22:47:45'),
(71, 'CH000000071', 19, 'None of the choices.', 1, 1, 2, 4, '2019-06-30 00:36:10', '2019-08-17 22:47:45'),
(72, 'CH000000072', 20, 'n/2', 0, 1, 2, 1, '2019-06-30 00:37:44', '2019-08-17 22:48:06'),
(73, 'CH000000073', 20, '(n-1)/3', 0, 1, 2, 2, '2019-06-30 00:37:44', '2019-08-17 22:48:06'),
(74, 'CH000000074', 20, '(n-1)/2', 0, 1, 2, 3, '2019-06-30 00:37:44', '2019-08-17 22:48:06'),
(75, 'CH000000075', 20, '(2n+1)/3', 1, 1, 2, 4, '2019-06-30 00:37:44', '2019-08-17 22:48:06'),
(76, 'CH000000076', 21, 'When a resource is shared among multiple consumers.', 0, 1, 2, 1, '2019-06-30 00:40:43', '2019-08-17 22:48:25'),
(77, 'CH000000077', 21, 'When data is transferred asynchronously (data not necessarily received at same rate as sent) between two processes', 0, 1, 2, 2, '2019-06-30 00:40:43', '2019-08-17 22:48:25'),
(78, 'CH000000078', 21, 'Load Balancing', 0, 1, 2, 3, '2019-06-30 00:40:43', '2019-08-17 22:48:25'),
(79, 'CH000000079', 21, 'All of the choices', 1, 1, 2, 4, '2019-06-30 00:40:43', '2019-08-17 22:48:25'),
(80, 'CH000000080', 22, '1', 0, 1, 2, 1, '2019-06-30 00:41:28', '2019-08-17 22:48:59'),
(81, 'CH000000081', 22, '2', 1, 1, 2, 2, '2019-06-30 00:41:28', '2019-08-17 22:48:59'),
(82, 'CH000000082', 22, '3', 0, 1, 2, 3, '2019-06-30 00:41:28', '2019-08-17 22:48:59'),
(83, 'CH000000083', 22, '4', 0, 1, 2, 4, '2019-06-30 00:41:28', '2019-08-17 22:48:59'),
(84, 'CH000000084', 23, 'O(n) for all', 1, 1, 2, 1, '2019-06-30 00:43:13', '2019-08-17 22:49:40'),
(85, 'CH000000085', 23, 'O(Logn) for all', 0, 1, 2, 2, '2019-06-30 00:43:13', '2019-08-17 22:49:40'),
(86, 'CH000000086', 23, 'O(Logn) for search and insert, and O(n) for delete', 0, 1, 2, 3, '2019-06-30 00:43:13', '2019-08-17 22:49:40'),
(87, 'CH000000087', 23, 'O(Logn) for search, and O(n) for insert and delete', 0, 1, 2, 4, '2019-06-30 00:43:13', '2019-08-17 22:49:40'),
(88, 'CH000000088', 24, 'Preorder', 0, 1, 2, 1, '2019-06-30 00:45:21', '2019-08-17 22:50:03'),
(89, 'CH000000089', 24, 'Inorder', 1, 1, 2, 2, '2019-06-30 00:45:21', '2019-08-17 22:50:03'),
(90, 'CH000000090', 24, 'Postorder', 0, 1, 2, 3, '2019-06-30 00:45:21', '2019-08-17 22:50:03'),
(91, 'CH000000091', 25, '7 5 1 0 3 2 4 6 8 9', 0, 1, 2, 1, '2019-06-30 00:46:32', '2019-08-17 22:50:36'),
(92, 'CH000000092', 25, '0 2 4 3 1 6 5 9 8 7', 0, 1, 2, 2, '2019-06-30 00:46:32', '2019-08-17 22:50:36'),
(93, 'CH000000093', 25, '0 1 2 3 4 5 6 7 8 9', 1, 1, 2, 3, '2019-06-30 00:46:32', '2019-08-17 22:50:36'),
(94, 'CH000000094', 25, '9 8 6 4 2 3 0 1 5 7', 0, 1, 2, 4, '2019-06-30 00:46:32', '2019-08-17 22:50:36'),
(95, 'CH000000095', 26, '10, 20, 15, 23, 25, 35, 42, 39, 30', 0, 1, 2, 1, '2019-06-30 00:47:33', '2019-08-17 22:50:58'),
(96, 'CH000000096', 26, '15, 10, 25, 23, 20, 42, 35, 39, 30', 0, 1, 2, 2, '2019-06-30 00:47:34', '2019-08-17 22:50:58'),
(97, 'CH000000097', 26, '15, 20, 10, 23, 25, 42, 35, 39, 30', 0, 1, 2, 3, '2019-06-30 00:47:34', '2019-08-17 22:50:58'),
(98, 'CH000000098', 26, '15, 10, 23, 25, 20, 35, 42, 39, 30', 1, 1, 2, 4, '2019-06-30 00:47:34', '2019-08-17 22:50:58'),
(99, 'CH000000099', 27, '46, 42, 34, 52, 23, 33', 0, 1, 2, 1, '2019-06-30 00:50:30', '2019-08-17 22:51:15'),
(100, 'CH000000100', 27, '34, 42, 23, 52, 33, 46', 0, 1, 2, 2, '2019-06-30 00:50:30', '2019-08-17 22:51:15'),
(101, 'CH000000101', 27, '46, 34, 42, 23, 52, 33', 1, 1, 2, 3, '2019-06-30 00:50:30', '2019-08-17 22:51:15'),
(102, 'CH000000102', 28, 'A', 0, 1, 2, 1, '2019-06-30 00:52:27', '2019-08-17 22:51:38'),
(103, 'CH000000103', 28, 'B', 0, 1, 2, 2, '2019-06-30 00:52:27', '2019-08-17 22:51:38'),
(104, 'CH000000104', 28, 'C', 1, 1, 2, 3, '2019-06-30 00:52:27', '2019-08-17 22:51:38'),
(105, 'CH000000105', 28, 'D', 0, 1, 2, 4, '2019-06-30 00:52:27', '2019-08-17 22:51:38'),
(106, 'CH000000106', 29, 'A', 0, 1, 2, 1, '2019-06-30 00:55:10', '2019-08-17 22:51:57'),
(107, 'CH000000107', 29, 'B', 1, 1, 2, 2, '2019-06-30 00:55:10', '2019-08-17 22:51:57'),
(108, 'CH000000108', 29, 'C', 0, 1, 2, 3, '2019-06-30 00:55:10', '2019-08-17 22:51:57'),
(109, 'CH000000109', 29, 'D', 0, 1, 2, 4, '2019-06-30 00:55:10', '2019-08-17 22:51:57'),
(110, 'CH000000110', 30, 'log 2 n', 0, 1, 2, 1, '2019-06-30 00:57:18', '2019-08-17 22:52:15'),
(111, 'CH000000111', 30, 'n/2', 0, 1, 2, 2, '2019-06-30 00:57:18', '2019-08-17 22:52:15'),
(112, 'CH000000112', 30, 'log 2 n – 1', 0, 1, 2, 3, '2019-06-30 00:57:18', '2019-08-17 22:52:15'),
(113, 'CH000000113', 30, 'n', 1, 1, 2, 4, '2019-06-30 00:57:18', '2019-08-17 22:52:15'),
(114, 'CH000000114', 31, '10', 0, 1, 2, 1, '2019-06-30 01:08:18', '2019-08-17 22:33:45'),
(115, 'CH000000115', 31, '20', 1, 1, 2, 2, '2019-06-30 01:08:18', '2019-08-17 22:33:45'),
(116, 'CH000000116', 31, '12', 0, 1, 2, 3, '2019-06-30 01:08:18', '2019-08-17 22:33:45'),
(117, 'CH000000117', 32, 'abstract', 0, 1, 2, 1, '2019-06-30 03:03:18', '2019-08-24 23:45:13'),
(118, 'CH000000118', 32, 'as', 0, 1, 2, 2, '2019-06-30 03:03:18', '2019-08-24 23:45:13'),
(119, 'CH000000119', 32, 'foreach', 0, 1, 2, 3, '2019-06-30 03:03:18', '2019-08-24 23:45:13'),
(120, 'CH000000120', 33, 'ToDecimal', 0, 1, 2, 1, '2019-06-30 03:03:47', '2019-08-25 01:08:02'),
(121, 'CH000000121', 33, 'ToDouble', 1, 1, 2, 2, '2019-06-30 03:03:47', '2019-08-25 01:08:02'),
(122, 'CH000000122', 33, 'ToInt16', 0, 1, 2, 3, '2019-06-30 03:03:47', '2019-08-25 01:08:02'),
(123, 'CH000000123', 34, 'sizeof', 1, 1, 2, 1, '2019-06-30 03:04:26', '2019-08-25 01:09:24'),
(124, 'CH000000124', 34, 'typeof', 0, 1, 2, 2, '2019-06-30 03:04:26', '2019-08-25 01:09:24'),
(125, 'CH000000125', 34, '&</a>', 0, 1, 2, 3, '2019-06-30 03:04:26', '2019-08-25 01:09:24'),
(126, 'CH000000126', 35, 'Public', 1, 1, 2, 1, '2019-06-30 03:04:48', '2019-08-25 01:10:40'),
(127, 'CH000000127', 35, 'Private', 0, 1, 2, 2, '2019-06-30 03:04:48', '2019-08-25 01:10:40'),
(128, 'CH000000128', 35, 'Protected', 0, 1, 2, 3, '2019-06-30 03:04:48', '2019-08-25 01:10:40'),
(129, 'CH000000129', 36, 'By using the params keyword, a method parameter can be specified which takes a variable number of arguments or even no argument.', 0, 1, 2, 1, '2019-06-30 03:05:32', '2019-08-25 01:12:04'),
(130, 'CH000000130', 36, 'Additional parameters are not permitted after the params keyword in a method declaration.', 0, 1, 2, 2, '2019-06-30 03:05:32', '2019-08-25 01:12:04'),
(131, 'CH000000131', 36, 'Only one params keyword is allowed in a method declaration.', 0, 1, 2, 3, '2019-06-30 03:05:32', '2019-08-25 01:12:04'),
(132, 'CH000000132', 37, 'elif', 1, 1, 2, 1, '2019-06-30 03:06:00', '2019-08-25 01:16:45'),
(133, 'CH000000133', 37, 'define', 0, 1, 2, 2, '2019-06-30 03:06:00', '2019-08-25 01:16:45'),
(134, 'CH000000134', 37, 'if', 0, 1, 2, 3, '2019-06-30 03:06:00', '2019-08-25 01:16:45'),
(135, 'CH000000135', 38, 'A try block identifies a block of code for which particular exceptions is activated.', 0, 1, 2, 1, '2019-06-30 03:06:30', '2019-08-25 01:18:06'),
(136, 'CH000000136', 38, 'It is followed by one or more catch blocks.', 0, 1, 2, 2, '2019-06-30 03:06:30', '2019-08-25 01:18:06'),
(137, 'CH000000137', 38, 'A and B', 1, 1, 2, 3, '2019-06-30 03:06:30', '2019-08-25 01:18:06'),
(138, 'CH000000138', 39, 'null', 0, 1, 2, 1, '2019-06-30 03:06:53', '2019-08-25 01:25:42'),
(139, 'CH000000139', 39, '0', 0, 1, 2, 2, '2019-06-30 03:06:54', '2019-08-25 01:25:42'),
(140, 'CH000000140', 39, 'Depends upon the type of variable', 1, 1, 2, 3, '2019-06-30 03:06:54', '2019-08-25 01:25:42'),
(141, 'CH000000141', 40, 'type.', 1, 1, 2, 1, '2019-06-30 03:07:13', '2019-08-25 01:27:52'),
(142, 'CH000000142', 40, 'object.', 0, 1, 2, 2, '2019-06-30 03:07:13', '2019-08-25 01:27:52'),
(143, 'CH000000143', 40, 'Both of the above.', 0, 1, 2, 3, '2019-06-30 03:07:13', '2019-08-25 01:27:52'),
(144, 'CH000000144', 41, 'public static int main(String[] args)', 0, 1, 2, 1, '2019-06-30 03:07:48', '2019-08-25 01:35:31'),
(145, 'CH000000145', 41, 'public int main(String[] args)', 0, 1, 2, 2, '2019-06-30 03:07:48', '2019-08-25 01:35:31'),
(146, 'CH000000146', 41, 'public static void main(String[] args)', 1, 1, 2, 3, '2019-06-30 03:07:48', '2019-08-25 01:35:31'),
(147, 'CH000000147', 42, 'static', 0, 1, 2, 1, '2019-06-30 03:08:07', '2019-08-25 01:36:58'),
(148, 'CH000000148', 42, 'Boolean', 1, 1, 2, 2, '2019-06-30 03:08:07', '2019-08-25 01:36:58'),
(149, 'CH000000149', 42, 'void', 0, 1, 2, 3, '2019-06-30 03:08:07', '2019-08-25 01:36:58'),
(150, 'CH000000150', 43, '8 bit', 1, 1, 2, 1, '2019-06-30 03:08:25', '2019-08-25 01:38:37'),
(151, 'CH000000151', 43, '16 bit', 0, 1, 2, 2, '2019-06-30 03:08:25', '2019-08-25 01:38:37'),
(152, 'CH000000152', 43, '32 bit', 0, 1, 2, 3, '2019-06-30 03:08:25', '2019-08-25 01:38:37'),
(153, 'CH000000153', 44, '8 bit', 0, 1, 2, 1, '2019-06-30 03:08:47', '2019-08-25 01:39:59'),
(154, 'CH000000154', 44, '16 bit', 0, 1, 2, 2, '2019-06-30 03:08:48', '2019-08-25 01:39:59'),
(155, 'CH000000155', 44, '32 bit', 1, 1, 2, 3, '2019-06-30 03:08:48', '2019-08-25 01:39:59'),
(156, 'CH000000156', 45, 'class variables, local variables', 0, 1, 2, 1, '2019-06-30 03:09:04', '2019-08-25 01:42:08'),
(157, 'CH000000157', 45, 'class variables, local variables, instance variables', 1, 1, 2, 2, '2019-06-30 03:09:04', '2019-08-25 01:42:08'),
(158, 'CH000000158', 45, 'class variables', 0, 1, 2, 3, '2019-06-30 03:09:04', '2019-08-25 01:42:08'),
(159, 'CH000000159', 46, 'Thread returns to the ready state.', 0, 1, 2, 1, '2019-06-30 03:09:21', '2019-08-25 01:43:22'),
(160, 'CH000000160', 46, 'Thread returns to the waiting state.', 1, 1, 2, 2, '2019-06-30 03:09:21', '2019-08-25 01:43:22'),
(161, 'CH000000161', 46, 'Thread starts running.', 0, 1, 2, 3, '2019-06-30 03:09:21', '2019-08-25 01:43:22'),
(162, 'CH000000162', 47, 'JVM invokes the thread\'s run() method when the thread is initially executed.', 1, 1, 2, 1, '2019-06-30 03:09:40', '2019-08-25 01:44:23'),
(163, 'CH000000163', 47, 'Main application running the thread.', 0, 1, 2, 2, '2019-06-30 03:09:40', '2019-08-25 01:44:23'),
(164, 'CH000000164', 47, 'start() method of the thread class.', 0, 1, 2, 3, '2019-06-30 03:09:40', '2019-08-25 01:44:23'),
(165, 'CH000000165', 48, 'JRE is a java based GUI application.', 0, 1, 2, 1, '2019-06-30 03:10:02', '2019-08-25 01:45:55'),
(166, 'CH000000166', 48, 'JRE is an application development framework.', 0, 1, 2, 2, '2019-06-30 03:10:02', '2019-08-25 01:45:55'),
(167, 'CH000000167', 48, 'JRE is an implementation of the Java Virtual Machine which executes Java programs.', 1, 1, 2, 3, '2019-06-30 03:10:02', '2019-08-25 01:45:55'),
(168, 'CH000000168', 49, 'JIT improves the runtime performance of computer programs based on bytecode.', 1, 1, 2, 1, '2019-06-30 03:10:33', '2019-08-25 01:47:18'),
(169, 'CH000000169', 49, 'JIT is an application development framework.', 0, 1, 2, 2, '2019-06-30 03:10:33', '2019-08-25 01:47:18'),
(170, 'CH000000170', 49, 'JIT is an implementation of the Java Virtual Machine which executes Java programs.', 0, 1, 2, 3, '2019-06-30 03:10:33', '2019-08-25 01:47:18'),
(171, 'CH000000171', 50, 'Thread returns to the ready state.', 1, 1, 2, 1, '2019-06-30 03:10:57', '2019-08-25 01:48:45'),
(172, 'CH000000172', 50, 'Thread returns to the waiting state.', 0, 1, 2, 2, '2019-06-30 03:10:57', '2019-08-25 01:48:45'),
(173, 'CH000000173', 50, 'Thread starts running.', 0, 1, 2, 3, '2019-06-30 03:10:57', '2019-08-25 01:48:45'),
(174, 'CH000000174', 51, '9', 0, 1, 2, 1, '2019-06-30 03:11:23', '2019-08-25 02:03:45'),
(175, 'CH000000175', 51, '8', 0, 1, 2, 2, '2019-06-30 03:11:23', '2019-08-25 02:03:45'),
(176, 'CH000000176', 51, 'Compilation error', 1, 1, 2, 3, '2019-06-30 03:11:23', '2019-08-25 02:03:45'),
(177, 'CH000000177', 52, '12', 0, 1, 2, 1, '2019-06-30 03:12:02', '2019-08-25 02:05:51'),
(178, 'CH000000178', 52, '200', 1, 1, 2, 2, '2019-06-30 03:12:02', '2019-08-25 02:05:51'),
(179, 'CH000000179', 52, '400', 0, 1, 2, 3, '2019-06-30 03:12:02', '2019-08-25 02:05:51'),
(180, 'CH000000180', 53, '1', 1, 1, 2, 1, '2019-06-30 03:12:25', '2019-08-25 02:07:30'),
(181, 'CH000000181', 53, '2', 0, 1, 2, 2, '2019-06-30 03:12:25', '2019-08-25 02:07:30'),
(182, 'CH000000182', 53, 'Runtime error', 0, 1, 2, 3, '2019-06-30 03:12:25', '2019-08-25 02:07:30'),
(183, 'CH000000183', 54, '0', 0, 1, 2, 1, '2019-06-30 03:12:44', '2019-08-25 02:09:36'),
(184, 'CH000000184', 54, '1', 0, 1, 2, 2, '2019-06-30 03:12:44', '2019-08-25 02:09:36'),
(185, 'CH000000185', 54, 'Runtime error', 0, 1, 2, 3, '2019-06-30 03:12:44', '2019-08-25 02:09:36'),
(186, 'CH000000186', 55, 'malloc', 0, 1, 2, 1, '2019-06-30 03:13:09', '2019-08-25 02:12:43'),
(187, 'CH000000187', 55, 'alloc', 0, 1, 2, 2, '2019-06-30 03:13:09', '2019-08-25 02:12:43'),
(188, 'CH000000188', 55, 'new', 1, 1, 2, 3, '2019-06-30 03:13:09', '2019-08-25 02:12:43'),
(189, 'CH000000189', 56, 'int arr[] = new int[5].', 0, 1, 2, 1, '2019-06-30 03:13:26', '2019-08-25 02:14:54'),
(190, 'CH000000190', 56, 'int [] arr = new int[5].', 0, 1, 2, 2, '2019-06-30 03:13:26', '2019-08-25 02:14:54'),
(191, 'CH000000191', 56, 'int arr[] = new int[5].', 0, 1, 2, 3, '2019-06-30 03:13:26', '2019-08-25 02:14:54'),
(192, 'CH000000192', 57, 'Row', 1, 1, 2, 1, '2019-06-30 03:13:44', '2019-08-25 02:18:55'),
(193, 'CH000000193', 57, 'Column', 0, 1, 2, 2, '2019-06-30 03:13:44', '2019-08-25 02:18:55'),
(194, 'CH000000194', 57, 'Both Row and Column', 0, 1, 2, 3, '2019-06-30 03:13:44', '2019-08-25 02:18:55'),
(195, 'CH000000195', 58, '0 2 4 6 8', 1, 1, 2, 1, '2019-06-30 03:14:01', '2019-08-25 02:21:34'),
(196, 'CH000000196', 58, '1 3 5 7 9', 0, 1, 2, 2, '2019-06-30 03:14:02', '2019-08-25 02:21:34'),
(197, 'CH000000197', 58, '0 1 2 3 4 5 6 7 8 9', 0, 1, 2, 3, '2019-06-30 03:14:02', '2019-08-25 02:21:34'),
(198, 'CH000000198', 59, '3', 0, 1, 2, 1, '2019-06-30 03:14:19', '2019-08-25 02:28:06'),
(199, 'CH000000199', 59, '0', 0, 1, 2, 2, '2019-06-30 03:14:20', '2019-08-25 02:28:06'),
(200, 'CH000000200', 59, '6', 0, 1, 2, 3, '2019-06-30 03:14:20', '2019-08-25 02:28:06'),
(201, 'CH000000201', 60, 'ArrayIndexOutOfBoundsException', 0, 1, 2, 1, '2019-06-30 03:14:39', '2019-08-25 02:30:47'),
(202, 'CH000000202', 60, 'ArrayStoreException', 1, 1, 2, 2, '2019-06-30 03:14:39', '2019-08-25 02:30:47'),
(203, 'CH000000203', 60, 'Compilation Error', 0, 1, 2, 3, '2019-06-30 03:14:39', '2019-08-25 02:30:47'),
(204, 'CH000000204', 61, 'heap space', 1, 1, 2, 1, '2019-06-30 03:14:59', '2019-08-25 02:32:31'),
(205, 'CH000000205', 61, 'stack space', 0, 1, 2, 2, '2019-06-30 03:14:59', '2019-08-25 02:32:31'),
(206, 'CH000000206', 61, 'heap space and stack space', 0, 1, 2, 3, '2019-06-30 03:14:59', '2019-08-25 02:32:31'),
(207, 'CH000000207', 62, 'The average velocity is 40 miles per hour.', 0, 1, 2, 1, '2019-06-30 09:48:38', '2019-08-06 18:48:33'),
(208, 'CH000000208', 62, 'The total displacement of the trip is 300 miles.', 0, 1, 2, 2, '2019-06-30 09:48:38', '2019-08-06 18:48:33'),
(209, 'CH000000209', 62, 'The average speed is 37.5 miles per hour.', 1, 1, 2, 3, '2019-06-30 09:48:38', '2019-08-06 18:48:33'),
(210, 'CH000000210', 63, 'Increasing', 1, 1, 2, 1, '2019-06-30 09:49:06', '2019-08-06 18:48:34'),
(211, 'CH000000211', 63, 'Decreasing', 0, 1, 2, 2, '2019-06-30 09:49:06', '2019-08-06 18:48:34'),
(212, 'CH000000212', 63, 'Not enough information', 0, 1, 2, 3, '2019-06-30 09:49:06', '2019-08-06 18:48:34'),
(213, 'CH000000213', 64, '30', 0, 1, 2, 1, '2019-06-30 09:49:30', '2019-08-17 22:55:22'),
(214, 'CH000000214', 64, '35', 1, 1, 2, 2, '2019-06-30 09:49:30', '2019-08-17 22:55:22'),
(215, 'CH000000215', 64, '32', 0, 1, 2, 3, '2019-06-30 09:49:31', '2019-08-17 22:55:22'),
(216, 'CH000000216', 65, 'Same maximum height', 0, 1, 2, 1, '2019-06-30 09:49:49', '2019-08-06 18:48:34'),
(217, 'CH000000217', 65, '30°', 0, 1, 2, 2, '2019-06-30 09:49:49', '2019-08-06 18:48:34'),
(218, 'CH000000218', 65, 'Not enough information', 0, 1, 2, 3, '2019-06-30 09:49:49', '2019-08-06 18:48:34'),
(219, 'CH000000219', 66, '121', 0, 1, 2, 1, '2019-06-30 09:50:07', '2019-08-06 18:48:35'),
(220, 'CH000000220', 66, '163', 1, 1, 2, 2, '2019-06-30 09:50:07', '2019-08-06 18:48:35'),
(221, 'CH000000221', 66, '199', 0, 1, 2, 3, '2019-06-30 09:50:07', '2019-08-06 18:48:35'),
(222, 'CH000000222', 67, 'A', 1, 1, 2, 1, '2019-06-30 09:50:24', '2019-09-01 01:51:03'),
(223, 'CH000000223', 67, 'B', 0, 1, 2, 2, '2019-06-30 09:50:24', '2019-09-01 01:51:03'),
(224, 'CH000000224', 67, 'C', 0, 1, 2, 3, '2019-06-30 09:50:24', '2019-09-01 01:51:03'),
(225, 'CH000000225', 68, '[[#img23]]', 1, 1, 2, 1, '2019-06-30 09:50:48', '2019-08-08 23:41:37'),
(226, 'CH000000226', 68, '[[#img24]]', 0, 1, 2, 2, '2019-06-30 09:50:48', '2019-08-08 23:41:37'),
(227, 'CH000000227', 68, '[[#img25]]', 0, 1, 2, 3, '2019-06-30 09:50:48', '2019-08-08 23:41:37'),
(228, 'CH000000228', 69, '23', 0, 1, 2, 1, '2019-06-30 09:51:07', '2019-08-06 18:48:35'),
(229, 'CH000000229', 69, '20', 0, 1, 2, 2, '2019-06-30 09:51:07', '2019-08-06 18:48:35'),
(230, 'CH000000230', 69, '22', 1, 1, 2, 3, '2019-06-30 09:51:07', '2019-08-06 18:48:36'),
(231, 'CH000000231', 70, '[[#img28]]', 1, 1, 2, 1, '2019-06-30 09:51:24', '2019-08-06 18:48:36'),
(232, 'CH000000232', 70, '[[#img29]]', 0, 1, 2, 2, '2019-06-30 09:51:24', '2019-08-06 18:48:36'),
(233, 'CH000000233', 70, '[[#img30]]', 0, 1, 2, 3, '2019-06-30 09:51:24', '2019-08-06 18:48:36'),
(234, 'CH000000234', 71, 'Temporary storage for instructions waiting to be processed', 1, 1, 2, 1, '2019-06-30 09:51:41', '2019-08-11 18:54:33'),
(235, 'CH000000235', 71, 'Extra storage space for temporary data files', 0, 1, 2, 2, '2019-06-30 09:51:41', '2019-08-11 18:54:33'),
(236, 'CH000000236', 71, 'The device that decodes and executes instructions', 0, 1, 2, 3, '2019-06-30 09:51:41', '2019-08-11 18:54:33'),
(237, 'CH000000237', 72, 'Operating system software', 0, 1, 2, 1, '2019-06-30 09:52:03', '2019-08-11 18:52:29'),
(238, 'CH000000238', 72, 'Utility software', 1, 1, 2, 2, '2019-06-30 09:52:03', '2019-08-11 18:52:29'),
(239, 'CH000000239', 72, 'Anti-virus software', 0, 1, 2, 3, '2019-06-30 09:52:03', '2019-08-11 18:52:29'),
(240, 'CH000000240', 73, 'CPU', 1, 1, 2, 1, '2019-06-30 09:52:20', '2019-08-11 18:41:22'),
(241, 'CH000000241', 73, 'RAM', 0, 1, 2, 2, '2019-06-30 09:52:20', '2019-08-11 18:41:22'),
(242, 'CH000000242', 73, 'Motherboard', 0, 1, 2, 3, '2019-06-30 09:52:20', '2019-08-11 18:41:22'),
(243, 'CH000000243', 74, 'Operating System', 0, 1, 2, 1, '2019-06-30 09:52:42', '2019-08-11 18:39:47'),
(244, 'CH000000244', 74, 'Motherboard', 0, 1, 2, 2, '2019-06-30 09:52:42', '2019-08-11 18:39:47'),
(245, 'CH000000245', 74, 'Computer', 1, 1, 2, 3, '2019-06-30 09:52:42', '2019-08-11 18:39:47'),
(246, 'CH000000246', 75, 'character', 0, 1, 2, 1, '2019-06-30 09:53:02', '2019-08-11 18:18:40'),
(247, 'CH000000247', 75, 'word', 1, 1, 2, 2, '2019-06-30 09:53:02', '2019-08-11 18:18:40'),
(248, 'CH000000248', 75, 'byte', 0, 1, 2, 3, '2019-06-30 09:53:02', '2019-08-11 18:18:40'),
(249, 'CH000000249', 76, 'spooling', 0, 1, 2, 1, '2019-06-30 09:53:23', '2019-08-11 18:17:08'),
(250, 'CH000000250', 76, 'buffering', 0, 1, 2, 2, '2019-06-30 09:53:23', '2019-08-11 18:17:08'),
(251, 'CH000000251', 76, 'virtual memory', 0, 1, 2, 3, '2019-06-30 09:53:23', '2019-08-11 18:17:08'),
(252, 'CH000000252', 77, 'logic error', 1, 1, 2, 1, '2019-06-30 09:53:48', '2019-08-11 07:04:38'),
(253, 'CH000000253', 77, 'syntax error', 0, 1, 2, 2, '2019-06-30 09:53:48', '2019-08-11 07:04:38'),
(254, 'CH000000254', 77, 'run time error', 0, 1, 2, 3, '2019-06-30 09:53:48', '2019-08-11 07:04:38'),
(255, 'CH000000255', 78, 'ASCII', 0, 1, 2, 1, '2019-06-30 09:54:10', '2019-09-01 01:51:19'),
(256, 'CH000000256', 78, 'Unicode', 1, 1, 2, 2, '2019-06-30 09:54:10', '2019-09-01 01:51:19'),
(257, 'CH000000257', 78, 'EBCDIC', 0, 1, 2, 3, '2019-06-30 09:54:10', '2019-09-01 01:51:19'),
(258, 'CH000000258', 79, 'Control unit', 0, 1, 2, 1, '2019-06-30 09:54:30', '2019-09-01 01:51:39'),
(259, 'CH000000259', 79, 'ALU', 0, 1, 2, 2, '2019-06-30 09:54:30', '2019-09-01 01:51:39'),
(260, 'CH000000260', 79, 'Registers', 0, 1, 2, 3, '2019-06-30 09:54:30', '2019-09-01 01:51:39'),
(261, 'CH000000261', 80, '(323)<sub>4</sub>', 1, 1, 2, 1, '2019-06-30 09:54:47', '2019-08-11 06:58:42'),
(262, 'CH000000262', 80, '(26)<sub>16</sub>', 0, 1, 2, 2, '2019-06-30 09:54:47', '2019-08-11 06:58:42'),
(263, 'CH000000263', 80, '(63)<sub>8</sub>', 0, 1, 2, 3, '2019-06-30 09:54:47', '2019-08-11 06:58:42'),
(264, 'CH000000264', 81, 'memory adjustment', 0, 1, 2, 1, '2019-06-30 09:55:06', '2019-08-11 06:55:06'),
(265, 'CH000000265', 81, 'virtual storage', 0, 1, 2, 2, '2019-06-30 09:55:06', '2019-08-11 06:55:06'),
(266, 'CH000000266', 81, 'memory management', 1, 1, 2, 3, '2019-06-30 09:55:06', '2019-08-11 06:55:06'),
(267, 'CH000000267', 82, '-23', 0, 1, 2, 1, '2019-06-30 09:55:36', '2019-08-11 06:53:27'),
(268, 'CH000000268', 82, '-9', 1, 1, 2, 2, '2019-06-30 09:55:36', '2019-08-11 06:53:27'),
(269, 'CH000000269', 82, '-7', 0, 1, 2, 3, '2019-06-30 09:55:36', '2019-08-11 06:53:27'),
(270, 'CH000000270', 83, 'simplex', 1, 1, 2, 1, '2019-06-30 09:55:55', '2019-08-11 06:51:38'),
(271, 'CH000000271', 83, 'half-duplex', 0, 1, 2, 2, '2019-06-30 09:55:55', '2019-08-11 06:51:38'),
(272, 'CH000000272', 83, 'full-duplex', 0, 1, 2, 3, '2019-06-30 09:55:55', '2019-08-11 06:51:38'),
(273, 'CH000000273', 84, 'Data flow', 0, 1, 2, 1, '2019-06-30 09:56:12', '2019-08-11 06:50:00'),
(274, 'CH000000274', 84, 'Mode of operation', 0, 1, 2, 2, '2019-06-30 09:56:12', '2019-08-11 06:50:00'),
(275, 'CH000000275', 84, 'Topology', 1, 1, 2, 3, '2019-06-30 09:56:12', '2019-08-11 06:50:00'),
(276, 'CH000000276', 85, '107', 0, 1, 2, 1, '2019-06-30 09:56:36', '2019-08-11 06:39:11'),
(277, 'CH000000277', 85, '231', 1, 1, 2, 2, '2019-06-30 09:56:36', '2019-08-11 06:39:11'),
(278, 'CH000000278', 85, '153', 0, 1, 2, 3, '2019-06-30 09:56:36', '2019-08-11 06:39:11'),
(279, 'CH000000279', 86, 'data transfer time', 0, 1, 2, 1, '2019-06-30 09:56:58', '2019-08-11 06:36:46'),
(280, 'CH000000280', 86, 'direct time', 0, 1, 2, 2, '2019-06-30 09:56:58', '2019-08-11 06:36:46'),
(281, 'CH000000281', 86, 'seek time', 1, 1, 2, 3, '2019-06-30 09:56:58', '2019-08-11 06:36:46'),
(282, 'CH000000282', 87, 'fetch, execute, store and decode', 0, 1, 2, 1, '2019-06-30 09:57:17', '2019-08-11 06:34:54'),
(283, 'CH000000283', 87, 'decode, execute, store and fetch', 0, 1, 2, 2, '2019-06-30 09:57:17', '2019-08-11 06:34:54'),
(284, 'CH000000284', 87, 'decode, fetch, store and execute', 0, 1, 2, 3, '2019-06-30 09:57:17', '2019-08-11 06:34:54'),
(285, 'CH000000285', 88, 'ten', 0, 1, 2, 1, '2019-06-30 09:57:34', '2019-09-01 01:50:16'),
(286, 'CH000000286', 88, 'a few', 0, 1, 2, 2, '2019-06-30 09:57:34', '2019-09-01 01:50:16'),
(287, 'CH000000287', 88, 'twenty', 0, 1, 2, 3, '2019-06-30 09:57:34', '2019-09-01 01:50:16'),
(288, 'CH000000288', 89, 'Virtual private network', 0, 1, 2, 1, '2019-06-30 09:57:52', '2019-08-11 06:25:28'),
(289, 'CH000000289', 89, 'Virtual memory', 1, 1, 2, 2, '2019-06-30 09:57:52', '2019-08-11 06:25:28'),
(290, 'CH000000290', 89, 'Virtual Machine', 0, 1, 2, 3, '2019-06-30 09:57:52', '2019-08-11 06:25:28'),
(291, 'CH000000291', 90, 'bit', 0, 1, 2, 1, '2019-06-30 09:58:12', '2019-09-01 01:49:58'),
(292, 'CH000000292', 90, 'byte', 1, 1, 2, 2, '2019-06-30 09:58:12', '2019-09-01 01:49:58'),
(293, 'CH000000293', 90, 'kilobyte', 0, 1, 2, 3, '2019-06-30 09:58:12', '2019-09-01 01:49:58'),
(294, 'CH000000294', 91, 'A', 0, 1, 2, 1, '2019-06-30 09:58:35', '2019-08-06 18:48:41'),
(295, 'CH000000295', 91, 'B', 0, 1, 2, 2, '2019-06-30 09:58:35', '2019-08-06 18:48:41'),
(296, 'CH000000296', 91, 'C', 1, 1, 2, 3, '2019-06-30 09:58:35', '2019-08-06 18:48:41'),
(297, 'CH000000297', 92, 'x < 6', 0, 1, 2, 1, '2019-06-30 09:59:38', '2019-08-26 05:03:48'),
(298, 'CH000000298', 92, 'x > 1', 0, 1, 2, 2, '2019-06-30 09:59:38', '2019-08-26 05:03:48'),
(299, 'CH000000299', 92, 'x < -1', 1, 1, 2, 3, '2019-06-30 09:59:38', '2019-08-26 05:03:48'),
(300, 'CH000000300', 93, 'x ≤ 5', 0, 1, 2, 1, '2019-06-30 10:00:00', '2019-08-26 05:05:11'),
(301, 'CH000000301', 93, 'x ≥ 5', 1, 1, 2, 2, '2019-06-30 10:00:00', '2019-08-26 05:05:11'),
(302, 'CH000000302', 93, 'x ≥ -5', 0, 1, 2, 3, '2019-06-30 10:00:01', '2019-08-26 05:05:11'),
(303, 'CH000000303', 94, '[[#img36]]', 0, 1, 2, 1, '2019-06-30 10:01:01', '2019-08-26 05:10:31'),
(304, 'CH000000304', 94, '[[#img37]]', 0, 1, 2, 2, '2019-06-30 10:01:01', '2019-08-26 05:10:31'),
(305, 'CH000000305', 94, '[[#img38]]', 0, 1, 2, 3, '2019-06-30 10:01:01', '2019-08-26 05:10:31'),
(306, 'CH000000306', 95, '12i', 1, 1, 2, 1, '2019-06-30 10:01:19', '2019-08-26 18:04:07'),
(307, 'CH000000307', 95, 'You cannot find the square root of a negative number', 0, 1, 2, 2, '2019-06-30 10:01:19', '2019-08-26 18:04:07'),
(308, 'CH000000308', 95, '-12', 0, 1, 2, 3, '2019-06-30 10:01:19', '2019-08-26 18:04:07'),
(309, 'CH000000309', 96, '3i', 1, 1, 2, 1, '2019-06-30 10:01:38', '2019-08-26 05:13:51'),
(310, 'CH000000310', 96, 'A negative number cannot have a square root', 0, 1, 2, 2, '2019-06-30 10:01:38', '2019-08-26 05:13:51'),
(311, 'CH000000311', 96, '-3', 0, 1, 2, 3, '2019-06-30 10:01:38', '2019-08-26 05:13:51'),
(312, 'CH000000312', 97, 'i - 5', 0, 1, 2, 1, '2019-06-30 10:02:04', '2019-08-26 05:15:14'),
(313, 'CH000000313', 97, '7 - 3i', 0, 1, 2, 2, '2019-06-30 10:02:04', '2019-08-26 05:15:14'),
(314, 'CH000000314', 97, 'i - 12', 1, 1, 2, 3, '2019-06-30 10:02:04', '2019-08-26 05:15:14'),
(315, 'CH000000315', 98, '(5,3i),(5,-3i)', 0, 1, 2, 1, '2019-06-30 10:02:22', '2019-08-26 05:16:30'),
(316, 'CH000000316', 98, '(5 + 3i),(5 - 3i)', 1, 1, 2, 2, '2019-06-30 10:02:22', '2019-08-26 05:16:30'),
(317, 'CH000000317', 98, 'No possible solutions', 0, 1, 2, 3, '2019-06-30 10:02:22', '2019-08-26 05:16:30'),
(318, 'CH000000318', 99, '6.25', 0, 1, 2, 1, '2019-06-30 10:02:38', '2019-08-26 05:18:10'),
(319, 'CH000000319', 99, '1.756', 0, 1, 2, 2, '2019-06-30 10:02:39', '2019-08-26 05:18:10'),
(320, 'CH000000320', 99, '2.322', 1, 1, 2, 3, '2019-06-30 10:02:39', '2019-08-26 05:18:10'),
(321, 'CH000000321', 100, '[[#img41]]', 1, 1, 2, 1, '2019-06-30 10:02:56', '2019-08-26 05:24:41'),
(322, 'CH000000322', 100, 'None of the answers are correct.', 0, 1, 2, 2, '2019-06-30 10:02:56', '2019-08-26 05:24:41'),
(323, 'CH000000323', 100, '[[#img42]]', 0, 1, 2, 3, '2019-06-30 10:02:56', '2019-08-26 05:24:41'),
(324, 'CH000000324', 101, '[[#img44]]', 1, 1, 2, 1, '2019-06-30 10:03:13', '2019-08-26 05:28:58'),
(325, 'CH000000325', 101, '[[#img45]]', 0, 1, 2, 2, '2019-06-30 10:03:13', '2019-08-26 05:28:58'),
(326, 'CH000000326', 101, '[[#img46]]', 0, 1, 2, 3, '2019-06-30 10:03:13', '2019-08-26 05:28:58'),
(327, 'CH000000327', 102, '2c-9 ≥ 4x and 4 < x + y (Solid and dotted lines respectively)', 1, 1, 2, 1, '2019-06-30 10:03:30', '2019-08-26 05:34:25'),
(328, 'CH000000328', 102, 'x + 8 > y and 3y < x (Dotted and solid lines respectively)', 0, 1, 2, 2, '2019-06-30 10:03:30', '2019-08-26 05:34:25'),
(329, 'CH000000329', 102, '2A ≥ y-8 and y ≥ x (Two dotted lines)', 0, 1, 2, 3, '2019-06-30 10:03:30', '2019-08-26 05:34:25'),
(330, 'CH000000330', 103, '2A ≥ y-8 and y ≥ x (Two dotted lines)', 0, 1, 2, 1, '2019-06-30 10:03:52', '2019-08-26 17:19:01'),
(331, 'CH000000331', 103, '2c-9 ≥ 4x and 4 < x + y (Solid and dotted lines respectively)', 1, 1, 2, 2, '2019-06-30 10:03:52', '2019-08-26 17:19:01'),
(332, 'CH000000332', 103, 'x + 8 > y and 3y < x (Dotted and solid lines respectively)', 0, 1, 2, 3, '2019-06-30 10:03:52', '2019-08-26 17:19:01'),
(333, 'CH000000333', 104, '(x-7)<sup>2</sup> +8', 0, 1, 2, 1, '2019-06-30 10:04:22', '2019-08-26 17:24:29'),
(334, 'CH000000334', 104, '(x+5)<sup>2</sup> +16', 1, 1, 2, 2, '2019-06-30 10:04:22', '2019-08-26 17:24:29'),
(335, 'CH000000335', 104, '(x+7)<sup>2</sup> -8', 0, 1, 2, 3, '2019-06-30 10:04:22', '2019-08-26 17:24:29'),
(336, 'CH000000336', 105, '(x-8) and (x+3)', 0, 1, 2, 1, '2019-06-30 10:04:42', '2019-08-26 17:25:59'),
(337, 'CH000000337', 105, '(x-12) and (x+2)', 1, 1, 2, 2, '2019-06-30 10:04:42', '2019-08-26 17:25:59'),
(338, 'CH000000338', 105, '(x-6) and (x+4)', 0, 1, 2, 3, '2019-06-30 10:04:42', '2019-08-26 17:25:59'),
(339, 'CH000000339', 106, '20', 0, 1, 2, 1, '2019-06-30 10:05:02', '2019-08-26 17:33:30'),
(340, 'CH000000340', 106, '4', 0, 1, 2, 2, '2019-06-30 10:05:02', '2019-08-26 17:33:30'),
(341, 'CH000000341', 106, '0.4', 1, 1, 2, 3, '2019-06-30 10:05:02', '2019-08-26 17:33:30'),
(342, 'CH000000342', 107, '11', 0, 1, 2, 1, '2019-06-30 10:05:19', '2019-08-26 17:34:51'),
(343, 'CH000000343', 107, '48', 0, 1, 2, 2, '2019-06-30 10:05:19', '2019-08-26 17:34:51'),
(344, 'CH000000344', 107, '-12', 0, 1, 2, 3, '2019-06-30 10:05:19', '2019-08-26 17:34:51'),
(345, 'CH000000345', 108, '1 846 000', 1, 1, 2, 1, '2019-06-30 10:05:39', '2019-08-26 17:38:06'),
(346, 'CH000000346', 108, '1 852 000', 0, 1, 2, 2, '2019-06-30 10:05:39', '2019-08-26 17:38:06'),
(347, 'CH000000347', 108, '1 000 000', 0, 1, 2, 3, '2019-06-30 10:05:39', '2019-08-26 17:38:06'),
(348, 'CH000000348', 109, 'on the y axis', 1, 1, 2, 1, '2019-06-30 10:06:00', '2019-08-26 17:39:18'),
(349, 'CH000000349', 109, 'on the x axis', 0, 1, 2, 2, '2019-06-30 10:06:00', '2019-08-26 17:39:18'),
(350, 'CH000000350', 109, 'on the line y = x', 0, 1, 2, 3, '2019-06-30 10:06:00', '2019-08-26 17:39:18'),
(351, 'CH000000351', 110, 'are parallel', 0, 1, 2, 1, '2019-06-30 10:06:19', '2019-08-26 18:04:41'),
(352, 'CH000000352', 110, 'intersect at one point', 0, 1, 2, 2, '2019-06-30 10:06:19', '2019-08-26 18:04:41'),
(353, 'CH000000353', 110, 'intersect at two points', 0, 1, 2, 3, '2019-06-30 10:06:19', '2019-08-26 18:04:41'),
(354, 'CH000000354', 111, '(0 , π/2)', 0, 1, 2, 1, '2019-06-30 10:06:39', '2019-08-26 17:41:41'),
(355, 'CH000000355', 111, '(π/2 , π)', 1, 1, 2, 2, '2019-06-30 10:06:39', '2019-08-26 17:41:41'),
(356, 'CH000000356', 111, '(π , 3 π / 2)', 0, 1, 2, 3, '2019-06-30 10:06:39', '2019-08-26 17:41:41'),
(357, 'CH000000357', 112, '10', 0, 1, 2, 1, '2019-06-30 10:07:28', '2019-08-26 17:44:12'),
(358, 'CH000000358', 112, '15', 0, 1, 2, 2, '2019-06-30 10:07:28', '2019-08-26 17:44:12'),
(359, 'CH000000359', 112, '2100', 1, 1, 2, 3, '2019-06-30 10:07:28', '2019-08-26 17:44:12'),
(360, 'CH000000360', 113, '5!', 0, 1, 2, 1, '2019-06-30 10:07:46', '2019-08-26 17:46:13'),
(361, 'CH000000361', 113, '3!', 1, 1, 2, 2, '2019-06-30 10:07:47', '2019-08-26 17:46:13'),
(362, 'CH000000362', 113, '2!', 0, 1, 2, 3, '2019-06-30 10:07:47', '2019-08-26 17:46:13'),
(363, 'CH000000363', 114, 'mean = 15 , standard deviation = 6', 0, 1, 2, 1, '2019-06-30 10:08:04', '2019-08-26 17:48:45'),
(364, 'CH000000364', 114, 'mean = 10 , standard deviation = 6', 0, 1, 2, 2, '2019-06-30 10:08:04', '2019-08-26 17:48:45'),
(365, 'CH000000365', 114, 'mean = 15 , standard deviation = 1', 1, 1, 2, 3, '2019-06-30 10:08:04', '2019-08-26 17:48:45'),
(366, 'CH000000366', 115, '394', 0, 1, 2, 1, '2019-06-30 10:08:29', '2019-08-26 17:59:24'),
(367, 'CH000000367', 115, '250', 0, 1, 2, 2, '2019-06-30 10:08:29', '2019-08-26 17:59:24'),
(368, 'CH000000368', 115, '400', 0, 1, 2, 3, '2019-06-30 10:08:29', '2019-08-26 17:59:24'),
(369, 'CH000000369', 116, 'an odd function', 0, 1, 2, 1, '2019-06-30 10:08:51', '2019-08-26 18:02:17'),
(370, 'CH000000370', 116, 'an even function', 1, 1, 2, 2, '2019-06-30 10:08:51', '2019-08-26 18:02:17'),
(371, 'CH000000371', 116, 'neither odd nor even', 0, 1, 2, 3, '2019-06-30 10:08:51', '2019-08-26 18:02:17'),
(372, 'CH000000372', 117, '2 π', 0, 1, 2, 1, '2019-06-30 10:09:09', '2019-08-26 18:06:18'),
(373, 'CH000000373', 117, '2 π / 3', 0, 1, 2, 2, '2019-06-30 10:09:09', '2019-08-26 18:06:18'),
(374, 'CH000000374', 117, 'π / 3', 1, 1, 2, 3, '2019-06-30 10:09:09', '2019-08-26 18:06:18'),
(375, 'CH000000375', 118, '1 cm', 0, 1, 2, 1, '2019-06-30 10:09:27', '2019-08-26 18:08:41'),
(376, 'CH000000376', 118, '1.2 cm', 1, 1, 2, 2, '2019-06-30 10:09:27', '2019-08-26 18:08:41'),
(377, 'CH000000377', 118, '2 cm', 0, 1, 2, 3, '2019-06-30 10:09:27', '2019-08-26 18:08:41'),
(378, 'CH000000378', 119, 'forEach loop', 0, 1, 2, 1, '2019-06-30 10:10:06', '2019-08-25 05:57:40'),
(379, 'CH000000379', 119, 'do while', 0, 1, 2, 2, '2019-06-30 10:10:06', '2019-08-25 05:57:40'),
(380, 'CH000000380', 119, 'while', 0, 1, 2, 3, '2019-06-30 10:10:06', '2019-08-25 05:57:40'),
(381, 'CH000000381', 120, 'Relational operators', 0, 1, 2, 1, '2019-06-30 10:10:23', '2019-08-25 05:59:44'),
(382, 'CH000000382', 120, 'Bitwise operators', 1, 1, 2, 2, '2019-06-30 10:10:23', '2019-08-25 05:59:44'),
(383, 'CH000000383', 120, 'Logical Operators', 0, 1, 2, 3, '2019-06-30 10:10:23', '2019-08-25 05:59:44'),
(384, 'CH000000384', 121, 'RElational operators', 0, 1, 2, 1, '2019-06-30 10:10:41', '2019-08-25 06:01:29'),
(385, 'CH000000385', 121, 'Bitwise operators', 0, 1, 2, 2, '2019-06-30 10:10:41', '2019-08-25 06:01:29'),
(386, 'CH000000386', 121, 'Logical operators', 1, 1, 2, 3, '2019-06-30 10:10:41', '2019-08-25 06:01:29'),
(387, 'CH000000387', 122, 'unary operators', 1, 1, 2, 1, '2019-06-30 10:11:03', '2019-08-25 06:03:30'),
(388, 'CH000000388', 122, 'Binary operators', 0, 1, 2, 2, '2019-06-30 10:11:03', '2019-08-25 06:03:30'),
(389, 'CH000000389', 122, 'Logical operators', 0, 1, 2, 3, '2019-06-30 10:11:04', '2019-08-25 06:03:30'),
(390, 'CH000000390', 123, 'Relational operators', 1, 1, 2, 1, '2019-06-30 10:11:22', '2019-08-25 06:06:02'),
(391, 'CH000000391', 123, 'Binary operators', 0, 1, 2, 2, '2019-06-30 10:11:22', '2019-08-25 06:06:02'),
(392, 'CH000000392', 123, 'Logical operators', 0, 1, 2, 3, '2019-06-30 10:11:22', '2019-08-25 06:06:02'),
(393, 'CH000000393', 124, 'Reference type', 1, 1, 2, 1, '2019-06-30 10:11:37', '2019-08-25 06:18:03'),
(394, 'CH000000394', 124, 'Value types', 0, 1, 2, 2, '2019-06-30 10:11:37', '2019-08-25 06:18:03'),
(395, 'CH000000395', 124, 'Data Type', 0, 1, 2, 3, '2019-06-30 10:11:37', '2019-08-25 06:18:03'),
(396, 'CH000000396', 125, 'Reference Type', 0, 1, 2, 1, '2019-06-30 10:11:59', '2019-08-25 06:19:40'),
(397, 'CH000000397', 125, 'Value Type', 1, 1, 2, 2, '2019-06-30 10:11:59', '2019-08-25 06:19:40'),
(398, 'CH000000398', 125, 'Data Type', 0, 1, 2, 3, '2019-06-30 10:11:59', '2019-08-25 06:19:40'),
(399, 'CH000000399', 126, 'CheckListBox control', 0, 1, 2, 1, '2019-06-30 10:12:18', '2019-08-25 06:30:16'),
(400, 'CH000000400', 126, 'ListBox control', 1, 1, 2, 2, '2019-06-30 10:12:18', '2019-08-25 06:30:16'),
(401, 'CH000000401', 126, 'TextBox control', 0, 1, 2, 3, '2019-06-30 10:12:18', '2019-08-25 06:30:16'),
(402, 'CH000000402', 127, 'Radio Button', 0, 1, 2, 1, '2019-06-30 10:12:52', '2019-08-25 06:32:37'),
(403, 'CH000000403', 127, 'Textbox control', 0, 1, 2, 2, '2019-06-30 10:12:52', '2019-08-25 06:32:37'),
(404, 'CH000000404', 127, 'Button control', 1, 1, 2, 3, '2019-06-30 10:12:52', '2019-08-25 06:32:37'),
(405, 'CH000000405', 128, 'MultiLine Property', 1, 1, 2, 1, '2019-06-30 10:13:14', '2019-08-25 06:34:31'),
(406, 'CH000000406', 128, 'Wordwrap property', 0, 1, 2, 2, '2019-06-30 10:13:14', '2019-08-25 06:34:31'),
(407, 'CH000000407', 128, 'Text Property', 0, 1, 2, 3, '2019-06-30 10:13:14', '2019-08-25 06:34:31'),
(408, 'CH000000408', 129, 'GroupBox control', 0, 1, 2, 1, '2019-06-30 10:13:31', '2019-08-25 06:36:26'),
(409, 'CH000000409', 129, 'LinkLabel control', 1, 1, 2, 2, '2019-06-30 10:13:31', '2019-08-25 06:36:26'),
(410, 'CH000000410', 129, 'ListView Control', 0, 1, 2, 3, '2019-06-30 10:13:31', '2019-08-25 06:36:26'),
(411, 'CH000000411', 130, 'NumericUpDown Control', 1, 1, 2, 1, '2019-06-30 10:13:48', '2019-08-25 06:39:17'),
(412, 'CH000000412', 130, 'GroupBox Control', 0, 1, 2, 2, '2019-06-30 10:13:48', '2019-08-25 06:39:17'),
(413, 'CH000000413', 130, 'ListBox control', 0, 1, 2, 3, '2019-06-30 10:13:48', '2019-08-25 06:39:17'),
(414, 'CH000000414', 131, 'Get()', 0, 1, 2, 1, '2019-06-30 10:14:09', '2019-08-25 06:41:13'),
(415, 'CH000000415', 131, 'Enable()', 0, 1, 2, 2, '2019-06-30 10:14:09', '2019-08-25 06:41:13'),
(416, 'CH000000416', 131, 'Show()', 1, 1, 2, 3, '2019-06-30 10:14:09', '2019-08-25 06:41:13'),
(417, 'CH000000417', 132, 'If', 0, 1, 2, 1, '2019-06-30 10:14:31', '2019-08-26 04:14:59'),
(418, 'CH000000418', 132, 'Switch', 1, 1, 2, 2, '2019-06-30 10:14:31', '2019-08-26 04:14:59'),
(419, 'CH000000419', 132, 'For', 0, 1, 2, 3, '2019-06-30 10:14:31', '2019-08-26 04:14:59'),
(420, 'CH000000420', 133, 'Web forms', 0, 1, 2, 1, '2019-06-30 10:14:55', '2019-08-26 04:19:29'),
(421, 'CH000000421', 133, 'Window Forms', 1, 1, 2, 2, '2019-06-30 10:14:55', '2019-08-26 04:19:29'),
(422, 'CH000000422', 133, 'Application Forms', 0, 1, 2, 3, '2019-06-30 10:14:55', '2019-08-26 04:19:29'),
(423, 'CH000000423', 134, 'optional', 1, 1, 2, 1, '2019-06-30 10:15:12', '2019-08-26 04:20:50'),
(424, 'CH000000424', 134, 'named', 0, 1, 2, 2, '2019-06-30 10:15:12', '2019-08-26 04:20:50'),
(425, 'CH000000425', 134, 'out', 0, 1, 2, 3, '2019-06-30 10:15:12', '2019-08-26 04:20:50'),
(426, 'CH000000426', 135, 'dynamic', 1, 1, 2, 1, '2019-06-30 10:15:31', '2019-08-26 04:22:21'),
(427, 'CH000000427', 135, 'object', 0, 1, 2, 2, '2019-06-30 10:15:31', '2019-08-26 04:22:21'),
(428, 'CH000000428', 135, 'ref', 0, 1, 2, 3, '2019-06-30 10:15:31', '2019-08-26 04:22:21'),
(429, 'CH000000429', 136, 'creates a button control', 0, 1, 2, 1, '2019-06-30 10:15:48', '2019-08-26 04:24:45'),
(430, 'CH000000430', 136, 'initializes a button control', 0, 1, 2, 2, '2019-06-30 10:15:48', '2019-08-26 04:24:45'),
(431, 'CH000000431', 136, 'instantiates button control', 0, 1, 2, 3, '2019-06-30 10:15:48', '2019-08-26 04:24:45'),
(432, 'CH000000432', 137, 'Override the parent class methods but maintain the implementation', 0, 1, 2, 1, '2019-06-30 10:16:04', '2019-08-26 04:32:00'),
(433, 'CH000000433', 137, 'Maintain the same return type and arguments as the parent class, but implement it differently', 1, 1, 2, 2, '2019-06-30 10:16:04', '2019-08-26 04:32:00'),
(434, 'CH000000434', 137, 'Have different return types and arguments than the parent class', 0, 1, 2, 3, '2019-06-30 10:16:04', '2019-08-26 04:32:00'),
(435, 'CH000000435', 138, 'Trys', 0, 1, 2, 1, '2019-06-30 10:16:27', '2019-08-26 04:33:10'),
(436, 'CH000000436', 138, 'Catches', 0, 1, 2, 2, '2019-06-30 10:16:27', '2019-08-26 04:33:10'),
(437, 'CH000000437', 138, 'Throws', 1, 1, 2, 3, '2019-06-30 10:16:27', '2019-08-26 04:33:10'),
(438, 'CH000000438', 139, 'Class()', 0, 1, 2, 1, '2019-06-30 10:16:44', '2019-08-26 04:35:51'),
(439, 'CH000000439', 139, 'Main()', 1, 1, 2, 2, '2019-06-30 10:16:44', '2019-08-26 04:35:51'),
(440, 'CH000000440', 139, 'Submain()', 0, 1, 2, 3, '2019-06-30 10:16:44', '2019-08-26 04:35:51'),
(441, 'CH000000441', 140, 'Constant', 0, 1, 2, 1, '2019-06-30 10:17:02', '2019-08-26 04:36:55'),
(442, 'CH000000442', 140, 'Reference type', 0, 1, 2, 2, '2019-06-30 10:17:02', '2019-08-26 04:36:55'),
(443, 'CH000000443', 140, 'Variable', 1, 1, 2, 3, '2019-06-30 10:17:02', '2019-08-26 04:36:55'),
(444, 'CH000000444', 141, 'Relation', 0, 1, 2, 1, '2019-06-30 10:17:59', '2019-08-25 04:38:28'),
(445, 'CH000000445', 141, 'Function', 0, 1, 2, 2, '2019-06-30 10:17:59', '2019-08-25 04:38:28'),
(446, 'CH000000446', 141, 'Set', 1, 1, 2, 3, '2019-06-30 10:17:59', '2019-08-25 04:38:28'),
(447, 'CH000000447', 142, '{1, 2, 3}', 0, 1, 2, 1, '2019-06-30 10:18:20', '2019-08-25 04:40:12'),
(448, 'CH000000448', 142, '{1, 3, 5, 7, 9}', 1, 1, 2, 2, '2019-06-30 10:18:20', '2019-08-25 04:40:12'),
(449, 'CH000000449', 142, '{1, 2, 5, 9}', 0, 1, 2, 3, '2019-06-30 10:18:20', '2019-08-25 04:40:12'),
(450, 'CH000000450', 143, 'One', 1, 1, 2, 1, '2019-06-30 10:18:42', '2019-08-25 04:41:28'),
(451, 'CH000000451', 143, 'Two', 0, 1, 2, 2, '2019-06-30 10:18:42', '2019-08-25 04:41:28'),
(452, 'CH000000452', 143, 'Zero', 0, 1, 2, 3, '2019-06-30 10:18:42', '2019-08-25 04:41:28'),
(453, 'CH000000453', 144, '10', 0, 1, 2, 1, '2019-06-30 10:18:59', '2019-08-25 04:42:58'),
(454, 'CH000000454', 144, '5', 1, 1, 2, 2, '2019-06-30 10:19:00', '2019-08-25 04:42:58'),
(455, 'CH000000455', 144, '3', 0, 1, 2, 3, '2019-06-30 10:19:00', '2019-08-25 04:42:58'),
(456, 'CH000000456', 145, '{(1, a), (1, b), (2, a), (b, b)}', 0, 1, 2, 1, '2019-06-30 10:19:20', '2019-08-25 04:44:34'),
(457, 'CH000000457', 145, '{(1, 1), (2, 2), (a, a), (b, b)}', 0, 1, 2, 2, '2019-06-30 10:19:20', '2019-08-25 04:44:34'),
(458, 'CH000000458', 145, '{(1, a), (2, a), (1, b), (2, b)}', 1, 1, 2, 3, '2019-06-30 10:19:20', '2019-08-25 04:44:34'),
(459, 'CH000000459', 146, 'A = {1, 2} and B = {1}', 0, 1, 2, 1, '2019-06-30 10:19:37', '2019-08-25 04:46:16'),
(460, 'CH000000460', 146, 'A = {1, 2} and B = {1, 2, 3}', 0, 1, 2, 2, '2019-06-30 10:19:37', '2019-08-25 04:46:16'),
(461, 'CH000000461', 146, 'A = {1, 2, 3} and B = {2, 1, 3}', 1, 1, 2, 3, '2019-06-30 10:19:37', '2019-08-25 04:46:16'),
(462, 'CH000000462', 147, 'Infinite', 1, 1, 2, 1, '2019-06-30 10:19:55', '2019-08-25 04:47:41'),
(463, 'CH000000463', 147, 'Finite', 0, 1, 2, 2, '2019-06-30 10:19:55', '2019-08-25 04:47:41'),
(464, 'CH000000464', 147, 'Subset', 0, 1, 2, 3, '2019-06-30 10:19:55', '2019-08-25 04:47:41'),
(465, 'CH000000465', 148, '8', 1, 1, 2, 1, '2019-06-30 10:20:10', '2019-08-25 04:48:58'),
(466, 'CH000000466', 148, '6', 0, 1, 2, 2, '2019-06-30 10:20:10', '2019-08-25 04:48:58'),
(467, 'CH000000467', 148, '7', 0, 1, 2, 3, '2019-06-30 10:20:10', '2019-08-25 04:48:58'),
(468, 'CH000000468', 149, '{1, 2, 6, 1}', 0, 1, 2, 1, '2019-06-30 10:20:24', '2019-08-25 04:52:33'),
(469, 'CH000000469', 149, '{1, 2, 5, 6}', 1, 1, 2, 2, '2019-06-30 10:20:24', '2019-08-25 04:52:33'),
(470, 'CH000000470', 149, '{1, 2, 1, 2}', 0, 1, 2, 3, '2019-06-30 10:20:24', '2019-08-25 04:52:33'),
(471, 'CH000000471', 150, '{1, 2}', 1, 1, 2, 1, '2019-06-30 10:20:42', '2019-08-25 04:53:42'),
(472, 'CH000000472', 150, '{5, 6}', 0, 1, 2, 2, '2019-06-30 10:20:42', '2019-08-25 04:53:42'),
(473, 'CH000000473', 150, '{2, 5}', 0, 1, 2, 3, '2019-06-30 10:20:42', '2019-08-25 04:53:42'),
(474, 'CH000000474', 151, 'Union', 0, 1, 2, 1, '2019-06-30 10:21:02', '2019-08-25 04:54:40'),
(475, 'CH000000475', 151, 'Difference', 0, 1, 2, 2, '2019-06-30 10:21:02', '2019-08-25 04:54:40'),
(476, 'CH000000476', 151, 'Intersection', 1, 1, 2, 3, '2019-06-30 10:21:02', '2019-08-25 04:54:40'),
(477, 'CH000000477', 152, '0101010101', 1, 1, 2, 1, '2019-06-30 10:21:20', '2019-08-25 04:58:27'),
(478, 'CH000000478', 152, '1010101010', 0, 1, 2, 2, '2019-06-30 10:21:20', '2019-08-25 04:58:27'),
(479, 'CH000000479', 152, '1010010101', 0, 1, 2, 3, '2019-06-30 10:21:20', '2019-08-25 04:58:27'),
(480, 'CH000000480', 153, '{1}', 0, 1, 2, 1, '2019-06-30 10:21:36', '2019-08-25 04:59:43'),
(481, 'CH000000481', 153, '{5}', 0, 1, 2, 2, '2019-06-30 10:21:36', '2019-08-25 04:59:43'),
(482, 'CH000000482', 153, '{3}', 1, 1, 2, 3, '2019-06-30 10:21:36', '2019-08-25 04:59:43'),
(483, 'CH000000483', 154, 'A – B', 0, 1, 2, 1, '2019-06-30 10:21:54', '2019-08-25 05:00:41'),
(484, 'CH000000484', 154, 'U – A', 1, 1, 2, 2, '2019-06-30 10:21:54', '2019-08-25 05:00:41'),
(485, 'CH000000485', 154, 'A – U', 0, 1, 2, 3, '2019-06-30 10:21:54', '2019-08-25 05:00:41'),
(486, 'CH000000486', 155, '4', 1, 1, 2, 1, '2019-06-30 10:22:15', '2019-08-25 05:02:12'),
(487, 'CH000000487', 155, '5', 0, 1, 2, 2, '2019-06-30 10:22:15', '2019-08-25 05:02:12'),
(488, 'CH000000488', 155, '6', 0, 1, 2, 3, '2019-06-30 10:22:15', '2019-08-25 05:02:12'),
(489, 'CH000000489', 156, '4, 8', 0, 1, 2, 1, '2019-06-30 10:22:30', '2019-08-25 05:03:22');
INSERT INTO `choices` (`id`, `ch_code`, `test_question_id`, `body`, `is_correct`, `is_active`, `user_id`, `pos_order`, `created_at`, `updated_at`) VALUES
(490, 'CH000000490', 156, '8, 12', 1, 1, 2, 2, '2019-06-30 10:22:31', '2019-08-25 05:03:22'),
(491, 'CH000000491', 156, '4, 12', 0, 1, 2, 3, '2019-06-30 10:22:31', '2019-08-25 05:03:22'),
(492, 'CH000000492', 157, '2', 0, 1, 2, 1, '2019-06-30 10:22:46', '2019-08-25 05:04:19'),
(493, 'CH000000493', 157, '4', 1, 1, 2, 2, '2019-06-30 10:22:46', '2019-08-25 05:04:19'),
(494, 'CH000000494', 157, '6', 0, 1, 2, 3, '2019-06-30 10:22:46', '2019-08-25 05:04:19'),
(495, 'CH000000495', 158, '4, 5', 1, 1, 2, 1, '2019-06-30 10:23:11', '2019-08-25 05:05:26'),
(496, 'CH000000496', 158, '6, 7', 0, 1, 2, 2, '2019-06-30 10:23:11', '2019-08-25 05:05:26'),
(497, 'CH000000497', 158, '2, 3', 0, 1, 2, 3, '2019-06-30 10:23:11', '2019-08-25 05:05:26'),
(498, 'CH000000498', 159, '{x: x is a even prime greater than 3}', 0, 1, 2, 1, '2019-06-30 10:23:31', '2019-08-25 05:06:29'),
(499, 'CH000000499', 159, '{x : x is a multiple of 2 and is odd}', 0, 1, 2, 2, '2019-06-30 10:23:31', '2019-08-25 05:06:29'),
(500, 'CH000000500', 159, '{x: x is an even number and x+3 is even}', 0, 1, 2, 3, '2019-06-30 10:23:31', '2019-08-25 05:06:29'),
(501, 'CH000000501', 160, 'A‘ (Complement of A)', 0, 1, 2, 1, '2019-06-30 10:23:50', '2019-08-25 05:22:46'),
(502, 'CH000000502', 160, 'A U B -B', 1, 1, 2, 2, '2019-06-30 10:23:50', '2019-08-25 05:22:46'),
(503, 'CH000000503', 160, 'A ∩ B', 0, 1, 2, 3, '2019-06-30 10:23:50', '2019-08-25 05:22:46'),
(504, 'CH000000504', 161, 'A‘ (Complement of A)', 0, 1, 2, 1, '2019-06-30 10:24:14', '2019-08-25 05:12:18'),
(505, 'CH000000505', 161, 'B – (A ∩ B) – (C ∩ B)', 1, 1, 2, 2, '2019-06-30 10:24:15', '2019-08-25 05:12:18'),
(506, 'CH000000506', 161, 'A ∩ C ∩ B', 0, 1, 2, 3, '2019-06-30 10:24:15', '2019-08-25 05:12:18'),
(507, 'CH000000507', 162, 'n(A U B)=0', 0, 1, 2, 1, '2019-06-30 10:24:33', '2019-08-25 05:14:02'),
(508, 'CH000000508', 162, 'n( B U C)=0', 0, 1, 2, 2, '2019-06-30 10:24:33', '2019-08-25 05:14:02'),
(509, 'CH000000509', 162, 'n( A U B U C)=90', 0, 1, 2, 3, '2019-06-30 10:24:33', '2019-08-25 05:14:02'),
(510, 'CH000000510', 163, 'the use of the Internet, the Web, and mobile apps to transact business', 1, 1, 2, 1, '2019-06-30 10:25:17', '2019-08-11 20:47:15'),
(511, 'CH000000511', 163, 'the use of any Internet technologies in a firm\'s daily activities', 0, 1, 2, 2, '2019-06-30 10:25:17', '2019-08-11 20:47:15'),
(512, 'CH000000512', 163, 'the digital enablement of transactions and processes within an organization', 0, 1, 2, 3, '2019-06-30 10:25:17', '2019-08-11 20:47:15'),
(513, 'CH000000513', 164, 'e-business', 0, 1, 2, 1, '2019-06-30 10:25:39', '2019-08-11 20:51:22'),
(514, 'CH000000514', 164, 'digital commerce', 1, 1, 2, 2, '2019-06-30 10:25:39', '2019-08-11 20:51:22'),
(515, 'CH000000515', 164, 'the Internet', 0, 1, 2, 3, '2019-06-30 10:25:39', '2019-08-11 20:51:22'),
(516, 'CH000000516', 165, 'marketspace', 0, 1, 2, 1, '2019-06-30 10:26:48', '2019-08-11 20:55:58'),
(517, 'CH000000517', 165, 'marketplace', 1, 1, 2, 2, '2019-06-30 10:26:48', '2019-08-11 20:55:58'),
(518, 'CH000000518', 165, 'social network', 0, 1, 2, 3, '2019-06-30 10:26:48', '2019-08-11 20:55:58'),
(519, 'CH000000519', 166, 'Amazon', 0, 1, 2, 1, '2019-06-30 10:27:06', '2019-08-11 20:58:22'),
(520, 'CH000000520', 166, 'eBay', 0, 1, 2, 2, '2019-06-30 10:27:06', '2019-08-11 20:58:22'),
(521, 'CH000000521', 166, 'Wikipedia', 0, 1, 2, 3, '2019-06-30 10:27:06', '2019-08-11 20:58:22'),
(522, 'CH000000522', 167, 'Youtube', 0, 1, 2, 1, '2019-06-30 10:27:24', '2019-08-11 21:02:16'),
(523, 'CH000000523', 167, 'Airbnb', 1, 1, 2, 2, '2019-06-30 10:27:24', '2019-08-11 21:02:16'),
(524, 'CH000000524', 167, 'Tumblr', 0, 1, 2, 3, '2019-06-30 10:27:24', '2019-08-11 21:02:16'),
(525, 'CH000000525', 168, '1983', 0, 1, 2, 1, '2019-06-30 10:27:41', '2019-08-11 21:04:23'),
(526, 'CH000000526', 168, '1985', 0, 1, 2, 2, '2019-06-30 10:27:41', '2019-08-11 21:04:23'),
(527, 'CH000000527', 168, '1995', 1, 1, 2, 3, '2019-06-30 10:27:41', '2019-08-11 21:04:23'),
(528, 'CH000000528', 169, 'technology-driven', 1, 1, 2, 1, '2019-06-30 10:27:58', '2019-08-11 21:09:46'),
(529, 'CH000000529', 169, 'finance-driven', 0, 1, 2, 2, '2019-06-30 10:27:58', '2019-08-11 21:09:46'),
(530, 'CH000000530', 169, 'sociological', 0, 1, 2, 3, '2019-06-30 10:27:58', '2019-08-11 21:09:46'),
(531, 'CH000000531', 170, 'liablity', 0, 1, 2, 1, '2019-06-30 10:28:17', '2019-08-11 21:11:45'),
(532, 'CH000000532', 170, 'anonymity', 0, 1, 2, 2, '2019-06-30 10:28:17', '2019-08-11 21:11:45'),
(533, 'CH000000533', 170, 'equity', 0, 1, 2, 3, '2019-06-30 10:28:17', '2019-08-11 21:11:45'),
(534, 'CH000000534', 171, 'richness', 0, 1, 2, 1, '2019-06-30 10:28:56', '2019-08-11 22:08:43'),
(535, 'CH000000535', 171, 'information density', 0, 1, 2, 2, '2019-06-30 10:28:56', '2019-08-11 22:08:43'),
(536, 'CH000000536', 171, 'ubiquity', 1, 1, 2, 3, '2019-06-30 10:28:56', '2019-08-11 22:08:44'),
(537, 'CH000000537', 172, 'consumer-to consumer (C2C)', 0, 1, 2, 1, '2019-06-30 10:29:13', '2019-08-11 22:12:02'),
(538, 'CH000000538', 172, 'social e-commerce', 0, 1, 2, 2, '2019-06-30 10:29:13', '2019-08-11 22:12:02'),
(539, 'CH000000539', 172, 'mobile e-commerce', 1, 1, 2, 3, '2019-06-30 10:29:13', '2019-08-11 22:12:02'),
(540, 'CH000000540', 173, 'interactivity', 0, 1, 2, 1, '2019-06-30 10:29:27', '2019-08-11 22:14:30'),
(541, 'CH000000541', 173, 'social technology', 0, 1, 2, 2, '2019-06-30 10:29:27', '2019-08-11 22:14:30'),
(542, 'CH000000542', 173, 'information asymmetry', 1, 1, 2, 3, '2019-06-30 10:29:27', '2019-08-11 22:14:30'),
(543, 'CH000000543', 174, 'the expense of changing national of regional prices', 0, 1, 2, 1, '2019-06-30 10:29:47', '2019-08-11 22:18:01'),
(544, 'CH000000544', 174, 'the cost of particpating in a market', 1, 1, 2, 2, '2019-06-30 10:29:47', '2019-08-11 22:18:01'),
(545, 'CH000000545', 174, 'the cost of finding suitable products in the market', 0, 1, 2, 3, '2019-06-30 10:29:47', '2019-08-11 22:18:01'),
(546, 'CH000000546', 175, 'Airbnb', 0, 1, 2, 1, '2019-06-30 10:30:08', '2019-08-11 22:22:03'),
(547, 'CH000000547', 175, 'Facebook', 1, 1, 2, 2, '2019-06-30 10:30:08', '2019-08-11 22:22:03'),
(548, 'CH000000548', 175, 'Groupon', 0, 1, 2, 3, '2019-06-30 10:30:08', '2019-08-11 22:22:03'),
(549, 'CH000000549', 176, 'Instagram', 0, 1, 2, 1, '2019-06-30 10:30:24', '2019-08-11 22:24:52'),
(550, 'CH000000550', 176, 'Twitter', 0, 1, 2, 2, '2019-06-30 10:30:24', '2019-08-11 22:24:52'),
(551, 'CH000000551', 176, 'Y Combinator', 1, 1, 2, 3, '2019-06-30 10:30:24', '2019-08-11 22:24:52'),
(552, 'CH000000552', 177, 'blogs', 0, 1, 2, 1, '2019-06-30 10:30:43', '2019-08-11 22:28:36'),
(553, 'CH000000553', 177, 'wikis', 0, 1, 2, 2, '2019-06-30 10:30:43', '2019-08-11 22:28:36'),
(554, 'CH000000554', 177, 'photo sharing sites', 0, 1, 2, 3, '2019-06-30 10:30:43', '2019-08-11 22:28:36'),
(555, 'CH000000555', 178, 'Etsy', 0, 1, 2, 1, '2019-06-30 10:31:02', '2019-08-11 22:31:00'),
(556, 'CH000000556', 178, 'eToys', 1, 1, 2, 2, '2019-06-30 10:31:02', '2019-08-11 22:31:00'),
(557, 'CH000000557', 178, 'eBay', 0, 1, 2, 3, '2019-06-30 10:31:02', '2019-08-11 22:31:00'),
(558, 'CH000000558', 179, 'the expenses of changing national or regional prices', 0, 1, 2, 1, '2019-06-30 10:31:23', '2019-08-17 21:25:52'),
(559, 'CH000000559', 179, 'the cost of participating in a market', 1, 1, 2, 2, '2019-06-30 10:31:24', '2019-08-17 21:25:52'),
(560, 'CH000000560', 179, 'the cost of finding suitable products in the market', 0, 1, 2, 3, '2019-06-30 10:31:24', '2019-08-17 21:25:52'),
(561, 'CH000000561', 180, 'Integrate social networks and the mobile platform with Web site marketing', 0, 1, 2, 1, '2019-06-30 10:31:39', '2019-08-17 21:35:40'),
(562, 'CH000000562', 180, 'Emphasize the necessity for the Web to generate profits', 0, 1, 2, 2, '2019-06-30 10:31:39', '2019-08-17 21:35:40'),
(563, 'CH000000563', 180, 'Use the Web to sell complex goods and services online', 0, 1, 2, 3, '2019-06-30 10:31:39', '2019-08-17 21:35:40'),
(564, 'CH000000564', 181, 'the ability to physically touch and manipulate a product', 0, 1, 2, 1, '2019-06-30 10:31:56', '2019-08-17 21:36:11'),
(565, 'CH000000565', 181, 'complexity and content of a message', 0, 1, 2, 2, '2019-06-30 10:31:56', '2019-08-17 21:36:11'),
(566, 'CH000000566', 181, 'the ability of consumers to create and distribute content', 0, 1, 2, 3, '2019-06-30 10:31:56', '2019-08-17 21:36:11'),
(567, 'CH000000567', 182, 'the development of a smartphone', 1, 1, 2, 1, '2019-06-30 10:32:16', '2019-08-17 21:39:15'),
(568, 'CH000000568', 182, 'Baxter Healthcare\'s PC-based remote order entry system', 0, 1, 2, 2, '2019-06-30 10:32:16', '2019-08-17 21:39:15'),
(569, 'CH000000569', 182, 'the French Minitel', 0, 1, 2, 3, '2019-06-30 10:32:16', '2019-08-17 21:39:15'),
(570, 'CH000000570', 183, 'Telex', 0, 1, 2, 1, '2019-06-30 10:32:40', '2019-08-17 21:41:33'),
(571, 'CH000000571', 183, 'the Baxter Healthcare system', 0, 1, 2, 2, '2019-06-30 10:32:40', '2019-08-17 21:41:33'),
(572, 'CH000000572', 183, 'the French Minitel', 1, 1, 2, 3, '2019-06-30 10:32:40', '2019-08-17 21:41:33'),
(573, 'CH000000573', 184, 'A', 1, 1, 2, 1, '2019-06-30 10:33:18', '2019-08-06 18:49:08'),
(574, 'CH000000574', 184, 'B', 0, 1, 2, 2, '2019-06-30 10:33:18', '2019-08-06 18:49:08'),
(575, 'CH000000575', 184, 'C', 0, 1, 2, 3, '2019-06-30 10:33:18', '2019-08-06 18:49:08'),
(576, 'CH000000576', 185, 'A', 1, 1, 2, 1, '2019-06-30 10:33:39', '2019-08-06 18:49:08'),
(577, 'CH000000577', 185, 'B', 0, 1, 2, 2, '2019-06-30 10:33:39', '2019-08-06 18:49:08'),
(578, 'CH000000578', 185, 'C', 0, 1, 2, 3, '2019-06-30 10:33:39', '2019-08-06 18:49:08'),
(579, 'CH000000579', 186, 'A', 1, 1, 2, 1, '2019-06-30 10:33:59', '2019-08-06 18:49:09'),
(580, 'CH000000580', 186, 'B', 0, 1, 2, 2, '2019-06-30 10:33:59', '2019-08-06 18:49:09'),
(581, 'CH000000581', 186, 'C', 0, 1, 2, 3, '2019-06-30 10:33:59', '2019-08-06 18:49:09'),
(582, 'CH000000582', 187, 'A', 1, 1, 2, 1, '2019-06-30 10:34:15', '2019-08-06 18:49:09'),
(583, 'CH000000583', 187, 'B', 0, 1, 2, 2, '2019-06-30 10:34:15', '2019-08-06 18:49:09'),
(584, 'CH000000584', 187, 'C', 0, 1, 2, 3, '2019-06-30 10:34:15', '2019-08-06 18:49:09'),
(585, 'CH000000585', 188, 'A', 1, 1, 2, 1, '2019-06-30 10:34:32', '2019-08-06 18:49:10'),
(586, 'CH000000586', 188, 'B', 0, 1, 2, 2, '2019-06-30 10:34:32', '2019-08-06 18:49:10'),
(587, 'CH000000587', 188, 'C', 0, 1, 2, 3, '2019-06-30 10:34:32', '2019-08-06 18:49:10'),
(588, 'CH000000588', 189, 'A', 1, 1, 2, 1, '2019-06-30 10:34:50', '2019-08-06 18:49:10'),
(589, 'CH000000589', 189, 'B', 0, 1, 2, 2, '2019-06-30 10:34:50', '2019-08-06 18:49:10'),
(590, 'CH000000590', 189, 'C', 0, 1, 2, 3, '2019-06-30 10:34:50', '2019-08-06 18:49:10'),
(591, 'CH000000591', 190, 'A', 0, 1, 2, 1, '2019-06-30 10:35:04', '2019-08-06 18:49:11'),
(592, 'CH000000592', 190, 'B', 1, 1, 2, 2, '2019-06-30 10:35:05', '2019-08-06 18:49:11'),
(593, 'CH000000593', 190, 'C', 0, 1, 2, 3, '2019-06-30 10:35:05', '2019-08-06 18:49:11'),
(594, 'CH000000594', 191, 'A', 0, 1, 2, 1, '2019-06-30 10:35:24', '2019-08-06 18:49:11'),
(595, 'CH000000595', 191, 'B', 1, 1, 2, 2, '2019-06-30 10:35:24', '2019-08-06 18:49:11'),
(596, 'CH000000596', 191, 'C', 0, 1, 2, 3, '2019-06-30 10:35:24', '2019-08-06 18:49:11'),
(597, 'CH000000597', 192, 'A', 0, 1, 2, 1, '2019-06-30 10:35:51', '2019-08-06 18:49:11'),
(598, 'CH000000598', 192, 'B', 1, 1, 2, 2, '2019-06-30 10:35:51', '2019-08-06 18:49:11'),
(599, 'CH000000599', 192, 'C', 0, 1, 2, 3, '2019-06-30 10:35:51', '2019-08-06 18:49:11'),
(600, 'CH000000600', 193, 'A', 0, 1, 2, 1, '2019-06-30 10:36:20', '2019-08-06 18:49:12'),
(601, 'CH000000601', 193, 'B', 1, 1, 2, 2, '2019-06-30 10:36:20', '2019-08-06 18:49:12'),
(602, 'CH000000602', 193, 'C', 0, 1, 2, 3, '2019-06-30 10:36:20', '2019-08-06 18:49:12'),
(603, 'CH000000603', 194, 'A', 0, 1, 2, 1, '2019-06-30 10:36:37', '2019-08-06 18:49:12'),
(604, 'CH000000604', 194, 'B', 1, 1, 2, 2, '2019-06-30 10:36:37', '2019-08-06 18:49:12'),
(605, 'CH000000605', 194, 'C', 0, 1, 2, 3, '2019-06-30 10:36:37', '2019-08-06 18:49:12'),
(606, 'CH000000606', 195, 'A', 0, 1, 2, 1, '2019-06-30 10:36:55', '2019-08-06 18:49:12'),
(607, 'CH000000607', 195, 'B', 1, 1, 2, 2, '2019-06-30 10:36:55', '2019-08-06 18:49:12'),
(608, 'CH000000608', 195, 'C', 0, 1, 2, 3, '2019-06-30 10:36:56', '2019-08-06 18:49:12'),
(609, 'CH000000609', 196, 'A', 0, 1, 2, 1, '2019-06-30 10:37:14', '2019-08-06 18:49:12'),
(610, 'CH000000610', 196, 'B', 0, 1, 2, 2, '2019-06-30 10:37:14', '2019-08-06 18:49:13'),
(611, 'CH000000611', 196, 'C', 1, 1, 2, 3, '2019-06-30 10:37:14', '2019-08-06 18:49:13'),
(612, 'CH000000612', 197, 'A', 0, 1, 2, 1, '2019-06-30 10:37:29', '2019-08-06 18:49:13'),
(613, 'CH000000613', 197, 'B', 0, 1, 2, 2, '2019-06-30 10:37:29', '2019-08-06 18:49:13'),
(614, 'CH000000614', 197, 'C', 1, 1, 2, 3, '2019-06-30 10:37:29', '2019-08-06 18:49:13'),
(615, 'CH000000615', 198, 'A', 0, 1, 2, 1, '2019-06-30 10:37:51', '2019-08-06 18:49:13'),
(616, 'CH000000616', 198, 'B', 0, 1, 2, 2, '2019-06-30 10:37:51', '2019-08-06 18:49:13'),
(617, 'CH000000617', 198, 'C', 1, 1, 2, 3, '2019-06-30 10:37:51', '2019-08-06 18:49:13'),
(618, 'CH000000618', 199, 'A', 0, 1, 2, 1, '2019-06-30 10:38:07', '2019-08-06 18:49:13'),
(619, 'CH000000619', 199, 'B', 0, 1, 2, 2, '2019-06-30 10:38:07', '2019-08-06 18:49:13'),
(620, 'CH000000620', 199, 'C', 1, 1, 2, 3, '2019-06-30 10:38:07', '2019-08-06 18:49:13'),
(621, 'CH000000621', 200, 'A', 0, 1, 2, 1, '2019-06-30 10:38:28', '2019-08-06 18:49:14'),
(622, 'CH000000622', 200, 'B', 0, 1, 2, 2, '2019-06-30 10:38:28', '2019-08-06 18:49:14'),
(623, 'CH000000623', 200, 'C', 1, 1, 2, 3, '2019-06-30 10:38:28', '2019-08-06 18:49:14'),
(624, 'CH000000624', 201, 'C', 0, 1, 2, 1, '2019-06-30 10:39:03', '2019-08-24 22:14:06'),
(625, 'CH000000625', 201, 'C++', 0, 1, 2, 2, '2019-06-30 10:39:03', '2019-08-24 22:14:06'),
(626, 'CH000000626', 201, 'VC++', 0, 1, 2, 3, '2019-06-30 10:39:03', '2019-08-24 22:14:06'),
(627, 'CH000000627', 202, 'Desktop Operatng System', 0, 1, 2, 1, '2019-06-30 10:39:20', '2019-08-24 22:17:38'),
(628, 'CH000000628', 202, 'Programming Language', 0, 1, 2, 2, '2019-06-30 10:39:20', '2019-08-24 22:17:38'),
(629, 'CH000000629', 202, 'Mobile Operating System', 1, 1, 2, 3, '2019-06-30 10:39:20', '2019-08-24 22:17:38'),
(630, 'CH000000630', 203, 'MP4', 0, 1, 2, 1, '2019-06-30 10:39:40', '2019-08-24 22:19:22'),
(631, 'CH000000631', 203, 'MPEG', 0, 1, 2, 2, '2019-06-30 10:39:40', '2019-08-24 22:19:22'),
(632, 'CH000000632', 203, 'AVI', 1, 1, 2, 3, '2019-06-30 10:39:40', '2019-08-24 22:19:22'),
(633, 'CH000000633', 204, 'Multitasking', 0, 1, 2, 1, '2019-06-30 10:39:58', '2019-08-24 22:21:28'),
(634, 'CH000000634', 204, 'Bluetooth', 0, 1, 2, 2, '2019-06-30 10:39:58', '2019-08-24 22:21:28'),
(635, 'CH000000635', 204, 'Video calling', 0, 1, 2, 3, '2019-06-30 10:39:58', '2019-08-24 22:21:28'),
(636, 'CH000000636', 205, 'Device Driver', 0, 1, 2, 1, '2019-06-30 10:40:25', '2019-08-24 22:23:28'),
(637, 'CH000000637', 205, 'Video Driver', 0, 1, 2, 2, '2019-06-30 10:40:25', '2019-08-24 22:23:28'),
(638, 'CH000000638', 205, 'WiFi driver', 1, 1, 2, 3, '2019-06-30 10:40:25', '2019-08-24 22:23:28'),
(639, 'CH000000639', 206, 'Eclipse', 0, 1, 2, 1, '2019-06-30 10:40:45', '2019-08-24 22:29:47'),
(640, 'CH000000640', 206, 'Java and XML', 1, 1, 2, 2, '2019-06-30 10:40:45', '2019-08-24 22:29:47'),
(641, 'CH000000641', 206, 'Java and SQL', 0, 1, 2, 3, '2019-06-30 10:40:45', '2019-08-24 22:29:47'),
(642, 'CH000000642', 207, 'Android Debug Bridge', 1, 1, 2, 1, '2019-06-30 10:41:02', '2019-08-24 22:32:02'),
(643, 'CH000000643', 207, 'Application Debug Bridge', 0, 1, 2, 2, '2019-06-30 10:41:02', '2019-08-24 22:32:02'),
(644, 'CH000000644', 207, 'Android data bridge', 0, 1, 2, 3, '2019-06-30 10:41:02', '2019-08-24 22:32:02'),
(645, 'CH000000645', 208, 'Application not Recognized', 0, 1, 2, 1, '2019-06-30 10:41:21', '2019-08-24 22:34:05'),
(646, 'CH000000646', 208, 'Android not Recognized', 0, 1, 2, 2, '2019-06-30 10:41:21', '2019-08-24 22:34:05'),
(647, 'CH000000647', 208, 'Application Not Responding', 1, 1, 2, 3, '2019-06-30 10:41:21', '2019-08-24 22:34:05'),
(648, 'CH000000648', 209, 'Implicit Intent', 1, 1, 2, 1, '2019-06-30 10:41:36', '2019-08-24 22:35:48'),
(649, 'CH000000649', 209, 'Explicit Intent', 0, 1, 2, 2, '2019-06-30 10:41:36', '2019-08-24 22:35:48'),
(650, 'CH000000650', 209, 'a and b', 0, 1, 2, 3, '2019-06-30 10:41:36', '2019-08-24 22:35:48'),
(651, 'CH000000651', 210, 'Android Tool', 0, 1, 2, 1, '2019-06-30 10:41:53', '2019-08-24 22:37:12'),
(652, 'CH000000652', 210, 'IDE', 1, 1, 2, 2, '2019-06-30 10:41:53', '2019-08-24 22:37:12'),
(653, 'CH000000653', 210, 'Android interface', 0, 1, 2, 3, '2019-06-30 10:41:53', '2019-08-24 22:37:12'),
(654, 'CH000000654', 211, 'Chrome', 0, 1, 2, 1, '2019-06-30 10:42:11', '2019-08-24 22:39:40'),
(655, 'CH000000655', 211, 'Firefox', 0, 1, 2, 2, '2019-06-30 10:42:11', '2019-08-24 22:39:40'),
(656, 'CH000000656', 211, 'Open source Webkit', 1, 1, 2, 3, '2019-06-30 10:42:11', '2019-08-24 22:39:40'),
(657, 'CH000000657', 212, 'Apple', 0, 1, 2, 1, '2019-06-30 10:42:28', '2019-08-24 22:40:53'),
(658, 'CH000000658', 212, 'Google', 1, 1, 2, 2, '2019-06-30 10:42:28', '2019-08-24 22:40:53'),
(659, 'CH000000659', 212, 'Nokia', 0, 1, 2, 3, '2019-06-30 10:42:28', '2019-08-24 22:40:53'),
(660, 'CH000000660', 213, 'Apple', 0, 1, 2, 1, '2019-06-30 10:42:45', '2019-08-24 22:42:02'),
(661, 'CH000000661', 213, 'Google', 0, 1, 2, 2, '2019-06-30 10:42:45', '2019-08-24 22:42:02'),
(662, 'CH000000662', 213, 'Android Inc.', 1, 1, 2, 3, '2019-06-30 10:42:45', '2019-08-24 22:42:02'),
(663, 'CH000000663', 214, 'Linux kernel', 1, 1, 2, 1, '2019-06-30 10:43:14', '2019-08-24 22:43:58'),
(664, 'CH000000664', 214, 'Windows kernel', 0, 1, 2, 2, '2019-06-30 10:43:15', '2019-08-24 22:43:58'),
(665, 'CH000000665', 214, 'MAC kernel', 0, 1, 2, 3, '2019-06-30 10:43:15', '2019-08-24 22:43:58'),
(666, 'CH000000666', 215, '3.0 (Honeycomb)', 0, 1, 2, 1, '2019-06-30 10:43:32', '2019-08-24 22:45:54'),
(667, 'CH000000667', 215, '2.3 (Gingerbread)', 1, 1, 2, 2, '2019-06-30 10:43:32', '2019-08-24 22:45:54'),
(668, 'CH000000668', 215, '2.6', 0, 1, 2, 3, '2019-06-30 10:43:32', '2019-08-24 22:45:54'),
(669, 'CH000000669', 216, '1 and 2', 0, 1, 2, 1, '2019-06-30 10:43:49', '2019-08-24 22:49:10'),
(670, 'CH000000670', 216, '3 and 4', 0, 1, 2, 2, '2019-06-30 10:43:49', '2019-08-24 22:49:10'),
(671, 'CH000000671', 216, '2 and 3', 0, 1, 2, 3, '2019-06-30 10:43:49', '2019-08-24 22:49:10'),
(672, 'CH000000672', 217, 'Runnable', 1, 1, 2, 1, '2019-06-30 10:44:04', '2019-08-24 22:50:45'),
(673, 'CH000000673', 217, 'Tapas', 0, 1, 2, 2, '2019-06-30 10:44:04', '2019-08-24 22:50:45'),
(674, 'CH000000674', 217, 'Includes', 0, 1, 2, 3, '2019-06-30 10:44:04', '2019-08-24 22:50:45'),
(675, 'CH000000675', 62, 'The car travels at 50 mph for the first half and 30 mph for the second half.', 0, 1, 2, 4, '2019-07-01 18:32:44', '2019-08-06 18:48:34'),
(676, 'CH000000676', 66, '212', 0, 1, 2, 4, '2019-07-01 18:40:45', '2019-08-06 18:48:35'),
(677, 'CH000000677', 63, 'Not changing', 0, 1, 2, 4, '2019-07-01 18:44:42', '2019-08-06 18:48:34'),
(678, 'CH000000678', 65, '60°', 1, 1, 2, 4, '2019-07-01 18:49:37', '2019-08-06 18:48:35'),
(679, 'CH000000679', 68, '[[#img26]]', 0, 1, 2, 4, '2019-07-01 18:57:52', '2019-08-08 23:41:37'),
(680, 'CH000000680', 70, '[[#img31]]', 0, 1, 2, 4, '2019-07-01 19:03:54', '2019-08-06 18:48:36'),
(681, 'CH000000681', 218, 'a', 1, 1, 2, 1, '2019-07-02 14:12:40', '2019-08-06 18:49:19'),
(682, 'CH000000682', 218, 'b', 0, 1, 2, 2, '2019-07-02 14:12:40', '2019-08-06 18:49:19'),
(683, 'CH000000683', 218, 'c', 0, 1, 2, 3, '2019-07-02 14:12:40', '2019-08-06 18:49:19'),
(684, 'CH000000684', 219, 'Repeater', 0, 1, 2, 1, '2019-08-01 01:19:29', '2019-08-11 06:32:44'),
(685, 'CH000000685', 219, 'Switch', 0, 1, 2, 2, '2019-08-01 01:19:29', '2019-08-11 06:32:44'),
(686, 'CH000000686', 219, 'Modem', 1, 1, 2, 3, '2019-08-01 01:19:29', '2019-08-11 06:32:44'),
(687, 'CH000000687', 220, 'digital camera', 0, 1, 2, 1, '2019-08-01 01:20:36', '2019-08-11 06:32:27'),
(688, 'CH000000688', 220, 'scanner', 1, 1, 2, 2, '2019-08-01 01:20:36', '2019-08-11 06:32:27'),
(689, 'CH000000689', 220, 'MICR', 0, 1, 2, 3, '2019-08-01 01:20:37', '2019-08-11 06:32:27'),
(690, 'CH000000690', 221, 'RAM', 1, 1, 2, 1, '2019-08-01 01:38:03', '2019-09-01 01:49:39'),
(691, 'CH000000691', 221, 'ROM', 0, 1, 2, 2, '2019-08-01 01:38:03', '2019-09-01 01:49:39'),
(692, 'CH000000692', 221, 'bus', 0, 1, 2, 3, '2019-08-01 01:38:03', '2019-09-01 01:49:39'),
(693, 'CH000000693', 222, 'Paging', 0, 1, 2, 1, '2019-08-06 18:55:18', '2019-08-11 06:48:21'),
(694, 'CH000000694', 222, 'Slicing', 0, 1, 2, 2, '2019-08-06 18:55:18', '2019-08-11 06:48:21'),
(695, 'CH000000695', 222, 'choice 3', 0, 0, 2, 3, '2019-08-06 18:55:18', '2019-08-06 19:04:40'),
(697, 'CH000000696', 222, 'choice 4', 0, 0, 2, 4, '2019-08-06 19:01:59', '2019-08-06 19:04:40'),
(698, 'CH000000697', 222, 'Queuing', 0, 1, 2, 3, '2019-08-06 19:03:31', '2019-08-11 06:48:21'),
(699, 'CH000000698', 223, '110011', 0, 1, 2, 1, '2019-08-06 19:07:29', '2019-08-11 06:45:17'),
(700, 'CH000000699', 223, '100001', 0, 1, 2, 2, '2019-08-06 19:07:29', '2019-08-11 06:45:17'),
(701, 'CH000000700', 223, '110100', 1, 1, 2, 3, '2019-08-06 19:07:29', '2019-08-11 06:45:17'),
(702, 'CH000000701', 224, '[[#code17]]', 0, 1, 2, 1, '2019-08-07 00:49:05', '2019-08-07 00:50:49'),
(703, 'CH000000702', 224, 'b', 1, 1, 2, 2, '2019-08-07 00:49:05', '2019-08-07 00:50:49'),
(704, 'CH000000703', 224, 'c', 0, 1, 2, 3, '2019-08-07 00:49:05', '2019-08-07 00:50:49'),
(705, 'CH000000704', 225, '531', 0, 1, 2, 1, '2019-08-07 01:30:50', '2019-08-11 06:29:12'),
(706, 'CH000000705', 225, '127', 1, 1, 2, 2, '2019-08-07 01:30:50', '2019-08-11 06:29:12'),
(707, 'CH000000706', 225, '44', 0, 1, 2, 3, '2019-08-07 01:30:50', '2019-08-11 06:29:12'),
(708, 'CH000000707', 221, 'ports', 0, 1, 2, 4, '2019-08-11 05:52:03', '2019-09-01 01:49:39'),
(709, 'CH000000708', 220, 'RFID readers', 0, 1, 2, 4, '2019-08-11 05:54:39', '2019-08-11 06:32:27'),
(710, 'CH000000709', 219, 'Wireless access point', 0, 1, 2, 4, '2019-08-11 05:56:29', '2019-08-11 06:32:44'),
(711, 'CH000000710', 90, 'megabyte', 0, 1, 2, 4, '2019-08-11 06:23:16', '2019-09-01 01:49:58'),
(712, 'CH000000711', 89, 'None of them', 0, 1, 2, 4, '2019-08-11 06:25:28', '2019-08-11 06:25:28'),
(713, 'CH000000712', 88, 'two', 1, 1, 2, 4, '2019-08-11 06:26:47', '2019-09-01 01:50:16'),
(714, 'CH000000713', 225, '135', 0, 1, 2, 4, '2019-08-11 06:29:12', '2019-08-11 06:29:12'),
(715, 'CH000000714', 87, 'fetch, decode, execute and store', 1, 1, 2, 4, '2019-08-11 06:34:54', '2019-08-11 06:34:54'),
(716, 'CH000000715', 86, 'rotational delay', 0, 1, 2, 4, '2019-08-11 06:36:46', '2019-08-11 06:36:46'),
(717, 'CH000000716', 85, '701', 0, 1, 2, 4, '2019-08-11 06:39:11', '2019-08-11 06:39:11'),
(718, 'CH000000717', 223, '100100', 0, 1, 2, 4, '2019-08-11 06:45:17', '2019-08-11 06:45:17'),
(719, 'CH000000718', 222, 'Spooling', 1, 1, 2, 4, '2019-08-11 06:48:21', '2019-08-11 06:48:21'),
(720, 'CH000000719', 84, 'Architecture', 0, 1, 2, 4, '2019-08-11 06:50:00', '2019-08-11 06:50:00'),
(721, 'CH000000720', 83, 'automatic', 0, 1, 2, 4, '2019-08-11 06:51:38', '2019-08-11 06:51:38'),
(722, 'CH000000721', 82, '22', 0, 1, 2, 4, '2019-08-11 06:53:27', '2019-08-11 06:53:27'),
(723, 'CH000000722', 81, 'real storage', 0, 1, 2, 4, '2019-08-11 06:55:06', '2019-08-11 06:55:06'),
(724, 'CH000000723', 80, '(11101)<sub>2</sub>', 0, 1, 2, 4, '2019-08-11 06:57:53', '2019-08-11 06:58:42'),
(725, 'CH000000724', 79, 'Primary Storage', 1, 1, 2, 4, '2019-08-11 07:00:11', '2019-09-01 01:51:39'),
(726, 'CH000000725', 78, 'ANSI', 0, 1, 2, 4, '2019-08-11 07:02:27', '2019-09-01 01:51:19'),
(727, 'CH000000726', 77, 'linker error', 0, 1, 2, 4, '2019-08-11 07:04:38', '2019-08-11 07:04:38'),
(728, 'CH000000727', 76, 'back up', 1, 1, 2, 4, '2019-08-11 18:17:08', '2019-08-11 18:17:08'),
(729, 'CH000000728', 75, 'Nibble', 0, 1, 2, 4, '2019-08-11 18:18:40', '2019-08-11 18:18:40'),
(730, 'CH000000729', 74, 'CPU', 0, 1, 2, 4, '2019-08-11 18:39:47', '2019-08-11 18:39:47'),
(731, 'CH000000730', 73, 'HardDrive', 0, 1, 2, 4, '2019-08-11 18:41:22', '2019-08-11 18:41:22'),
(732, 'CH000000731', 72, 'Disk optimization software', 0, 1, 2, 4, '2019-08-11 18:52:29', '2019-08-11 18:52:29'),
(733, 'CH000000732', 71, 'Storage space for information that has been processed', 0, 1, 2, 4, '2019-08-11 18:54:33', '2019-08-11 18:54:33'),
(734, 'CH000000733', 226, 'Create', 0, 1, 2, 1, '2019-08-11 20:02:12', '2019-08-17 22:52:32'),
(735, 'CH000000734', 226, 'Push', 1, 1, 2, 2, '2019-08-11 20:02:12', '2019-08-17 22:52:32'),
(736, 'CH000000735', 226, 'Evaluation', 0, 1, 2, 3, '2019-08-11 20:02:12', '2019-08-17 22:52:32'),
(737, 'CH000000736', 226, 'Pop', 0, 1, 2, 4, '2019-08-11 20:02:12', '2019-08-17 22:52:32'),
(738, 'CH000000737', 227, 'Stack', 1, 1, 2, 1, '2019-08-11 20:04:54', '2019-08-17 22:52:48'),
(739, 'CH000000738', 227, 'Queue', 0, 1, 2, 2, '2019-08-11 20:04:54', '2019-08-17 22:52:48'),
(740, 'CH000000739', 227, 'Array', 0, 1, 2, 3, '2019-08-11 20:04:54', '2019-08-17 22:52:48'),
(741, 'CH000000740', 227, 'Tree', 0, 1, 2, 4, '2019-08-11 20:04:54', '2019-08-17 22:52:48'),
(742, 'CH000000741', 228, 'ABCD', 0, 1, 2, 1, '2019-08-11 20:15:05', '2019-08-17 22:53:02'),
(743, 'CH000000742', 228, 'DCBA', 1, 1, 2, 2, '2019-08-11 20:15:05', '2019-08-17 22:53:02'),
(744, 'CH000000743', 228, 'DCAB', 0, 1, 2, 3, '2019-08-11 20:15:05', '2019-08-17 22:53:02'),
(745, 'CH000000744', 228, 'ABDC', 0, 1, 2, 4, '2019-08-11 20:15:05', '2019-08-17 22:53:02'),
(746, 'CH000000745', 229, 'Exploit bit level parallelism', 0, 1, 2, 1, '2019-08-11 20:22:42', '2019-08-17 22:53:18'),
(747, 'CH000000746', 229, 'Maximal use of data cache', 0, 1, 2, 2, '2019-08-11 20:22:42', '2019-08-17 22:53:18'),
(748, 'CH000000747', 229, 'Can be stored and manipulated in the register set for long periods of time', 0, 1, 2, 3, '2019-08-11 20:22:42', '2019-08-17 22:53:18'),
(749, 'CH000000748', 229, 'All of the choices', 1, 1, 2, 4, '2019-08-11 20:22:42', '2019-08-17 22:53:18'),
(750, 'CH000000749', 163, 'any digitally enabled transactions among individuals and organizations', 0, 1, 2, 4, '2019-08-11 20:47:15', '2019-08-11 20:47:15'),
(751, 'CH000000750', 164, 'the Web', 0, 1, 2, 4, '2019-08-11 20:51:22', '2019-08-11 20:51:22'),
(752, 'CH000000751', 165, 'the Internet', 0, 1, 2, 4, '2019-08-11 20:55:58', '2019-08-11 20:55:58'),
(753, 'CH000000752', 166, 'Facebook', 1, 1, 2, 4, '2019-08-11 20:58:22', '2019-08-11 20:58:22'),
(754, 'CH000000753', 167, 'Facebook', 0, 1, 2, 4, '2019-08-11 21:02:16', '2019-08-11 21:02:16'),
(755, 'CH000000754', 168, '2001', 0, 1, 2, 4, '2019-08-11 21:04:23', '2019-08-11 21:04:23'),
(756, 'CH000000755', 169, 'government-driven', 0, 1, 2, 4, '2019-08-11 21:09:46', '2019-08-11 21:09:46'),
(757, 'CH000000756', 170, 'intellectual property', 1, 1, 2, 4, '2019-08-11 21:11:45', '2019-08-11 21:11:45'),
(758, 'CH000000757', 171, 'reach', 0, 1, 2, 4, '2019-08-11 22:08:44', '2019-08-11 22:08:44'),
(759, 'CH000000758', 172, 'business-to-business (B2B)', 0, 1, 2, 4, '2019-08-11 22:12:02', '2019-08-11 22:12:02'),
(760, 'CH000000759', 173, 'richness', 0, 1, 2, 4, '2019-08-11 22:14:30', '2019-08-11 22:14:30'),
(761, 'CH000000760', 174, 'the cost merchants pay to bring their goods to market', 0, 1, 2, 4, '2019-08-11 22:18:01', '2019-08-11 22:18:01'),
(762, 'CH000000761', 175, 'Go2Paper', 0, 1, 2, 4, '2019-08-11 22:22:03', '2019-08-11 22:22:03'),
(763, 'CH000000762', 176, 'Pinterest', 0, 1, 2, 4, '2019-08-11 22:24:52', '2019-08-11 22:24:52'),
(764, 'CH000000763', 177, 'auction sites', 1, 1, 2, 4, '2019-08-11 22:28:36', '2019-08-11 22:28:36'),
(765, 'CH000000764', 178, 'E*Trade', 0, 1, 2, 4, '2019-08-11 22:31:00', '2019-08-11 22:31:00'),
(766, 'CH000000765', 179, 'the cost mecahants pay to bring their goods to market', 0, 1, 2, 4, '2019-08-17 21:25:52', '2019-08-17 21:25:52'),
(767, 'CH000000766', 181, 'the enabling of two way communication between consumer and merchant', 1, 1, 2, 4, '2019-08-17 21:29:45', '2019-08-17 21:36:11'),
(768, 'CH000000767', 180, 'Maintain a basic, static Web site depicting the firm\'s brand', 1, 1, 2, 4, '2019-08-17 21:35:40', '2019-08-17 21:35:40'),
(769, 'CH000000768', 182, 'the development of Electronic Data Interchange Standards', 0, 1, 2, 4, '2019-08-17 21:39:15', '2019-08-17 21:39:15'),
(770, 'CH000000769', 183, 'EDI', 0, 1, 2, 4, '2019-08-17 21:41:33', '2019-08-17 21:41:33'),
(771, 'CH000000770', 230, 'copyright infringement', 0, 1, 2, 1, '2019-08-17 21:43:10', '2019-08-17 21:43:10'),
(772, 'CH000000771', 230, 'inability to retain users', 1, 1, 2, 2, '2019-08-17 21:43:10', '2019-08-17 21:43:10'),
(773, 'CH000000772', 230, 'spam', 0, 1, 2, 3, '2019-08-17 21:43:10', '2019-08-17 21:43:10'),
(774, 'CH000000773', 230, 'scams', 0, 1, 2, 4, '2019-08-17 21:43:10', '2019-08-17 21:43:10'),
(775, 'CH000000774', 231, 'one competitor has an advantage others cannot purchase', 1, 1, 2, 1, '2019-08-17 21:46:22', '2019-08-17 21:46:22'),
(776, 'CH000000775', 231, 'market middlemen are displaced', 0, 1, 2, 2, '2019-08-17 21:46:22', '2019-08-17 21:46:22'),
(777, 'CH000000776', 231, 'information is equally distributed and transaction costs are low', 0, 1, 2, 3, '2019-08-17 21:46:22', '2019-08-17 21:46:22'),
(778, 'CH000000777', 231, 'firms are able to gather monopoly profits', 0, 1, 2, 4, '2019-08-17 21:46:22', '2019-08-17 21:46:22'),
(779, 'CH000000778', 232, 'zooming', 0, 1, 2, 1, '2019-08-17 21:48:44', '2019-08-17 21:48:44'),
(780, 'CH000000779', 232, 'grazing', 0, 1, 2, 2, '2019-08-17 21:48:44', '2019-08-17 21:48:44'),
(781, 'CH000000780', 232, 'showrooming', 0, 1, 2, 3, '2019-08-17 21:48:44', '2019-08-17 21:48:44'),
(782, 'CH000000781', 232, 'webrooming', 1, 1, 2, 4, '2019-08-17 21:48:44', '2019-08-17 21:48:44'),
(783, 'CH000000782', 233, 'Virtual e-tailers', 0, 1, 2, 1, '2019-08-17 21:58:02', '2019-08-17 21:58:35'),
(784, 'CH000000783', 233, 'click and mortar e-tailers', 1, 1, 2, 2, '2019-08-17 21:58:02', '2019-08-17 21:58:35'),
(785, 'CH000000784', 233, 'brick and mortar e-tailers', 0, 1, 2, 3, '2019-08-17 21:58:02', '2019-08-17 21:58:35'),
(786, 'CH000000785', 233, 'direct marketing', 0, 1, 2, 4, '2019-08-17 21:58:02', '2019-08-17 21:58:35'),
(787, 'CH000000786', 234, 'No one academic pespectives dominates research about e-commerce', 0, 1, 2, 1, '2019-08-17 22:04:39', '2019-08-17 22:04:39'),
(788, 'CH000000787', 234, 'Economists take a purely technical approach to e-commerce', 1, 1, 2, 2, '2019-08-17 22:04:39', '2019-08-17 22:04:39'),
(789, 'CH000000788', 234, 'There are two primary approaches to e-commerce:  behavioral and technical', 0, 1, 2, 3, '2019-08-17 22:04:39', '2019-08-17 22:04:39'),
(790, 'CH000000789', 234, 'Management scientist are interested in e-commerce as an opportunity to study how the business firms can exploit the Internet to achieve more efficient business opeartions.', 0, 1, 2, 4, '2019-08-17 22:04:39', '2019-08-17 22:04:39'),
(791, 'CH000000790', 235, 'transaction automation', 0, 1, 2, 1, '2019-08-17 22:09:39', '2019-08-17 22:09:39'),
(792, 'CH000000791', 235, 'desktop automation', 0, 1, 2, 2, '2019-08-17 22:09:39', '2019-08-17 22:09:39'),
(793, 'CH000000792', 235, 'industrial system automation', 0, 1, 2, 3, '2019-08-17 22:09:39', '2019-08-17 22:09:39'),
(794, 'CH000000793', 235, 'workgroup automation', 1, 1, 2, 4, '2019-08-17 22:09:39', '2019-08-17 22:09:39'),
(795, 'CH000000794', 236, 'Information is equally distributed', 0, 1, 2, 1, '2019-08-17 22:13:48', '2019-08-17 22:14:04'),
(796, 'CH000000795', 236, 'Transaction costs are high', 1, 1, 2, 2, '2019-08-17 22:13:48', '2019-08-17 22:14:04'),
(797, 'CH000000796', 236, 'Prices can be dynamically adjusted to reflect actual demand', 0, 1, 2, 3, '2019-08-17 22:13:48', '2019-08-17 22:14:04'),
(798, 'CH000000797', 236, 'Unfair competitive advantages are eliminated', 0, 1, 2, 4, '2019-08-17 22:13:48', '2019-08-17 22:14:04'),
(799, 'CH000000798', 237, 'They were a technological success but a mixed business success', 1, 1, 2, 1, '2019-08-17 22:18:14', '2019-08-17 22:18:14'),
(800, 'CH000000799', 237, 'They were a technological success but a business failure', 0, 1, 2, 2, '2019-08-17 22:18:14', '2019-08-17 22:18:14'),
(801, 'CH000000800', 237, 'They were a technological failure but a business success', 0, 1, 2, 3, '2019-08-17 22:18:14', '2019-08-17 22:18:14'),
(802, 'CH000000801', 237, 'They were a mixed technological and business success', 0, 1, 2, 4, '2019-08-17 22:18:14', '2019-08-17 22:18:14'),
(803, 'CH000000802', 238, 'massive proliferation of dot-com start-ups', 0, 1, 2, 1, '2019-08-17 22:21:29', '2019-08-17 22:21:29'),
(804, 'CH000000803', 238, 'widespread adoption of broadband networks', 0, 1, 2, 2, '2019-08-17 22:21:29', '2019-08-17 22:21:29'),
(805, 'CH000000804', 238, 'rapid growth of search engine advertising', 0, 1, 2, 3, '2019-08-17 22:21:29', '2019-08-17 22:21:29'),
(806, 'CH000000805', 238, 'expansion of e-commerce to include services as well as goods', 1, 1, 2, 4, '2019-08-17 22:21:29', '2019-08-17 22:21:29'),
(807, 'CH000000806', 239, 'predominance of pure online strategies', 0, 1, 2, 1, '2019-08-17 22:24:37', '2019-08-17 22:24:37'),
(808, 'CH000000807', 239, 'emphasis on revenue growth versus profits', 0, 1, 2, 2, '2019-08-17 22:24:37', '2019-08-17 22:24:37'),
(809, 'CH000000808', 239, 'brand extension and strengthening becomes more important than creating new brands', 1, 1, 2, 3, '2019-08-17 22:24:37', '2019-08-17 22:24:37'),
(810, 'CH000000809', 239, 'shift to a technology-driven approach', 0, 1, 2, 4, '2019-08-17 22:24:37', '2019-08-17 22:24:37'),
(811, 'CH000000810', 240, 'Economists\' visions of a friction-free market have not been realized.', 0, 1, 2, 1, '2019-08-17 22:28:11', '2019-08-17 22:28:11'),
(812, 'CH000000811', 240, 'Consumers are less price-sensitive than expected', 0, 1, 2, 2, '2019-08-17 22:28:11', '2019-08-17 22:28:11'),
(813, 'CH000000812', 240, 'There remains considerable persistent price dispersion', 0, 1, 2, 3, '2019-08-17 22:28:11', '2019-08-17 22:28:11'),
(814, 'CH000000813', 240, 'The market middlemen disappeared.', 1, 1, 2, 4, '2019-08-17 22:28:11', '2019-08-17 22:28:11'),
(815, 'CH000000814', 241, 'Price, cost, and quality information are equally distributed.', 0, 1, 2, 1, '2019-08-17 22:31:38', '2019-08-17 22:31:38'),
(816, 'CH000000815', 241, 'A nearly infinite set of suppliers compete against one another', 0, 1, 2, 2, '2019-08-17 22:31:38', '2019-08-17 22:31:38'),
(817, 'CH000000816', 241, 'Customers have access to all relevant information worldwide.', 0, 1, 2, 3, '2019-08-17 22:31:38', '2019-08-17 22:31:38'),
(818, 'CH000000817', 241, 'It is highly regulated.', 1, 1, 2, 4, '2019-08-17 22:31:38', '2019-08-17 22:31:38'),
(819, 'CH000000818', 201, 'Java', 1, 1, 2, 4, '2019-08-24 22:14:06', '2019-08-24 22:14:06'),
(820, 'CH000000819', 202, 'Database', 0, 1, 2, 4, '2019-08-24 22:17:38', '2019-08-24 22:17:38'),
(821, 'CH000000820', 203, 'MIDI', 0, 1, 2, 4, '2019-08-24 22:19:22', '2019-08-24 22:19:22'),
(822, 'CH000000821', 204, 'All of the choices', 1, 1, 2, 4, '2019-08-24 22:21:28', '2019-08-24 22:21:28'),
(823, 'CH000000822', 205, 'Bluetooth driver', 0, 1, 2, 4, '2019-08-24 22:23:28', '2019-08-24 22:23:28'),
(824, 'CH000000823', 206, 'Java and PI/sql', 0, 1, 2, 4, '2019-08-24 22:29:47', '2019-08-24 22:29:47'),
(825, 'CH000000824', 207, 'Application data bridge', 0, 1, 2, 4, '2019-08-24 22:32:02', '2019-08-24 22:32:02'),
(826, 'CH000000825', 208, 'none of these', 0, 1, 2, 4, '2019-08-24 22:33:58', '2019-08-24 22:34:05'),
(827, 'CH000000826', 209, 'none of these', 0, 1, 2, 4, '2019-08-24 22:35:48', '2019-08-24 22:35:48'),
(828, 'CH000000827', 210, 'none of these', 0, 1, 2, 4, '2019-08-24 22:37:12', '2019-08-24 22:37:12'),
(829, 'CH000000828', 211, 'Opera', 0, 1, 2, 4, '2019-08-24 22:39:40', '2019-08-24 22:39:40'),
(830, 'CH000000829', 212, 'No company', 0, 1, 2, 4, '2019-08-24 22:40:53', '2019-08-24 22:40:53'),
(831, 'CH000000830', 213, 'Nokia', 0, 1, 2, 4, '2019-08-24 22:42:02', '2019-08-24 22:42:02'),
(832, 'CH000000831', 214, 'Hybrid kernel', 0, 1, 2, 4, '2019-08-24 22:43:58', '2019-08-24 22:43:58'),
(833, 'CH000000832', 215, '2.2 (Froyo)', 0, 1, 2, 4, '2019-08-24 22:45:54', '2019-08-24 22:45:54'),
(834, 'CH000000833', 216, 'all of the choices', 1, 1, 2, 4, '2019-08-24 22:49:10', '2019-08-24 22:49:10'),
(835, 'CH000000834', 217, 'Droide', 0, 1, 2, 4, '2019-08-24 22:50:45', '2019-08-24 22:50:45'),
(836, 'CH000000835', 242, 'Android:padding', 1, 1, 2, 1, '2019-08-24 23:01:48', '2019-08-24 23:01:48'),
(837, 'CH000000836', 242, 'Android:digits', 0, 1, 2, 2, '2019-08-24 23:01:48', '2019-08-24 23:01:48'),
(838, 'CH000000837', 242, 'Android:capitalize', 0, 1, 2, 3, '2019-08-24 23:01:48', '2019-08-24 23:01:48'),
(839, 'CH000000838', 242, 'Android:autoText', 0, 1, 2, 4, '2019-08-24 23:01:48', '2019-08-24 23:01:48'),
(840, 'CH000000839', 243, 'R.style', 1, 1, 2, 1, '2019-08-24 23:03:20', '2019-08-24 23:03:20'),
(841, 'CH000000840', 243, 'X.style', 0, 1, 2, 2, '2019-08-24 23:03:20', '2019-08-24 23:03:20'),
(842, 'CH000000841', 243, 'manifest.XML', 0, 1, 2, 3, '2019-08-24 23:03:20', '2019-08-24 23:03:20'),
(843, 'CH000000842', 243, 'application', 0, 1, 2, 4, '2019-08-24 23:03:20', '2019-08-24 23:03:20'),
(844, 'CH000000843', 244, 'commitUpdates()', 1, 1, 2, 1, '2019-08-24 23:05:17', '2019-08-24 23:05:17'),
(845, 'CH000000844', 244, 'updates()', 0, 1, 2, 2, '2019-08-24 23:05:17', '2019-08-24 23:05:17'),
(846, 'CH000000845', 244, 'commit()', 0, 1, 2, 3, '2019-08-24 23:05:17', '2019-08-24 23:05:17'),
(847, 'CH000000846', 244, 'none of these', 0, 1, 2, 4, '2019-08-24 23:05:17', '2019-08-24 23:05:17'),
(848, 'CH000000847', 245, 'html', 0, 1, 2, 1, '2019-08-24 23:07:07', '2019-08-24 23:07:07'),
(849, 'CH000000848', 245, 'text', 0, 1, 2, 2, '2019-08-24 23:07:07', '2019-08-24 23:07:07'),
(850, 'CH000000849', 245, 'Text/HTML', 1, 1, 2, 3, '2019-08-24 23:07:07', '2019-08-24 23:07:07'),
(851, 'CH000000850', 245, 'Doc', 0, 1, 2, 4, '2019-08-24 23:07:07', '2019-08-24 23:07:07'),
(852, 'CH000000851', 246, 'res/', 0, 1, 2, 1, '2019-08-24 23:08:29', '2019-08-24 23:17:20'),
(853, 'CH000000852', 246, 'assets/', 0, 1, 2, 2, '2019-08-24 23:08:29', '2019-08-24 23:17:20'),
(854, 'CH000000853', 246, 'src/', 1, 1, 2, 3, '2019-08-24 23:08:29', '2019-08-24 23:17:20'),
(855, 'CH000000854', 246, 'bin/', 0, 1, 2, 4, '2019-08-24 23:08:29', '2019-08-24 23:17:20'),
(856, 'CH000000855', 247, 'services', 1, 1, 2, 1, '2019-08-24 23:09:57', '2019-08-24 23:17:35'),
(857, 'CH000000856', 247, 'simulator', 0, 1, 2, 2, '2019-08-24 23:09:57', '2019-08-24 23:17:35'),
(858, 'CH000000857', 247, 'Emulator', 0, 1, 2, 3, '2019-08-24 23:09:57', '2019-08-24 23:17:35'),
(859, 'CH000000858', 247, 'none of these', 0, 1, 2, 4, '2019-08-24 23:09:57', '2019-08-24 23:17:35'),
(860, 'CH000000859', 248, 'To send the data from an application to another application', 0, 1, 2, 1, '2019-08-24 23:12:14', '2019-08-24 23:17:58'),
(861, 'CH000000860', 248, 'To store the data in a database', 0, 1, 2, 2, '2019-08-24 23:12:14', '2019-08-24 23:17:58'),
(862, 'CH000000861', 248, 'To share the data between applications', 1, 1, 2, 3, '2019-08-24 23:12:14', '2019-08-24 23:17:59'),
(863, 'CH000000862', 248, 'none of the choices', 0, 1, 2, 4, '2019-08-24 23:12:14', '2019-08-24 23:17:59'),
(864, 'CH000000863', 249, 'finish()', 0, 1, 2, 1, '2019-08-24 23:13:31', '2019-08-24 23:18:13'),
(865, 'CH000000864', 249, 'getGPSStatus()', 0, 1, 2, 2, '2019-08-24 23:13:31', '2019-08-24 23:18:13'),
(866, 'CH000000865', 249, 'onProviderDisable()', 1, 1, 2, 3, '2019-08-24 23:13:31', '2019-08-24 23:18:13'),
(867, 'CH000000866', 249, 'getGPS().', 0, 1, 2, 4, '2019-08-24 23:13:31', '2019-08-24 23:18:13'),
(868, 'CH000000867', 250, 'com.json', 0, 1, 2, 1, '2019-08-24 23:14:37', '2019-08-24 23:18:30'),
(869, 'CH000000868', 250, 'org.apache.http.client', 1, 1, 2, 2, '2019-08-24 23:14:37', '2019-08-24 23:18:30'),
(870, 'CH000000869', 250, 'com.android.JSON', 0, 1, 2, 3, '2019-08-24 23:14:37', '2019-08-24 23:18:30'),
(871, 'CH000000870', 250, 'org.json', 0, 1, 2, 4, '2019-08-24 23:14:37', '2019-08-24 23:18:30'),
(872, 'CH000000871', 251, 'Services performs functionalities in the background. By default services run on main thread only', 1, 1, 2, 1, '2019-08-24 23:16:54', '2019-08-24 23:18:50'),
(873, 'CH000000872', 251, 'Thread and services are having same functionalities.', 0, 1, 2, 2, '2019-08-24 23:16:54', '2019-08-24 23:18:50'),
(874, 'CH000000873', 251, 'Thread works on services', 0, 1, 2, 3, '2019-08-24 23:16:54', '2019-08-24 23:18:50'),
(875, 'CH000000874', 251, 'none of these', 0, 1, 2, 4, '2019-08-24 23:16:54', '2019-08-24 23:18:50'),
(876, 'CH000000875', 252, 'A class used to hold states and objects', 1, 1, 2, 1, '2019-08-24 23:20:18', '2019-08-24 23:20:18'),
(877, 'CH000000876', 252, 'A bean class can be passed from one activity to another.', 0, 1, 2, 2, '2019-08-24 23:20:18', '2019-08-24 23:20:18'),
(878, 'CH000000877', 252, 'A mandatory class in android', 0, 1, 2, 3, '2019-08-24 23:20:18', '2019-08-24 23:20:18'),
(879, 'CH000000878', 252, 'None of the above', 0, 1, 2, 4, '2019-08-24 23:20:18', '2019-08-24 23:20:18'),
(880, 'CH000000879', 253, 'Using getContext() in onCreate()', 0, 1, 2, 1, '2019-08-24 23:26:32', '2019-08-24 23:26:32'),
(881, 'CH000000880', 253, 'Using intent()', 0, 1, 2, 2, '2019-08-24 23:26:32', '2019-08-24 23:26:32'),
(882, 'CH000000881', 253, 'Using getApplicationContext() at anywhere in an application', 0, 1, 2, 3, '2019-08-24 23:26:32', '2019-08-24 23:26:32'),
(883, 'CH000000882', 253, 'A & C', 1, 1, 2, 4, '2019-08-24 23:26:32', '2019-08-24 23:26:32'),
(884, 'CH000000883', 254, 'httprequest(get/post) and returns response from the server', 1, 1, 2, 1, '2019-08-24 23:28:00', '2019-08-24 23:28:00'),
(885, 'CH000000884', 254, 'Cookies management', 0, 1, 2, 2, '2019-08-24 23:28:00', '2019-08-24 23:28:00'),
(886, 'CH000000885', 254, 'Authentication management', 0, 1, 2, 3, '2019-08-24 23:28:00', '2019-08-24 23:28:00'),
(887, 'CH000000886', 254, 'None of the above', 0, 1, 2, 4, '2019-08-24 23:28:00', '2019-08-24 23:28:00'),
(888, 'CH000000887', 255, 'DDMS', 0, 1, 2, 1, '2019-08-24 23:29:10', '2019-08-24 23:29:10'),
(889, 'CH000000888', 255, 'Breaking point', 0, 1, 2, 2, '2019-08-24 23:29:10', '2019-08-24 23:29:10'),
(890, 'CH000000889', 255, 'Memory profiling', 0, 1, 2, 3, '2019-08-24 23:29:10', '2019-08-24 23:29:10'),
(891, 'CH000000890', 255, 'None of the above.', 1, 1, 2, 4, '2019-08-24 23:29:10', '2019-08-24 23:29:10'),
(892, 'CH000000891', 256, 'Content values are key pair values, which are updated or inserted in the database', 0, 1, 2, 1, '2019-08-24 23:30:21', '2019-08-24 23:30:21'),
(893, 'CH000000892', 256, 'Cursor is used to store the temporary result.', 0, 1, 2, 2, '2019-08-24 23:30:21', '2019-08-24 23:30:21'),
(894, 'CH000000893', 256, 'A & B', 1, 1, 2, 3, '2019-08-24 23:30:21', '2019-08-24 23:30:21'),
(895, 'CH000000894', 256, 'Cursor is used to store data permanently.', 0, 1, 2, 4, '2019-08-24 23:30:21', '2019-08-24 23:30:21'),
(896, 'CH000000895', 257, 'There are no permission tags available in android', 0, 1, 2, 1, '2019-08-24 23:31:29', '2019-08-24 23:31:29'),
(897, 'CH000000896', 257, 'Normal, kernel, application', 0, 1, 2, 2, '2019-08-24 23:31:29', '2019-08-24 23:31:29'),
(898, 'CH000000897', 257, 'Normal, dangerous, signature, and signatureOrsystem', 1, 1, 2, 3, '2019-08-24 23:31:29', '2019-08-24 23:31:29'),
(899, 'CH000000898', 257, 'None of the above', 0, 1, 2, 4, '2019-08-24 23:31:29', '2019-08-24 23:31:29'),
(900, 'CH000000899', 32, 'All of the choices', 1, 1, 2, 4, '2019-08-24 23:45:13', '2019-08-24 23:45:13'),
(901, 'CH000000900', 33, 'ToInt32', 0, 1, 2, 4, '2019-08-25 01:08:02', '2019-08-25 01:08:02'),
(902, 'CH000000901', 34, '*', 0, 1, 2, 4, '2019-08-25 01:09:24', '2019-08-25 01:09:24'),
(903, 'CH000000902', 35, 'Internal', 0, 1, 2, 4, '2019-08-25 01:10:40', '2019-08-25 01:10:40'),
(904, 'CH000000903', 36, 'All of the choices', 1, 1, 2, 4, '2019-08-25 01:12:04', '2019-08-25 01:12:04'),
(905, 'CH000000904', 37, 'else', 0, 1, 2, 4, '2019-08-25 01:16:45', '2019-08-25 01:16:45'),
(906, 'CH000000905', 39, 'Not assigned', 0, 1, 2, 4, '2019-08-25 01:25:42', '2019-08-25 01:25:42'),
(907, 'CH000000906', 42, 'private', 0, 1, 2, 4, '2019-08-25 01:36:58', '2019-08-25 01:36:58'),
(908, 'CH000000907', 43, '64 bit', 0, 1, 2, 4, '2019-08-25 01:38:37', '2019-08-25 01:38:37'),
(909, 'CH000000908', 44, '64 bit', 0, 1, 2, 4, '2019-08-25 01:39:59', '2019-08-25 01:39:59'),
(910, 'CH000000909', 45, 'class variables, instance variables', 0, 1, 2, 4, '2019-08-25 01:42:08', '2019-08-25 01:42:08'),
(911, 'CH000000910', 51, 'Runtime error', 0, 1, 2, 4, '2019-08-25 02:03:45', '2019-08-25 02:03:45'),
(912, 'CH000000911', 52, '100', 0, 1, 2, 4, '2019-08-25 02:05:51', '2019-08-25 02:05:51'),
(913, 'CH000000912', 53, 'Garbage value', 0, 1, 2, 4, '2019-08-25 02:07:31', '2019-08-25 02:07:31'),
(914, 'CH000000913', 54, 'classname@hashcode in hexadecimal form', 1, 1, 2, 4, '2019-08-25 02:09:08', '2019-08-25 02:09:36'),
(915, 'CH000000914', 55, 'new malloc', 0, 1, 2, 4, '2019-08-25 02:12:43', '2019-08-25 02:12:43'),
(916, 'CH000000915', 56, 'int arr[] = int [5] new', 1, 1, 2, 4, '2019-08-25 02:14:54', '2019-08-25 02:14:54'),
(917, 'CH000000916', 58, '1 2 3 4 5 6 7 8 9 10', 0, 1, 2, 4, '2019-08-25 02:21:34', '2019-08-25 02:21:34'),
(918, 'CH000000917', 59, '1', 1, 1, 2, 4, '2019-08-25 02:28:06', '2019-08-25 02:28:06'),
(919, 'CH000000918', 60, 'Code runs successfully', 0, 1, 2, 4, '2019-08-25 02:30:47', '2019-08-25 02:30:47'),
(920, 'CH000000919', 61, 'first generation memory', 0, 1, 2, 4, '2019-08-25 02:32:31', '2019-08-25 02:32:31'),
(921, 'CH000000920', 258, 'Sequential', 1, 1, 2, 1, '2019-08-25 02:34:55', '2019-08-25 02:34:55'),
(922, 'CH000000921', 258, 'Random', 0, 1, 2, 2, '2019-08-25 02:34:55', '2019-08-25 02:34:55'),
(923, 'CH000000922', 258, 'Sequential and Random', 0, 1, 2, 3, '2019-08-25 02:34:55', '2019-08-25 02:34:55'),
(924, 'CH000000923', 258, 'Binary search', 0, 1, 2, 4, '2019-08-25 02:34:55', '2019-08-25 02:34:55'),
(925, 'CH000000924', 259, '1, 2 & 3', 0, 1, 2, 1, '2019-08-25 02:38:44', '2019-08-25 02:38:44'),
(926, 'CH000000925', 259, '1 & 4', 0, 1, 2, 2, '2019-08-25 02:38:44', '2019-08-25 02:38:44'),
(927, 'CH000000926', 259, '1, 2, 3 & 4', 1, 1, 2, 3, '2019-08-25 02:38:44', '2019-08-25 02:38:44'),
(928, 'CH000000927', 259, '3 & 2', 0, 1, 2, 4, '2019-08-25 02:38:44', '2019-08-25 02:38:44'),
(929, 'CH000000928', 141, 'Proposition', 0, 1, 2, 4, '2019-08-25 04:38:28', '2019-08-25 04:38:28'),
(930, 'CH000000929', 142, '{1, 5, 7, 9, 11}', 0, 1, 2, 4, '2019-08-25 04:40:12', '2019-08-25 04:40:12'),
(931, 'CH000000930', 143, 'Three', 0, 1, 2, 4, '2019-08-25 04:41:28', '2019-08-25 04:41:28'),
(932, 'CH000000931', 144, '20', 0, 1, 2, 4, '2019-08-25 04:42:58', '2019-08-25 04:42:58'),
(933, 'CH000000932', 145, '{(1, 1), (a, a), (2, a), (1, b)}', 0, 1, 2, 4, '2019-08-25 04:44:34', '2019-08-25 04:44:34'),
(934, 'CH000000933', 146, 'A = {1, 2, 4} and B = {1, 2, 3}', 0, 1, 2, 4, '2019-08-25 04:46:16', '2019-08-25 04:46:16'),
(935, 'CH000000934', 147, 'Empty', 0, 1, 2, 4, '2019-08-25 04:47:41', '2019-08-25 04:47:41'),
(936, 'CH000000935', 148, '9', 0, 1, 2, 4, '2019-08-25 04:48:58', '2019-08-25 04:48:58'),
(937, 'CH000000936', 149, '{1, 5, 6, 3}', 0, 1, 2, 4, '2019-08-25 04:52:33', '2019-08-25 04:52:33'),
(938, 'CH000000937', 150, '{1, 6}', 0, 1, 2, 4, '2019-08-25 04:53:42', '2019-08-25 04:53:42'),
(939, 'CH000000938', 151, 'Complement', 0, 1, 2, 4, '2019-08-25 04:54:40', '2019-08-25 04:54:40'),
(940, 'CH000000939', 152, '0010010101', 0, 1, 2, 4, '2019-08-25 04:58:27', '2019-08-25 04:58:27'),
(941, 'CH000000940', 153, '{2}', 0, 1, 2, 4, '2019-08-25 04:59:43', '2019-08-25 04:59:43'),
(942, 'CH000000941', 154, 'B – A', 0, 1, 2, 4, '2019-08-25 05:00:41', '2019-08-25 05:00:41'),
(943, 'CH000000942', 155, '7', 0, 1, 2, 4, '2019-08-25 05:02:12', '2019-08-25 05:02:12'),
(944, 'CH000000943', 156, 'None of the choices', 0, 1, 2, 4, '2019-08-25 05:03:22', '2019-08-25 05:03:22'),
(945, 'CH000000944', 157, '8', 0, 1, 2, 4, '2019-08-25 05:04:19', '2019-08-25 05:04:19'),
(946, 'CH000000945', 158, 'none of the choices', 0, 1, 2, 4, '2019-08-25 05:05:26', '2019-08-25 05:05:26'),
(947, 'CH000000946', 159, '{ x: x is a prime number less than 5 and is odd}', 1, 1, 2, 4, '2019-08-25 05:06:29', '2019-08-25 05:06:29'),
(948, 'CH000000947', 160, 'B', 0, 1, 2, 4, '2019-08-25 05:10:16', '2019-08-25 05:22:46'),
(949, 'CH000000948', 161, 'B’ (Complement of B)', 0, 1, 2, 4, '2019-08-25 05:12:18', '2019-08-25 05:12:18'),
(950, 'CH000000949', 162, 'All of the mentioned', 1, 1, 2, 4, '2019-08-25 05:14:02', '2019-08-25 05:14:02'),
(951, 'CH000000950', 260, '35', 1, 1, 2, 1, '2019-08-25 05:15:55', '2019-08-25 05:15:55'),
(952, 'CH000000951', 260, '20', 0, 1, 2, 2, '2019-08-25 05:15:55', '2019-08-25 05:15:55'),
(953, 'CH000000952', 260, '30', 0, 1, 2, 3, '2019-08-25 05:15:55', '2019-08-25 05:15:55'),
(954, 'CH000000953', 260, '10', 0, 1, 2, 4, '2019-08-25 05:15:55', '2019-08-25 05:15:55'),
(955, 'CH000000954', 261, 'A‘ (Complement of A)', 0, 1, 2, 1, '2019-08-25 05:18:18', '2019-08-25 05:18:18'),
(956, 'CH000000955', 261, 'A U B – (A ∩ B)', 1, 1, 2, 2, '2019-08-25 05:18:18', '2019-08-25 05:18:18'),
(957, 'CH000000956', 261, 'A – B', 0, 1, 2, 3, '2019-08-25 05:18:18', '2019-08-25 05:18:18'),
(958, 'CH000000957', 261, 'B', 0, 1, 2, 4, '2019-08-25 05:18:18', '2019-08-25 05:18:18'),
(959, 'CH000000958', 262, '12', 1, 1, 2, 1, '2019-08-25 05:19:40', '2019-08-25 05:20:03'),
(960, 'CH000000959', 262, '14', 0, 1, 2, 2, '2019-08-25 05:19:40', '2019-08-25 05:20:03'),
(961, 'CH000000960', 262, '24', 0, 1, 2, 3, '2019-08-25 05:19:40', '2019-08-25 05:20:03'),
(962, 'CH000000961', 262, '7', 0, 1, 2, 4, '2019-08-25 05:19:40', '2019-08-25 05:20:03'),
(963, 'CH000000962', 263, 'One-to-many', 0, 1, 2, 1, '2019-08-25 05:22:05', '2019-08-25 05:22:05'),
(964, 'CH000000963', 263, 'One-to-one', 1, 1, 2, 2, '2019-08-25 05:22:05', '2019-08-25 05:22:05'),
(965, 'CH000000964', 263, 'Many-to-many', 0, 1, 2, 3, '2019-08-25 05:22:05', '2019-08-25 05:22:05'),
(966, 'CH000000965', 263, 'Many-to-one', 0, 1, 2, 4, '2019-08-25 05:22:05', '2019-08-25 05:22:05'),
(967, 'CH000000966', 264, 'f -1 (y) = (y – 2) 1/2', 0, 1, 2, 1, '2019-08-25 05:24:14', '2019-08-25 05:24:14'),
(968, 'CH000000967', 264, 'f -1 (y) = (y – 2) 1/3', 1, 1, 2, 2, '2019-08-25 05:24:15', '2019-08-25 05:24:15'),
(969, 'CH000000968', 264, 'f -1 (y) = (y) 1/3', 0, 1, 2, 3, '2019-08-25 05:24:15', '2019-08-25 05:24:15'),
(970, 'CH000000969', 264, 'f -1 (y) = (y – 2)', 0, 1, 2, 4, '2019-08-25 05:24:15', '2019-08-25 05:24:15'),
(971, 'CH000000970', 265, 'O(x<sup>2</sup>)', 1, 1, 2, 1, '2019-08-25 05:30:59', '2019-08-25 05:30:59');
INSERT INTO `choices` (`id`, `ch_code`, `test_question_id`, `body`, `is_correct`, `is_active`, `user_id`, `pos_order`, `created_at`, `updated_at`) VALUES
(972, 'CH000000971', 265, 'O(x)', 0, 1, 2, 2, '2019-08-25 05:30:59', '2019-08-25 05:30:59'),
(973, 'CH000000972', 265, 'O(x<sup>2</sup> / 3)', 0, 1, 2, 3, '2019-08-25 05:30:59', '2019-08-25 05:30:59'),
(974, 'CH000000973', 265, 'O(1)', 0, 1, 2, 4, '2019-08-25 05:30:59', '2019-08-25 05:30:59'),
(975, 'CH000000974', 266, '(-∞, ∞)', 1, 1, 2, 1, '2019-08-25 05:34:32', '2019-08-25 05:34:32'),
(976, 'CH000000975', 266, '(-∞, ∞) – {0}', 0, 1, 2, 2, '2019-08-25 05:34:32', '2019-08-25 05:34:32'),
(977, 'CH000000976', 266, '[0, ∞)', 0, 1, 2, 3, '2019-08-25 05:34:32', '2019-08-25 05:34:32'),
(978, 'CH000000977', 267, 'smallest previous integer', 0, 1, 2, 1, '2019-08-25 05:42:50', '2019-08-25 05:42:50'),
(979, 'CH000000978', 267, 'greatest previous integer', 1, 1, 2, 2, '2019-08-25 05:42:50', '2019-08-25 05:42:50'),
(980, 'CH000000979', 267, 'smallest following integer', 0, 1, 2, 3, '2019-08-25 05:42:50', '2019-08-25 05:42:50'),
(981, 'CH000000980', 268, 'no solutions in any case', 0, 1, 2, 1, '2019-08-25 05:44:30', '2019-08-25 05:44:30'),
(982, 'CH000000981', 268, 'same as solution to f(x) = x', 1, 1, 2, 2, '2019-08-25 05:44:30', '2019-08-25 05:44:30'),
(983, 'CH000000982', 268, 'infinite number of solution for every case', 0, 1, 2, 3, '2019-08-25 05:44:30', '2019-08-25 05:44:30'),
(984, 'CH000000983', 269, 'An airthmetic sequence', 1, 1, 2, 1, '2019-08-25 05:45:26', '2019-08-25 05:45:26'),
(985, 'CH000000984', 269, 'A geometic progression', 0, 1, 2, 2, '2019-08-25 05:45:26', '2019-08-25 05:45:26'),
(986, 'CH000000985', 269, 'A harmonic sequence', 0, 1, 2, 3, '2019-08-25 05:45:26', '2019-08-25 05:45:26'),
(987, 'CH000000986', 270, '35', 1, 1, 2, 1, '2019-08-25 05:46:21', '2019-08-25 05:46:21'),
(988, 'CH000000987', 270, '45', 0, 1, 2, 2, '2019-08-25 05:46:21', '2019-08-25 05:46:21'),
(989, 'CH000000988', 270, '25', 0, 1, 2, 3, '2019-08-25 05:46:21', '2019-08-25 05:46:21'),
(990, 'CH000000989', 271, 'Numeric', 0, 1, 2, 1, '2019-08-25 05:49:07', '2019-08-25 05:49:07'),
(991, 'CH000000990', 271, 'Boolean', 0, 1, 2, 2, '2019-08-25 05:49:07', '2019-08-25 05:49:07'),
(992, 'CH000000991', 271, 'Characters', 0, 1, 2, 3, '2019-08-25 05:49:07', '2019-08-25 05:49:07'),
(993, 'CH000000992', 271, 'Both Numeric & Characters', 1, 1, 2, 4, '2019-08-25 05:49:07', '2019-08-25 05:49:07'),
(994, 'CH000000993', 272, 'merging', 0, 1, 2, 1, '2019-08-25 05:52:13', '2019-08-25 05:52:13'),
(995, 'CH000000994', 272, 'selection', 1, 1, 2, 2, '2019-08-25 05:52:13', '2019-08-25 05:52:13'),
(996, 'CH000000995', 272, 'insertion', 0, 1, 2, 3, '2019-08-25 05:52:13', '2019-08-25 05:52:13'),
(997, 'CH000000996', 272, 'partitioning', 0, 1, 2, 4, '2019-08-25 05:52:13', '2019-08-25 05:52:13'),
(998, 'CH000000997', 273, '2b = 2a + 3c', 0, 1, 2, 1, '2019-08-25 05:53:48', '2019-08-25 05:53:48'),
(999, 'CH000000998', 273, '2a = b + c', 0, 1, 2, 2, '2019-08-25 05:53:48', '2019-08-25 05:53:48'),
(1000, 'CH000000999', 273, '2b = a + c', 1, 1, 2, 3, '2019-08-25 05:53:48', '2019-08-25 05:53:48'),
(1001, 'CH000001000', 273, '2c = a + c', 0, 1, 2, 4, '2019-08-25 05:53:48', '2019-08-25 05:53:48'),
(1002, 'CH000001001', 119, 'for loop', 1, 1, 2, 4, '2019-08-25 05:57:40', '2019-08-25 05:57:40'),
(1003, 'CH000001002', 120, 'Assignment operators', 0, 1, 2, 4, '2019-08-25 05:59:44', '2019-08-25 05:59:44'),
(1004, 'CH000001003', 121, 'Assignment Operators', 0, 1, 2, 4, '2019-08-25 06:01:29', '2019-08-25 06:01:29'),
(1005, 'CH000001004', 122, 'Assignment opeartors', 0, 1, 2, 4, '2019-08-25 06:03:30', '2019-08-25 06:03:30'),
(1006, 'CH000001005', 123, 'Assignment operators', 0, 1, 2, 4, '2019-08-25 06:06:02', '2019-08-25 06:06:02'),
(1007, 'CH000001006', 124, 'Explicit Types', 0, 1, 2, 4, '2019-08-25 06:18:03', '2019-08-25 06:18:03'),
(1008, 'CH000001007', 125, 'Explicit Type', 0, 1, 2, 4, '2019-08-25 06:19:40', '2019-08-25 06:19:40'),
(1009, 'CH000001008', 132, 'While', 0, 1, 2, 4, '2019-08-26 04:14:59', '2019-08-26 04:14:59'),
(1010, 'CH000001009', 134, 'ref', 0, 1, 2, 4, '2019-08-26 04:20:50', '2019-08-26 04:20:50'),
(1011, 'CH000001010', 135, 'base', 0, 1, 2, 4, '2019-08-26 04:22:21', '2019-08-26 04:22:21'),
(1012, 'CH000001011', 136, 'a and c', 1, 1, 2, 4, '2019-08-26 04:24:45', '2019-08-26 04:24:45'),
(1013, 'CH000001012', 137, 'Are Virtual', 0, 1, 2, 4, '2019-08-26 04:32:00', '2019-08-26 04:32:00'),
(1014, 'CH000001013', 138, 'a and b', 0, 1, 2, 4, '2019-08-26 04:33:11', '2019-08-26 04:33:11'),
(1015, 'CH000001014', 139, 'Namespace', 0, 1, 2, 4, '2019-08-26 04:35:51', '2019-08-26 04:35:51'),
(1016, 'CH000001015', 140, 'Object', 0, 1, 2, 4, '2019-08-26 04:36:55', '2019-08-26 04:36:55'),
(1017, 'CH000001016', 274, 'Bool type', 0, 1, 2, 1, '2019-08-26 04:37:57', '2019-08-26 04:37:57'),
(1018, 'CH000001017', 274, 'Instance type', 0, 1, 2, 2, '2019-08-26 04:37:57', '2019-08-26 04:37:57'),
(1019, 'CH000001018', 274, 'Class type', 0, 1, 2, 3, '2019-08-26 04:37:57', '2019-08-26 04:37:57'),
(1020, 'CH000001019', 274, 'Object type', 1, 1, 2, 4, '2019-08-26 04:37:57', '2019-08-26 04:37:57'),
(1021, 'CH000001020', 275, 'Only one catch block for each try block.', 0, 1, 2, 1, '2019-08-26 04:41:33', '2019-08-26 04:41:33'),
(1022, 'CH000001021', 275, 'Several catch blocks for a try block, arranged in order starting with Exception and ending with the most specific exception.', 0, 1, 2, 2, '2019-08-26 04:41:33', '2019-08-26 04:41:33'),
(1023, 'CH000001022', 275, 'Several catch blocks within one try block, arranged starting with the most specific exception and ending with Exception.', 1, 1, 2, 3, '2019-08-26 04:41:33', '2019-08-26 04:41:33'),
(1024, 'CH000001023', 275, 'The catch blocks should be used only when a finally block is not used.', 0, 1, 2, 4, '2019-08-26 04:41:33', '2019-08-26 04:41:33'),
(1025, 'CH000001024', 276, 'Getvalue', 0, 1, 2, 1, '2019-08-26 04:45:22', '2019-08-26 04:45:22'),
(1026, 'CH000001025', 276, 'Getstring', 0, 1, 2, 2, '2019-08-26 04:45:22', '2019-08-26 04:45:22'),
(1027, 'CH000001026', 276, 'GetNumber', 0, 1, 2, 3, '2019-08-26 04:45:22', '2019-08-26 04:45:22'),
(1028, 'CH000001027', 276, 'None', 1, 1, 2, 4, '2019-08-26 04:45:22', '2019-08-26 04:45:22'),
(1029, 'CH000001028', 277, 'The code will generate an error because it lacks a catch block.', 0, 1, 2, 1, '2019-08-26 04:47:49', '2019-08-26 04:47:49'),
(1030, 'CH000001029', 277, 'The code will generate an error because it lacks a throw statement.', 0, 1, 2, 2, '2019-08-26 04:47:49', '2019-08-26 04:47:49'),
(1031, 'CH000001030', 277, 'The code will generate an error because the finally block is placed immediately after the try block.', 0, 1, 2, 3, '2019-08-26 04:47:49', '2019-08-26 04:47:49'),
(1032, 'CH000001031', 277, 'The code will compile without an error.', 1, 1, 2, 4, '2019-08-26 04:47:49', '2019-08-26 04:47:49'),
(1033, 'CH000001032', 278, 'Message1\nMessage4', 0, 1, 2, 1, '2019-08-26 04:49:26', '2019-08-26 04:49:26'),
(1034, 'CH000001033', 278, 'Message1\nMessage2\nMessage3\nMessage4', 0, 1, 2, 2, '2019-08-26 04:49:26', '2019-08-26 04:49:26'),
(1035, 'CH000001034', 278, 'Message1\nMessage3\nMessage4', 1, 1, 2, 3, '2019-08-26 04:49:26', '2019-08-26 04:49:26'),
(1036, 'CH000001035', 278, 'Message1\nMessage3\nMessage2\nMessage4', 0, 1, 2, 4, '2019-08-26 04:49:26', '2019-08-26 04:49:26'),
(1037, 'CH000001036', 279, 'Program the KeyPress event of the TextBox controls to convert uppercase letters to lowercase letters.', 0, 1, 2, 1, '2019-08-26 04:50:36', '2019-08-26 04:50:36'),
(1038, 'CH000001037', 279, 'Create a single event handler that is attached to the KeyPress event of the form. Program this event handler to convert the uppercase letters to lowercase ones.', 0, 1, 2, 2, '2019-08-26 04:50:36', '2019-08-26 04:50:36'),
(1039, 'CH000001038', 279, 'Set the CharacterCasing property of the Textbox controls to Lower.', 1, 1, 2, 3, '2019-08-26 04:50:36', '2019-08-26 04:50:36'),
(1040, 'CH000001039', 279, 'Use the CharacterCasing method of the controls to convert the letters to lowercase letters.', 0, 1, 2, 4, '2019-08-26 04:50:36', '2019-08-26 04:50:36'),
(1041, 'CH000001040', 280, 'LostFocus', 0, 1, 2, 1, '2019-08-26 04:51:57', '2019-08-26 04:51:57'),
(1042, 'CH000001041', 280, 'Validating', 1, 1, 2, 2, '2019-08-26 04:51:57', '2019-08-26 04:51:57'),
(1043, 'CH000001042', 280, 'Leave', 0, 1, 2, 3, '2019-08-26 04:51:57', '2019-08-26 04:51:57'),
(1044, 'CH000001043', 280, 'Validated', 0, 1, 2, 4, '2019-08-26 04:51:57', '2019-08-26 04:51:57'),
(1045, 'CH000001044', 281, 'HelpLink', 0, 1, 2, 1, '2019-08-26 04:52:58', '2019-08-26 04:52:58'),
(1046, 'CH000001045', 281, 'InnerException', 0, 1, 2, 2, '2019-08-26 04:52:58', '2019-08-26 04:52:58'),
(1047, 'CH000001046', 281, 'Message', 0, 1, 2, 3, '2019-08-26 04:52:58', '2019-08-26 04:52:58'),
(1048, 'CH000001047', 281, 'StackTrace', 1, 1, 2, 4, '2019-08-26 04:52:58', '2019-08-26 04:52:58'),
(1049, 'CH000001048', 282, 'Windows event log', 0, 1, 2, 1, '2019-08-26 04:53:51', '2019-08-26 04:53:51'),
(1050, 'CH000001049', 282, 'Custom log files', 1, 1, 2, 2, '2019-08-26 04:53:51', '2019-08-26 04:53:51'),
(1051, 'CH000001050', 282, 'Databases such as SQL Server 2000', 0, 1, 2, 3, '2019-08-26 04:53:51', '2019-08-26 04:53:51'),
(1052, 'CH000001051', 282, 'Email notifications', 0, 1, 2, 4, '2019-08-26 04:53:51', '2019-08-26 04:53:51'),
(1053, 'CH000001052', 283, 'Set the CausesValidation property of the text box to false.', 0, 1, 2, 1, '2019-08-26 04:55:39', '2019-08-26 04:55:39'),
(1054, 'CH000001053', 283, 'Set the CausesValidation property of the text box to true.', 0, 1, 2, 2, '2019-08-26 04:55:39', '2019-08-26 04:55:39'),
(1055, 'CH000001054', 283, 'Set the CausesValidation property of the Help button to false.', 1, 1, 2, 3, '2019-08-26 04:55:39', '2019-08-26 04:55:39'),
(1056, 'CH000001055', 283, 'Set the CausesValidation property of the Help button to true.', 0, 1, 2, 4, '2019-08-26 04:55:39', '2019-08-26 04:55:39'),
(1057, 'CH000001056', 284, 'm.dddd E+xxx', 1, 1, 2, 1, '2019-08-26 04:57:15', '2019-08-26 04:57:15'),
(1058, 'CH000001057', 284, 'm.dddd', 0, 1, 2, 2, '2019-08-26 04:57:15', '2019-08-26 04:57:15'),
(1059, 'CH000001058', 284, 'E+xxx', 0, 1, 2, 3, '2019-08-26 04:57:15', '2019-08-26 04:57:15'),
(1060, 'CH000001059', 284, 'none of the choices', 0, 1, 2, 4, '2019-08-26 04:57:15', '2019-08-26 04:57:15'),
(1061, 'CH000001060', 92, 'x > 6', 0, 1, 2, 4, '2019-08-26 05:03:49', '2019-08-26 05:03:49'),
(1062, 'CH000001061', 93, 'x ≤ -5', 0, 1, 2, 4, '2019-08-26 05:05:11', '2019-08-26 05:05:11'),
(1063, 'CH000001062', 94, '[[#img39]]', 1, 1, 2, 4, '2019-08-26 05:10:31', '2019-08-26 05:10:31'),
(1064, 'CH000001063', 95, '-12i', 0, 1, 2, 4, '2019-08-26 05:11:55', '2019-08-26 18:04:07'),
(1065, 'CH000001064', 96, '3', 0, 1, 2, 4, '2019-08-26 05:13:51', '2019-08-26 05:13:51'),
(1066, 'CH000001065', 97, '3i - 10', 0, 1, 2, 4, '2019-08-26 05:15:14', '2019-08-26 05:15:14'),
(1067, 'CH000001066', 98, '(1,0),(0,1)', 0, 1, 2, 4, '2019-08-26 05:16:30', '2019-08-26 05:16:30'),
(1068, 'CH000001067', 99, '4.753', 0, 1, 2, 4, '2019-08-26 05:18:10', '2019-08-26 05:18:10'),
(1069, 'CH000001068', 100, '[[#img43]]', 0, 1, 2, 4, '2019-08-26 05:24:41', '2019-08-26 05:24:41'),
(1070, 'CH000001069', 101, '[[#img47]]', 0, 1, 2, 4, '2019-08-26 05:28:58', '2019-08-26 05:28:58'),
(1071, 'CH000001070', 102, 'x < y and T2 > 8 (Two solid lines)', 0, 1, 2, 4, '2019-08-26 05:34:25', '2019-08-26 05:34:25'),
(1072, 'CH000001071', 103, 'x + 8 > y and 3y < x (Dotted and solid lines respectively)', 0, 1, 2, 4, '2019-08-26 17:19:01', '2019-08-26 17:19:01'),
(1073, 'CH000001072', 104, '(x+5)<sup>2</sup> -16', 0, 1, 2, 4, '2019-08-26 17:24:29', '2019-08-26 17:24:29'),
(1074, 'CH000001073', 105, '(x+6) and (x-4)', 0, 1, 2, 4, '2019-08-26 17:25:59', '2019-08-26 17:25:59'),
(1075, 'CH000001074', 106, '0.04', 0, 1, 2, 4, '2019-08-26 17:33:30', '2019-08-26 17:33:30'),
(1076, 'CH000001075', 107, '22', 1, 1, 2, 4, '2019-08-26 17:34:51', '2019-08-26 17:34:51'),
(1077, 'CH000001076', 108, '1 500 000', 0, 1, 2, 4, '2019-08-26 17:38:06', '2019-08-26 17:38:06'),
(1078, 'CH000001077', 109, 'on the line y = - x', 0, 1, 2, 4, '2019-08-26 17:39:18', '2019-08-26 17:39:18'),
(1079, 'CH000001078', 110, 'perpendicular', 1, 1, 2, 4, '2019-08-26 17:40:33', '2019-08-26 18:04:41'),
(1080, 'CH000001079', 111, '(3 π / 2 , 2 π)', 0, 1, 2, 4, '2019-08-26 17:41:41', '2019-08-26 17:41:41'),
(1081, 'CH000001080', 112, '8', 0, 1, 2, 4, '2019-08-26 17:44:12', '2019-08-26 17:44:12'),
(1082, 'CH000001081', 113, '3! * 2!', 0, 1, 2, 4, '2019-08-26 17:46:13', '2019-08-26 17:46:13'),
(1083, 'CH000001082', 114, 'mean = 10 , standard deviation = 1', 0, 1, 2, 4, '2019-08-26 17:48:45', '2019-08-26 17:48:45'),
(1084, 'CH000001083', 115, '106', 1, 1, 2, 4, '2019-08-26 17:59:24', '2019-08-26 17:59:24'),
(1085, 'CH000001084', 116, 'even and odd', 0, 1, 2, 4, '2019-08-26 18:02:17', '2019-08-26 18:02:17'),
(1086, 'CH000001085', 117, '3 π', 0, 1, 2, 4, '2019-08-26 18:05:53', '2019-08-26 18:06:18'),
(1087, 'CH000001086', 118, '0.6 cm', 0, 1, 2, 4, '2019-08-26 18:08:41', '2019-08-26 18:08:41'),
(1088, 'CH000001087', 285, '4 π <sup>2</sup>', 0, 1, 2, 1, '2019-08-26 18:09:50', '2019-08-26 18:09:50'),
(1089, 'CH000001088', 285, '2 π', 0, 1, 2, 2, '2019-08-26 18:09:50', '2019-08-26 18:09:50'),
(1090, 'CH000001089', 285, '4 π', 0, 1, 2, 3, '2019-08-26 18:09:50', '2019-08-26 18:09:50'),
(1091, 'CH000001090', 285, 'π', 1, 1, 2, 4, '2019-08-26 18:09:50', '2019-08-26 18:09:50'),
(1092, 'CH000001091', 286, '0.057', 1, 1, 2, 1, '2019-08-26 18:10:52', '2019-08-26 18:10:52'),
(1093, 'CH000001092', 286, '0.478', 0, 1, 2, 2, '2019-08-26 18:10:52', '2019-08-26 18:10:52'),
(1094, 'CH000001093', 286, '0.001', 0, 1, 2, 3, '2019-08-26 18:10:52', '2019-08-26 18:10:52'),
(1095, 'CH000001094', 286, '0', 0, 1, 2, 4, '2019-08-26 18:10:52', '2019-08-26 18:10:52'),
(1096, 'CH000001095', 287, '40,000', 0, 1, 2, 1, '2019-08-26 18:14:49', '2019-08-26 18:14:49'),
(1097, 'CH000001096', 287, '48,000', 0, 1, 2, 2, '2019-08-26 18:14:49', '2019-08-26 18:14:49'),
(1098, 'CH000001097', 287, '40,800', 1, 1, 2, 3, '2019-08-26 18:14:49', '2019-08-26 18:14:49'),
(1099, 'CH000001098', 287, '47,000', 0, 1, 2, 4, '2019-08-26 18:14:49', '2019-08-26 18:14:49'),
(1100, 'CH000001099', 288, 'a', 0, 1, 2, 1, '2019-08-26 18:16:10', '2019-08-26 18:16:10'),
(1101, 'CH000001100', 288, 'b', 0, 1, 2, 2, '2019-08-26 18:16:10', '2019-08-26 18:16:10'),
(1102, 'CH000001101', 288, 'c', 1, 1, 2, 3, '2019-08-26 18:16:10', '2019-08-26 18:16:10'),
(1103, 'CH000001102', 288, 'd', 0, 1, 2, 4, '2019-08-26 18:16:10', '2019-08-26 18:16:10'),
(1104, 'CH000001103', 289, '5', 0, 1, 2, 1, '2019-08-26 18:17:10', '2019-08-26 18:17:10'),
(1105, 'CH000001104', 289, '7', 1, 1, 2, 2, '2019-08-26 18:17:10', '2019-08-26 18:17:10'),
(1106, 'CH000001105', 289, '6', 0, 1, 2, 3, '2019-08-26 18:17:10', '2019-08-26 18:17:10'),
(1107, 'CH000001106', 289, '8', 0, 1, 2, 4, '2019-08-26 18:17:10', '2019-08-26 18:17:10'),
(1108, 'CH000001107', 290, 'testingA', 1, 1, 48, 1, '2019-09-15 02:16:46', '2019-09-15 02:16:46'),
(1109, 'CH000001108', 290, 'testingB', 0, 1, 48, 2, '2019-09-15 02:16:46', '2019-09-15 02:16:46'),
(1110, 'CH000001109', 290, 'testingC', 0, 1, 48, 3, '2019-09-15 02:16:46', '2019-09-15 02:16:46');

-- --------------------------------------------------------

--
-- Table structure for table `code_objects`
--

CREATE TABLE `code_objects` (
  `id` int(11) NOT NULL,
  `description` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `code` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `ref_id` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `language` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `code_objects`
--

INSERT INTO `code_objects` (`id`, `description`, `code`, `ref_id`, `language`, `created_at`, `updated_at`) VALUES
(1, 'test', 'var test = 0;', '_unrpclqgl', 'js', '2019-06-05 21:15:19', '2019-06-05 21:15:19'),
(2, 'try lang', 'var x = 1;\nvar y = 10;\n\nconsole.log(x + y);', '_unrpclqgl', 'js', '2019-06-05 21:47:41', '2019-06-05 21:47:41'),
(3, 'try', 'try {\n  console.log(\"hello world!\");\n} catch (Exception e) {\n  console.log(\'Ooops!\');\n}', '_unrpclqgl', 'js', '2019-06-05 21:51:47', '2019-06-05 21:51:47'),
(4, 'try ulit', 'if(true) {\n  console.log(\'true\');\n} else {\n  console.log(\'false\');//test\n}', '_unrpclqgl', 'js', '2019-06-05 21:53:22', '2019-06-05 23:13:37'),
(5, 'foo function', 'function foo() {\n  console.log(\"foo!\");\n}', '_unrpclqgl', 'js', '2019-06-05 21:54:02', '2019-06-05 22:32:15'),
(6, 'asdddd', 'if(asdasd)', '_unrpclqgl', 'js', '2019-06-05 22:01:20', '2019-06-05 22:30:47'),
(7, 'Output guessing', 'function foo() {\n  console.log(\'foo\');\n}\n\nfoo();', '_unrpclqgl', 'js', '2019-06-05 22:35:47', '2019-06-05 22:35:47'),
(8, 'bar function', 'function bar() {\n  console.log(\"Hello World!\");\n  \n  return Math.round(Math.random() * 20);\n}', '_unrpclqgl', 'js', '2019-06-05 23:15:52', '2019-06-05 23:15:52'),
(9, 'ccs', 'p {\n  background-color: red;\n}', '_u0qumyouz', 'css', '2019-06-18 22:33:16', '2019-06-18 22:33:16'),
(10, 'code implementation', 'C = 100\nfor i = 1 to n do\n    for j = 1 to n do\n    {\n        Temp = A[i][j] + C\n        A[i][j] = A[j][i]\n        A[j][i] = Temp - C\n    } \nfor i = 1 to n do\n    for j = 1 to n do\n        Output(A[i][j]);', '_38ft1whqq', 'clike', '2019-06-29 23:43:20', '2019-06-29 23:43:20'),
(11, 'link list', 'void fun1(struct node* head)\n{\n  if(head == NULL)\n    return;\n  \n  fun1(head->next);\n  printf(\"%d  \", head->data);\n}', '_5iwu57dwp', 'clike', '2019-06-29 23:50:40', '2019-06-29 23:50:40'),
(12, 'reverse linked list', '/* Link list node */\nstruct node\n{\n    int data;\n    struct node* next;\n};\n \n/* head_ref is a double pointer which points to head (or start) pointer \n  of linked list */\nstatic void reverse(struct node** head_ref)\n{\n    struct node* prev   = NULL;\n    struct node* current = *head_ref;\n    struct node* next;\n    while (current != NULL)\n    {\n        next  = current->next;  \n        current->next = prev;   \n        prev = current;\n        current = next;\n    }\n    /*ADD A STATEMENT HERE*/\n}', '_buo3nzql7', 'java', '2019-06-29 23:55:59', '2019-06-29 23:55:59'),
(13, 'print node', 'void fun(struct node* start)\n{\n  if(start == NULL)\n    return;\n  printf(\"%d  \", start->data); \n  \n  if(start->next != NULL )\n    fun(start->next->next);\n  printf(\"%d  \", start->data);\n}', '_kzf234t5n', 'java', '2019-06-29 23:59:21', '2019-06-29 23:59:21'),
(14, 'order of operation in java', 'double x = 2;\ndouble y = 3;\ndouble z = 5;\n\ndouble output = x + x * y + (x + 2 * z);\n\nSystem.out.println(output);', '_lm0hh1z5o', 'java', '2019-06-30 01:07:44', '2019-06-30 01:07:44'),
(15, 'output tracing', 'var a = 10;\nvar b = 5;\nvar c = 20;\n\nconsole.log(a + b + c);', '_tmhqbyq4r', 'js', '2019-07-01 19:07:01', '2019-07-01 19:07:01'),
(16, 'code', 'var x = 0;\n\nconsole.log(x);', '_hbc90k790', 'js', '2019-08-07 00:48:47', '2019-08-07 00:48:47'),
(17, 'code 2', 'var x = 0;\nvar y = 10;\n\nconsole.log(x + y)', '_hbc90k790', 'js', '2019-08-07 00:50:41', '2019-08-07 00:50:41'),
(18, 'java program', 'class main_class \n    {\n        public static void main(String args[])\n        {\n            int x = 9;\n            if (x == 9) \n            { \n                int x = 8;\n                System.out.println(x);\n            }\n        } \n    }', '_b133khdbg', 'java', '2019-08-25 02:02:59', '2019-08-25 02:02:59'),
(19, 'java program', 'class box \n    {\n        int width;\n        int height;\n        int length;\n    } \n    class mainclass \n    {\n        public static void main(String args[]) \n        {        \n             box obj = new box();\n             obj.width = 10;\n             obj.height = 2;\n             obj.length = 10;\n             int y = obj.width * obj.height * obj.length; \n             System.out.print(y);\n        } \n    }', '_hkq4xkevp', 'java', '2019-08-25 02:05:12', '2019-08-25 02:05:12'),
(20, 'java program', 'class box \n    {\n        int width;\n        int height;\n        int length;\n    } \n    class mainclass \n    {\n        public static void main(String args[]) \n        {        \n            box obj1 = new box();\n            box obj2 = new box();\n            obj1.height = 1;\n            obj1.length = 2;\n            obj1.width = 1;\n            obj2 = obj1;\n            System.out.println(obj2.height);\n        } \n    }', '_3f21keg22', 'java', '2019-08-25 02:06:53', '2019-08-25 02:06:53'),
(21, 'java progam', 'class box \n   {\n        int width;\n        int height;\n        int length;\n   } \n    class mainclass \n    {\n        public static void main(String args[]) \n        {        \n            box obj = new box();\n            System.out.println(obj);\n        } \n    }', '_ni9zfh0qx', 'js', '2019-08-25 02:08:48', '2019-08-25 02:08:48'),
(22, 'java program', 'class array_output \n    {\n        public static void main(String args[]) \n        {\n            int array_variable [] = new int[10];\n	    for (int i = 0; i < 10; ++i) \n            {\n                array_variable[i] = i;\n                System.out.print(array_variable[i] + \" \");\n                i++;\n            }\n        } \n    }', '_45lqncqd0', 'java', '2019-08-25 02:20:03', '2019-08-25 02:20:03'),
(23, 'java program', 'class array_output \n    {\n        public static void main(String args[]) \n        {\n            int array_variable [] = new int[10];\n	    for (int i = 0; i < 10; ++i) \n            {\n                array_variable[i] = i;\n                System.out.print(array_variable[i] + \" \");\n                i++;\n            }\n        } \n    }', '_45lqncqd0', 'java', '2019-08-25 02:20:23', '2019-08-25 02:20:23'),
(24, 'java program', 'class evaluate \n    {\n        public static void main(String args[]) \n            {\n	        int arr[] = new int[] {0 , 1, 2, 3, 4, 5, 6, 7, 8, 9};\n	        int n = 6;\n                n = arr[arr[n] / 2];\n	        System.out.println(arr[n] / 2);\n            } \n    }', '_h4j12raef', 'java', '2019-08-25 02:27:19', '2019-08-25 02:27:19'),
(25, 'java program', 'Object[] names = new String[3];\nnames[0] = new Integer(0);', '_06709hb1j', 'java', '2019-08-25 02:29:51', '2019-08-25 02:29:51'),
(26, 'java program', 'x++;\n  x = x + 1;\n  x += 1;\n  x =+ 1;', '_zbuktdfsj', 'java', '2019-08-25 02:37:47', '2019-08-25 02:37:47'),
(27, 'code segment', 'try\n{\n  //Write code to allocate some resources\n}\nfinally\n{\n  //Write code to Dispose all allocated resources\n}', '_an897sonj', 'csharp', '2019-08-26 04:47:06', '2019-08-26 04:47:06'),
(28, 'sample program', 'try\n{\n  int num = 100;\n  int den = 0;\n  try\n  {\n    MessageBox.Show(\"Message1\");\n    int res = num/den;\n    MessageBox.Show(\"Message2\");\n  }\n  catch(ArithmeticException ae)\n  {\n    MessageBox.Show(\"Message3\");\n  }\n  MessageBox.Show(\"Message4\");\n}', '_ai34x81ug', 'csharp', '2019-08-26 04:48:37', '2019-08-26 04:48:37');

-- --------------------------------------------------------

--
-- Table structure for table `colleges`
--

CREATE TABLE `colleges` (
  `id` int(11) NOT NULL,
  `college_code` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL,
  `name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `faculty_id` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `colleges`
--

INSERT INTO `colleges` (`id`, `college_code`, `name`, `faculty_id`) VALUES
(1, 'CCS', 'COLLEGE OF COMPUTER STUDIES', 1),
(2, 'COE', 'COLLEGE OF ENGINEERING', 5),
(3, 'COED', 'COLLEGE OF EDUCATION', 12),
(5, 'CBAA', 'COLLEGE OF BUSINESS ADMINISTRATION AND ACCOUNTING', 4),
(6, 'CON', 'COLLEGE OF NURSING', 2),
(7, 'CAS', 'COLLEGE OF ART AND SCIENCES', 14);

-- --------------------------------------------------------

--
-- Table structure for table `courses`
--

CREATE TABLE `courses` (
  `id` int(11) NOT NULL,
  `course_code` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL,
  `description` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `lec_unit` int(11) NOT NULL,
  `lab_unit` int(11) NOT NULL,
  `college_id` int(11) NOT NULL,
  `is_public` tinyint(1) NOT NULL DEFAULT '0',
  `color` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `courses`
--

INSERT INTO `courses` (`id`, `course_code`, `description`, `lec_unit`, `lab_unit`, `college_id`, `is_public`, `color`, `created_at`, `updated_at`) VALUES
(22, 'NSTP1', 'NATIONAL SERVICE TRAINING PROGRAM 1', 3, 0, 7, 1, '#7CB342', '2019-05-12 03:25:19', '2019-05-12 03:25:19'),
(26, 'NSTP2', 'NATIONAL SERVICE TRAINING PROGRAM 2', 3, 0, 7, 1, '#00ACC1', '2019-05-12 03:27:30', '2019-05-12 03:27:30'),
(89, 'CCS101', 'INTRODUCTION TO COMPUTING', 3, 1, 1, 1, '#3949AB', '2019-06-27 10:20:25', '2019-06-27 10:21:50'),
(90, 'CCS102', 'COMPUTER PROGRAMMING 1', 3, 1, 1, 1, '#FDD835', '2019-06-27 10:21:30', '2019-06-27 10:21:30'),
(91, 'ENV101', 'ENVIRONMENTAL SCIENCE', 3, 0, 1, 1, '#F4511E', '2019-06-27 10:22:27', '2019-06-27 10:22:27'),
(92, 'MAT101', 'MATHEMATICS IN THE MODERN WORLD', 3, 0, 2, 1, '#D81B60', '2019-06-27 10:31:47', '2019-06-27 10:31:47'),
(93, 'PSY101', 'UNDERSTANDING THE SELF', 3, 0, 7, 1, '#E53935', '2019-06-27 10:32:27', '2019-06-27 10:32:27'),
(94, 'PED101', 'PHYSICAL EDUCATION 1', 2, 0, 7, 1, '#C0CA33', '2019-06-27 10:33:15', '2019-06-27 10:33:15'),
(95, 'CCS103', 'COMPUTER PROGRAMMING 2', 3, 1, 1, 1, '#039BE5', '2019-06-27 10:34:31', '2019-06-27 10:34:31'),
(96, 'CCS104', 'DISCRETE STRUCTURES 1', 3, 1, 1, 1, '#E53935', '2019-06-27 10:35:19', '2019-06-27 10:35:19'),
(97, 'CCS105', 'HUMAN COMPUTER INTERACTION 1', 3, 1, 1, 1, '#43A047', '2019-06-27 10:37:51', '2019-06-27 10:37:51'),
(98, 'CCS106', 'SOCIAL AND PROFESSIONAL ISSUES', 3, 0, 1, 1, '#43A047', '2019-06-27 10:38:48', '2019-06-27 10:38:48'),
(99, 'COM101', 'PURPOSIVE COMMUNICATION', 3, 0, 1, 1, '#00ACC1', '2019-06-27 10:39:25', '2019-06-30 02:47:33'),
(100, 'GAD101', 'GENDER AND DEVELOPMENT', 3, 0, 7, 1, '#039BE5', '2019-06-27 10:40:45', '2019-06-27 10:40:45'),
(101, 'PED102', 'PHYSICAL EDUCATION 2', 2, 0, 7, 1, '#6D4C41', '2019-06-27 10:41:27', '2019-06-27 10:41:27'),
(102, 'CCS107', 'DATA STRUCTURES AND ALGORITHM 1', 3, 1, 1, 1, '#FDD835', '2019-06-27 10:44:11', '2019-06-27 10:44:11'),
(103, 'CCS108', 'OBJECT ORIENTED PROGRAMMING', 3, 1, 1, 1, '#6D4C41', '2019-06-27 10:45:00', '2019-06-27 10:45:00'),
(104, 'ACT101', 'PRINCIPLES OF ACCOUNTING', 3, 0, 5, 1, '#00897B', '2019-06-27 10:46:30', '2019-06-27 10:46:30'),
(105, 'STS101', 'SCIENCE, TECHNOLOGY AND SOCIETY', 3, 0, 2, 1, '#7CB342', '2019-06-27 10:47:23', '2019-06-27 10:47:23'),
(106, 'PED103', 'PHYSICAL EDUCATION 3', 2, 0, 7, 1, '#8E24AA', '2019-06-27 10:48:06', '2019-06-27 10:48:06'),
(107, 'ITELECT1', 'IT ELECTIVE 1', 3, 0, 1, 1, '#8E24AA', '2019-06-27 13:07:10', '2019-06-27 13:07:10'),
(108, 'CCS110', 'INFORMATION MANAGEMENT 1', 3, 0, 1, 1, '#1E88E5', '2019-06-27 13:08:21', '2019-06-27 13:08:21'),
(109, 'CCS111', 'NETWORKING AND COMMUNICATION 1', 3, 1, 1, 1, '#5E35B1', '2019-06-27 13:08:53', '2019-06-27 13:08:53'),
(110, 'ITP101', 'QUANTITIVE METHODS', 3, 0, 1, 1, '#C0CA33', '2019-06-27 13:09:50', '2019-06-27 13:09:50'),
(111, 'ITP102', 'INTEGRATIVE PROGRAMMING AND TECHNOLOGIES', 3, 1, 1, 1, '#5E35B1', '2019-06-27 13:10:39', '2019-06-27 13:10:39'),
(112, 'ITELECT2', 'IT ELECTIVE 2', 3, 0, 1, 1, '#E53935', '2019-06-27 13:11:06', '2019-06-27 13:11:06'),
(113, 'ENT101', 'THE ENTREPRENEURIAL MIND', 3, 0, 5, 1, '#00ACC1', '2019-06-27 13:11:57', '2019-06-27 13:11:57'),
(114, 'SOC101', 'THE CONTEMPORARY WORLD', 3, 0, 3, 1, '#5E35B1', '2019-06-27 13:12:28', '2019-06-27 13:12:28'),
(115, 'PED104', 'PHYSICAL EDUCATION 4', 2, 0, 7, 1, '#C0CA33', '2019-06-27 13:13:25', '2019-06-27 13:13:25'),
(116, 'ITP103', 'SYSTEM INTEGRATION AND ARCHITECTURE', 3, 1, 1, 1, '#00ACC1', '2019-06-27 13:15:12', '2019-06-27 13:15:12'),
(117, 'ITP104', 'INFORMATION MANAGEMENT 2', 3, 1, 1, 1, '#00ACC1', '2019-06-27 13:19:25', '2019-06-27 13:19:25'),
(118, 'ITP105', 'NETWORKING AND COMMUNICATION 2', 3, 1, 1, 1, '#F4511E', '2019-06-27 13:22:13', '2019-06-27 13:22:13'),
(119, 'ITP106', 'HUMAN COMPUTER INTERACTION 2', 3, 1, 1, 1, '#6D4C41', '2019-06-27 13:23:09', '2019-06-27 13:23:09'),
(120, 'ITELECT3', 'IT ELECTIVE 3', 3, 0, 1, 1, '#3949AB', '2019-06-27 13:23:34', '2019-06-27 13:23:34'),
(121, 'TEC101', 'TECHNOPRENEURSHIP', 3, 0, 1, 1, '#7CB342', '2019-06-27 13:24:11', '2019-06-27 13:24:11'),
(122, 'HIS101', 'READINGS IN PHIL HISTORY', 3, 0, 3, 1, '#F4511E', '2019-06-27 13:24:57', '2019-06-27 13:24:57'),
(123, 'CCS112', 'APPLICATION DEVELOPMENT AND EMERGING TECHNOLOGIES', 3, 1, 1, 1, '#00897B', '2019-06-27 13:25:56', '2019-06-27 13:25:56'),
(124, 'CCS113', 'INFORMATION ASSURANCE AND SECURITY', 3, 1, 1, 1, '#00ACC1', '2019-06-27 13:26:29', '2019-06-27 13:26:29'),
(125, 'ITP107', 'MOBILE APPLICATION DEVELOPMENT', 3, 1, 1, 1, '#1E88E5', '2019-06-27 13:27:08', '2019-06-27 13:27:08'),
(126, 'ITP108', 'CAPSTONE PROJECT 1', 3, 0, 1, 1, '#1E88E5', '2019-06-27 13:27:44', '2019-06-27 13:27:44'),
(127, 'ITP109', 'PLATFORM TECHNOLOGIES', 3, 1, 1, 1, '#FDD835', '2019-06-27 13:28:22', '2019-06-27 13:28:22'),
(128, 'ITELECT4', 'IT ELECTIVE 4', 3, 0, 1, 1, '#E53935', '2019-06-27 13:28:45', '2019-06-27 13:28:45'),
(129, 'HMN101', 'ART APPRECIATION', 3, 0, 7, 1, '#FDD835', '2019-06-27 13:29:20', '2019-06-27 13:29:20'),
(130, 'ITP110', 'WEB TECHNOLOGIES', 3, 1, 1, 1, '#6D4C41', '2019-06-27 13:30:31', '2019-06-27 13:30:31'),
(131, 'ITP111', 'SYSTEM ADMINISTRATION AND MAINTENANCE', 3, 0, 1, 1, '#43A047', '2019-06-27 13:31:09', '2019-06-27 13:31:09'),
(132, 'ITELECT5', 'IT ELECTIVE 5', 3, 0, 1, 1, '#7CB342', '2019-06-27 13:31:42', '2019-06-27 13:31:42'),
(133, 'ITP112', 'CAPSTONE PROJECT 2', 3, 0, 1, 1, '#00ACC1', '2019-06-27 13:32:09', '2019-06-27 13:32:09'),
(134, 'RIZ101', 'LIFE AND WORKS OF RIZAL', 3, 0, 1, 1, '#F4511E', '2019-06-27 13:32:37', '2019-06-27 13:32:37'),
(135, 'ITP113', 'IT PRACTICUM (500 HOURS)', 3, 1, 1, 1, '#1E88E5', '2019-06-27 13:33:12', '2019-06-27 13:33:12'),
(136, 'ITELECT6', 'IT ELECTIVE 6', 3, 0, 1, 1, '#F4511E', '2019-06-27 13:33:36', '2019-06-27 13:33:36'),
(137, 'ETH101', 'ETHICS', 3, 0, 1, 1, '#1E88E5', '2019-06-30 02:30:38', '2019-06-30 02:30:38'),
(138, 'CCS109', 'SYSTEM ANALYSIS AND DESIGN', 3, 1, 1, 1, '#5E35B1', '2019-06-30 02:50:40', '2019-06-30 02:50:40'),
(139, 'TEST1', 'TRY LANG', 3, 1, 2, 1, '#5E35B1', '2019-07-04 09:51:10', '2019-07-04 09:52:32'),
(140, 'MATH101', 'MATHEMATICS IN THE MODERN WORLD', 3, 0, 1, 1, '#00ACC1', '2019-07-27 03:17:44', '2019-07-27 03:17:44'),
(141, 'CSP101', 'ANALYTIC GEOMETRY', 3, 0, 1, 1, '#00ACC1', '2019-07-27 04:25:07', '2019-07-27 04:25:07'),
(142, 'CSEG1', 'GAME CONCEPTS AND PRODUCTIONS', 3, 0, 1, 1, '#FDD835', '2019-07-27 04:32:47', '2019-07-27 04:32:47'),
(143, 'CSP102', 'DISCRETE STRUCTURES 2', 3, 0, 1, 1, '#00897B', '2019-07-27 05:20:40', '2019-07-27 05:20:40'),
(144, 'FIL102', 'FILIPINO SA IBA\'T IBANG DISIPLINA', 3, 0, 1, 1, '#43A047', '2019-07-27 05:21:56', '2019-07-27 05:21:56'),
(145, 'FIL101', 'KONTEKSWALISADONG KOMUNIKASYON SA FILIPINO', 3, 0, 1, 1, '#00ACC1', '2019-07-27 05:23:30', '2019-07-28 03:02:23'),
(146, 'CSEG2', 'GAME PROGRAMMING 1', 3, 1, 1, 1, '#3949AB', '2019-07-27 05:51:09', '2019-07-27 06:07:29'),
(147, 'CSP103', 'DATA STRUCTURES AND ALGORITHMS 2', 3, 0, 1, 1, '#FDD835', '2019-07-27 05:53:15', '2019-07-27 05:53:15'),
(148, 'CSP104', 'CALCULUS', 3, 0, 1, 1, '#D81B60', '2019-07-27 05:54:04', '2019-07-27 05:54:04'),
(149, 'CSP105', 'ALGORITHMS AND COMPLEXITY', 3, 0, 1, 1, '#039BE5', '2019-07-27 05:55:27', '2019-07-27 05:55:27'),
(150, 'CSEG3', 'GAME PROGRAMMING 2', 3, 0, 1, 1, '#1E88E5', '2019-07-27 05:58:48', '2019-07-27 05:58:48'),
(151, 'CSP106', 'AUTOMATA THEORY AND FORMAL LANGUAGES', 3, 0, 1, 1, '#8E24AA', '2019-07-27 05:59:59', '2019-07-27 05:59:59'),
(152, 'CSP107', 'COMPUTER ORGANIZATION AND ASSEMBLY LANGUAGE PROGRAMMING', 3, 0, 1, 1, '#FDD835', '2019-07-27 06:01:14', '2019-07-27 06:01:14'),
(153, 'PAN101', 'SOSYEDAD AT LITERATURA/PANITIKANG PANLIPUNAN', 3, 0, 1, 1, '#7CB342', '2019-07-27 06:02:28', '2019-07-27 06:02:28'),
(154, 'CSEG4', 'GAME PROGRAMMING 3', 3, 0, 1, 1, '#3949AB', '2019-07-27 06:08:58', '2019-07-27 06:08:58'),
(155, 'CSP108', 'PROGRAMMING LANGUAGES', 3, 0, 1, 1, '#E53935', '2019-07-27 06:10:18', '2019-07-27 06:10:18'),
(156, 'CSP109', 'SOFTWARE ENGINEERING 1', 3, 0, 1, 1, '#00897B', '2019-07-27 06:11:07', '2019-07-27 06:11:07'),
(157, 'CSP110', 'NUMERICAL ANALYSIS', 3, 0, 1, 1, '#D81B60', '2019-07-27 06:24:31', '2019-07-27 06:24:31'),
(158, 'CSP111', 'THESIS 1', 3, 0, 1, 1, '#FDD835', '2019-07-27 06:25:22', '2019-07-27 06:25:22'),
(159, 'CSEG5', 'ARTIFICIAL INTELLIGENCE FOR GAMES', 3, 0, 1, 1, '#F4511E', '2019-07-27 06:29:00', '2019-07-27 06:29:00'),
(160, 'CSP112', 'OPERATING SYSTEMS', 3, 0, 1, 1, '#F4511E', '2019-07-27 06:29:43', '2019-07-27 06:29:43'),
(161, 'CSP113', 'SOFTWARE ENGINEERING 2', 3, 0, 1, 1, '#8E24AA', '2019-07-27 06:30:31', '2019-07-27 06:30:31'),
(162, 'CSP114', 'THESIS 2', 3, 0, 1, 1, '#1E88E5', '2019-07-27 06:31:02', '2019-07-27 06:31:02'),
(163, 'CSEG6', 'ADVANCE GAME DESIGN', 3, 0, 1, 1, '#D81B60', '2019-07-27 06:32:31', '2019-07-27 06:32:31'),
(164, 'CSP115', 'CS PRACTICUM (300 HOURS)', 4, 0, 1, 1, '#43A047', '2019-07-27 06:33:20', '2019-07-27 06:33:20');

-- --------------------------------------------------------

--
-- Table structure for table `course_requisites`
--

CREATE TABLE `course_requisites` (
  `id` int(11) NOT NULL,
  `type` int(11) NOT NULL,
  `curriculum_course_id` int(11) NOT NULL,
  `pre_req_id` int(11) NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `course_requisites`
--

INSERT INTO `course_requisites` (`id`, `type`, `curriculum_course_id`, `pre_req_id`, `created_at`, `updated_at`) VALUES
(1, 1, 216, 215, '2019-07-22 23:10:09', '2019-07-22 23:10:09'),
(3, 1, 224, 217, '2019-07-26 20:22:34', '2019-07-26 20:22:34'),
(4, 1, 225, 220, '2019-07-26 20:23:00', '2019-07-26 20:23:00'),
(5, 1, 223, 216, '2019-07-26 20:23:34', '2019-07-26 20:23:34'),
(6, 1, 226, 218, '2019-07-26 20:24:02', '2019-07-26 20:24:02'),
(7, 1, 228, 220, '2019-07-26 20:25:31', '2019-07-26 20:25:31'),
(8, 1, 230, 222, '2019-07-26 20:29:00', '2019-07-26 20:29:00'),
(9, 1, 231, 224, '2019-07-26 20:29:56', '2019-07-26 20:29:56'),
(10, 1, 232, 224, '2019-07-26 20:31:08', '2019-07-26 20:31:08'),
(11, 1, 234, 225, '2019-07-26 21:20:53', '2019-07-26 21:20:53'),
(12, 1, 236, 235, '2019-07-26 21:24:03', '2019-07-26 21:24:03'),
(15, 1, 238, 230, '2019-07-26 21:43:01', '2019-07-26 21:43:01'),
(16, 1, 241, 219, '2019-07-26 21:45:27', '2019-07-26 21:45:27'),
(17, 1, 242, 233, '2019-07-26 21:51:47', '2019-07-26 21:51:47'),
(18, 1, 243, 231, '2019-07-26 21:54:35', '2019-07-26 21:54:35'),
(19, 1, 244, 228, '2019-07-26 21:54:47', '2019-07-26 21:54:47'),
(20, 1, 245, 234, '2019-07-26 21:55:59', '2019-07-26 21:55:59'),
(21, 1, 245, 232, '2019-07-26 21:55:59', '2019-07-26 21:55:59'),
(22, 1, 245, 231, '2019-07-26 21:55:59', '2019-07-26 21:55:59'),
(23, 1, 247, 238, '2019-07-26 21:56:46', '2019-07-26 21:56:46'),
(24, 1, 248, 219, '2019-07-26 21:57:20', '2019-07-26 21:57:20'),
(25, 1, 249, 224, '2019-07-26 21:57:46', '2019-07-26 21:57:46'),
(28, 1, 251, 242, '2019-07-26 21:59:22', '2019-07-26 21:59:22'),
(29, 1, 252, 245, '2019-07-26 22:00:11', '2019-07-26 22:00:11'),
(30, 1, 253, 243, '2019-07-26 22:01:23', '2019-07-26 22:01:23'),
(31, 1, 256, 251, '2019-07-26 22:09:29', '2019-07-26 22:09:29'),
(32, 1, 257, 224, '2019-07-26 22:10:36', '2019-07-26 22:10:36'),
(33, 1, 258, 248, '2019-07-26 22:11:18', '2019-07-26 22:11:18'),
(34, 1, 259, 252, '2019-07-26 22:24:50', '2019-07-26 22:24:50'),
(37, 1, 260, 251, '2019-07-26 22:26:14', '2019-07-26 22:26:14'),
(38, 1, 260, 252, '2019-07-26 22:26:14', '2019-07-26 22:26:14'),
(39, 1, 260, 253, '2019-07-26 22:26:14', '2019-07-26 22:26:14'),
(42, 1, 263, 254, '2019-07-26 22:27:44', '2019-07-26 22:27:44'),
(43, 1, 264, 219, '2019-07-26 22:28:13', '2019-07-26 22:28:13'),
(44, 1, 265, 256, '2019-07-26 22:29:13', '2019-07-26 22:29:13'),
(45, 1, 266, 253, '2019-07-26 22:29:58', '2019-07-26 22:29:58'),
(46, 1, 267, 258, '2019-07-26 22:30:43', '2019-07-26 22:30:43'),
(47, 1, 268, 260, '2019-07-26 22:31:16', '2019-07-26 22:31:16'),
(48, 1, 269, 266, '2019-07-26 22:32:00', '2019-07-26 22:32:00'),
(49, 1, 270, 265, '2019-07-26 22:32:48', '2019-07-26 22:32:48'),
(50, 1, 275, 307, '2019-08-11 05:13:42', '2019-08-11 05:13:42'),
(51, 1, 280, 273, '2019-08-11 05:14:16', '2019-08-11 05:14:16'),
(52, 1, 281, 276, '2019-08-11 05:14:36', '2019-08-11 05:14:36'),
(53, 1, 325, 324, '2019-08-11 05:15:19', '2019-08-11 05:15:19'),
(55, 1, 286, 278, '2019-08-11 05:29:23', '2019-08-11 05:29:23'),
(56, 1, 287, 279, '2019-08-11 05:29:35', '2019-08-11 05:29:35'),
(57, 1, 282, 272, '2019-08-11 05:33:24', '2019-08-11 05:33:24'),
(58, 1, 283, 274, '2019-08-11 05:33:37', '2019-08-11 05:33:37'),
(59, 1, 288, 280, '2019-08-11 05:34:06', '2019-08-11 05:34:06'),
(60, 1, 289, 280, '2019-08-11 05:34:22', '2019-08-11 05:34:22'),
(61, 1, 290, 272, '2019-08-11 05:34:36', '2019-08-11 05:34:36'),
(62, 1, 294, 286, '2019-08-11 05:34:57', '2019-08-11 05:34:57'),
(63, 1, 295, 272, '2019-08-11 05:36:39', '2019-08-11 05:36:39'),
(64, 1, 299, 291, '2019-08-11 05:36:57', '2019-08-11 05:36:57'),
(65, 1, 297, 281, '2019-08-11 05:38:36', '2019-08-11 05:38:36'),
(66, 1, 298, 290, '2019-08-11 05:38:51', '2019-08-11 05:38:51'),
(67, 1, 302, 294, '2019-08-11 05:39:12', '2019-08-11 05:39:12'),
(68, 1, 308, 300, '2019-08-11 05:40:03', '2019-08-11 05:40:03'),
(69, 1, 303, 298, '2019-08-11 05:40:36', '2019-08-11 05:40:36'),
(70, 1, 304, 295, '2019-08-11 05:40:55', '2019-08-11 05:40:55'),
(71, 1, 305, 296, '2019-08-11 05:41:52', '2019-08-11 05:41:52'),
(72, 1, 307, 299, '2019-08-11 05:42:05', '2019-08-11 05:42:05'),
(73, 1, 306, 282, '2019-08-11 05:42:37', '2019-08-11 05:42:37'),
(74, 1, 310, 280, '2019-08-11 05:43:03', '2019-08-11 05:43:03'),
(75, 1, 312, 289, '2019-08-11 05:43:35', '2019-08-11 05:43:35'),
(76, 1, 313, 307, '2019-08-11 05:44:34', '2019-08-11 05:44:34'),
(77, 1, 313, 303, '2019-08-11 05:44:34', '2019-08-11 05:44:34'),
(78, 1, 313, 305, '2019-08-11 05:44:34', '2019-08-11 05:44:34'),
(79, 1, 313, 306, '2019-08-11 05:44:34', '2019-08-11 05:44:34'),
(80, 1, 313, 304, '2019-08-11 05:44:34', '2019-08-11 05:44:34'),
(81, 1, 313, 289, '2019-08-11 05:44:34', '2019-08-11 05:44:34'),
(82, 1, 314, 306, '2019-08-11 05:44:51', '2019-08-11 05:44:51'),
(83, 1, 315, 275, '2019-08-11 05:45:08', '2019-08-11 05:45:08'),
(84, 1, 317, 306, '2019-08-11 05:45:25', '2019-08-11 05:45:25'),
(85, 1, 318, 305, '2019-08-11 05:45:47', '2019-08-11 05:45:47'),
(86, 1, 318, 314, '2019-08-11 05:45:47', '2019-08-11 05:45:47'),
(87, 1, 320, 313, '2019-08-11 05:46:09', '2019-08-11 05:46:09'),
(88, 1, 323, 315, '2019-08-11 06:03:13', '2019-08-11 06:03:13');

-- --------------------------------------------------------

--
-- Table structure for table `curricula`
--

CREATE TABLE `curricula` (
  `id` int(11) NOT NULL,
  `program_id` int(11) NOT NULL,
  `name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `description` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `year` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `user_id` int(11) NOT NULL,
  `is_saved` tinyint(1) NOT NULL DEFAULT '0',
  `year_level` int(11) NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  `revision_no` int(11) NOT NULL,
  `ref_id` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `curricula`
--

INSERT INTO `curricula` (`id`, `program_id`, `name`, `description`, `year`, `user_id`, `is_saved`, `year_level`, `created_at`, `updated_at`, `revision_no`, `ref_id`) VALUES
(30, 2, 'COMPUTER SCIENCE', '2019 curriculum for computer science', '2019', 2, 1, 4, '2019-05-14 10:05:21', '2019-07-23 06:33:01', 1, 2),
(35, 10, 'ACCOUNTANCY', 'curriculum for accountancy', '2019', 7, 0, 6, '2019-05-17 05:11:30', '2019-05-17 05:11:30', 1, 35),
(36, 1, 'INFORMATION TECHNOLOGY', NULL, '2019', 2, 1, 4, '2019-06-30 02:25:27', '2019-06-30 03:03:24', 1, 36),
(38, 1, 'INFORMATION TECHNOLOGY', 'Information technology curriculum revised 2020', '2020', 2, 1, 4, '2019-06-30 03:29:10', '2019-07-04 13:12:59', 2, 36),
(43, 2, 'COMPUTER SCIENCE', 'computer science curriculum revised for 2020', '2020', 2, 1, 4, '2019-07-23 07:06:52', '2019-08-05 06:52:08', 2, 2),
(44, 1, 'INFORMATION TECHNOLOGY', 'INFORMATION TECHNOLOGY CURRICULUM REVISE', '2020', 2, 1, 4, '2019-08-11 05:07:07', '2019-08-25 00:09:39', 3, 36);

-- --------------------------------------------------------

--
-- Table structure for table `curriculum_courses`
--

CREATE TABLE `curriculum_courses` (
  `id` int(11) NOT NULL,
  `curriculum_id` int(11) NOT NULL,
  `course_id` int(11) NOT NULL,
  `year_level` int(11) NOT NULL,
  `semester` int(11) NOT NULL,
  `is_active` tinyint(1) DEFAULT '1',
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `curriculum_courses`
--

INSERT INTO `curriculum_courses` (`id`, `curriculum_id`, `course_id`, `year_level`, `semester`, `is_active`, `created_at`, `updated_at`) VALUES
(1, 30, 91, 1, 1, 1, '2019-06-29 11:11:08', '2019-06-29 11:11:08'),
(2, 30, 22, 2, 1, 1, '2019-06-29 11:11:30', '2019-06-29 11:11:30'),
(3, 36, 89, 1, 1, 1, '2019-06-30 02:29:14', '2019-06-30 02:29:14'),
(4, 36, 90, 1, 1, 1, '2019-06-30 02:29:50', '2019-06-30 02:29:50'),
(5, 36, 137, 1, 1, 1, '2019-06-30 02:30:52', '2019-06-30 02:30:52'),
(6, 36, 91, 1, 1, 1, '2019-06-30 02:35:43', '2019-06-30 02:35:43'),
(7, 36, 92, 1, 1, 1, '2019-06-30 02:44:42', '2019-06-30 02:44:42'),
(8, 36, 93, 1, 1, 1, '2019-06-30 02:44:58', '2019-06-30 02:44:58'),
(9, 36, 94, 1, 1, 1, '2019-06-30 02:45:12', '2019-06-30 02:45:12'),
(10, 36, 22, 1, 1, 1, '2019-06-30 02:45:28', '2019-06-30 02:45:28'),
(11, 36, 95, 1, 2, 1, '2019-06-30 02:45:48', '2019-06-30 02:45:48'),
(12, 36, 96, 1, 2, 1, '2019-06-30 02:46:20', '2019-06-30 02:46:20'),
(13, 36, 97, 1, 2, 1, '2019-06-30 02:46:43', '2019-06-30 02:46:43'),
(14, 36, 98, 1, 2, 1, '2019-06-30 02:47:00', '2019-06-30 02:47:00'),
(15, 36, 99, 1, 2, 1, '2019-06-30 02:48:04', '2019-06-30 02:48:04'),
(16, 36, 100, 1, 2, 1, '2019-06-30 02:48:18', '2019-06-30 02:48:18'),
(17, 36, 101, 1, 2, 1, '2019-06-30 02:48:47', '2019-06-30 02:48:47'),
(18, 36, 26, 1, 2, 1, '2019-06-30 02:49:10', '2019-06-30 02:49:10'),
(19, 36, 102, 2, 1, 1, '2019-06-30 02:49:41', '2019-06-30 02:49:41'),
(20, 36, 103, 2, 1, 1, '2019-06-30 02:49:57', '2019-06-30 02:49:57'),
(21, 36, 138, 2, 1, 1, '2019-06-30 02:50:50', '2019-06-30 02:50:50'),
(22, 36, 107, 2, 1, 1, '2019-06-30 02:51:10', '2019-06-30 02:51:10'),
(23, 36, 104, 2, 1, 1, '2019-06-30 02:51:27', '2019-06-30 02:51:27'),
(24, 36, 105, 2, 1, 1, '2019-06-30 02:51:43', '2019-06-30 02:51:43'),
(25, 36, 106, 2, 1, 1, '2019-06-30 02:51:56', '2019-06-30 02:51:56'),
(26, 36, 108, 2, 2, 1, '2019-06-30 02:52:34', '2019-06-30 02:52:34'),
(27, 36, 109, 2, 2, 1, '2019-06-30 02:52:49', '2019-06-30 02:52:49'),
(28, 36, 110, 2, 2, 1, '2019-06-30 02:52:58', '2019-06-30 02:52:58'),
(29, 36, 111, 2, 2, 1, '2019-06-30 02:53:13', '2019-06-30 02:53:13'),
(30, 36, 112, 2, 2, 1, '2019-06-30 02:53:33', '2019-06-30 02:53:33'),
(31, 36, 113, 2, 2, 1, '2019-06-30 02:53:51', '2019-06-30 02:53:51'),
(32, 36, 114, 2, 2, 1, '2019-06-30 02:54:08', '2019-06-30 02:54:08'),
(33, 36, 115, 2, 2, 1, '2019-06-30 02:54:22', '2019-06-30 02:54:22'),
(34, 36, 116, 3, 1, 1, '2019-06-30 02:54:58', '2019-06-30 02:54:58'),
(35, 36, 117, 3, 1, 1, '2019-06-30 02:55:11', '2019-06-30 02:55:11'),
(36, 36, 118, 3, 1, 1, '2019-06-30 02:55:26', '2019-06-30 02:55:26'),
(37, 36, 119, 3, 1, 1, '2019-06-30 02:55:47', '2019-06-30 02:55:47'),
(38, 36, 120, 3, 1, 1, '2019-06-30 02:56:01', '2019-06-30 02:56:01'),
(39, 36, 121, 3, 1, 1, '2019-06-30 02:56:15', '2019-06-30 02:56:15'),
(40, 36, 122, 3, 1, 1, '2019-06-30 02:56:34', '2019-06-30 02:56:34'),
(43, 36, 125, 3, 2, 1, '2019-06-30 03:00:11', '2019-06-30 03:00:11'),
(44, 36, 126, 3, 2, 1, '2019-06-30 03:00:32', '2019-06-30 03:00:32'),
(45, 36, 127, 3, 2, 1, '2019-06-30 03:00:48', '2019-06-30 03:00:48'),
(46, 36, 128, 3, 2, 1, '2019-06-30 03:01:06', '2019-06-30 03:01:06'),
(47, 36, 129, 3, 2, 1, '2019-06-30 03:01:24', '2019-06-30 03:01:24'),
(48, 36, 130, 4, 1, 1, '2019-06-30 03:01:35', '2019-06-30 03:01:35'),
(49, 36, 131, 4, 1, 1, '2019-06-30 03:01:51', '2019-06-30 03:01:51'),
(50, 36, 132, 4, 1, 1, '2019-06-30 03:02:07', '2019-06-30 03:02:07'),
(51, 36, 133, 4, 1, 1, '2019-06-30 03:02:21', '2019-06-30 03:02:21'),
(52, 36, 134, 4, 1, 1, '2019-06-30 03:02:34', '2019-06-30 03:02:34'),
(53, 36, 135, 4, 2, 1, '2019-06-30 03:02:56', '2019-06-30 03:02:56'),
(54, 36, 136, 4, 2, 1, '2019-06-30 03:03:10', '2019-06-30 03:03:10'),
(107, 38, 89, 1, 1, 1, '2019-06-30 03:29:10', '2019-06-30 03:29:10'),
(108, 38, 90, 1, 1, 1, '2019-06-30 03:29:10', '2019-06-30 03:29:10'),
(109, 38, 137, 1, 1, 1, '2019-06-30 03:29:10', '2019-06-30 03:29:10'),
(110, 38, 91, 1, 1, 1, '2019-06-30 03:29:10', '2019-06-30 03:29:10'),
(111, 38, 92, 1, 1, 1, '2019-06-30 03:29:10', '2019-06-30 03:29:10'),
(112, 38, 93, 1, 1, 1, '2019-06-30 03:29:10', '2019-06-30 03:29:10'),
(113, 38, 94, 1, 1, 1, '2019-06-30 03:29:10', '2019-06-30 03:29:10'),
(114, 38, 22, 1, 1, 1, '2019-06-30 03:29:10', '2019-06-30 03:29:10'),
(115, 38, 95, 1, 2, 1, '2019-06-30 03:29:10', '2019-06-30 03:29:10'),
(116, 38, 96, 1, 2, 1, '2019-06-30 03:29:11', '2019-06-30 03:29:11'),
(117, 38, 97, 1, 2, 1, '2019-06-30 03:29:11', '2019-06-30 03:29:11'),
(118, 38, 98, 1, 2, 1, '2019-06-30 03:29:11', '2019-06-30 03:29:11'),
(119, 38, 99, 1, 2, 1, '2019-06-30 03:29:11', '2019-06-30 03:29:11'),
(120, 38, 100, 1, 2, 1, '2019-06-30 03:29:11', '2019-06-30 03:29:11'),
(121, 38, 101, 1, 2, 1, '2019-06-30 03:29:11', '2019-06-30 03:29:11'),
(122, 38, 26, 1, 2, 1, '2019-06-30 03:29:11', '2019-06-30 03:29:11'),
(123, 38, 102, 2, 1, 1, '2019-06-30 03:29:11', '2019-06-30 03:29:11'),
(124, 38, 103, 2, 1, 1, '2019-06-30 03:29:11', '2019-06-30 03:29:11'),
(125, 38, 138, 2, 1, 1, '2019-06-30 03:29:11', '2019-06-30 03:29:11'),
(126, 38, 107, 2, 1, 1, '2019-06-30 03:29:11', '2019-06-30 03:29:11'),
(127, 38, 104, 2, 1, 1, '2019-06-30 03:29:11', '2019-06-30 03:29:11'),
(128, 38, 105, 2, 1, 1, '2019-06-30 03:29:11', '2019-06-30 03:29:11'),
(129, 38, 106, 2, 1, 1, '2019-06-30 03:29:11', '2019-06-30 03:29:11'),
(130, 38, 108, 2, 2, 1, '2019-06-30 03:29:11', '2019-06-30 03:29:11'),
(131, 38, 109, 2, 2, 1, '2019-06-30 03:29:11', '2019-06-30 03:29:11'),
(132, 38, 110, 2, 2, 1, '2019-06-30 03:29:11', '2019-06-30 03:29:11'),
(133, 38, 111, 2, 2, 1, '2019-06-30 03:29:11', '2019-06-30 03:29:11'),
(134, 38, 112, 2, 2, 1, '2019-06-30 03:29:11', '2019-06-30 03:29:11'),
(135, 38, 113, 2, 2, 1, '2019-06-30 03:29:12', '2019-06-30 03:29:12'),
(136, 38, 114, 2, 2, 1, '2019-06-30 03:29:12', '2019-06-30 03:29:12'),
(137, 38, 115, 2, 2, 1, '2019-06-30 03:29:12', '2019-06-30 03:29:12'),
(138, 38, 116, 3, 1, 1, '2019-06-30 03:29:12', '2019-06-30 03:29:12'),
(139, 38, 117, 3, 1, 1, '2019-06-30 03:29:12', '2019-06-30 03:29:12'),
(140, 38, 118, 3, 1, 1, '2019-06-30 03:29:12', '2019-06-30 03:29:12'),
(141, 38, 119, 3, 1, 1, '2019-06-30 03:29:12', '2019-06-30 03:29:12'),
(142, 38, 120, 3, 1, 1, '2019-06-30 03:29:12', '2019-06-30 03:29:12'),
(143, 38, 121, 3, 1, 1, '2019-06-30 03:29:12', '2019-06-30 03:29:12'),
(144, 38, 122, 3, 1, 1, '2019-06-30 03:29:12', '2019-06-30 03:29:12'),
(145, 38, 123, 3, 2, 1, '2019-06-30 03:29:12', '2019-06-30 03:29:12'),
(146, 38, 124, 3, 2, 1, '2019-06-30 03:29:12', '2019-06-30 03:29:12'),
(147, 38, 125, 3, 2, 1, '2019-06-30 03:29:12', '2019-06-30 03:29:12'),
(148, 38, 126, 3, 2, 1, '2019-06-30 03:29:12', '2019-06-30 03:29:12'),
(149, 38, 127, 3, 2, 1, '2019-06-30 03:29:12', '2019-06-30 03:29:12'),
(150, 38, 128, 3, 2, 1, '2019-06-30 03:29:12', '2019-06-30 03:29:12'),
(151, 38, 129, 3, 2, 1, '2019-06-30 03:29:12', '2019-06-30 03:29:12'),
(152, 38, 130, 4, 1, 1, '2019-06-30 03:29:12', '2019-06-30 03:29:12'),
(153, 38, 131, 4, 1, 1, '2019-06-30 03:29:12', '2019-06-30 03:29:12'),
(154, 38, 132, 4, 1, 1, '2019-06-30 03:29:12', '2019-06-30 03:29:12'),
(155, 38, 133, 4, 1, 1, '2019-06-30 03:29:12', '2019-06-30 03:29:12'),
(156, 38, 134, 4, 1, 1, '2019-06-30 03:29:12', '2019-06-30 03:29:12'),
(157, 38, 135, 4, 2, 1, '2019-06-30 03:29:12', '2019-06-30 03:29:12'),
(158, 38, 136, 4, 2, 1, '2019-06-30 03:29:12', '2019-06-30 03:29:12'),
(215, 43, 91, 1, 1, 1, '2019-07-23 07:06:52', '2019-07-23 07:06:52'),
(216, 43, 22, 2, 1, 1, '2019-07-23 07:06:52', '2019-07-23 07:06:52'),
(217, 43, 90, 1, 1, 1, '2019-07-23 07:09:54', '2019-07-23 07:09:54'),
(218, 43, 137, 1, 1, 1, '2019-07-23 07:10:29', '2019-07-23 07:10:29'),
(219, 43, 89, 1, 1, 1, '2019-07-23 07:16:18', '2019-07-23 07:16:18'),
(220, 43, 26, 2, 1, 1, '2019-07-27 09:26:10', '2019-07-27 09:26:10'),
(221, 43, 139, 3, 1, 1, '2019-07-27 09:28:58', '2019-07-27 09:28:58'),
(222, 43, 92, 1, 1, 1, '2019-07-27 09:37:10', '2019-07-27 09:37:10'),
(223, 43, 26, 1, 2, 1, '2019-07-27 04:15:54', '2019-07-27 04:15:54'),
(224, 43, 95, 1, 2, 1, '2019-07-27 04:22:34', '2019-07-27 04:22:34'),
(225, 43, 96, 1, 2, 1, '2019-07-27 04:23:00', '2019-07-27 04:23:00'),
(226, 43, 98, 1, 2, 1, '2019-07-27 04:24:02', '2019-07-27 04:24:02'),
(227, 43, 99, 1, 2, 1, '2019-07-27 04:24:25', '2019-07-27 04:24:25'),
(228, 43, 141, 1, 2, 1, '2019-07-27 04:25:31', '2019-07-27 04:25:31'),
(229, 43, 100, 1, 2, 1, '2019-07-27 04:27:10', '2019-07-27 04:27:10'),
(230, 43, 101, 1, 2, 1, '2019-07-27 04:29:00', '2019-07-27 04:29:00'),
(231, 43, 102, 2, 1, 1, '2019-07-27 04:29:56', '2019-07-27 04:29:56'),
(232, 43, 103, 2, 1, 1, '2019-07-27 04:31:08', '2019-07-27 04:31:08'),
(233, 43, 142, 2, 1, 1, '2019-07-27 05:19:36', '2019-07-27 05:19:36'),
(234, 43, 143, 2, 1, 1, '2019-07-27 05:20:52', '2019-07-27 05:20:52'),
(235, 43, 145, 1, 1, 1, '2019-07-27 05:23:38', '2019-07-27 05:23:38'),
(236, 43, 144, 2, 1, 1, '2019-07-27 05:24:03', '2019-07-27 05:24:03'),
(237, 43, 122, 2, 1, 1, '2019-07-27 05:26:44', '2019-07-27 05:26:44'),
(238, 43, 106, 2, 1, 1, '2019-07-27 05:42:51', '2019-07-27 05:42:51'),
(239, 43, 105, 2, 1, 1, '2019-07-27 05:43:26', '2019-07-27 05:43:26'),
(240, 43, 104, 2, 2, 1, '2019-07-27 05:44:49', '2019-07-27 05:44:49'),
(241, 43, 108, 2, 2, 1, '2019-07-27 05:45:27', '2019-07-27 05:45:27'),
(242, 43, 146, 2, 2, 1, '2019-07-27 05:51:47', '2019-07-27 05:51:47'),
(243, 43, 147, 2, 2, 1, '2019-07-27 05:53:34', '2019-07-27 05:53:34'),
(244, 43, 148, 2, 2, 1, '2019-07-27 05:54:20', '2019-07-27 05:54:20'),
(245, 43, 149, 2, 2, 1, '2019-07-27 05:55:59', '2019-07-27 05:55:59'),
(246, 43, 129, 2, 2, 1, '2019-07-27 05:56:24', '2019-07-27 05:56:24'),
(247, 43, 115, 2, 2, 1, '2019-07-27 05:56:46', '2019-07-27 05:56:46'),
(248, 43, 138, 3, 1, 1, '2019-07-27 05:57:20', '2019-07-27 05:57:20'),
(249, 43, 123, 3, 1, 1, '2019-07-27 05:57:46', '2019-07-27 05:57:46'),
(250, 43, 124, 3, 1, 1, '2019-07-27 05:58:19', '2019-07-27 05:58:19'),
(251, 43, 150, 3, 1, 1, '2019-07-27 05:59:14', '2019-07-27 05:59:14'),
(252, 43, 151, 3, 1, 1, '2019-07-27 06:00:11', '2019-07-27 06:00:11'),
(253, 43, 152, 3, 1, 1, '2019-07-27 06:01:23', '2019-07-27 06:01:23'),
(254, 43, 113, 3, 1, 1, '2019-07-27 06:01:46', '2019-07-27 06:01:46'),
(255, 43, 153, 3, 1, 1, '2019-07-27 06:02:37', '2019-07-27 06:02:37'),
(256, 43, 154, 3, 2, 1, '2019-07-27 06:09:29', '2019-07-27 06:09:29'),
(257, 43, 155, 3, 2, 1, '2019-07-27 06:10:36', '2019-07-27 06:10:36'),
(258, 43, 156, 3, 2, 1, '2019-07-27 06:11:18', '2019-07-27 06:11:18'),
(259, 43, 157, 3, 2, 1, '2019-07-27 06:24:50', '2019-07-27 06:24:50'),
(260, 43, 158, 3, 2, 1, '2019-07-27 06:25:53', '2019-07-27 06:25:53'),
(261, 43, 134, 3, 2, 1, '2019-07-27 06:26:46', '2019-07-27 06:26:46'),
(262, 43, 114, 3, 2, 1, '2019-07-27 06:27:06', '2019-07-27 06:27:06'),
(263, 43, 121, 3, 2, 1, '2019-07-27 06:27:36', '2019-07-27 06:27:36'),
(264, 43, 97, 4, 1, 1, '2019-07-27 06:28:13', '2019-07-27 06:28:13'),
(265, 43, 159, 4, 1, 1, '2019-07-27 06:29:13', '2019-07-27 06:29:13'),
(266, 43, 160, 4, 1, 1, '2019-07-27 06:29:58', '2019-07-27 06:29:58'),
(267, 43, 161, 4, 1, 1, '2019-07-27 06:30:43', '2019-07-27 06:30:43'),
(268, 43, 162, 4, 1, 1, '2019-07-27 06:31:16', '2019-07-27 06:31:16'),
(269, 43, 109, 4, 2, 1, '2019-07-27 06:32:00', '2019-07-27 06:32:00'),
(270, 43, 163, 4, 2, 1, '2019-07-27 06:32:48', '2019-07-27 06:32:48'),
(271, 43, 164, 4, 2, 1, '2019-07-27 06:33:33', '2019-07-27 06:33:33'),
(272, 44, 89, 1, 1, 1, '2019-08-11 05:07:07', '2019-08-11 05:07:07'),
(273, 44, 90, 1, 1, 1, '2019-08-11 05:07:07', '2019-08-11 05:07:07'),
(274, 44, 137, 1, 1, 1, '2019-08-11 05:07:08', '2019-08-11 05:07:08'),
(275, 44, 91, 3, 2, 1, '2019-08-11 05:07:08', '2019-08-11 05:13:42'),
(276, 44, 92, 1, 1, 1, '2019-08-11 05:07:08', '2019-08-11 05:07:08'),
(277, 44, 93, 1, 1, 1, '2019-08-11 05:07:08', '2019-08-11 05:07:08'),
(278, 44, 94, 1, 1, 1, '2019-08-11 05:07:08', '2019-08-11 05:07:08'),
(279, 44, 22, 1, 1, 1, '2019-08-11 05:07:08', '2019-08-11 05:07:08'),
(280, 44, 95, 1, 2, 1, '2019-08-11 05:07:08', '2019-08-11 05:07:08'),
(281, 44, 96, 1, 2, 1, '2019-08-11 05:07:08', '2019-08-11 05:07:08'),
(282, 44, 97, 1, 2, 1, '2019-08-11 05:07:08', '2019-08-11 05:07:08'),
(283, 44, 98, 1, 2, 1, '2019-08-11 05:07:08', '2019-08-11 05:07:08'),
(284, 44, 99, 1, 2, 1, '2019-08-11 05:07:09', '2019-08-11 05:07:09'),
(285, 44, 100, 1, 2, 1, '2019-08-11 05:07:09', '2019-08-11 05:07:09'),
(286, 44, 101, 1, 2, 1, '2019-08-11 05:07:09', '2019-08-11 05:07:09'),
(287, 44, 26, 1, 2, 1, '2019-08-11 05:07:09', '2019-08-11 05:07:09'),
(288, 44, 102, 2, 1, 1, '2019-08-11 05:07:09', '2019-08-11 05:07:09'),
(289, 44, 103, 2, 1, 1, '2019-08-11 05:07:09', '2019-08-11 05:07:09'),
(290, 44, 138, 2, 1, 1, '2019-08-11 05:07:09', '2019-08-11 05:07:09'),
(291, 44, 107, 2, 1, 1, '2019-08-11 05:07:10', '2019-08-11 05:07:10'),
(292, 44, 104, 2, 1, 1, '2019-08-11 05:07:10', '2019-08-11 05:07:10'),
(293, 44, 105, 2, 1, 1, '2019-08-11 05:07:10', '2019-08-11 05:07:10'),
(294, 44, 106, 2, 1, 1, '2019-08-11 05:07:10', '2019-08-11 05:07:10'),
(295, 44, 108, 2, 2, 1, '2019-08-11 05:07:10', '2019-08-11 05:07:10'),
(296, 44, 109, 2, 2, 1, '2019-08-11 05:07:10', '2019-08-11 05:07:10'),
(297, 44, 110, 2, 2, 1, '2019-08-11 05:07:10', '2019-08-11 05:07:10'),
(298, 44, 111, 2, 2, 1, '2019-08-11 05:07:10', '2019-08-11 05:07:10'),
(299, 44, 112, 2, 2, 1, '2019-08-11 05:07:10', '2019-08-11 05:07:10'),
(300, 44, 113, 2, 2, 1, '2019-08-11 05:07:10', '2019-08-11 05:07:10'),
(301, 44, 114, 3, 1, 1, '2019-08-11 05:07:11', '2019-08-11 05:20:38'),
(302, 44, 115, 2, 2, 1, '2019-08-11 05:07:11', '2019-08-11 05:07:11'),
(303, 44, 116, 3, 1, 1, '2019-08-11 05:07:11', '2019-08-11 05:07:11'),
(304, 44, 117, 3, 1, 1, '2019-08-11 05:07:11', '2019-08-11 05:07:11'),
(305, 44, 118, 3, 1, 1, '2019-08-11 05:07:11', '2019-08-11 05:07:11'),
(306, 44, 119, 3, 1, 1, '2019-08-11 05:07:11', '2019-08-11 05:07:11'),
(307, 44, 120, 3, 1, 1, '2019-08-11 05:07:11', '2019-08-11 05:07:11'),
(308, 44, 121, 3, 1, 1, '2019-08-11 05:07:11', '2019-08-11 05:07:11'),
(309, 44, 122, 3, 1, 1, '2019-08-11 05:07:11', '2019-08-11 05:07:11'),
(310, 44, 123, 3, 2, 1, '2019-08-11 05:07:11', '2019-08-11 05:07:11'),
(311, 44, 124, 3, 2, 1, '2019-08-11 05:07:12', '2019-08-11 05:07:12'),
(312, 44, 125, 3, 2, 1, '2019-08-11 05:07:12', '2019-08-11 05:07:12'),
(313, 44, 126, 3, 2, 1, '2019-08-11 05:07:12', '2019-08-11 05:07:12'),
(314, 44, 127, 3, 2, 1, '2019-08-11 05:07:12', '2019-08-11 05:07:12'),
(315, 44, 128, 4, 1, 1, '2019-08-11 05:07:12', '2019-08-11 05:25:25'),
(316, 44, 129, 3, 2, 1, '2019-08-11 05:07:12', '2019-08-11 05:07:12'),
(317, 44, 130, 4, 1, 1, '2019-08-11 05:07:12', '2019-08-11 05:07:12'),
(318, 44, 131, 4, 1, 1, '2019-08-11 05:07:12', '2019-08-11 05:07:12'),
(319, 44, 132, 4, 1, 0, '2019-08-11 05:07:13', '2019-08-11 05:29:01'),
(320, 44, 133, 4, 1, 1, '2019-08-11 05:07:13', '2019-08-11 05:07:13'),
(321, 44, 134, 4, 1, 1, '2019-08-11 05:07:13', '2019-08-11 05:07:13'),
(322, 44, 135, 4, 2, 1, '2019-08-11 05:07:13', '2019-08-11 05:07:13'),
(323, 44, 136, 4, 2, 1, '2019-08-11 05:07:13', '2019-08-11 05:07:13'),
(324, 44, 145, 1, 1, 1, '2019-08-11 05:13:54', '2019-08-11 05:13:54'),
(325, 44, 144, 2, 1, 1, '2019-08-11 05:15:19', '2019-08-11 05:15:19'),
(326, 44, 153, 2, 2, 1, '2019-08-11 05:21:00', '2019-08-11 05:21:00');

-- --------------------------------------------------------

--
-- Table structure for table `curriculum_mapping_statuses`
--

CREATE TABLE `curriculum_mapping_statuses` (
  `id` int(11) NOT NULL,
  `curriculum_id` int(11) NOT NULL,
  `status` tinyint(1) NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `curriculum_mapping_statuses`
--

INSERT INTO `curriculum_mapping_statuses` (`id`, `curriculum_id`, `status`, `created_at`, `updated_at`) VALUES
(2, 30, 1, NULL, '2019-07-23 06:32:33'),
(5, 35, 0, NULL, NULL),
(6, 36, 1, '2019-06-27 12:49:06', '2019-07-22 08:30:43'),
(7, 36, 0, '2019-06-30 02:25:27', '2019-06-30 02:25:27'),
(8, 38, 1, '2019-06-30 03:29:12', '2019-08-05 11:50:03'),
(11, 43, 1, '2019-07-23 07:06:52', '2019-09-03 02:15:40'),
(12, 44, 1, '2019-08-11 05:07:13', '2019-09-14 06:24:36');

-- --------------------------------------------------------

--
-- Table structure for table `curriculum_maps`
--

CREATE TABLE `curriculum_maps` (
  `id` int(11) NOT NULL,
  `student_outcome_id` int(11) NOT NULL,
  `curriculum_course_id` int(11) NOT NULL,
  `is_checked` tinyint(1) NOT NULL,
  `learning_level_id` int(11) NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `curriculum_maps`
--

INSERT INTO `curriculum_maps` (`id`, `student_outcome_id`, `curriculum_course_id`, `is_checked`, `learning_level_id`, `created_at`, `updated_at`) VALUES
(1, 7, 107, 1, 1, '2019-06-30 03:36:57', '2019-06-30 03:36:57'),
(2, 9, 107, 1, 1, '2019-06-30 03:36:57', '2019-06-30 03:36:57'),
(3, 7, 108, 1, 1, '2019-06-30 03:36:57', '2019-06-30 03:36:57'),
(4, 9, 108, 1, 1, '2019-06-30 03:36:57', '2019-06-30 03:36:57'),
(5, 20, 109, 1, 1, '2019-06-30 03:36:57', '2019-06-30 03:36:57'),
(6, 21, 109, 1, 1, '2019-06-30 03:36:57', '2019-06-30 03:36:57'),
(7, 17, 110, 1, 1, '2019-06-30 03:36:57', '2019-06-30 03:36:57'),
(8, 14, 110, 1, 1, '2019-06-30 03:36:57', '2019-06-30 03:36:57'),
(9, 7, 111, 1, 1, '2019-06-30 03:36:57', '2019-06-30 03:36:57'),
(10, 9, 111, 1, 1, '2019-06-30 03:36:57', '2019-06-30 03:36:57'),
(11, 22, 112, 1, 3, '2019-06-30 03:36:57', '2019-06-30 03:36:57'),
(12, 21, 112, 1, 3, '2019-06-30 03:36:57', '2019-06-30 03:36:57'),
(13, 22, 113, 1, 3, '2019-06-30 03:36:57', '2019-06-30 03:36:57'),
(14, 14, 113, 1, 3, '2019-06-30 03:36:57', '2019-06-30 03:36:57'),
(15, 14, 114, 1, 2, '2019-06-30 03:36:57', '2019-06-30 03:36:57'),
(16, 21, 114, 1, 2, '2019-06-30 03:36:57', '2019-06-30 03:36:57'),
(17, 7, 115, 1, 1, '2019-06-30 03:40:57', '2019-06-30 03:40:57'),
(18, 9, 115, 1, 1, '2019-06-30 03:40:57', '2019-06-30 03:40:57'),
(19, 7, 116, 1, 1, '2019-06-30 03:40:57', '2019-06-30 03:40:57'),
(20, 9, 116, 1, 1, '2019-06-30 03:40:57', '2019-06-30 03:40:57'),
(21, 10, 117, 1, 1, '2019-06-30 03:40:57', '2019-06-30 03:40:57'),
(22, 11, 117, 1, 1, '2019-06-30 03:40:57', '2019-06-30 03:40:57'),
(23, 21, 118, 1, 2, '2019-06-30 03:40:57', '2019-06-30 03:40:57'),
(24, 20, 118, 1, 2, '2019-06-30 03:40:57', '2019-06-30 03:40:57'),
(25, 17, 119, 1, 1, '2019-06-30 03:40:57', '2019-06-30 03:40:57'),
(26, 15, 119, 0, 1, '2019-06-30 03:40:57', '2019-06-30 03:40:57'),
(27, 14, 119, 1, 1, '2019-06-30 03:40:57', '2019-06-30 03:40:57'),
(28, 17, 120, 1, 1, '2019-06-30 03:40:57', '2019-06-30 03:40:57'),
(29, 21, 120, 1, 1, '2019-06-30 03:40:57', '2019-06-30 03:40:57'),
(30, 22, 121, 1, 3, '2019-06-30 03:40:57', '2019-06-30 03:40:57'),
(31, 14, 121, 1, 3, '2019-06-30 03:40:57', '2019-06-30 03:40:57'),
(32, 14, 122, 1, 3, '2019-06-30 03:40:57', '2019-06-30 03:40:57'),
(33, 21, 122, 1, 3, '2019-06-30 03:40:57', '2019-06-30 03:40:57'),
(34, 7, 123, 1, 2, '2019-06-30 03:40:57', '2019-06-30 03:40:57'),
(35, 9, 123, 1, 2, '2019-06-30 03:40:57', '2019-06-30 03:40:57'),
(36, 9, 124, 1, 2, '2019-06-30 03:40:57', '2019-06-30 03:40:57'),
(37, 11, 124, 1, 3, '2019-06-30 03:40:57', '2019-06-30 03:40:57'),
(38, 9, 125, 1, 2, '2019-06-30 03:40:57', '2019-06-30 03:40:57'),
(39, 10, 125, 1, 2, '2019-06-30 03:40:57', '2019-06-30 03:40:57'),
(40, 7, 126, 1, 2, '2019-06-30 03:40:57', '2019-06-30 03:40:57'),
(41, 21, 126, 1, 1, '2019-06-30 03:40:57', '2019-06-30 03:40:57'),
(42, 9, 127, 1, 1, '2019-06-30 03:40:57', '2019-06-30 03:40:57'),
(43, 10, 127, 1, 1, '2019-06-30 03:40:57', '2019-06-30 03:40:57'),
(44, 21, 128, 1, 2, '2019-06-30 03:40:57', '2019-06-30 03:40:57'),
(45, 17, 128, 1, 2, '2019-06-30 03:40:57', '2019-06-30 03:40:57'),
(46, 22, 129, 1, 3, '2019-06-30 03:40:57', '2019-06-30 03:40:57'),
(47, 14, 129, 1, 3, '2019-06-30 03:40:57', '2019-06-30 03:40:57'),
(48, 11, 130, 1, 1, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(49, 12, 130, 1, 1, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(50, 11, 131, 1, 1, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(51, 12, 131, 1, 1, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(52, 11, 132, 1, 2, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(53, 15, 132, 1, 3, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(54, 11, 133, 1, 2, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(55, 10, 133, 1, 2, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(56, 7, 134, 1, 3, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(57, 21, 134, 1, 3, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(58, 22, 135, 1, 1, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(59, 14, 135, 1, 1, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(60, 21, 136, 1, 2, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(61, 14, 136, 1, 2, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(62, 22, 137, 1, 3, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(63, 14, 137, 1, 3, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(64, 10, 138, 1, 2, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(65, 11, 139, 1, 2, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(66, 12, 139, 1, 2, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(67, 17, 138, 0, 2, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(68, 20, 138, 1, 2, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(69, 10, 140, 1, 3, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(70, 11, 140, 1, 2, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(71, 10, 141, 1, 2, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(72, 11, 141, 1, 3, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(73, 20, 142, 1, 2, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(74, 21, 142, 1, 2, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(75, 22, 143, 1, 3, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(76, 14, 143, 1, 2, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(77, 21, 144, 1, 2, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(78, 20, 144, 1, 2, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(79, 11, 145, 1, 1, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(80, 12, 145, 1, 1, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(81, 11, 146, 1, 1, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(82, 21, 146, 1, 2, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(83, 7, 147, 1, 1, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(84, 11, 147, 1, 1, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(85, 11, 148, 1, 3, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(86, 12, 148, 1, 3, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(87, 9, 149, 1, 2, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(88, 13, 149, 1, 2, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(89, 21, 150, 1, 2, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(90, 20, 150, 1, 2, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(91, 22, 151, 1, 2, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(92, 11, 151, 1, 2, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(93, 11, 152, 1, 1, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(94, 13, 152, 1, 1, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(95, 8, 153, 1, 3, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(96, 21, 153, 1, 3, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(97, 21, 154, 1, 2, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(98, 20, 154, 1, 2, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(99, 22, 156, 1, 3, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(100, 21, 156, 1, 3, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(101, 11, 155, 1, 3, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(102, 12, 155, 1, 3, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(103, 21, 157, 1, 3, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(104, 15, 157, 1, 3, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(105, 20, 158, 1, 2, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(106, 21, 158, 1, 2, '2019-06-30 03:48:45', '2019-06-30 03:48:45'),
(108, 8, 107, 0, 1, '2019-07-23 03:35:32', '2019-07-23 20:21:11'),
(109, 10, 107, 0, 2, '2019-07-23 03:51:31', '2019-07-23 03:53:22'),
(110, 14, 107, 0, 3, '2019-07-23 04:03:18', '2019-07-23 04:03:34'),
(111, 12, 107, 0, 2, '2019-07-23 05:33:19', '2019-07-23 06:06:27'),
(112, 12, 107, 0, 2, '2019-07-23 05:33:33', '2019-07-23 05:33:33'),
(113, 23, 1, 1, 11, '2019-07-23 06:32:33', '2019-07-23 06:32:33'),
(114, 16, 1, 1, 11, '2019-07-23 06:32:33', '2019-07-23 06:32:33'),
(115, 18, 1, 1, 11, '2019-07-23 06:32:33', '2019-07-23 06:32:33'),
(116, 16, 2, 1, 11, '2019-07-23 06:32:33', '2019-07-23 06:32:33'),
(117, 23, 215, 1, 11, '2019-07-23 07:06:52', '2019-07-23 07:06:52'),
(118, 16, 215, 0, 11, '2019-07-23 07:06:52', '2019-07-23 07:07:46'),
(119, 18, 215, 1, 11, '2019-07-23 07:06:52', '2019-07-23 07:17:25'),
(120, 16, 216, 1, 11, '2019-07-23 07:06:52', '2019-07-23 07:06:52'),
(121, 18, 217, 1, 12, '2019-07-23 07:17:25', '2019-07-23 07:17:25'),
(122, 8, 108, 0, 1, '2019-07-23 11:05:11', '2019-07-23 11:05:52'),
(123, 8, 123, 1, 1, '2019-07-23 20:21:11', '2019-07-23 20:21:11'),
(124, 8, 124, 1, 1, '2019-07-23 20:21:11', '2019-07-23 20:21:11'),
(125, 8, 125, 1, 1, '2019-07-23 20:21:11', '2019-07-23 20:21:11'),
(126, 8, 130, 1, 1, '2019-07-23 20:21:11', '2019-07-23 20:21:11'),
(127, 25, 219, 1, 11, '2019-07-28 03:59:13', '2019-07-28 03:59:13'),
(128, 27, 219, 1, 11, '2019-07-28 03:59:13', '2019-07-28 03:59:13'),
(129, 26, 217, 1, 11, '2019-07-28 03:59:13', '2019-07-28 03:59:13'),
(130, 27, 217, 1, 11, '2019-07-28 03:59:13', '2019-07-28 03:59:13'),
(131, 32, 218, 1, 11, '2019-07-28 04:16:04', '2019-07-28 04:16:04'),
(132, 33, 218, 1, 11, '2019-07-28 04:16:04', '2019-07-28 04:16:04'),
(133, 25, 220, 1, 11, '2019-07-28 04:16:04', '2019-07-28 04:16:04'),
(134, 27, 220, 1, 11, '2019-07-28 04:16:04', '2019-07-28 04:16:04'),
(135, 30, 222, 1, 13, '2019-07-28 04:16:04', '2019-07-28 04:16:04'),
(136, 31, 222, 1, 13, '2019-07-28 04:16:04', '2019-07-28 04:16:04'),
(137, 30, 216, 1, 12, '2019-07-28 04:16:04', '2019-07-28 04:16:04'),
(138, 31, 216, 1, 12, '2019-07-28 04:16:04', '2019-07-28 04:16:04'),
(139, 26, 224, 1, 11, '2019-07-28 04:16:04', '2019-07-28 04:16:04'),
(140, 27, 224, 1, 11, '2019-07-28 04:16:04', '2019-07-28 04:16:04'),
(141, 25, 225, 1, 11, '2019-07-28 04:16:04', '2019-07-28 04:16:04'),
(142, 27, 225, 1, 11, '2019-07-28 04:16:04', '2019-07-28 04:16:04'),
(143, 32, 226, 1, 12, '2019-07-28 04:16:04', '2019-07-28 04:16:04'),
(144, 33, 226, 1, 12, '2019-07-28 04:16:04', '2019-07-28 04:16:04'),
(145, 25, 228, 1, 11, '2019-07-28 04:16:04', '2019-07-28 04:16:04'),
(146, 30, 227, 1, 11, '2019-07-28 04:16:04', '2019-07-28 04:16:04'),
(147, 32, 227, 1, 11, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(148, 32, 229, 1, 11, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(149, 33, 229, 1, 11, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(150, 31, 230, 1, 13, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(151, 30, 230, 1, 13, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(152, 30, 223, 1, 13, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(153, 31, 223, 1, 13, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(154, 26, 231, 1, 12, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(155, 27, 231, 1, 12, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(156, 26, 232, 1, 12, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(157, 27, 232, 1, 13, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(158, 25, 234, 1, 12, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(159, 27, 234, 1, 12, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(160, 30, 237, 1, 12, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(161, 33, 237, 1, 12, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(162, 30, 239, 1, 12, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(163, 33, 239, 1, 12, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(164, 30, 238, 1, 13, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(165, 31, 238, 1, 13, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(166, 28, 241, 1, 11, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(167, 29, 241, 1, 11, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(168, 27, 243, 1, 12, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(169, 34, 243, 1, 12, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(170, 27, 244, 1, 11, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(171, 32, 243, 0, 11, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(172, 32, 244, 1, 11, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(173, 27, 245, 1, 12, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(174, 34, 245, 1, 12, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(175, 29, 246, 1, 12, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(176, 32, 246, 1, 12, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(177, 30, 247, 1, 13, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(178, 31, 247, 1, 13, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(179, 26, 248, 1, 12, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(180, 27, 248, 1, 12, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(181, 28, 249, 1, 11, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(182, 29, 249, 1, 11, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(183, 28, 250, 1, 13, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(184, 29, 250, 1, 13, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(185, 25, 252, 1, 12, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(186, 27, 252, 1, 12, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(187, 26, 253, 1, 12, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(188, 27, 253, 1, 12, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(189, 30, 254, 1, 11, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(190, 31, 254, 1, 11, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(191, 26, 257, 1, 11, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(192, 27, 257, 1, 11, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(193, 28, 258, 1, 13, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(194, 34, 258, 1, 13, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(195, 25, 259, 1, 12, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(196, 27, 259, 1, 12, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(197, 32, 260, 1, 13, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(198, 34, 260, 1, 13, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(199, 30, 261, 1, 13, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(200, 33, 261, 1, 13, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(201, 30, 263, 1, 12, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(202, 31, 263, 1, 13, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(203, 28, 264, 1, 11, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(204, 29, 264, 1, 11, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(205, 27, 266, 1, 11, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(206, 29, 266, 1, 13, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(207, 27, 267, 1, 11, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(208, 33, 267, 1, 13, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(209, 32, 268, 1, 13, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(210, 34, 268, 1, 13, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(211, 28, 269, 1, 11, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(212, 29, 269, 1, 11, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(213, 30, 271, 1, 13, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(214, 31, 271, 1, 13, '2019-07-28 04:16:05', '2019-07-28 04:16:05'),
(215, 7, 272, 1, 1, '2019-08-11 05:07:07', '2019-08-11 05:07:07'),
(216, 9, 272, 1, 1, '2019-08-11 05:07:07', '2019-08-11 05:07:07'),
(217, 7, 273, 1, 1, '2019-08-11 05:07:08', '2019-08-11 05:07:08'),
(218, 9, 273, 1, 1, '2019-08-11 05:07:08', '2019-08-11 05:07:08'),
(219, 20, 274, 1, 1, '2019-08-11 05:07:08', '2019-08-11 05:07:08'),
(220, 21, 274, 1, 1, '2019-08-11 05:07:08', '2019-08-11 05:07:08'),
(221, 17, 275, 1, 1, '2019-08-11 05:07:08', '2019-08-11 05:07:08'),
(222, 14, 275, 1, 1, '2019-08-11 05:07:08', '2019-08-11 05:07:08'),
(223, 7, 276, 1, 1, '2019-08-11 05:07:08', '2019-08-11 05:07:08'),
(224, 9, 276, 1, 1, '2019-08-11 05:07:08', '2019-08-11 05:07:08'),
(225, 22, 277, 1, 3, '2019-08-11 05:07:08', '2019-08-11 05:07:08'),
(226, 21, 277, 1, 3, '2019-08-11 05:07:08', '2019-08-11 05:07:08'),
(227, 22, 278, 1, 3, '2019-08-11 05:07:08', '2019-08-11 05:07:08'),
(228, 14, 278, 1, 3, '2019-08-11 05:07:08', '2019-08-11 05:07:08'),
(229, 14, 279, 1, 2, '2019-08-11 05:07:08', '2019-08-11 05:07:08'),
(230, 21, 279, 1, 2, '2019-08-11 05:07:08', '2019-08-11 05:07:08'),
(231, 7, 280, 1, 1, '2019-08-11 05:07:08', '2019-08-11 05:07:08'),
(232, 9, 280, 1, 1, '2019-08-11 05:07:08', '2019-08-11 05:07:08'),
(233, 7, 281, 1, 1, '2019-08-11 05:07:08', '2019-08-11 05:07:08'),
(234, 9, 281, 1, 1, '2019-08-11 05:07:08', '2019-08-11 05:07:08'),
(235, 10, 282, 1, 1, '2019-08-11 05:07:08', '2019-08-11 05:07:08'),
(236, 11, 282, 1, 1, '2019-08-11 05:07:08', '2019-08-11 05:07:08'),
(237, 21, 283, 1, 2, '2019-08-11 05:07:08', '2019-08-11 05:07:08'),
(238, 20, 283, 1, 2, '2019-08-11 05:07:08', '2019-08-11 05:07:08'),
(239, 17, 284, 1, 1, '2019-08-11 05:07:09', '2019-08-11 05:07:09'),
(240, 14, 284, 1, 1, '2019-08-11 05:07:09', '2019-08-11 05:07:09'),
(241, 17, 285, 1, 1, '2019-08-11 05:07:09', '2019-08-11 05:07:09'),
(242, 21, 285, 1, 1, '2019-08-11 05:07:09', '2019-08-11 05:07:09'),
(243, 22, 286, 1, 3, '2019-08-11 05:07:09', '2019-08-11 05:07:09'),
(244, 14, 286, 1, 3, '2019-08-11 05:07:09', '2019-08-11 05:07:09'),
(245, 14, 287, 1, 3, '2019-08-11 05:07:09', '2019-08-11 05:07:09'),
(246, 21, 287, 1, 3, '2019-08-11 05:07:09', '2019-08-11 05:07:09'),
(247, 7, 288, 0, 2, '2019-08-11 05:07:09', '2019-08-24 21:57:48'),
(248, 9, 288, 1, 2, '2019-08-11 05:07:09', '2019-08-11 05:07:09'),
(249, 8, 288, 0, 1, '2019-08-11 05:07:09', '2019-08-11 06:16:42'),
(250, 9, 289, 1, 2, '2019-08-11 05:07:09', '2019-08-11 05:07:09'),
(251, 11, 289, 1, 3, '2019-08-11 05:07:09', '2019-08-11 05:07:09'),
(252, 8, 289, 0, 1, '2019-08-11 05:07:09', '2019-08-11 06:16:42'),
(253, 9, 290, 1, 2, '2019-08-11 05:07:09', '2019-08-11 05:07:09'),
(254, 10, 290, 1, 2, '2019-08-11 05:07:09', '2019-08-11 05:07:09'),
(255, 8, 290, 0, 1, '2019-08-11 05:07:09', '2019-08-11 06:16:42'),
(256, 7, 291, 0, 2, '2019-08-11 05:07:10', '2019-08-24 21:57:48'),
(257, 21, 291, 1, 1, '2019-08-11 05:07:10', '2019-08-11 05:07:10'),
(258, 9, 292, 1, 1, '2019-08-11 05:07:10', '2019-08-11 05:07:10'),
(259, 10, 292, 1, 1, '2019-08-11 05:07:10', '2019-08-11 05:07:10'),
(260, 21, 293, 1, 2, '2019-08-11 05:07:10', '2019-08-11 05:07:10'),
(261, 17, 293, 1, 2, '2019-08-11 05:07:10', '2019-08-11 05:07:10'),
(262, 22, 294, 1, 3, '2019-08-11 05:07:10', '2019-08-11 05:07:10'),
(263, 14, 294, 1, 3, '2019-08-11 05:07:10', '2019-08-11 05:07:10'),
(264, 11, 295, 1, 1, '2019-08-11 05:07:10', '2019-08-11 05:07:10'),
(265, 12, 295, 1, 1, '2019-08-11 05:07:10', '2019-08-11 05:07:10'),
(266, 8, 295, 0, 1, '2019-08-11 05:07:10', '2019-08-11 06:16:42'),
(267, 11, 296, 1, 1, '2019-08-11 05:07:10', '2019-08-11 05:07:10'),
(268, 12, 296, 1, 1, '2019-08-11 05:07:10', '2019-08-11 05:07:10'),
(269, 11, 297, 1, 2, '2019-08-11 05:07:10', '2019-08-11 05:07:10'),
(270, 15, 297, 1, 3, '2019-08-11 05:07:10', '2019-08-11 05:07:10'),
(271, 11, 298, 1, 2, '2019-08-11 05:07:10', '2019-08-11 05:07:10'),
(272, 10, 298, 1, 2, '2019-08-11 05:07:10', '2019-08-11 05:07:10'),
(273, 7, 299, 0, 3, '2019-08-11 05:07:10', '2019-08-24 21:57:48'),
(274, 21, 299, 1, 3, '2019-08-11 05:07:10', '2019-08-11 05:07:10'),
(275, 22, 300, 1, 1, '2019-08-11 05:07:10', '2019-08-11 05:07:10'),
(276, 14, 300, 1, 1, '2019-08-11 05:07:11', '2019-08-11 05:07:11'),
(277, 21, 301, 1, 2, '2019-08-11 05:07:11', '2019-08-11 05:07:11'),
(278, 14, 301, 1, 2, '2019-08-11 05:07:11', '2019-08-11 05:07:11'),
(279, 22, 302, 1, 3, '2019-08-11 05:07:11', '2019-08-11 05:07:11'),
(280, 14, 302, 1, 3, '2019-08-11 05:07:11', '2019-08-11 05:07:11'),
(281, 10, 303, 1, 2, '2019-08-11 05:07:11', '2019-08-11 05:07:11'),
(282, 20, 303, 1, 2, '2019-08-11 05:07:11', '2019-08-11 05:07:11'),
(283, 11, 304, 1, 2, '2019-08-11 05:07:11', '2019-08-11 05:07:11'),
(284, 12, 304, 1, 2, '2019-08-11 05:07:11', '2019-08-11 05:07:11'),
(285, 10, 305, 1, 3, '2019-08-11 05:07:11', '2019-08-11 05:07:11'),
(286, 11, 305, 1, 2, '2019-08-11 05:07:11', '2019-08-11 05:07:11'),
(287, 10, 306, 1, 2, '2019-08-11 05:07:11', '2019-08-11 05:07:11'),
(288, 11, 306, 1, 3, '2019-08-11 05:07:11', '2019-08-11 05:07:11'),
(289, 20, 307, 1, 2, '2019-08-11 05:07:11', '2019-08-11 05:07:11'),
(290, 21, 307, 1, 2, '2019-08-11 05:07:11', '2019-08-11 05:07:11'),
(291, 22, 308, 1, 3, '2019-08-11 05:07:11', '2019-08-11 05:07:11'),
(292, 14, 308, 1, 2, '2019-08-11 05:07:11', '2019-08-11 05:07:11'),
(293, 21, 309, 1, 2, '2019-08-11 05:07:11', '2019-08-11 05:07:11'),
(294, 20, 309, 1, 2, '2019-08-11 05:07:11', '2019-08-11 05:07:11'),
(295, 11, 310, 1, 1, '2019-08-11 05:07:11', '2019-08-11 05:07:11'),
(296, 12, 310, 1, 1, '2019-08-11 05:07:12', '2019-08-11 05:07:12'),
(297, 11, 311, 1, 1, '2019-08-11 05:07:12', '2019-08-11 05:07:12'),
(298, 21, 311, 1, 2, '2019-08-11 05:07:12', '2019-08-11 05:07:12'),
(299, 7, 312, 1, 1, '2019-08-11 05:07:12', '2019-08-11 05:07:12'),
(300, 11, 312, 1, 1, '2019-08-11 05:07:12', '2019-08-11 05:07:12'),
(301, 11, 313, 1, 3, '2019-08-11 05:07:12', '2019-08-11 05:07:12'),
(302, 12, 313, 1, 3, '2019-08-11 05:07:12', '2019-08-11 05:07:12'),
(303, 9, 314, 1, 2, '2019-08-11 05:07:12', '2019-08-11 05:07:12'),
(304, 13, 314, 1, 2, '2019-08-11 05:07:12', '2019-08-11 05:07:12'),
(305, 21, 315, 1, 2, '2019-08-11 05:07:12', '2019-08-11 05:07:12'),
(306, 20, 315, 1, 2, '2019-08-11 05:07:12', '2019-08-11 05:07:12'),
(307, 22, 316, 1, 2, '2019-08-11 05:07:12', '2019-08-11 05:07:12'),
(308, 11, 316, 1, 2, '2019-08-11 05:07:12', '2019-08-11 05:07:12'),
(309, 11, 317, 1, 1, '2019-08-11 05:07:12', '2019-08-11 05:07:12'),
(310, 13, 317, 1, 1, '2019-08-11 05:07:12', '2019-08-11 05:07:12'),
(311, 8, 318, 1, 3, '2019-08-11 05:07:12', '2019-08-11 05:07:12'),
(312, 21, 318, 1, 3, '2019-08-11 05:07:12', '2019-08-11 05:07:12'),
(313, 21, 319, 1, 2, '2019-08-11 05:07:13', '2019-08-11 05:07:13'),
(314, 20, 319, 1, 2, '2019-08-11 05:07:13', '2019-08-11 05:07:13'),
(315, 11, 320, 1, 3, '2019-08-11 05:07:13', '2019-08-11 05:07:13'),
(316, 12, 320, 1, 3, '2019-08-11 05:07:13', '2019-08-11 05:07:13'),
(317, 22, 321, 1, 3, '2019-08-11 05:07:13', '2019-08-11 05:07:13'),
(318, 21, 321, 1, 3, '2019-08-11 05:07:13', '2019-08-11 05:07:13'),
(319, 21, 322, 1, 3, '2019-08-11 05:07:13', '2019-08-11 05:07:13'),
(320, 15, 322, 1, 3, '2019-08-11 05:07:13', '2019-08-11 05:07:13'),
(321, 20, 323, 1, 2, '2019-08-11 05:07:13', '2019-08-11 05:07:13'),
(322, 21, 323, 1, 2, '2019-08-11 05:07:13', '2019-08-11 05:07:13'),
(323, 26, 215, 1, 11, '2019-09-03 02:15:40', '2019-09-03 02:15:40');

-- --------------------------------------------------------

--
-- Table structure for table `custom_recorded_assessments`
--

CREATE TABLE `custom_recorded_assessments` (
  `id` int(10) UNSIGNED NOT NULL,
  `curriculum_id` int(11) NOT NULL,
  `student_outcome_id` int(11) NOT NULL,
  `user_id` int(11) NOT NULL,
  `description` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `overall_score` double NOT NULL,
  `passing_percentage` double NOT NULL,
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `custom_recorded_assessments`
--

INSERT INTO `custom_recorded_assessments` (`id`, `curriculum_id`, `student_outcome_id`, `user_id`, `description`, `overall_score`, `passing_percentage`, `is_active`, `created_at`, `updated_at`) VALUES
(1, 44, 17, 2, 'Testing Custom recorded assessment', 20, 60, 1, '2019-09-15 13:33:58', '2019-09-15 13:33:58'),
(2, 44, 17, 2, 'testing again', 100, 60, 1, '2019-09-15 13:57:30', '2019-09-15 13:57:30');

-- --------------------------------------------------------

--
-- Table structure for table `difficulty_levels`
--

CREATE TABLE `difficulty_levels` (
  `id` int(11) NOT NULL,
  `description` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `difficulty_levels`
--

INSERT INTO `difficulty_levels` (`id`, `description`) VALUES
(1, 'Easy'),
(2, 'Average'),
(3, 'Difficult');

-- --------------------------------------------------------

--
-- Table structure for table `exams`
--

CREATE TABLE `exams` (
  `id` int(11) NOT NULL,
  `exam_code` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL,
  `student_outcome_id` int(11) NOT NULL,
  `curriculum_id` int(11) NOT NULL,
  `time_limit` double NOT NULL,
  `description` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `passing_grade` double NOT NULL,
  `user_id` int(11) NOT NULL,
  `is_active` tinyint(1) NOT NULL,
  `parent_id` int(11) DEFAULT NULL,
  `item_analysis` tinyint(1) DEFAULT '0',
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `exams`
--

INSERT INTO `exams` (`id`, `exam_code`, `student_outcome_id`, `curriculum_id`, `time_limit`, `description`, `passing_grade`, `user_id`, `is_active`, `parent_id`, `item_analysis`, `created_at`, `updated_at`) VALUES
(1, 'EXAM000001', 7, 44, 60, 'SET A', 60, 2, 1, 1, 1, '2019-09-01 02:38:46', '2019-09-03 02:32:50');

-- --------------------------------------------------------

--
-- Table structure for table `exam_levels`
--

CREATE TABLE `exam_levels` (
  `id` int(11) NOT NULL,
  `exam_id` int(11) NOT NULL,
  `difficulty_level_id` int(11) NOT NULL,
  `percentage` double NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- --------------------------------------------------------

--
-- Table structure for table `exam_test_questions`
--

CREATE TABLE `exam_test_questions` (
  `id` int(11) NOT NULL,
  `exam_id` int(11) NOT NULL,
  `test_question_id` int(11) NOT NULL,
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  `pos_order` int(11) DEFAULT NULL,
  `difficulty_level_id` int(11) DEFAULT NULL,
  `is_new` tinyint(1) NOT NULL DEFAULT '0',
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `exam_test_questions`
--

INSERT INTO `exam_test_questions` (`id`, `exam_id`, `test_question_id`, `is_active`, `pos_order`, `difficulty_level_id`, `is_new`, `created_at`, `updated_at`) VALUES
(1, 1, 219, 1, 1, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(2, 1, 89, 1, 2, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(3, 1, 68, 1, 3, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(4, 1, 70, 1, 4, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(5, 1, 82, 1, 5, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(6, 1, 74, 1, 6, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(7, 1, 220, 1, 7, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(8, 1, 66, 1, 8, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(9, 1, 77, 1, 9, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(10, 1, 223, 1, 10, 2, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(11, 1, 225, 1, 11, 2, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(12, 1, 72, 1, 12, 2, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(13, 1, 76, 1, 13, 2, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(14, 1, 87, 1, 14, 2, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(15, 1, 90, 1, 15, 3, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(16, 1, 79, 1, 16, 3, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(17, 1, 78, 1, 17, 3, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(18, 1, 42, 1, 18, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(19, 1, 38, 1, 19, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(20, 1, 31, 1, 20, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(21, 1, 32, 1, 21, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(22, 1, 34, 1, 22, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(23, 1, 40, 1, 23, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(24, 1, 41, 1, 24, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(25, 1, 39, 1, 25, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(26, 1, 33, 1, 26, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(27, 1, 51, 1, 27, 2, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(28, 1, 50, 1, 28, 2, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(29, 1, 48, 1, 29, 2, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(30, 1, 57, 1, 30, 2, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(31, 1, 61, 1, 31, 2, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(32, 1, 52, 1, 32, 3, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(33, 1, 58, 1, 33, 3, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(34, 1, 59, 1, 34, 3, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(35, 1, 285, 1, 35, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(36, 1, 1, 1, 36, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(37, 1, 92, 1, 37, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(38, 1, 95, 1, 38, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(39, 1, 93, 1, 39, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(40, 1, 107, 1, 40, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(41, 1, 99, 1, 41, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(42, 1, 112, 1, 42, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(43, 1, 289, 1, 43, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(44, 1, 116, 1, 44, 2, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(45, 1, 114, 1, 45, 2, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(46, 1, 97, 1, 46, 2, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(47, 1, 111, 1, 47, 2, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(48, 1, 113, 1, 48, 2, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(49, 1, 286, 1, 49, 3, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(50, 1, 108, 1, 50, 3, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(51, 1, 104, 1, 51, 3, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(52, 1, 124, 1, 52, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(53, 1, 122, 1, 53, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(54, 1, 129, 1, 54, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(55, 1, 121, 1, 55, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(56, 1, 126, 1, 56, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(57, 1, 119, 1, 57, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(58, 1, 132, 1, 58, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(59, 1, 131, 1, 59, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(60, 1, 127, 1, 60, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(61, 1, 136, 1, 61, 2, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(62, 1, 137, 1, 62, 2, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(63, 1, 140, 1, 63, 2, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(64, 1, 275, 1, 64, 2, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(65, 1, 138, 1, 65, 2, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(66, 1, 277, 1, 66, 3, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(67, 1, 283, 1, 67, 3, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(68, 1, 278, 1, 68, 3, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(69, 1, 155, 1, 69, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(70, 1, 147, 1, 70, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(71, 1, 144, 1, 71, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(72, 1, 148, 1, 72, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(73, 1, 151, 1, 73, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(74, 1, 150, 1, 74, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(75, 1, 156, 1, 75, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(76, 1, 142, 1, 76, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(77, 1, 143, 1, 77, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(78, 1, 145, 1, 78, 2, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(79, 1, 162, 1, 79, 2, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(80, 1, 260, 1, 80, 2, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(81, 1, 149, 1, 81, 2, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(82, 1, 270, 1, 82, 3, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(83, 1, 160, 1, 83, 3, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(84, 1, 267, 1, 84, 3, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(85, 1, 211, 1, 85, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(86, 1, 202, 1, 86, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(87, 1, 203, 1, 87, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(88, 1, 207, 1, 88, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(89, 1, 214, 1, 89, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(90, 1, 205, 1, 90, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(91, 1, 215, 1, 91, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(92, 1, 204, 1, 92, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(93, 1, 212, 1, 93, 1, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(94, 1, 246, 1, 94, 2, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(95, 1, 244, 1, 95, 2, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(96, 1, 243, 1, 96, 2, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(97, 1, 248, 1, 97, 2, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(98, 1, 256, 1, 98, 3, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(99, 1, 252, 1, 99, 3, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46'),
(100, 1, 254, 1, 100, 3, 0, '2019-09-01 02:38:46', '2019-09-01 02:38:46');

-- --------------------------------------------------------

--
-- Table structure for table `faculties`
--

CREATE TABLE `faculties` (
  `id` int(11) NOT NULL,
  `college_id` int(11) NOT NULL,
  `user_id` int(11) NOT NULL,
  `is_active` int(11) NOT NULL DEFAULT '1',
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `faculties`
--

INSERT INTO `faculties` (`id`, `college_id`, `user_id`, `is_active`, `created_at`, `updated_at`) VALUES
(1, 1, 2, 1, '2019-05-05 05:27:38', '2019-05-06 04:47:20'),
(2, 6, 3, 1, '2019-05-05 05:32:31', '2019-05-06 04:27:30'),
(3, 1, 4, 1, '2019-05-05 05:33:57', '2019-07-04 09:08:13'),
(4, 5, 7, 1, '2019-05-05 05:56:43', '2019-05-06 02:17:05'),
(5, 2, 8, 1, '2019-05-05 20:18:29', '2019-05-06 04:35:09'),
(9, 1, 12, 1, '2019-05-05 22:55:21', '2019-06-29 13:11:25'),
(10, 1, 13, 1, '2019-05-05 22:57:31', '2019-06-29 13:14:59'),
(11, 1, 14, 1, '2019-05-05 23:13:47', '2019-05-05 23:13:47'),
(12, 3, 15, 1, '2019-05-06 04:37:00', '2019-05-06 04:37:21'),
(13, 1, 16, 1, '2019-05-06 06:44:04', '2019-07-04 08:23:08'),
(14, 7, 17, 1, '2019-05-06 06:44:51', '2019-05-12 03:23:19'),
(15, 1, 19, 1, '2019-05-22 16:10:48', '2019-05-22 16:10:48'),
(16, 1, 20, 1, '2019-05-22 17:30:10', '2019-07-04 08:19:28'),
(17, 1, 21, 1, '2019-05-22 17:31:21', '2019-07-04 08:24:16'),
(18, 1, 39, 1, '2019-07-06 09:17:29', '2019-07-06 09:17:29'),
(19, 1, 44, 1, '2019-07-06 10:42:41', '2019-07-06 10:42:41'),
(20, 1, 45, 1, '2019-07-06 10:43:42', '2019-07-06 10:43:42'),
(21, 1, 46, 1, '2019-07-06 20:50:57', '2019-07-06 20:50:57'),
(22, 1, 47, 1, '2019-08-09 09:13:29', '2019-08-09 09:13:29'),
(23, 1, 48, 1, '2019-08-09 09:15:17', '2019-08-09 09:15:17');

-- --------------------------------------------------------

--
-- Table structure for table `faculty_courses`
--

CREATE TABLE `faculty_courses` (
  `id` int(10) UNSIGNED NOT NULL,
  `faculty_id` int(11) NOT NULL,
  `course_id` int(11) NOT NULL,
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `faculty_courses`
--

INSERT INTO `faculty_courses` (`id`, `faculty_id`, `course_id`, `is_active`, `created_at`, `updated_at`) VALUES
(1, 13, 89, 1, '2019-09-15 00:30:17', '2019-09-15 01:00:33'),
(2, 13, 90, 1, '2019-09-15 00:40:21', '2019-09-15 01:00:42'),
(3, 13, 95, 0, '2019-09-15 00:43:45', '2019-09-15 01:00:47'),
(4, 13, 103, 1, '2019-09-15 01:01:32', '2019-09-15 01:01:32'),
(5, 23, 89, 1, '2019-09-15 01:34:56', '2019-09-15 01:34:56'),
(6, 23, 90, 1, '2019-09-15 01:35:03', '2019-09-15 01:35:03'),
(7, 23, 95, 1, '2019-09-15 01:35:11', '2019-09-15 01:35:11');

-- --------------------------------------------------------

--
-- Table structure for table `grades`
--

CREATE TABLE `grades` (
  `id` int(10) UNSIGNED NOT NULL,
  `student_id` int(11) NOT NULL,
  `course_id` int(11) NOT NULL,
  `faculty_id` int(11) NOT NULL,
  `grade_value_id` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `is_passed` tinyint(1) NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `grades`
--

INSERT INTO `grades` (`id`, `student_id`, `course_id`, `faculty_id`, `grade_value_id`, `is_passed`, `created_at`, `updated_at`) VALUES
(1, 9, 89, 2, '1', 1, '2019-07-03 08:14:31', '2019-07-03 08:14:31'),
(2, 9, 137, 2, '10', 0, '2019-07-03 08:58:30', '2019-07-03 08:58:30'),
(3, 9, 137, 2, '1', 1, '2019-07-03 09:03:12', '2019-07-03 09:03:12'),
(4, 9, 90, 5, '1', 1, '2019-07-03 09:22:03', '2019-07-03 09:22:03'),
(5, 9, 91, 5, '10', 0, '2019-07-03 09:22:21', '2019-07-03 09:22:21'),
(6, 9, 93, 1, '3', 1, '2019-07-03 09:25:46', '2019-07-03 09:25:46'),
(7, 9, 91, 1, '2', 1, '2019-07-03 09:33:07', '2019-07-03 09:33:07'),
(8, 9, 92, 5, '3', 1, '2019-07-03 09:37:37', '2019-07-03 09:37:37'),
(9, 9, 94, 16, '3', 1, '2019-07-03 09:39:03', '2019-07-03 09:39:03'),
(10, 9, 22, 2, '3', 1, '2019-07-03 09:43:06', '2019-07-03 09:43:06'),
(11, 9, 95, 1, '2', 1, '2019-07-03 09:43:54', '2019-07-03 09:43:54'),
(12, 9, 96, 2, '10', 0, '2019-07-03 09:45:00', '2019-07-03 09:45:00'),
(13, 9, 96, 12, '3', 1, '2019-07-03 09:45:57', '2019-07-03 09:45:57'),
(14, 9, 97, 3, '3', 1, '2019-07-03 09:46:34', '2019-07-03 09:46:34'),
(15, 9, 98, 13, '3', 1, '2019-07-03 09:47:00', '2019-07-03 09:47:00'),
(16, 9, 101, 2, '3', 1, '2019-07-03 09:47:12', '2019-07-03 09:47:12'),
(17, 9, 99, 13, '11', 0, '2019-07-03 09:49:46', '2019-07-03 09:49:46'),
(18, 9, 102, 3, '4', 1, '2019-07-03 09:51:13', '2019-07-03 09:51:13'),
(19, 9, 99, 2, '2', 1, '2019-07-03 10:09:57', '2019-07-03 10:09:57'),
(20, 9, 108, 2, '2', 1, '2019-07-03 10:10:20', '2019-07-03 10:10:20'),
(21, 9, 103, 2, '11', 0, '2019-07-03 10:11:41', '2019-07-03 10:11:41'),
(22, 13, 89, 18, '4', 1, '2019-07-06 20:58:44', '2019-07-06 20:58:44'),
(23, 13, 90, 19, '2', 1, '2019-07-06 20:59:00', '2019-07-06 20:59:00'),
(24, 9, 107, 21, '3', 1, '2019-07-07 00:35:05', '2019-07-07 00:35:05'),
(25, 9, 112, 21, '3', 1, '2019-07-07 00:35:16', '2019-07-07 00:35:16'),
(26, 9, 125, 19, '3', 1, '2019-07-07 00:35:40', '2019-07-07 00:35:40'),
(27, 9, 131, 18, '2', 1, '2019-07-07 02:04:54', '2019-07-07 02:04:54'),
(28, 13, 137, 21, '3', 1, '2019-07-08 02:28:10', '2019-07-08 02:28:10'),
(29, 9, 100, 1, '4', 1, '2019-07-28 03:21:33', '2019-07-28 03:21:33'),
(30, 9, 26, 2, '4', 1, '2019-07-28 03:21:43', '2019-07-28 03:21:43'),
(31, 9, 138, 18, '3', 1, '2019-07-28 03:23:11', '2019-07-28 03:23:11'),
(32, 9, 103, 19, '3', 1, '2019-07-28 03:23:25', '2019-07-28 03:23:25'),
(33, 11, 89, 18, '3', 1, '2019-08-03 08:45:44', '2019-08-03 08:45:44'),
(34, 11, 90, 18, '2', 1, '2019-08-03 08:45:55', '2019-08-03 08:45:55'),
(35, 11, 92, 3, '5', 1, '2019-08-03 08:46:15', '2019-08-03 08:46:15'),
(36, 11, 95, 18, '3', 1, '2019-08-03 08:46:29', '2019-08-03 08:46:29'),
(37, 11, 96, 18, '3', 1, '2019-08-03 08:46:40', '2019-08-03 08:46:40'),
(38, 11, 102, 19, '3', 1, '2019-08-03 08:46:52', '2019-08-03 08:46:52'),
(39, 11, 107, 21, '3', 1, '2019-08-03 08:47:22', '2019-08-03 08:47:22'),
(40, 11, 112, 21, '3', 1, '2019-08-03 08:47:36', '2019-08-03 08:47:36'),
(41, 11, 125, 18, '1', 1, '2019-08-03 08:50:36', '2019-08-03 08:50:36'),
(42, 12, 91, 21, '2', 1, '2019-08-09 10:00:02', '2019-08-09 10:00:02'),
(43, 35, 91, 15, '7', 1, '2019-08-10 06:07:20', '2019-08-10 06:07:20'),
(44, 35, 90, 18, '5', 1, '2019-08-10 06:07:37', '2019-08-10 06:07:37'),
(45, 35, 137, 1, '3', 1, '2019-08-10 06:07:55', '2019-08-10 06:07:55'),
(46, 35, 89, 3, '4', 1, '2019-08-10 06:08:30', '2019-08-10 06:08:30'),
(47, 35, 92, 19, '8', 1, '2019-08-10 06:08:43', '2019-08-10 06:08:43'),
(48, 35, 145, 14, '3', 1, '2019-08-10 06:09:02', '2019-08-10 06:09:02'),
(49, 35, 26, 13, '2', 1, '2019-08-10 06:22:03', '2019-08-10 06:22:03'),
(50, 35, 95, 16, '7', 1, '2019-08-10 06:22:15', '2019-08-10 06:22:15'),
(51, 35, 96, 20, '5', 1, '2019-08-10 06:22:25', '2019-08-10 06:22:25'),
(52, 35, 98, 23, '3', 1, '2019-08-10 06:22:34', '2019-08-10 06:22:34'),
(53, 35, 99, 10, '7', 1, '2019-08-10 06:22:48', '2019-08-10 06:22:48'),
(54, 35, 141, 5, '8', 1, '2019-08-10 06:22:56', '2019-08-10 06:22:56'),
(55, 35, 100, 3, '4', 1, '2019-08-10 06:23:05', '2019-08-10 06:23:05'),
(56, 35, 101, 14, '2', 1, '2019-08-10 06:23:20', '2019-08-10 06:23:20'),
(57, 35, 102, 12, '6', 1, '2019-08-10 06:23:49', '2019-08-10 06:23:49'),
(58, 35, 103, 21, '7', 1, '2019-08-10 06:24:13', '2019-08-10 06:24:13'),
(59, 35, 138, 22, '4', 1, '2019-08-10 06:24:45', '2019-08-10 06:24:45'),
(60, 35, 152, 21, '6', 1, '2019-08-10 06:25:01', '2019-08-10 06:25:01'),
(61, 35, 155, 20, '5', 1, '2019-08-10 06:25:22', '2019-08-10 06:25:22'),
(62, 34, 89, 2, '3', 1, '2019-08-10 06:26:58', '2019-08-10 06:26:58'),
(63, 34, 90, 15, '5', 1, '2019-08-10 06:27:07', '2019-08-10 06:27:07'),
(64, 34, 137, 1, '8', 1, '2019-08-10 06:27:26', '2019-08-10 06:27:26'),
(65, 34, 91, 3, '5', 1, '2019-08-10 06:27:38', '2019-08-10 06:27:38'),
(66, 34, 92, 23, '6', 1, '2019-08-10 06:27:59', '2019-08-10 06:27:59'),
(67, 34, 93, 14, '8', 1, '2019-08-10 06:28:10', '2019-08-10 06:28:10'),
(68, 34, 94, 14, '4', 1, '2019-08-10 06:28:18', '2019-08-10 06:28:18'),
(69, 34, 22, 17, '2', 1, '2019-08-10 06:28:43', '2019-08-10 06:28:43'),
(70, 34, 95, 5, '7', 1, '2019-08-10 06:28:55', '2019-08-10 06:28:55'),
(71, 34, 96, 13, '5', 1, '2019-08-10 06:29:07', '2019-08-10 06:29:07'),
(72, 34, 102, 19, '8', 1, '2019-08-10 06:29:32', '2019-08-10 06:29:32'),
(73, 34, 103, 5, '6', 1, '2019-08-10 06:29:44', '2019-08-10 06:29:44'),
(74, 34, 138, 21, '3', 1, '2019-08-10 06:30:00', '2019-08-10 06:30:00'),
(75, 34, 107, 22, '2', 1, '2019-08-10 06:30:20', '2019-08-10 06:30:20'),
(76, 34, 112, 1, '5', 1, '2019-08-10 06:31:02', '2019-08-10 06:31:02'),
(77, 34, 125, 19, '4', 1, '2019-08-10 06:31:19', '2019-08-10 06:31:19'),
(78, 33, 89, 2, '6', 1, '2019-08-10 06:31:44', '2019-08-10 06:31:44'),
(79, 33, 90, 15, '5', 1, '2019-08-10 06:32:09', '2019-08-10 06:32:09'),
(80, 33, 137, 1, '3', 1, '2019-08-10 06:32:18', '2019-08-10 06:32:18'),
(81, 33, 91, 22, '6', 1, '2019-08-10 06:32:37', '2019-08-10 06:32:37'),
(82, 33, 92, 23, '3', 1, '2019-08-10 06:32:52', '2019-08-10 06:32:52'),
(83, 33, 93, 14, '5', 1, '2019-08-10 06:33:05', '2019-08-10 06:33:05'),
(84, 33, 95, 18, '7', 1, '2019-08-10 06:34:20', '2019-08-10 06:34:20'),
(85, 33, 96, 20, '9', 1, '2019-08-10 06:34:35', '2019-08-10 06:34:35'),
(86, 33, 102, 15, '7', 1, '2019-08-10 06:34:52', '2019-08-10 06:34:52'),
(87, 33, 103, 13, '8', 1, '2019-08-10 06:35:03', '2019-08-10 06:35:03'),
(88, 33, 107, 4, '4', 1, '2019-08-10 06:35:31', '2019-08-10 06:35:31'),
(89, 33, 112, 1, '2', 1, '2019-08-10 06:35:56', '2019-08-10 06:35:56'),
(90, 33, 125, 1, '2', 1, '2019-08-10 06:36:10', '2019-08-10 06:36:10'),
(91, 32, 89, 1, '6', 1, '2019-08-10 06:36:56', '2019-08-10 06:36:56'),
(92, 32, 90, 5, '7', 1, '2019-08-10 06:37:04', '2019-08-10 06:37:04'),
(93, 32, 137, 5, '8', 1, '2019-08-10 06:37:29', '2019-08-10 06:37:29'),
(94, 32, 92, 23, '7', 1, '2019-08-10 06:37:52', '2019-08-10 06:37:52'),
(95, 32, 95, 18, '8', 1, '2019-08-10 06:38:04', '2019-08-10 06:38:04'),
(96, 32, 96, 12, '5', 1, '2019-08-10 06:38:14', '2019-08-10 06:38:14'),
(97, 32, 102, 13, '6', 1, '2019-08-10 06:38:41', '2019-08-10 06:38:41'),
(98, 32, 103, 15, '6', 1, '2019-08-10 06:39:58', '2019-08-10 06:39:58'),
(99, 32, 138, 15, '4', 1, '2019-08-10 06:40:14', '2019-08-10 06:40:14'),
(100, 32, 107, 1, '2', 1, '2019-08-10 06:40:24', '2019-08-10 06:40:24'),
(101, 32, 112, 3, '3', 1, '2019-08-10 06:40:45', '2019-08-10 06:40:45'),
(102, 32, 125, 19, '5', 1, '2019-08-10 06:41:10', '2019-08-10 06:41:10'),
(103, 31, 91, 3, '4', 1, '2019-08-10 06:42:09', '2019-08-10 06:42:09'),
(104, 31, 90, 18, '6', 1, '2019-08-10 06:42:24', '2019-08-10 06:42:24'),
(105, 31, 137, 1, '5', 1, '2019-08-10 06:42:33', '2019-08-10 06:42:33'),
(106, 31, 89, 22, '3', 1, '2019-08-10 06:42:43', '2019-08-10 06:42:43'),
(107, 31, 92, 23, '6', 1, '2019-08-10 06:42:52', '2019-08-10 06:42:52'),
(108, 31, 145, 4, '4', 1, '2019-08-10 06:43:04', '2019-08-10 06:43:04'),
(109, 31, 95, 12, '5', 1, '2019-08-10 06:43:17', '2019-08-10 06:43:17'),
(110, 31, 96, 20, '4', 1, '2019-08-10 06:43:39', '2019-08-10 06:43:39'),
(111, 31, 102, 18, '7', 1, '2019-08-10 06:43:55', '2019-08-10 06:43:55'),
(112, 31, 103, 18, '8', 1, '2019-08-10 06:44:06', '2019-08-10 06:44:06'),
(113, 31, 152, 22, '5', 1, '2019-08-10 06:44:41', '2019-08-10 06:44:41'),
(114, 31, 155, 1, '5', 1, '2019-08-10 06:44:58', '2019-08-10 06:44:58'),
(115, 29, 89, 23, '4', 1, '2019-08-10 06:46:04', '2019-08-10 06:46:04'),
(116, 29, 90, 18, '6', 1, '2019-08-10 06:46:12', '2019-08-10 06:46:12'),
(117, 29, 137, 1, '5', 1, '2019-08-10 06:46:21', '2019-08-10 06:46:21'),
(118, 29, 92, 23, '4', 1, '2019-08-10 06:46:54', '2019-08-10 06:46:54'),
(119, 29, 95, 18, '7', 1, '2019-08-10 06:47:06', '2019-08-10 06:47:06'),
(120, 29, 96, 5, '3', 1, '2019-08-10 06:47:18', '2019-08-10 06:47:18'),
(121, 29, 102, 13, '5', 1, '2019-08-10 06:47:33', '2019-08-10 06:47:33'),
(122, 29, 103, 15, '4', 1, '2019-08-10 06:47:54', '2019-08-10 06:47:54'),
(123, 29, 138, 19, '5', 1, '2019-08-10 06:48:24', '2019-08-10 06:48:24'),
(124, 29, 107, 22, '4', 1, '2019-08-10 06:48:46', '2019-08-10 06:48:46'),
(125, 29, 112, 22, '4', 1, '2019-08-10 06:49:08', '2019-08-10 06:49:08'),
(126, 30, 90, 18, '5', 1, '2019-08-10 06:52:55', '2019-08-10 06:52:55'),
(127, 30, 137, 1, '3', 1, '2019-08-10 06:53:03', '2019-08-10 06:53:03'),
(128, 30, 89, 12, '5', 1, '2019-08-10 06:53:12', '2019-08-10 06:53:12'),
(129, 30, 92, 23, '2', 1, '2019-08-10 06:53:20', '2019-08-10 06:53:20'),
(130, 30, 145, 5, '3', 1, '2019-08-10 06:53:30', '2019-08-10 06:53:30'),
(131, 30, 95, 18, '7', 1, '2019-08-10 06:53:41', '2019-08-10 06:53:41'),
(132, 30, 96, 20, '5', 1, '2019-08-10 06:53:59', '2019-08-10 06:53:59'),
(133, 30, 102, 15, '6', 1, '2019-08-10 06:54:25', '2019-08-10 06:54:25'),
(134, 30, 103, 22, '8', 1, '2019-08-10 06:54:39', '2019-08-10 06:54:39'),
(135, 30, 138, 21, '5', 1, '2019-08-10 06:54:55', '2019-08-10 06:54:55'),
(136, 28, 89, 21, '5', 1, '2019-08-10 07:01:02', '2019-08-10 07:01:02'),
(137, 28, 90, 18, '7', 1, '2019-08-10 07:01:15', '2019-08-10 07:01:15'),
(138, 28, 137, 1, '5', 1, '2019-08-10 07:01:23', '2019-08-10 07:01:23'),
(139, 28, 92, 23, '6', 1, '2019-08-10 07:01:33', '2019-08-10 07:01:33'),
(140, 28, 93, 2, '7', 1, '2019-08-10 07:01:46', '2019-08-10 07:01:46'),
(141, 28, 94, 4, '3', 1, '2019-08-10 07:02:03', '2019-08-10 07:02:03'),
(142, 28, 22, 4, '2', 1, '2019-08-10 07:02:13', '2019-08-10 07:02:13'),
(143, 28, 95, 20, '6', 1, '2019-08-10 07:02:32', '2019-08-10 07:02:32'),
(144, 28, 96, 13, '5', 1, '2019-08-10 07:02:53', '2019-08-10 07:02:53'),
(145, 28, 102, 5, '6', 1, '2019-08-10 07:03:10', '2019-08-10 07:03:10'),
(146, 28, 103, 18, '8', 1, '2019-08-10 07:03:22', '2019-08-10 07:03:22'),
(147, 28, 138, 22, '4', 1, '2019-08-10 07:03:33', '2019-08-10 07:03:33'),
(148, 28, 107, 21, '2', 1, '2019-08-10 07:03:43', '2019-08-10 07:03:43'),
(149, 28, 112, 2, '3', 1, '2019-08-10 07:04:14', '2019-08-10 07:04:14'),
(150, 28, 125, 2, '2', 1, '2019-08-10 07:04:45', '2019-08-10 07:04:45'),
(151, 26, 90, 19, '6', 1, '2019-08-10 07:05:55', '2019-08-10 07:05:55'),
(152, 26, 89, 21, '2', 1, '2019-08-10 07:06:07', '2019-08-10 07:06:07'),
(153, 26, 92, 23, '5', 1, '2019-08-10 07:06:21', '2019-08-10 07:06:21'),
(154, 26, 145, 2, '4', 1, '2019-08-10 16:13:54', '2019-08-10 16:13:54'),
(155, 26, 95, 18, '6', 1, '2019-08-10 16:14:07', '2019-08-10 16:14:07'),
(156, 26, 96, 15, '8', 1, '2019-08-10 16:14:18', '2019-08-10 16:14:18'),
(157, 26, 102, 16, '5', 1, '2019-08-10 16:14:36', '2019-08-10 16:14:36'),
(158, 26, 103, 22, '7', 1, '2019-08-10 16:14:47', '2019-08-10 16:14:47'),
(159, 26, 143, 21, '3', 1, '2019-08-10 16:14:59', '2019-08-10 16:14:59'),
(160, 26, 138, 1, '6', 1, '2019-08-10 16:15:49', '2019-08-10 16:15:49'),
(161, 26, 152, 3, '6', 1, '2019-08-10 16:16:02', '2019-08-10 16:16:02'),
(162, 26, 155, 20, '6', 1, '2019-08-10 16:16:17', '2019-08-10 16:16:17'),
(163, 25, 89, 22, '3', 1, '2019-08-10 16:16:42', '2019-08-10 16:16:42'),
(164, 25, 90, 18, '6', 1, '2019-08-10 16:16:50', '2019-08-10 16:16:50'),
(165, 25, 137, 1, '4', 1, '2019-08-10 16:16:58', '2019-08-10 16:16:58'),
(166, 25, 92, 23, '7', 1, '2019-08-10 16:17:10', '2019-08-10 16:17:10'),
(167, 25, 93, 23, '5', 1, '2019-08-10 16:17:23', '2019-08-10 16:17:23'),
(168, 25, 94, 5, '3', 1, '2019-08-10 16:17:36', '2019-08-10 16:17:36'),
(169, 25, 95, 18, '6', 1, '2019-08-10 16:17:49', '2019-08-10 16:17:49'),
(170, 25, 96, 20, '4', 1, '2019-08-10 16:17:59', '2019-08-10 16:17:59'),
(171, 25, 102, 14, '5', 1, '2019-08-10 16:18:14', '2019-08-10 16:18:14'),
(172, 25, 103, 22, '6', 1, '2019-08-10 16:18:28', '2019-08-10 16:18:28'),
(173, 25, 138, 21, '3', 1, '2019-08-10 16:18:37', '2019-08-10 16:18:37'),
(174, 25, 107, 21, '4', 1, '2019-08-10 16:18:46', '2019-08-10 16:18:46'),
(175, 25, 112, 22, '3', 1, '2019-08-10 16:18:57', '2019-08-10 16:18:57'),
(176, 25, 125, 15, '5', 1, '2019-08-10 16:19:13', '2019-08-10 16:19:13'),
(177, 24, 89, 1, '5', 1, '2019-08-10 16:19:46', '2019-08-10 16:19:46'),
(178, 24, 90, 18, '7', 1, '2019-08-10 16:19:54', '2019-08-10 16:19:54'),
(179, 24, 137, 4, '5', 1, '2019-08-10 16:20:06', '2019-08-10 16:20:06'),
(180, 24, 92, 23, '6', 1, '2019-08-10 16:20:15', '2019-08-10 16:20:15'),
(181, 24, 93, 22, '5', 1, '2019-08-10 16:20:23', '2019-08-10 16:20:23'),
(182, 24, 95, 18, '8', 1, '2019-08-10 16:20:34', '2019-08-10 16:20:34'),
(183, 24, 96, 15, '5', 1, '2019-08-10 16:20:43', '2019-08-10 16:20:43'),
(184, 24, 102, 21, '6', 1, '2019-08-10 16:20:58', '2019-08-10 16:20:58'),
(185, 24, 103, 20, '8', 1, '2019-08-10 16:21:06', '2019-08-10 16:21:06'),
(186, 24, 138, 1, '5', 1, '2019-08-10 16:21:18', '2019-08-10 16:21:18'),
(187, 24, 107, 22, '6', 1, '2019-08-10 16:21:27', '2019-08-10 16:21:27'),
(188, 24, 125, 12, '5', 1, '2019-08-10 16:21:56', '2019-08-10 16:21:56'),
(189, 23, 90, 18, '5', 1, '2019-08-10 16:22:31', '2019-08-10 16:22:31'),
(190, 23, 137, 1, '4', 1, '2019-08-10 16:22:38', '2019-08-10 16:22:38'),
(191, 23, 89, 22, '6', 1, '2019-08-10 16:22:47', '2019-08-10 16:22:47'),
(192, 23, 92, 23, '7', 1, '2019-08-10 16:22:56', '2019-08-10 16:22:56'),
(193, 23, 145, 4, '3', 1, '2019-08-10 16:23:08', '2019-08-10 16:23:08'),
(194, 23, 95, 15, '4', 1, '2019-08-10 16:23:35', '2019-08-10 16:23:35'),
(195, 23, 96, 22, '7', 1, '2019-08-10 16:23:50', '2019-08-10 16:23:50'),
(196, 23, 102, 20, '5', 1, '2019-08-10 16:24:01', '2019-08-10 16:24:01'),
(197, 23, 103, 18, '6', 1, '2019-08-10 16:24:09', '2019-08-10 16:24:09'),
(198, 23, 138, 18, '3', 1, '2019-08-10 16:24:24', '2019-08-10 16:24:24'),
(199, 22, 90, 15, '6', 1, '2019-08-10 16:25:04', '2019-08-10 16:25:04'),
(200, 22, 137, 1, '3', 1, '2019-08-10 16:25:15', '2019-08-10 16:25:15'),
(201, 22, 89, 3, '4', 1, '2019-08-10 16:25:32', '2019-08-10 16:25:32'),
(202, 22, 92, 23, '5', 1, '2019-08-10 16:25:39', '2019-08-10 16:25:39'),
(203, 22, 145, 5, '5', 1, '2019-08-10 16:25:50', '2019-08-10 16:25:50'),
(204, 22, 95, 18, '4', 1, '2019-08-10 16:25:59', '2019-08-10 16:25:59'),
(205, 22, 96, 21, '3', 1, '2019-08-10 16:26:08', '2019-08-10 16:26:08'),
(206, 22, 102, 21, '5', 1, '2019-08-10 16:26:18', '2019-08-10 16:26:18'),
(207, 22, 103, 21, '7', 1, '2019-08-10 16:26:25', '2019-08-10 16:26:25'),
(208, 22, 138, 22, '5', 1, '2019-08-10 16:27:12', '2019-08-10 16:27:12'),
(209, 22, 152, 13, '7', 1, '2019-08-10 16:27:31', '2019-08-10 16:27:31'),
(210, 22, 155, 20, '8', 1, '2019-08-10 16:27:40', '2019-08-10 16:27:40'),
(211, 21, 90, 18, '5', 1, '2019-08-10 16:28:05', '2019-08-10 16:28:05'),
(212, 21, 137, 1, '3', 1, '2019-08-10 16:28:13', '2019-08-10 16:28:13'),
(213, 21, 89, 22, '4', 1, '2019-08-10 16:28:22', '2019-08-10 16:28:22'),
(214, 21, 92, 23, '5', 1, '2019-08-10 16:28:30', '2019-08-10 16:28:30'),
(215, 21, 95, 15, '7', 1, '2019-08-10 16:28:40', '2019-08-10 16:28:40'),
(216, 21, 96, 22, '5', 1, '2019-08-10 16:28:48', '2019-08-10 16:28:48'),
(217, 21, 102, 21, '4', 1, '2019-08-10 16:28:57', '2019-08-10 16:28:57'),
(218, 21, 103, 18, '8', 1, '2019-08-10 16:29:05', '2019-08-10 16:29:05'),
(219, 21, 138, 1, '5', 1, '2019-08-10 16:29:26', '2019-08-10 16:29:26'),
(220, 21, 152, 3, '6', 1, '2019-08-10 16:29:36', '2019-08-10 16:29:36'),
(221, 21, 155, 13, '3', 1, '2019-08-10 16:29:48', '2019-08-10 16:29:48'),
(222, 20, 90, 18, '7', 1, '2019-08-10 16:30:17', '2019-08-10 16:30:17'),
(223, 20, 137, 1, '4', 1, '2019-08-10 16:30:23', '2019-08-10 16:30:23'),
(224, 20, 89, 22, '3', 1, '2019-08-10 16:30:31', '2019-08-10 16:30:31'),
(225, 20, 92, 23, '6', 1, '2019-08-10 16:30:38', '2019-08-10 16:30:38'),
(226, 20, 145, 5, '3', 1, '2019-08-10 16:30:45', '2019-08-10 16:30:45'),
(227, 20, 95, 15, '5', 1, '2019-08-10 16:30:57', '2019-08-10 16:30:57'),
(228, 20, 96, 19, '6', 1, '2019-08-10 16:31:10', '2019-08-10 16:31:10'),
(229, 20, 102, 21, '7', 1, '2019-08-10 16:31:23', '2019-08-10 16:31:23'),
(230, 20, 103, 20, '4', 1, '2019-08-10 16:31:32', '2019-08-10 16:31:32'),
(231, 20, 138, 1, '5', 1, '2019-08-10 16:31:44', '2019-08-10 16:31:44'),
(232, 20, 152, 21, '4', 1, '2019-08-10 16:31:56', '2019-08-10 16:31:56'),
(233, 20, 155, 20, '7', 1, '2019-08-10 16:32:07', '2019-08-10 16:32:07'),
(234, 19, 89, 22, '7', 1, '2019-08-10 16:32:36', '2019-08-10 16:32:36'),
(235, 19, 90, 18, '8', 1, '2019-08-10 16:32:44', '2019-08-10 16:32:44'),
(236, 19, 137, 1, '4', 1, '2019-08-10 16:32:51', '2019-08-10 16:32:51'),
(237, 19, 92, 23, '5', 1, '2019-08-10 16:32:57', '2019-08-10 16:32:57'),
(238, 19, 93, 1, '6', 1, '2019-08-10 16:33:06', '2019-08-10 16:33:06'),
(239, 19, 95, 15, '7', 1, '2019-08-10 16:33:16', '2019-08-10 16:33:16'),
(240, 19, 96, 22, '4', 1, '2019-08-10 16:33:24', '2019-08-10 16:33:24'),
(241, 19, 102, 21, '5', 1, '2019-08-10 16:33:34', '2019-08-10 16:33:34'),
(242, 19, 103, 18, '8', 1, '2019-08-10 16:33:43', '2019-08-10 16:33:43'),
(243, 19, 138, 1, '6', 1, '2019-08-10 16:33:52', '2019-08-10 16:33:52'),
(244, 19, 107, 21, '5', 1, '2019-08-10 16:33:59', '2019-08-10 16:33:59'),
(245, 18, 89, 1, '5', 1, '2019-08-10 16:35:38', '2019-08-10 16:35:38'),
(246, 18, 90, 18, '7', 1, '2019-08-10 16:35:46', '2019-08-10 16:35:46'),
(247, 18, 137, 22, '3', 1, '2019-08-10 16:35:56', '2019-08-10 16:35:56'),
(248, 18, 92, 23, '7', 1, '2019-08-10 16:36:05', '2019-08-10 16:36:05'),
(249, 18, 95, 15, '4', 1, '2019-08-10 16:36:14', '2019-08-10 16:36:14'),
(250, 18, 96, 22, '6', 1, '2019-08-10 16:36:27', '2019-08-10 16:36:27'),
(251, 18, 102, 21, '5', 1, '2019-08-10 16:38:14', '2019-08-10 16:38:14'),
(252, 18, 103, 18, '6', 1, '2019-08-10 16:38:26', '2019-08-10 16:38:26'),
(253, 18, 138, 1, '7', 1, '2019-08-10 16:38:42', '2019-08-10 16:38:42'),
(254, 17, 90, 18, '7', 1, '2019-08-10 16:39:17', '2019-08-10 16:39:17'),
(255, 17, 137, 1, '4', 1, '2019-08-10 16:39:23', '2019-08-10 16:39:23'),
(256, 17, 89, 22, '6', 1, '2019-08-10 16:39:30', '2019-08-10 16:39:30'),
(257, 17, 92, 23, '7', 1, '2019-08-10 16:39:37', '2019-08-10 16:39:37'),
(258, 17, 145, 5, '4', 1, '2019-08-10 16:39:45', '2019-08-10 16:39:45'),
(259, 17, 95, 15, '5', 1, '2019-08-10 16:39:53', '2019-08-10 16:39:53'),
(260, 17, 96, 20, '6', 1, '2019-08-10 16:40:04', '2019-08-10 16:40:04'),
(261, 17, 102, 3, '7', 1, '2019-08-10 16:40:26', '2019-08-10 16:40:26'),
(262, 17, 103, 18, '8', 1, '2019-08-10 16:40:36', '2019-08-10 16:40:36'),
(263, 17, 138, 1, '4', 1, '2019-08-10 16:40:52', '2019-08-10 16:40:52'),
(264, 17, 152, 15, '5', 1, '2019-08-10 16:41:03', '2019-08-10 16:41:03'),
(265, 17, 155, 15, '3', 1, '2019-08-10 16:41:17', '2019-08-10 16:41:17'),
(266, 16, 89, 1, '4', 1, '2019-08-10 16:41:39', '2019-08-10 16:41:39'),
(267, 16, 90, 18, '5', 1, '2019-08-10 16:41:45', '2019-08-10 16:41:45'),
(268, 16, 137, 1, '4', 1, '2019-08-10 16:42:18', '2019-08-10 16:42:18'),
(269, 16, 92, 23, '4', 1, '2019-08-10 16:42:25', '2019-08-10 16:42:25'),
(270, 16, 95, 15, '5', 1, '2019-08-10 16:42:33', '2019-08-10 16:42:33'),
(271, 16, 96, 1, '6', 1, '2019-08-10 16:43:11', '2019-08-10 16:43:11'),
(272, 16, 102, 15, '7', 1, '2019-08-10 16:43:31', '2019-08-10 16:43:31'),
(273, 16, 103, 18, '7', 1, '2019-08-10 16:43:43', '2019-08-10 16:43:43'),
(274, 16, 138, 21, '7', 1, '2019-08-10 16:43:49', '2019-08-10 16:43:49'),
(275, 16, 107, 22, '3', 1, '2019-08-10 16:44:05', '2019-08-10 16:44:05'),
(276, 10, 89, 23, '2', 1, '2019-08-11 03:28:37', '2019-08-11 03:28:37'),
(277, 10, 90, 18, '4', 1, '2019-08-11 03:29:03', '2019-08-11 03:29:03'),
(278, 10, 92, 2, '4', 1, '2019-08-11 03:29:31', '2019-08-11 03:29:31'),
(279, 10, 95, 18, '5', 1, '2019-08-11 03:29:45', '2019-08-11 03:29:45'),
(280, 10, 96, 18, '3', 1, '2019-08-11 03:29:56', '2019-08-11 03:29:56'),
(281, 10, 102, 22, '3', 1, '2019-08-11 03:30:29', '2019-08-11 03:30:29'),
(282, 10, 107, 22, '4', 1, '2019-08-11 03:30:59', '2019-08-11 03:30:59'),
(283, 10, 112, 22, '4', 1, '2019-08-11 03:31:06', '2019-08-11 03:31:06'),
(284, 10, 125, 18, '4', 1, '2019-08-11 03:31:21', '2019-08-11 03:31:21'),
(285, 16, 112, 21, '2', 1, '2019-08-11 03:42:54', '2019-08-11 03:42:54'),
(286, 16, 125, 20, '2', 1, '2019-08-11 03:43:08', '2019-08-11 03:43:08'),
(287, 13, 92, 23, '2', 1, '2019-08-11 05:23:19', '2019-08-11 05:23:19'),
(288, 13, 95, 18, '2', 1, '2019-08-11 05:23:28', '2019-08-11 05:23:28'),
(289, 13, 96, 18, '2', 1, '2019-08-11 05:23:34', '2019-08-11 05:23:34'),
(290, 13, 102, 18, '4', 1, '2019-08-11 05:23:54', '2019-08-11 05:23:54'),
(291, 13, 107, 18, '2', 1, '2019-08-11 05:24:08', '2019-08-11 05:24:08'),
(292, 13, 112, 21, '6', 1, '2019-08-11 05:24:21', '2019-08-11 05:24:21'),
(293, 13, 125, 2, '2', 1, '2019-08-11 05:24:36', '2019-08-11 05:24:36'),
(294, 15, 89, 18, '2', 1, '2019-08-11 05:30:35', '2019-08-11 05:30:35'),
(295, 15, 90, 23, '2', 1, '2019-08-11 05:30:52', '2019-08-11 05:30:52'),
(296, 15, 92, 23, '2', 1, '2019-08-11 05:30:58', '2019-08-11 05:30:58'),
(297, 15, 95, 18, '2', 1, '2019-08-11 05:31:05', '2019-08-11 05:31:05'),
(298, 15, 96, 21, '2', 1, '2019-08-11 05:31:11', '2019-08-11 05:31:11'),
(299, 15, 102, 18, '2', 1, '2019-08-11 05:31:26', '2019-08-11 05:31:26'),
(300, 15, 107, 21, '4', 1, '2019-08-11 05:31:36', '2019-08-11 05:31:36'),
(301, 15, 112, 21, '4', 1, '2019-08-11 05:31:45', '2019-08-11 05:31:45'),
(302, 15, 125, 18, '3', 1, '2019-08-11 05:32:01', '2019-08-11 05:32:01'),
(303, 18, 112, 21, '4', 1, '2019-08-11 05:41:41', '2019-08-11 05:41:41'),
(304, 18, 125, 21, '4', 1, '2019-08-11 05:41:51', '2019-08-11 05:41:51'),
(305, 18, 107, 21, '5', 1, '2019-08-11 05:43:05', '2019-08-11 05:43:05'),
(306, 19, 112, 21, '3', 1, '2019-08-11 05:48:31', '2019-08-11 05:48:31'),
(307, 19, 125, 21, '3', 1, '2019-08-11 05:48:43', '2019-08-11 05:48:43'),
(308, 17, 107, 21, '5', 1, '2019-08-11 06:09:26', '2019-08-11 06:09:26'),
(309, 17, 112, 21, '5', 1, '2019-08-11 06:09:33', '2019-08-11 06:09:33'),
(310, 17, 125, 21, '5', 1, '2019-08-11 06:09:42', '2019-08-11 06:09:42'),
(311, 20, 107, 21, '3', 1, '2019-08-11 06:18:15', '2019-08-11 06:18:15'),
(312, 20, 112, 21, '3', 1, '2019-08-11 06:18:32', '2019-08-11 06:18:32'),
(313, 20, 125, 21, '3', 1, '2019-08-11 06:18:46', '2019-08-11 06:18:46'),
(314, 21, 107, 21, '2', 1, '2019-08-11 06:24:31', '2019-08-11 06:24:31'),
(315, 21, 112, 21, '2', 1, '2019-08-11 06:24:36', '2019-08-11 06:24:36'),
(316, 21, 125, 21, '2', 1, '2019-08-11 06:24:44', '2019-08-11 06:24:44'),
(317, 23, 107, 21, '4', 1, '2019-08-11 06:29:45', '2019-08-11 06:29:45'),
(318, 23, 112, 21, '4', 1, '2019-08-11 06:29:54', '2019-08-11 06:29:54'),
(319, 23, 125, 21, '4', 1, '2019-08-11 06:30:03', '2019-08-11 06:30:03'),
(320, 35, 107, 21, '2', 1, '2019-08-11 06:44:24', '2019-08-11 06:44:24'),
(321, 35, 112, 21, '2', 1, '2019-08-11 06:44:28', '2019-08-11 06:44:28'),
(322, 35, 125, 21, '2', 1, '2019-08-11 06:44:34', '2019-08-11 06:44:34'),
(323, 29, 125, 21, '3', 1, '2019-08-11 07:03:35', '2019-08-11 07:03:35'),
(324, 24, 112, 21, '4', 1, '2019-08-11 07:25:06', '2019-08-11 07:25:06'),
(325, 36, 89, 23, '3', 1, '2019-09-15 04:30:00', '2019-09-15 04:30:00'),
(326, 36, 90, 5, '6', 1, '2019-09-15 04:30:30', '2019-09-15 04:30:30'),
(327, 36, 92, 18, '2', 1, '2019-09-15 04:30:40', '2019-09-15 04:30:40'),
(328, 36, 95, 16, '2', 1, '2019-09-15 04:30:51', '2019-09-15 04:30:51'),
(329, 36, 96, 16, '2', 1, '2019-09-15 04:31:16', '2019-09-15 04:31:16'),
(330, 36, 125, 1, '5', 1, '2019-09-15 04:31:42', '2019-09-15 04:31:42');

-- --------------------------------------------------------

--
-- Table structure for table `grade_values`
--

CREATE TABLE `grade_values` (
  `id` int(10) UNSIGNED NOT NULL,
  `value` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `is_passed` tinyint(1) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `grade_values`
--

INSERT INTO `grade_values` (`id`, `value`, `is_passed`) VALUES
(1, '1.00', 1),
(2, '1.25', 1),
(3, '1.50', 1),
(4, '1.75', 1),
(5, '2.00', 1),
(6, '2.25', 1),
(7, '2.50', 1),
(8, '2.75', 1),
(9, '3.00', 1),
(10, '5.00', 0),
(11, 'INC', 0);

-- --------------------------------------------------------

--
-- Table structure for table `image_objects`
--

CREATE TABLE `image_objects` (
  `id` int(11) NOT NULL,
  `description` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `path` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `width` int(11) NOT NULL,
  `height` int(11) NOT NULL,
  `size` int(11) NOT NULL,
  `ref_id` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `image_objects`
--

INSERT INTO `image_objects` (`id`, `description`, `path`, `width`, `height`, `size`, `ref_id`, `created_at`, `updated_at`) VALUES
(1, 'try lang', 'uploads/GNaPrxcWm80mIQdZZQCGLxp0d7CzAmeCc0GA7JY5.png', 150, 150, 1, '_1j3k9zizy', '2019-05-31 04:31:11', '2019-05-31 04:31:11'),
(2, 'coordinate plane', 'uploads/r7k37ixO7nsYloeW2xgDDa2WcR6srYVwBngRYi1i.png', 200, 200, 2, '_1j3k9zizy', '2019-05-31 04:37:20', '2019-05-31 04:37:20'),
(3, 'pnc logo', 'uploads/ne6ULUlo9euWHcaIUMxhVWWO3pyMMU2jMhTVzzhB.png', 300, 150, 4, '_agea212lk', '2019-05-31 04:46:42', '2019-05-31 05:58:13'),
(4, 'test', 'uploads/qKjWhHzapir2J8kzeqJXFfUyfNi5iIfCBcrisUC6.png', 200, 200, 2, '_agea212lk', '2019-05-31 05:58:58', '2019-05-31 05:58:58'),
(5, 'broken bulb', 'uploads/Gutq7dinMPUYgPaK8IUW0rjaS1XE501OiezWXQwG.png', 200, 200, 2, '_agea212lk', '2019-05-31 06:00:28', '2019-05-31 06:00:28'),
(6, 'test', 'uploads/kQrHNv5Y2koJyFk79un0PLQa9iCBoJCTwlT0qmDy.png', 150, 150, 1, '_unrpclqgl', '2019-06-05 21:31:53', '2019-06-05 23:28:36'),
(7, 'try', 'uploads/bSK46TqhM75QymBRJJ6PuVSFn9MPjPKdMZVONe46.jpeg', 300, 150, 4, '_unrpclqgl', '2019-06-05 23:27:22', '2019-06-05 23:27:22'),
(8, 'test', 'uploads/uz9e7VOOO3tYujfx4CAUitCFGR5pFNTQkxlON9JB.png', 200, 200, 2, '_e6npqn4wm', '2019-06-16 19:21:29', '2019-06-16 19:21:29'),
(9, 'test', 'uploads/8Y9w2B8gVdNe6wyhaDQBgBBteAL4zM6RbvaAcX0R.png', 200, 200, 2, '_u0qumyouz', '2019-06-18 22:32:55', '2019-06-18 22:32:55'),
(10, 'sasd', 'uploads/Xbn7um8k8V6MrO89WkAUkj7fhVZrcfx1AC6967pO.png', 200, 200, 2, '_6ihtyoioi', '2019-06-18 22:34:47', '2019-06-18 22:34:47'),
(11, 'xx', 'uploads/C8GpRlApjFSY53xAKcZzucj1oY2BAM2MJtB1OpYe.png', 200, 200, 2, '_aulyy27ko', '2019-06-18 22:42:06', '2019-06-18 22:42:06'),
(12, 'img', 'uploads/ip3IZpO8M3408DLQ1OozDqwjtpDpur9fFPZPlIZk.png', 270, 270, 3, '_ohn3wf8bx', '2019-06-25 16:12:42', '2019-06-25 16:16:44'),
(13, 'graph', 'uploads/B8BqjMA6QpYbkkVLYcFfJb40grqExziE8VYepq2A.png', 270, 270, 3, '_sjfox9bix', '2019-06-25 16:20:11', '2019-06-25 16:20:11'),
(14, 'graph of names', 'uploads/AWICvoByS7BaPqowipEbjgQ4VgHRoUiNiRhAT8dk.png', 300, 150, 4, '_fms2kphli', '2019-06-29 23:16:32', '2019-06-29 23:16:32'),
(15, 'graph shortest path', 'uploads/4Cje2cHCSQohIcfGAxg1qLBGTi3tUeLMA3IbbZjl.png', 300, 150, 4, '_7v48v35ad', '2019-06-29 23:21:15', '2019-06-29 23:21:15'),
(16, 'graph 1', 'uploads/0YuQmOttyLFlUHQlaF1qz0XaFHv3tK81aXFu9KWK.png', 350, 200, 5, '_b658znune', '2019-06-29 23:25:26', '2019-06-29 23:25:26'),
(17, 'table', 'uploads/UneZgTznN75W3rVudVtTkEYGs5I1CwowjW3sFAZJ.gif', 200, 200, 2, '_259pjadc3', '2019-06-30 00:49:30', '2019-06-30 00:49:30'),
(18, 'gate hash', 'uploads/If3QASA4QkTvwgFk8zErBT5oJ1ZoBZHdyV0d6mue.bmp', 450, 270, 6, '_ykl4l69p8', '2019-06-30 00:51:43', '2019-06-30 00:51:56'),
(19, 'heap graph', 'uploads/bUWJJaDtMHpr3LmqygaJecfsOm3MYbdpTMhi1FvF.gif', 450, 270, 6, '_72wu42saw', '2019-06-30 00:54:36', '2019-06-30 00:54:36'),
(20, 'projectile', 'uploads/mXsmw5sZpaae1B9lLojvthqpTQ9lqPJgguxHxLH9.png', 300, 150, 4, '_exir5sfe1', '2019-07-01 18:43:30', '2019-07-01 18:43:30'),
(21, 'comparing picture', 'uploads/zqmaqevbXOx4jk8AFIxy95HqPOg5Sy7UlkXv4aNp.png', 300, 150, 4, '_syswp5cp3', '2019-07-01 18:47:25', '2019-07-01 18:50:09'),
(22, 'img1', 'uploads/MYpfYGJo93eMWxPVag4ii0jWIwamFw8EKp4yFlbj.png', 300, 150, 4, '_1m6y209q4', '2019-07-01 18:54:20', '2019-07-01 18:54:20'),
(23, 'choice a', 'uploads/IyLDJJaUUQ0aIZOMyEjh4JO72W4HpXtPj2CfMKZL.png', 150, 150, 1, '_1m6y209q4', '2019-07-01 18:56:19', '2019-07-01 18:58:30'),
(24, 'choice b', 'uploads/nVLwXww7AT2RBfzhH1tPQMxdLPF1iWuunHzErZRh.png', 150, 150, 1, '_1m6y209q4', '2019-07-01 18:56:33', '2019-07-01 18:58:37'),
(25, 'choice c', 'uploads/rDh656ehodyPQmn7CxxjGK2H29sx2bh6LDz9INfN.png', 150, 150, 1, '_1m6y209q4', '2019-07-01 18:56:45', '2019-07-01 18:58:44'),
(26, 'choice d', 'uploads/tBuCNpani0PgWIFN01ztVOAj4FS4CBDAiTW9J8lB.png', 150, 150, 1, '_1m6y209q4', '2019-07-01 18:57:01', '2019-07-01 18:58:49'),
(27, 'pic', 'uploads/PgCOEtvEENxNaqgGLMWLrysCTt8GwyXUqH8p2sz7.png', 200, 200, 2, '_6781uclej', '2019-07-01 19:01:12', '2019-07-01 19:01:12'),
(28, 'choice a', 'uploads/jkL1TWHhQQMAtCTbSz6HtJyZn8zhXmtgMQYX3Zpo.png', 150, 150, 1, '_6781uclej', '2019-07-01 19:02:27', '2019-07-01 19:02:33'),
(29, 'choice b', 'uploads/Cf9qY75IYjLpUVFWsICWK07cAwLtqRPDIO6JjLqT.png', 150, 150, 1, '_6781uclej', '2019-07-01 19:02:45', '2019-07-01 19:05:04'),
(30, 'choice c', 'uploads/5CGn3NoMP2AFTNnuWdi3jGe97XfkU7ydkF3PldTA.png', 150, 150, 1, '_6781uclej', '2019-07-01 19:02:59', '2019-07-01 19:05:10'),
(31, 'choice d', 'uploads/VNrzOvOE3LpeuWi9ciBQDVlGrXxObvbfnI3kfNS4.png', 150, 150, 1, '_6781uclej', '2019-07-01 19:03:12', '2019-07-01 19:05:15'),
(32, 'Venn Diagram', 'uploads/5iL0Nsol7VkygnPftlQm5guoA5NqiGISBGevRke8.jpeg', 300, 150, 4, '_z3a9lj8aw', '2019-08-25 05:09:30', '2019-08-25 05:09:30'),
(33, 'Venn Diagram', 'uploads/4noNY6PPol5iK33AoQUQRGCg2iTkKXZkcJiOPefb.jpeg', 300, 150, 4, '_aibi0q2py', '2019-08-25 05:12:06', '2019-08-25 05:12:06'),
(34, 'Venn Diagram', 'uploads/23B9WIeQ00wE4pw7nsRG6le8KJWkZ1jI9HG7nYv3.jpeg', 300, 150, 4, '_7fb2cc8zl', '2019-08-25 05:15:12', '2019-08-25 05:15:12'),
(35, 'venn Diagam', 'uploads/Fvn1XlUmFp16LuxzEQb5QcmtXwFc3zkukY4hFmqr.jpeg', 300, 150, 4, '_w9g41h4uc', '2019-08-25 05:17:36', '2019-08-25 05:17:36'),
(36, 'graphA', 'uploads/1uiij2mW6LoHduzO6vzTJN34dLZrfLYXFAUvNKSj.jpeg', 200, 200, 2, '_tzwzg7sj6', '2019-08-26 05:08:42', '2019-08-26 05:08:42'),
(37, 'graphB', 'uploads/QoCoYLV0LqPxySDmL5p8T7pauPXWsEhHcf5oPpDe.jpeg', 200, 200, 2, '_tzwzg7sj6', '2019-08-26 05:09:13', '2019-08-26 05:09:13'),
(38, 'graphC', 'uploads/NIrxReCLLGhoEXTKIMrrHA3FeSQHCUMLaMjRn6GS.jpeg', 200, 200, 2, '_tzwzg7sj6', '2019-08-26 05:09:46', '2019-08-26 05:09:46'),
(39, 'graphD', 'uploads/FAt0OJDlxSF4LG4H0IZZXmHQCLhv9LEbrcDj0AtY.jpeg', 200, 200, 2, '_tzwzg7sj6', '2019-08-26 05:10:13', '2019-08-26 05:10:13'),
(40, 'logarithm', 'uploads/7ZNvXs3AA8OYaSXqzIPYlBmZBVUcvHE4UXuyleGk.jpeg', 300, 150, 4, '_pksjfi4db', '2019-08-26 05:19:46', '2019-08-26 05:19:46'),
(41, 'logarithmA', 'uploads/156Hy19Uc085Zh8Hymnkyfe9h2GBAgfnecyrXV6a.jpeg', 150, 150, 1, '_pksjfi4db', '2019-08-26 05:23:03', '2019-08-26 05:23:03'),
(42, 'logarithmC', 'uploads/qni8jDzbLhQeML8jTI0xf31Iq9pNLrTt3WRE5Pj8.jpeg', 150, 150, 1, '_pksjfi4db', '2019-08-26 05:23:44', '2019-08-26 05:23:44'),
(43, 'logarithmD', 'uploads/r1JUpd3IUmoiE1L13wxvb0aLpkCpwEpcHekYaitn.jpeg', 150, 150, 1, '_pksjfi4db', '2019-08-26 05:24:13', '2019-08-26 05:24:13'),
(44, 'logA', 'uploads/X35Hbq8lbJ4jTvEuwsxfEbN3a89r3mOoQWMLS84A.jpeg', 300, 150, 4, '_uberjqh9v', '2019-08-26 05:27:04', '2019-08-26 05:27:04'),
(45, 'logA', 'uploads/Tyu6Q5VKp7SiX3x5lFEEnlnQwzSpV0xrXUfvXo4A.jpeg', 150, 150, 1, '_uberjqh9v', '2019-08-26 05:27:42', '2019-08-26 05:27:42'),
(46, 'logC', 'uploads/u8DjikrUFMauRQ3Cr2uTnudmj8pOf8UafUR0vAug.jpeg', 150, 150, 1, '_uberjqh9v', '2019-08-26 05:28:19', '2019-08-26 05:28:19'),
(47, 'logD', 'uploads/EkBHwS4BOS1gUhJDatcaQY8nKm6pJkqpdYzqakOX.jpeg', 150, 150, 1, '_uberjqh9v', '2019-08-26 05:28:42', '2019-08-26 05:28:42');

-- --------------------------------------------------------

--
-- Table structure for table `item_analyses`
--

CREATE TABLE `item_analyses` (
  `id` int(10) UNSIGNED NOT NULL,
  `exam_id` int(11) NOT NULL,
  `is_saved` tinyint(1) NOT NULL DEFAULT '0',
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `item_analyses`
--

INSERT INTO `item_analyses` (`id`, `exam_id`, `is_saved`, `created_at`, `updated_at`) VALUES
(1, 1, 0, '2019-09-03 02:32:42', '2019-09-03 02:32:42');

-- --------------------------------------------------------

--
-- Table structure for table `item_analysis_details`
--

CREATE TABLE `item_analysis_details` (
  `id` int(10) UNSIGNED NOT NULL,
  `item_analysis_id` int(11) NOT NULL,
  `test_question_id` int(11) NOT NULL,
  `is_resolved` tinyint(1) NOT NULL,
  `action_resolved_id` int(11) NOT NULL DEFAULT '0',
  `action_resolved` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `item_analysis_details`
--

INSERT INTO `item_analysis_details` (`id`, `item_analysis_id`, `test_question_id`, `is_resolved`, `action_resolved_id`, `action_resolved`, `created_at`, `updated_at`) VALUES
(1, 1, 219, 1, 2, 'Item\'s level of difficulty is changed from Easy to Average', '2019-09-03 02:32:42', '2019-09-12 11:31:03'),
(2, 1, 89, 1, 1, 'Item is retained', '2019-09-03 02:32:42', '2019-09-12 11:32:15'),
(3, 1, 68, 0, 0, '', '2019-09-03 02:32:43', '2019-09-03 02:32:43'),
(4, 1, 70, 0, 0, '', '2019-09-03 02:32:43', '2019-09-03 02:32:43'),
(5, 1, 82, 0, 0, '', '2019-09-03 02:32:43', '2019-09-03 02:32:43'),
(6, 1, 74, 0, 0, '', '2019-09-03 02:32:43', '2019-09-03 02:32:43'),
(7, 1, 220, 0, 0, '', '2019-09-03 02:32:43', '2019-09-03 02:32:43'),
(8, 1, 66, 0, 0, '', '2019-09-03 02:32:43', '2019-09-03 02:32:43'),
(9, 1, 77, 0, 0, '', '2019-09-03 02:32:43', '2019-09-03 02:32:43'),
(10, 1, 223, 0, 0, '', '2019-09-03 02:32:43', '2019-09-03 02:32:43'),
(11, 1, 225, 0, 0, '', '2019-09-03 02:32:43', '2019-09-03 02:32:43'),
(12, 1, 72, 0, 0, '', '2019-09-03 02:32:43', '2019-09-03 02:32:43'),
(13, 1, 76, 0, 0, '', '2019-09-03 02:32:43', '2019-09-03 02:32:43'),
(14, 1, 87, 0, 0, '', '2019-09-03 02:32:43', '2019-09-03 02:32:43'),
(15, 1, 90, 0, 0, '', '2019-09-03 02:32:44', '2019-09-03 02:32:44'),
(16, 1, 79, 0, 0, '', '2019-09-03 02:32:44', '2019-09-03 02:32:44'),
(17, 1, 78, 0, 0, '', '2019-09-03 02:32:44', '2019-09-03 02:32:44'),
(18, 1, 42, 0, 0, '', '2019-09-03 02:32:44', '2019-09-03 02:32:44'),
(19, 1, 38, 0, 0, '', '2019-09-03 02:32:44', '2019-09-03 02:32:44'),
(20, 1, 31, 0, 0, '', '2019-09-03 02:32:44', '2019-09-03 02:32:44'),
(21, 1, 32, 0, 0, '', '2019-09-03 02:32:44', '2019-09-03 02:32:44'),
(22, 1, 34, 0, 0, '', '2019-09-03 02:32:44', '2019-09-03 02:32:44'),
(23, 1, 40, 0, 0, '', '2019-09-03 02:32:44', '2019-09-03 02:32:44'),
(24, 1, 41, 0, 0, '', '2019-09-03 02:32:44', '2019-09-03 02:32:44'),
(25, 1, 39, 0, 0, '', '2019-09-03 02:32:44', '2019-09-03 02:32:44'),
(26, 1, 33, 0, 0, '', '2019-09-03 02:32:44', '2019-09-03 02:32:44'),
(27, 1, 51, 0, 0, '', '2019-09-03 02:32:44', '2019-09-03 02:32:44'),
(28, 1, 50, 0, 0, '', '2019-09-03 02:32:45', '2019-09-03 02:32:45'),
(29, 1, 48, 0, 0, '', '2019-09-03 02:32:45', '2019-09-03 02:32:45'),
(30, 1, 57, 0, 0, '', '2019-09-03 02:32:45', '2019-09-03 02:32:45'),
(31, 1, 61, 0, 0, '', '2019-09-03 02:32:45', '2019-09-03 02:32:45'),
(32, 1, 52, 0, 0, '', '2019-09-03 02:32:45', '2019-09-03 02:32:45'),
(33, 1, 58, 0, 0, '', '2019-09-03 02:32:45', '2019-09-03 02:32:45'),
(34, 1, 59, 0, 0, '', '2019-09-03 02:32:45', '2019-09-03 02:32:45'),
(35, 1, 285, 0, 0, '', '2019-09-03 02:32:45', '2019-09-03 02:32:45'),
(36, 1, 1, 0, 0, '', '2019-09-03 02:32:45', '2019-09-03 02:32:45'),
(37, 1, 92, 0, 0, '', '2019-09-03 02:32:45', '2019-09-03 02:32:45'),
(38, 1, 95, 0, 0, '', '2019-09-03 02:32:45', '2019-09-03 02:32:45'),
(39, 1, 93, 0, 0, '', '2019-09-03 02:32:46', '2019-09-03 02:32:46'),
(40, 1, 107, 0, 0, '', '2019-09-03 02:32:46', '2019-09-03 02:32:46'),
(41, 1, 99, 0, 0, '', '2019-09-03 02:32:46', '2019-09-03 02:32:46'),
(42, 1, 112, 0, 0, '', '2019-09-03 02:32:46', '2019-09-03 02:32:46'),
(43, 1, 289, 0, 0, '', '2019-09-03 02:32:46', '2019-09-03 02:32:46'),
(44, 1, 116, 0, 0, '', '2019-09-03 02:32:46', '2019-09-03 02:32:46'),
(45, 1, 114, 0, 0, '', '2019-09-03 02:32:46', '2019-09-03 02:32:46'),
(46, 1, 97, 0, 0, '', '2019-09-03 02:32:46', '2019-09-03 02:32:46'),
(47, 1, 111, 0, 0, '', '2019-09-03 02:32:46', '2019-09-03 02:32:46'),
(48, 1, 113, 0, 0, '', '2019-09-03 02:32:46', '2019-09-03 02:32:46'),
(49, 1, 286, 0, 0, '', '2019-09-03 02:32:46', '2019-09-03 02:32:46'),
(50, 1, 108, 0, 0, '', '2019-09-03 02:32:46', '2019-09-03 02:32:46'),
(51, 1, 104, 0, 0, '', '2019-09-03 02:32:47', '2019-09-03 02:32:47'),
(52, 1, 124, 0, 0, '', '2019-09-03 02:32:47', '2019-09-03 02:32:47'),
(53, 1, 122, 0, 0, '', '2019-09-03 02:32:47', '2019-09-03 02:32:47'),
(54, 1, 129, 0, 0, '', '2019-09-03 02:32:47', '2019-09-03 02:32:47'),
(55, 1, 121, 0, 0, '', '2019-09-03 02:32:47', '2019-09-03 02:32:47'),
(56, 1, 126, 0, 0, '', '2019-09-03 02:32:47', '2019-09-03 02:32:47'),
(57, 1, 119, 0, 0, '', '2019-09-03 02:32:47', '2019-09-03 02:32:47'),
(58, 1, 132, 0, 0, '', '2019-09-03 02:32:47', '2019-09-03 02:32:47'),
(59, 1, 131, 0, 0, '', '2019-09-03 02:32:47', '2019-09-03 02:32:47'),
(60, 1, 127, 0, 0, '', '2019-09-03 02:32:47', '2019-09-03 02:32:47'),
(61, 1, 136, 0, 0, '', '2019-09-03 02:32:47', '2019-09-03 02:32:47'),
(62, 1, 137, 0, 0, '', '2019-09-03 02:32:47', '2019-09-03 02:32:47'),
(63, 1, 140, 0, 0, '', '2019-09-03 02:32:48', '2019-09-03 02:32:48'),
(64, 1, 275, 0, 0, '', '2019-09-03 02:32:48', '2019-09-03 02:32:48'),
(65, 1, 138, 0, 0, '', '2019-09-03 02:32:48', '2019-09-03 02:32:48'),
(66, 1, 277, 0, 0, '', '2019-09-03 02:32:48', '2019-09-03 02:32:48'),
(67, 1, 283, 0, 0, '', '2019-09-03 02:32:48', '2019-09-03 02:32:48'),
(68, 1, 278, 0, 0, '', '2019-09-03 02:32:48', '2019-09-03 02:32:48'),
(69, 1, 155, 0, 0, '', '2019-09-03 02:32:48', '2019-09-03 02:32:48'),
(70, 1, 147, 0, 0, '', '2019-09-03 02:32:48', '2019-09-03 02:32:48'),
(71, 1, 144, 0, 0, '', '2019-09-03 02:32:48', '2019-09-03 02:32:48'),
(72, 1, 148, 0, 0, '', '2019-09-03 02:32:48', '2019-09-03 02:32:48'),
(73, 1, 151, 0, 0, '', '2019-09-03 02:32:48', '2019-09-03 02:32:48'),
(74, 1, 150, 0, 0, '', '2019-09-03 02:32:48', '2019-09-03 02:32:48'),
(75, 1, 156, 0, 0, '', '2019-09-03 02:32:48', '2019-09-03 02:32:48'),
(76, 1, 142, 0, 0, '', '2019-09-03 02:32:49', '2019-09-03 02:32:49'),
(77, 1, 143, 0, 0, '', '2019-09-03 02:32:49', '2019-09-03 02:32:49'),
(78, 1, 145, 0, 0, '', '2019-09-03 02:32:49', '2019-09-03 02:32:49'),
(79, 1, 162, 0, 0, '', '2019-09-03 02:32:49', '2019-09-03 02:32:49'),
(80, 1, 260, 0, 0, '', '2019-09-03 02:32:49', '2019-09-03 02:32:49'),
(81, 1, 149, 0, 0, '', '2019-09-03 02:32:49', '2019-09-03 02:32:49'),
(82, 1, 270, 0, 0, '', '2019-09-03 02:32:49', '2019-09-03 02:32:49'),
(83, 1, 160, 0, 0, '', '2019-09-03 02:32:49', '2019-09-03 02:32:49'),
(84, 1, 267, 0, 0, '', '2019-09-03 02:32:49', '2019-09-03 02:32:49'),
(85, 1, 211, 0, 0, '', '2019-09-03 02:32:49', '2019-09-03 02:32:49'),
(86, 1, 202, 0, 0, '', '2019-09-03 02:32:49', '2019-09-03 02:32:49'),
(87, 1, 203, 0, 0, '', '2019-09-03 02:32:49', '2019-09-03 02:32:49'),
(88, 1, 207, 0, 0, '', '2019-09-03 02:32:49', '2019-09-03 02:32:49'),
(89, 1, 214, 0, 0, '', '2019-09-03 02:32:49', '2019-09-03 02:32:49'),
(90, 1, 205, 0, 0, '', '2019-09-03 02:32:50', '2019-09-03 02:32:50'),
(91, 1, 215, 0, 0, '', '2019-09-03 02:32:50', '2019-09-03 02:32:50'),
(92, 1, 204, 0, 0, '', '2019-09-03 02:32:50', '2019-09-03 02:32:50'),
(93, 1, 212, 0, 0, '', '2019-09-03 02:32:50', '2019-09-03 02:32:50'),
(94, 1, 246, 0, 0, '', '2019-09-03 02:32:50', '2019-09-03 02:32:50'),
(95, 1, 244, 0, 0, '', '2019-09-03 02:32:50', '2019-09-03 02:32:50'),
(96, 1, 243, 0, 0, '', '2019-09-03 02:32:50', '2019-09-03 02:32:50'),
(97, 1, 248, 0, 0, '', '2019-09-03 02:32:50', '2019-09-03 02:32:50'),
(98, 1, 256, 0, 0, '', '2019-09-03 02:32:50', '2019-09-03 02:32:50'),
(99, 1, 252, 0, 0, '', '2019-09-03 02:32:50', '2019-09-03 02:32:50'),
(100, 1, 254, 0, 0, '', '2019-09-03 02:32:50', '2019-09-03 02:32:50');

-- --------------------------------------------------------

--
-- Table structure for table `item_analysis_detail_actions`
--

CREATE TABLE `item_analysis_detail_actions` (
  `id` int(10) UNSIGNED NOT NULL,
  `item_analysis_detail_id` int(11) NOT NULL,
  `recommended_action` int(11) NOT NULL,
  `is_selected` tinyint(1) NOT NULL DEFAULT '0',
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `item_analysis_detail_actions`
--

INSERT INTO `item_analysis_detail_actions` (`id`, `item_analysis_detail_id`, `recommended_action`, `is_selected`, `created_at`, `updated_at`) VALUES
(1, 1, 2, 0, '2019-09-03 02:32:42', '2019-09-03 02:32:42'),
(2, 2, 1, 0, '2019-09-03 02:32:42', '2019-09-03 02:32:42'),
(3, 3, 3, 0, '2019-09-03 02:32:43', '2019-09-03 02:32:43'),
(4, 4, 1, 0, '2019-09-03 02:32:43', '2019-09-03 02:32:43'),
(5, 5, 1, 0, '2019-09-03 02:32:43', '2019-09-03 02:32:43'),
(6, 6, 1, 0, '2019-09-03 02:32:43', '2019-09-03 02:32:43'),
(7, 7, 2, 0, '2019-09-03 02:32:43', '2019-09-03 02:32:43'),
(8, 8, 2, 0, '2019-09-03 02:32:43', '2019-09-03 02:32:43'),
(9, 9, 2, 0, '2019-09-03 02:32:43', '2019-09-03 02:32:43'),
(10, 10, 2, 0, '2019-09-03 02:32:43', '2019-09-03 02:32:43'),
(11, 11, 2, 0, '2019-09-03 02:32:43', '2019-09-03 02:32:43'),
(12, 12, 1, 0, '2019-09-03 02:32:43', '2019-09-03 02:32:43'),
(13, 13, 2, 0, '2019-09-03 02:32:43', '2019-09-03 02:32:43'),
(14, 13, 3, 0, '2019-09-03 02:32:43', '2019-09-03 02:32:43'),
(15, 14, 1, 0, '2019-09-03 02:32:43', '2019-09-03 02:32:43'),
(16, 15, 2, 0, '2019-09-03 02:32:44', '2019-09-03 02:32:44'),
(17, 16, 3, 0, '2019-09-03 02:32:44', '2019-09-03 02:32:44'),
(18, 17, 2, 0, '2019-09-03 02:32:44', '2019-09-03 02:32:44'),
(19, 17, 3, 0, '2019-09-03 02:32:44', '2019-09-03 02:32:44'),
(20, 18, 1, 0, '2019-09-03 02:32:44', '2019-09-03 02:32:44'),
(21, 19, 2, 0, '2019-09-03 02:32:44', '2019-09-03 02:32:44'),
(22, 20, 1, 0, '2019-09-03 02:32:44', '2019-09-03 02:32:44'),
(23, 20, 2, 0, '2019-09-03 02:32:44', '2019-09-03 02:32:44'),
(24, 21, 1, 0, '2019-09-03 02:32:44', '2019-09-03 02:32:44'),
(25, 22, 1, 0, '2019-09-03 02:32:44', '2019-09-03 02:32:44'),
(26, 22, 2, 0, '2019-09-03 02:32:44', '2019-09-03 02:32:44'),
(27, 23, 2, 0, '2019-09-03 02:32:44', '2019-09-03 02:32:44'),
(28, 24, 2, 0, '2019-09-03 02:32:44', '2019-09-03 02:32:44'),
(29, 25, 2, 0, '2019-09-03 02:32:44', '2019-09-03 02:32:44'),
(30, 26, 1, 0, '2019-09-03 02:32:44', '2019-09-03 02:32:44'),
(31, 27, 2, 0, '2019-09-03 02:32:44', '2019-09-03 02:32:44'),
(32, 28, 2, 0, '2019-09-03 02:32:45', '2019-09-03 02:32:45'),
(33, 28, 1, 0, '2019-09-03 02:32:45', '2019-09-03 02:32:45'),
(34, 29, 1, 0, '2019-09-03 02:32:45', '2019-09-03 02:32:45'),
(35, 30, 2, 0, '2019-09-03 02:32:45', '2019-09-03 02:32:45'),
(36, 30, 1, 0, '2019-09-03 02:32:45', '2019-09-03 02:32:45'),
(37, 31, 2, 0, '2019-09-03 02:32:45', '2019-09-03 02:32:45'),
(38, 32, 2, 0, '2019-09-03 02:32:45', '2019-09-03 02:32:45'),
(39, 32, 1, 0, '2019-09-03 02:32:45', '2019-09-03 02:32:45'),
(40, 33, 2, 0, '2019-09-03 02:32:45', '2019-09-03 02:32:45'),
(41, 33, 1, 0, '2019-09-03 02:32:45', '2019-09-03 02:32:45'),
(42, 34, 2, 0, '2019-09-03 02:32:45', '2019-09-03 02:32:45'),
(43, 35, 1, 0, '2019-09-03 02:32:45', '2019-09-03 02:32:45'),
(44, 35, 2, 0, '2019-09-03 02:32:45', '2019-09-03 02:32:45'),
(45, 36, 1, 0, '2019-09-03 02:32:45', '2019-09-03 02:32:45'),
(46, 37, 1, 0, '2019-09-03 02:32:45', '2019-09-03 02:32:45'),
(47, 38, 1, 0, '2019-09-03 02:32:46', '2019-09-03 02:32:46'),
(48, 39, 2, 0, '2019-09-03 02:32:46', '2019-09-03 02:32:46'),
(49, 39, 3, 0, '2019-09-03 02:32:46', '2019-09-03 02:32:46'),
(50, 40, 1, 0, '2019-09-03 02:32:46', '2019-09-03 02:32:46'),
(51, 41, 2, 0, '2019-09-03 02:32:46', '2019-09-03 02:32:46'),
(52, 42, 1, 0, '2019-09-03 02:32:46', '2019-09-03 02:32:46'),
(53, 43, 2, 0, '2019-09-03 02:32:46', '2019-09-03 02:32:46'),
(54, 44, 1, 0, '2019-09-03 02:32:46', '2019-09-03 02:32:46'),
(55, 45, 2, 0, '2019-09-03 02:32:46', '2019-09-03 02:32:46'),
(56, 45, 1, 0, '2019-09-03 02:32:46', '2019-09-03 02:32:46'),
(57, 46, 2, 0, '2019-09-03 02:32:46', '2019-09-03 02:32:46'),
(58, 47, 2, 0, '2019-09-03 02:32:46', '2019-09-03 02:32:46'),
(59, 48, 1, 0, '2019-09-03 02:32:46', '2019-09-03 02:32:46'),
(60, 48, 2, 0, '2019-09-03 02:32:46', '2019-09-03 02:32:46'),
(61, 49, 2, 0, '2019-09-03 02:32:46', '2019-09-03 02:32:46'),
(62, 50, 2, 0, '2019-09-03 02:32:46', '2019-09-03 02:32:46'),
(63, 50, 1, 0, '2019-09-03 02:32:47', '2019-09-03 02:32:47'),
(64, 51, 2, 0, '2019-09-03 02:32:47', '2019-09-03 02:32:47'),
(65, 52, 3, 0, '2019-09-03 02:32:47', '2019-09-03 02:32:47'),
(66, 53, 1, 0, '2019-09-03 02:32:47', '2019-09-03 02:32:47'),
(67, 54, 2, 0, '2019-09-03 02:32:47', '2019-09-03 02:32:47'),
(68, 54, 3, 0, '2019-09-03 02:32:47', '2019-09-03 02:32:47'),
(69, 55, 2, 0, '2019-09-03 02:32:47', '2019-09-03 02:32:47'),
(70, 56, 1, 0, '2019-09-03 02:32:47', '2019-09-03 02:32:47'),
(71, 57, 1, 0, '2019-09-03 02:32:47', '2019-09-03 02:32:47'),
(72, 58, 3, 0, '2019-09-03 02:32:47', '2019-09-03 02:32:47'),
(73, 59, 1, 0, '2019-09-03 02:32:47', '2019-09-03 02:32:47'),
(74, 60, 1, 0, '2019-09-03 02:32:47', '2019-09-03 02:32:47'),
(75, 61, 2, 0, '2019-09-03 02:32:47', '2019-09-03 02:32:47'),
(76, 61, 1, 0, '2019-09-03 02:32:47', '2019-09-03 02:32:47'),
(77, 62, 2, 0, '2019-09-03 02:32:48', '2019-09-03 02:32:48'),
(78, 62, 1, 0, '2019-09-03 02:32:48', '2019-09-03 02:32:48'),
(79, 63, 2, 0, '2019-09-03 02:32:48', '2019-09-03 02:32:48'),
(80, 63, 1, 0, '2019-09-03 02:32:48', '2019-09-03 02:32:48'),
(81, 64, 2, 0, '2019-09-03 02:32:48', '2019-09-03 02:32:48'),
(82, 65, 2, 0, '2019-09-03 02:32:48', '2019-09-03 02:32:48'),
(83, 66, 2, 0, '2019-09-03 02:32:48', '2019-09-03 02:32:48'),
(84, 67, 2, 0, '2019-09-03 02:32:48', '2019-09-03 02:32:48'),
(85, 68, 2, 0, '2019-09-03 02:32:48', '2019-09-03 02:32:48'),
(86, 68, 1, 0, '2019-09-03 02:32:48', '2019-09-03 02:32:48'),
(87, 69, 2, 0, '2019-09-03 02:32:48', '2019-09-03 02:32:48'),
(88, 70, 2, 0, '2019-09-03 02:32:48', '2019-09-03 02:32:48'),
(89, 71, 1, 0, '2019-09-03 02:32:48', '2019-09-03 02:32:48'),
(90, 72, 1, 0, '2019-09-03 02:32:48', '2019-09-03 02:32:48'),
(91, 73, 3, 0, '2019-09-03 02:32:48', '2019-09-03 02:32:48'),
(92, 74, 1, 0, '2019-09-03 02:32:48', '2019-09-03 02:32:48'),
(93, 75, 1, 0, '2019-09-03 02:32:49', '2019-09-03 02:32:49'),
(94, 76, 2, 0, '2019-09-03 02:32:49', '2019-09-03 02:32:49'),
(95, 77, 2, 0, '2019-09-03 02:32:49', '2019-09-03 02:32:49'),
(96, 78, 1, 0, '2019-09-03 02:32:49', '2019-09-03 02:32:49'),
(97, 79, 2, 0, '2019-09-03 02:32:49', '2019-09-03 02:32:49'),
(98, 80, 2, 0, '2019-09-03 02:32:49', '2019-09-03 02:32:49'),
(99, 81, 2, 0, '2019-09-03 02:32:49', '2019-09-03 02:32:49'),
(100, 82, 3, 0, '2019-09-03 02:32:49', '2019-09-03 02:32:49'),
(101, 83, 2, 0, '2019-09-03 02:32:49', '2019-09-03 02:32:49'),
(102, 84, 3, 0, '2019-09-03 02:32:49', '2019-09-03 02:32:49'),
(103, 85, 1, 0, '2019-09-03 02:32:49', '2019-09-03 02:32:49'),
(104, 86, 2, 0, '2019-09-03 02:32:49', '2019-09-03 02:32:49'),
(105, 87, 1, 0, '2019-09-03 02:32:49', '2019-09-03 02:32:49'),
(106, 88, 2, 0, '2019-09-03 02:32:49', '2019-09-03 02:32:49'),
(107, 88, 3, 0, '2019-09-03 02:32:49', '2019-09-03 02:32:49'),
(108, 89, 1, 0, '2019-09-03 02:32:49', '2019-09-03 02:32:49'),
(109, 90, 2, 0, '2019-09-03 02:32:50', '2019-09-03 02:32:50'),
(110, 91, 2, 0, '2019-09-03 02:32:50', '2019-09-03 02:32:50'),
(111, 92, 1, 0, '2019-09-03 02:32:50', '2019-09-03 02:32:50'),
(112, 93, 2, 0, '2019-09-03 02:32:50', '2019-09-03 02:32:50'),
(113, 94, 2, 0, '2019-09-03 02:32:50', '2019-09-03 02:32:50'),
(114, 95, 3, 0, '2019-09-03 02:32:50', '2019-09-03 02:32:50'),
(115, 96, 2, 0, '2019-09-03 02:32:50', '2019-09-03 02:32:50'),
(116, 96, 1, 0, '2019-09-03 02:32:50', '2019-09-03 02:32:50'),
(117, 97, 2, 0, '2019-09-03 02:32:50', '2019-09-03 02:32:50'),
(118, 98, 3, 0, '2019-09-03 02:32:50', '2019-09-03 02:32:50'),
(119, 99, 2, 0, '2019-09-03 02:32:50', '2019-09-03 02:32:50'),
(120, 100, 2, 0, '2019-09-03 02:32:50', '2019-09-03 02:32:50');

-- --------------------------------------------------------

--
-- Table structure for table `learning_levels`
--

CREATE TABLE `learning_levels` (
  `id` int(11) NOT NULL,
  `letter` char(1) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `name` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `description` text COLLATE utf8mb4_unicode_ci,
  `program_id` int(11) NOT NULL,
  `color` varchar(11) COLLATE utf8mb4_unicode_ci DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `learning_levels`
--

INSERT INTO `learning_levels` (`id`, `letter`, `name`, `description`, `program_id`, `color`) VALUES
(1, 'I', 'Introduced', 'Students are introduced to knowledge and skills and are able to remember and understand what they have learned', 1, '#cbff90'),
(2, 'R', 'Reinforced', 'Students are practice through activities that help them learn how to apply their learning or skills', 1, '#fff375'),
(3, 'D', 'Demonstrated', 'Students are able to integrate the knowledge and skills in order to accumulate, evaluate, and create new ideas', 1, '#d7aefb'),
(11, 'I', 'Introduced', NULL, 2, '#cbff90'),
(12, 'R', 'Reinforced', NULL, 2, '#fbbd04'),
(13, 'D', 'Demonstrated', NULL, 2, '#d7aefb');

-- --------------------------------------------------------

--
-- Table structure for table `math_objects`
--

CREATE TABLE `math_objects` (
  `id` int(11) NOT NULL,
  `formula` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `ref_id` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `math_objects`
--

INSERT INTO `math_objects` (`id`, `formula`, `ref_id`, `created_at`, `updated_at`) VALUES
(1, 'f(x)=x+y', '_unrpclqgl', '2019-06-06 03:17:15', '2019-06-06 03:17:15'),
(2, 'f(x)=x+y', '_unrpclqgl', '2019-06-06 03:20:14', '2019-06-06 03:20:14'),
(3, 'f(x)=x+\\frac{x}{x^2}', '_unrpclqgl', '2019-06-06 03:32:27', '2019-06-06 03:32:27'),
(4, 'f(x)=\\frac{c}{x^2+c}', '_unrpclqgl', '2019-06-06 05:14:24', '2019-06-06 05:14:24'),
(5, 'y=mx+b', '_unrpclqgl', '2019-06-06 05:16:00', '2019-06-06 05:16:00'),
(6, 'f(x)=x+10', '_unrpclqgl', '2019-06-06 05:19:12', '2019-06-06 05:19:12'),
(7, 'y=mx+b111', '_unrpclqgl', '2019-06-06 05:29:55', '2019-06-06 05:32:53'),
(8, 'y=mx+\\frac{b20}{x}', '_unrpclqgl', '2019-06-06 05:30:45', '2019-06-06 05:32:37'),
(9, '\\frac{x}{x+y}=10', '_unrpclqgl', '2019-06-06 05:35:44', '2019-06-06 05:36:49'),
(10, 'f(x)=x+y', '_w23fzoncv', '2019-06-06 06:00:52', '2019-06-06 06:00:52'),
(11, 'f(x)=x^2+y', '_nlfti741s', '2019-06-06 06:01:38', '2019-06-06 06:01:38'),
(12, 'f(x)=x+\\frac{x}{20}+10', '_nlfti741s', '2019-06-06 06:02:01', '2019-06-06 06:02:01'),
(13, 'y=mx+b', '_nlfti741s', '2019-06-06 06:02:19', '2019-06-06 06:02:19'),
(14, 'x^2+y^2=10', '_nlfti741s', '2019-06-06 06:02:49', '2019-06-06 06:02:49'),
(15, 'f(x)=x+x^w', '_atyz8rl80', '2019-06-06 06:03:53', '2019-06-06 06:04:01'),
(16, '\\frac{x}{y+2}=20', '_qvmsdoxyi', '2019-06-16 19:26:42', '2019-06-16 19:26:42'),
(17, '2x+12=20', '_6ihtyoioi', '2019-06-18 22:35:12', '2019-06-18 22:35:12'),
(18, 'mx+y=b', '_6ihtyoioi', '2019-06-18 22:35:44', '2019-06-18 22:35:44'),
(19, 'x+=20', '_6ihtyoioi', '2019-06-18 22:36:06', '2019-06-18 22:36:06'),
(20, '20', '_6ihtyoioi', '2019-06-18 22:36:33', '2019-06-18 22:36:33'),
(21, '5x=20', '_3ysjloma2', '2019-07-01 18:31:57', '2019-07-01 18:31:57'),
(22, 'f(x)=5x-3', '_25cwy4ert', '2019-07-01 19:10:29', '2019-07-01 19:10:29'),
(23, 'f(5)=?', '_25cwy4ert', '2019-07-01 19:12:15', '2019-07-01 19:12:15');

-- --------------------------------------------------------

--
-- Table structure for table `migrations`
--

CREATE TABLE `migrations` (
  `id` int(10) UNSIGNED NOT NULL,
  `migration` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `batch` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `migrations`
--

INSERT INTO `migrations` (`id`, `migration`, `batch`) VALUES
(1, '2014_10_12_000000_create_users_table', 1),
(2, '2014_10_12_100000_create_password_resets_table', 1),
(3, '2019_05_05_041123_create_colleges_table', 1),
(4, '2019_05_05_062239_create_faculties_table', 1),
(5, '2019_05_05_080234_create_user_types_table', 1),
(6, '2019_05_08_053251_create_programs_table', 2),
(7, '2019_05_08_122609_create_courses_table', 3),
(9, '2019_05_09_204319_create_curricula_table', 4),
(10, '2019_05_10_161302_create_curriculum_courses_table', 5),
(11, '2019_05_12_125034_create_course_requisites_table', 6),
(12, '2019_05_17_152255_create_performance_indicators_table', 7),
(13, '2019_05_17_152952_create_performance_criterias_table', 8),
(14, '2019_05_17_153034_create_student_outcomes_table', 8),
(15, '2019_05_17_153224_create_performance_criteria_indicators_table', 8),
(16, '2019_05_21_230434_create_curriculum_maps_table', 9),
(17, '2019_05_21_230457_create_learning_levels_table', 9),
(18, '2019_05_21_235242_create_curriculum_mapping_statuses_table', 10),
(19, '2019_05_24_010044_create_students_table', 11),
(20, '2019_05_27_174748_create_difficulty_levels_table', 12),
(21, '2019_05_27_175300_create_test_questions_table', 13),
(22, '2019_05_27_180418_create_choices_table', 13),
(23, '2019_05_29_210824_create_image_objects_table', 14),
(24, '2019_06_06_130339_create_code_objects_table', 15),
(25, '2019_06_06_185135_create_math_objects_table', 16),
(26, '2019_06_25_091802_create_exams_table', 17),
(27, '2019_06_25_093158_create_exam_levels_table', 17),
(28, '2019_07_01_004211_create_exam_test_questions_table', 18),
(31, '2019_07_03_132234_create_grades_table', 19),
(33, '2019_07_03_133149_create_grade_values_table', 20),
(34, '2019_07_22_140446_create_student_outcome_archive_versions_table', 21),
(35, '2019_07_22_140830_create_student_outcome_archives_table', 21),
(36, '2019_07_22_141445_create_performance_criteria_archives_table', 21),
(37, '2019_07_22_141700_create_performance_criteria_indicator_archives_table', 21),
(38, '2019_07_28_173742_create_answer_sheets_table', 22),
(39, '2019_07_28_174222_create_answer_sheet_test_questions_table', 22),
(40, '2019_07_28_174843_create_answer_sheet_test_question_choices_table', 23),
(41, '2019_08_01_094440_create_assessments_table', 24),
(42, '2019_08_01_094654_create_assessment_details_table', 24),
(43, '2019_08_21_044916_create_item_analyses_table', 25),
(44, '2019_08_21_045150_create_item_analysis_details_table', 25),
(45, '2019_08_21_045606_create_item_analysis_detail_actions_table', 25),
(46, '2019_09_13_125414_create_user_profiles_table', 26),
(47, '2019_09_15_074435_create_faculty_courses_table', 27),
(48, '2019_09_15_115437_create_test_question_problems_table', 28),
(49, '2019_09_15_183553_create_assessment_types_table', 29),
(50, '2019_09_15_202213_create_custom_recorded_assessments_table', 30),
(51, '2019_09_17_125454_create_settings_table', 31);

-- --------------------------------------------------------

--
-- Table structure for table `password_resets`
--

CREATE TABLE `password_resets` (
  `email` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `token` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- --------------------------------------------------------

--
-- Table structure for table `performance_criterias`
--

CREATE TABLE `performance_criterias` (
  `id` int(11) NOT NULL,
  `description` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `student_outcome_id` int(11) NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `performance_criterias`
--

INSERT INTO `performance_criterias` (`id`, `description`, `student_outcome_id`, `created_at`, `updated_at`) VALUES
(6, 'Acquire knowledge of computing, science, mathematics appropriate to the IT discipline', 7, '2019-05-17 14:43:14', '2019-05-27 02:54:27'),
(7, 'Understand best practice and standards, and their applications', 8, '2019-05-17 14:51:54', '2019-05-27 02:59:30'),
(8, 'Can analyze complex problems, and identify and define the computing requirements appropriate to its solution', 9, '2019-05-18 03:26:45', '2019-05-27 05:33:32'),
(9, 'Can identify and analyze user need and take them into account in the selection, creation, evaluation, and administration of computer based systems', 10, '2019-05-18 06:29:54', '2019-05-27 05:34:49'),
(10, 'Can design, implement, and evaluate computer based systems, processes, components, or programs to meet desired needs and requirements under various constraints', 11, '2019-05-18 06:43:44', '2019-05-27 05:36:47'),
(11, 'Can integrate IT-based solutions into the user environment effectively', 12, '2019-05-18 06:44:34', '2019-05-27 05:42:27'),
(12, 'Can apply knowledge through the use of current techniques, skills, tools and practices necessary for the IT profession', 13, '2019-05-18 06:46:21', '2019-05-27 05:43:00'),
(13, 'Can function effectively as a member or leader of a development team recognizing the different roles within a team to accomplish a common goal', 14, '2019-05-18 06:48:06', '2019-05-27 05:43:44'),
(14, 'Can assist in the creation of an effective IT project plan', 15, '2019-05-18 07:34:09', '2019-05-27 05:44:11'),
(15, 'asdasdasd', 16, '2019-05-18 07:40:22', '2019-05-18 07:40:22'),
(16, 'Can communicate effectively with the computing community and with society at large about complex computing activities through logical writing, presentations, and clear instructions', 17, '2019-05-18 13:22:49', '2019-05-27 05:44:48'),
(17, 'asdasd', 18, '2019-05-18 13:23:28', '2019-05-18 13:23:28'),
(18, 'asd', 19, '2019-05-18 13:33:48', '2019-05-18 13:33:48'),
(19, 'Can analyze the local and global impact of computing information technology on individuals, organizations, and society', 20, '2019-05-27 05:46:43', '2019-05-27 05:46:43'),
(20, 'Can understand professional, ethical, legal, security and social issues and responsibilities in the utilization of information technology', 21, '2019-05-27 05:47:34', '2019-05-27 05:47:34'),
(21, 'Can recognize the need for and engage in planning self-learning and improving performance as a foundation for continuing professional development', 22, '2019-05-27 05:48:13', '2019-05-27 05:48:13'),
(22, 'test', 23, '2019-07-22 01:32:48', '2019-07-22 01:32:48'),
(23, 'asdasd', 24, '2019-07-22 03:04:07', '2019-07-22 03:04:07'),
(24, 'asdasd', 25, '2019-07-28 00:58:51', '2019-07-28 00:58:51'),
(25, 'performance criteria', 26, '2019-07-28 03:31:52', '2019-07-28 03:31:52'),
(26, 'performance criteria', 27, '2019-07-28 03:35:37', '2019-07-28 03:35:37'),
(27, 'criteria', 28, '2019-07-28 03:37:27', '2019-07-28 03:37:27'),
(28, 'criteria', 29, '2019-07-28 03:40:31', '2019-07-28 03:40:31'),
(29, 'crietria', 30, '2019-07-28 03:46:18', '2019-07-28 03:46:18'),
(30, 'perfromane crietria', 31, '2019-07-28 03:48:57', '2019-07-28 03:48:57'),
(31, 'asad', 32, '2019-07-28 03:51:37', '2019-07-28 03:51:37'),
(32, 'scdsc', 33, '2019-07-28 03:54:51', '2019-07-28 03:54:51'),
(33, 'dcs', 34, '2019-07-28 03:56:14', '2019-07-28 03:56:14');

-- --------------------------------------------------------

--
-- Table structure for table `performance_criteria_archives`
--

CREATE TABLE `performance_criteria_archives` (
  `id` int(10) UNSIGNED NOT NULL,
  `description` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `student_outcome_id` int(11) NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `performance_criteria_archives`
--

INSERT INTO `performance_criteria_archives` (`id`, `description`, `student_outcome_id`, `created_at`, `updated_at`) VALUES
(14, 'Acquire knowledge of computing, science, mathematics appropriate to the IT discipline', 27, '2019-07-22 06:52:29', '2019-07-22 06:52:29'),
(15, 'Understand best practice and standards, and their applications', 28, '2019-07-22 06:52:30', '2019-07-22 06:52:30'),
(16, 'Can analyze complex problems, and identify and define the computing requirements appropriate to its solution', 29, '2019-07-22 06:52:30', '2019-07-22 06:52:30'),
(17, 'Can identify and analyze user need and take them into account in the selection, creation, evaluation, and administration of computer based systems', 30, '2019-07-22 06:52:30', '2019-07-22 06:52:30'),
(18, 'Can design, implement, and evaluate computer based systems, processes, components, or programs to meet desired needs and requirements under various constraints', 31, '2019-07-22 06:52:31', '2019-07-22 06:52:31'),
(19, 'Can integrate IT-based solutions into the user environment effectively', 32, '2019-07-22 06:52:31', '2019-07-22 06:52:31'),
(20, 'Can apply knowledge through the use of current techniques, skills, tools and practices necessary for the IT profession', 33, '2019-07-22 06:52:31', '2019-07-22 06:52:31'),
(21, 'Can function effectively as a member or leader of a development team recognizing the different roles within a team to accomplish a common goal', 34, '2019-07-22 06:52:32', '2019-07-22 06:52:32'),
(22, 'Can assist in the creation of an effective IT project plan', 35, '2019-07-22 06:52:32', '2019-07-22 06:52:32'),
(23, 'Can communicate effectively with the computing community and with society at large about complex computing activities through logical writing, presentations, and clear instructions', 36, '2019-07-22 06:52:32', '2019-07-22 06:52:32'),
(24, 'Can analyze the local and global impact of computing information technology on individuals, organizations, and society', 37, '2019-07-22 06:52:33', '2019-07-22 06:52:33'),
(25, 'Can understand professional, ethical, legal, security and social issues and responsibilities in the utilization of information technology', 38, '2019-07-22 06:52:33', '2019-07-22 06:52:33'),
(26, 'Can recognize the need for and engage in planning self-learning and improving performance as a foundation for continuing professional development', 39, '2019-07-22 06:52:33', '2019-07-22 06:52:33'),
(27, 'Acquire knowledge of computing, science, mathematics appropriate to the IT discipline', 40, '2019-07-22 06:56:57', '2019-07-22 06:56:57'),
(28, 'Understand best practice and standards, and their applications', 41, '2019-07-22 06:56:58', '2019-07-22 06:56:58'),
(29, 'Can analyze complex problems, and identify and define the computing requirements appropriate to its solution', 42, '2019-07-22 06:56:58', '2019-07-22 06:56:58'),
(30, 'Can identify and analyze user need and take them into account in the selection, creation, evaluation, and administration of computer based systems', 43, '2019-07-22 06:56:58', '2019-07-22 06:56:58'),
(31, 'Can design, implement, and evaluate computer based systems, processes, components, or programs to meet desired needs and requirements under various constraints', 44, '2019-07-22 06:56:59', '2019-07-22 06:56:59'),
(32, 'Can integrate IT-based solutions into the user environment effectively', 45, '2019-07-22 06:56:59', '2019-07-22 06:56:59'),
(33, 'Can apply knowledge through the use of current techniques, skills, tools and practices necessary for the IT profession', 46, '2019-07-22 06:56:59', '2019-07-22 06:56:59'),
(34, 'Can function effectively as a member or leader of a development team recognizing the different roles within a team to accomplish a common goal', 47, '2019-07-22 06:57:00', '2019-07-22 06:57:00'),
(35, 'Can assist in the creation of an effective IT project plan', 48, '2019-07-22 06:57:00', '2019-07-22 06:57:00'),
(36, 'Can communicate effectively with the computing community and with society at large about complex computing activities through logical writing, presentations, and clear instructions', 49, '2019-07-22 06:57:00', '2019-07-22 06:57:00'),
(37, 'Can analyze the local and global impact of computing information technology on individuals, organizations, and society', 50, '2019-07-22 06:57:01', '2019-07-22 06:57:01'),
(38, 'Can understand professional, ethical, legal, security and social issues and responsibilities in the utilization of information technology', 51, '2019-07-22 06:57:01', '2019-07-22 06:57:01'),
(39, 'Can recognize the need for and engage in planning self-learning and improving performance as a foundation for continuing professional development', 52, '2019-07-22 06:57:01', '2019-07-22 06:57:01'),
(40, 'Acquire knowledge of computing, science, mathematics appropriate to the IT discipline', 53, '2019-07-22 06:59:26', '2019-07-22 06:59:26'),
(41, 'Understand best practice and standards, and their applications', 54, '2019-07-22 06:59:27', '2019-07-22 06:59:27'),
(42, 'Can analyze complex problems, and identify and define the computing requirements appropriate to its solution', 55, '2019-07-22 06:59:27', '2019-07-22 06:59:27'),
(43, 'Can identify and analyze user need and take them into account in the selection, creation, evaluation, and administration of computer based systems', 56, '2019-07-22 06:59:27', '2019-07-22 06:59:27'),
(44, 'Can design, implement, and evaluate computer based systems, processes, components, or programs to meet desired needs and requirements under various constraints', 57, '2019-07-22 06:59:28', '2019-07-22 06:59:28'),
(45, 'Can integrate IT-based solutions into the user environment effectively', 58, '2019-07-22 06:59:28', '2019-07-22 06:59:28'),
(46, 'Can apply knowledge through the use of current techniques, skills, tools and practices necessary for the IT profession', 59, '2019-07-22 06:59:28', '2019-07-22 06:59:28'),
(47, 'Can function effectively as a member or leader of a development team recognizing the different roles within a team to accomplish a common goal', 60, '2019-07-22 06:59:29', '2019-07-22 06:59:29'),
(48, 'Can assist in the creation of an effective IT project plan', 61, '2019-07-22 06:59:29', '2019-07-22 06:59:29'),
(49, 'Can communicate effectively with the computing community and with society at large about complex computing activities through logical writing, presentations, and clear instructions', 62, '2019-07-22 06:59:29', '2019-07-22 06:59:29'),
(50, 'Can analyze the local and global impact of computing information technology on individuals, organizations, and society', 63, '2019-07-22 06:59:30', '2019-07-22 06:59:30'),
(51, 'Can understand professional, ethical, legal, security and social issues and responsibilities in the utilization of information technology', 64, '2019-07-22 06:59:30', '2019-07-22 06:59:30'),
(52, 'Can recognize the need for and engage in planning self-learning and improving performance as a foundation for continuing professional development', 65, '2019-07-22 06:59:30', '2019-07-22 06:59:30'),
(53, 'Acquire knowledge of computing, science, mathematics appropriate to the IT discipline', 66, '2019-07-22 07:27:35', '2019-07-22 07:27:35'),
(54, 'Understand best practice and standards, and their applications', 67, '2019-07-22 07:27:35', '2019-07-22 07:27:35'),
(55, 'Can analyze complex problems, and identify and define the computing requirements appropriate to its solution', 68, '2019-07-22 07:27:36', '2019-07-22 07:27:36'),
(56, 'Can identify and analyze user need and take them into account in the selection, creation, evaluation, and administration of computer based systems', 69, '2019-07-22 07:27:36', '2019-07-22 07:27:36'),
(57, 'Can design, implement, and evaluate computer based systems, processes, components, or programs to meet desired needs and requirements under various constraints', 70, '2019-07-22 07:27:36', '2019-07-22 07:27:36'),
(58, 'Can integrate IT-based solutions into the user environment effectively', 71, '2019-07-22 07:27:37', '2019-07-22 07:27:37'),
(59, 'Can apply knowledge through the use of current techniques, skills, tools and practices necessary for the IT profession', 72, '2019-07-22 07:27:37', '2019-07-22 07:27:37'),
(60, 'Can function effectively as a member or leader of a development team recognizing the different roles within a team to accomplish a common goal', 73, '2019-07-22 07:27:37', '2019-07-22 07:27:37'),
(61, 'Can assist in the creation of an effective IT project plan', 74, '2019-07-22 07:27:38', '2019-07-22 07:27:38'),
(62, 'Can communicate effectively with the computing community and with society at large about complex computing activities through logical writing, presentations, and clear instructions', 75, '2019-07-22 07:27:38', '2019-07-22 07:27:38'),
(63, 'Can analyze the local and global impact of computing information technology on individuals, organizations, and society', 76, '2019-07-22 07:27:39', '2019-07-22 07:27:39'),
(64, 'Can understand professional, ethical, legal, security and social issues and responsibilities in the utilization of information technology', 77, '2019-07-22 07:27:39', '2019-07-22 07:27:39'),
(65, 'Can recognize the need for and engage in planning self-learning and improving performance as a foundation for continuing professional development', 78, '2019-07-22 07:27:39', '2019-07-22 07:27:39'),
(66, 'asdasd', 79, '2019-07-22 07:27:40', '2019-07-22 07:27:40'),
(67, 'Acquire knowledge of computing, science, mathematics appropriate to the IT discipline', 80, '2019-09-15 09:24:11', '2019-09-15 09:24:11'),
(68, 'Understand best practice and standards, and their applications', 81, '2019-09-15 09:24:11', '2019-09-15 09:24:11'),
(69, 'Can analyze complex problems, and identify and define the computing requirements appropriate to its solution', 82, '2019-09-15 09:24:12', '2019-09-15 09:24:12'),
(70, 'Can identify and analyze user need and take them into account in the selection, creation, evaluation, and administration of computer based systems', 83, '2019-09-15 09:24:12', '2019-09-15 09:24:12'),
(71, 'Can design, implement, and evaluate computer based systems, processes, components, or programs to meet desired needs and requirements under various constraints', 84, '2019-09-15 09:24:12', '2019-09-15 09:24:12'),
(72, 'Can integrate IT-based solutions into the user environment effectively', 85, '2019-09-15 09:24:12', '2019-09-15 09:24:12'),
(73, 'Can apply knowledge through the use of current techniques, skills, tools and practices necessary for the IT profession', 86, '2019-09-15 09:24:13', '2019-09-15 09:24:13'),
(74, 'Can function effectively as a member or leader of a development team recognizing the different roles within a team to accomplish a common goal', 87, '2019-09-15 09:24:13', '2019-09-15 09:24:13'),
(75, 'Can assist in the creation of an effective IT project plan', 88, '2019-09-15 09:24:14', '2019-09-15 09:24:14'),
(76, 'Can communicate effectively with the computing community and with society at large about complex computing activities through logical writing, presentations, and clear instructions', 89, '2019-09-15 09:24:14', '2019-09-15 09:24:14'),
(77, 'Can analyze the local and global impact of computing information technology on individuals, organizations, and society', 90, '2019-09-15 09:24:14', '2019-09-15 09:24:14'),
(78, 'Can understand professional, ethical, legal, security and social issues and responsibilities in the utilization of information technology', 91, '2019-09-15 09:24:15', '2019-09-15 09:24:15'),
(79, 'Can recognize the need for and engage in planning self-learning and improving performance as a foundation for continuing professional development', 92, '2019-09-15 09:24:15', '2019-09-15 09:24:15');

-- --------------------------------------------------------

--
-- Table structure for table `performance_criteria_indicators`
--

CREATE TABLE `performance_criteria_indicators` (
  `id` int(11) NOT NULL,
  `performance_criteria_id` int(11) NOT NULL,
  `performance_indicator_id` int(11) NOT NULL,
  `description` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `score_percentage` double(8,2) NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `performance_criteria_indicators`
--

INSERT INTO `performance_criteria_indicators` (`id`, `performance_criteria_id`, `performance_indicator_id`, `description`, `score_percentage`, `created_at`, `updated_at`) VALUES
(6, 6, 1, 'Can hardly manifest any knowledge of computing, science and math appropriate to the discipline', 25.00, '2019-05-17 14:43:14', '2019-05-27 02:54:27'),
(7, 6, 2, 'Obtained some knowledge of computing, science, and mathematics appropriate to the discipline', 50.00, '2019-05-17 14:43:14', '2019-09-15 09:24:53'),
(8, 6, 3, 'Obtained substantial knowledge of computing, science and mathematics appropriate to the discipline', 75.00, '2019-05-17 14:43:14', '2019-09-15 09:24:53'),
(9, 6, 4, 'Obtained almost all knowledge of computing, science, and mathematics appropriate to the discipline', 95.00, '2019-05-17 14:43:14', '2019-09-15 09:24:54'),
(10, 7, 1, 'Can hardly understand best practice and standards, and their applications', 25.00, '2019-05-17 14:51:54', '2019-05-27 02:59:30'),
(11, 7, 2, 'Can sometimes understand best practice and standards, and their applications', 50.00, '2019-05-17 14:51:54', '2019-05-27 02:59:30'),
(12, 7, 3, 'Can easily understand best practice and standards, and their applications', 75.00, '2019-05-17 14:51:54', '2019-05-27 02:59:30'),
(13, 7, 4, 'Can apply and understand best practice and standards, and their applications', 95.00, '2019-05-17 14:51:54', '2019-05-27 02:59:31'),
(14, 8, 1, 'unsatisfactory', 25.00, '2019-05-18 03:26:45', '2019-05-18 03:26:45'),
(15, 8, 2, 'developing', 50.00, '2019-05-18 03:26:46', '2019-05-18 03:26:46'),
(16, 8, 3, 'satisfactory', 75.00, '2019-05-18 03:26:46', '2019-05-18 03:26:46'),
(17, 8, 4, 'exemplary', 95.00, '2019-05-18 03:26:46', '2019-05-18 03:26:46'),
(18, 9, 1, 'unsatisfactory', 26.00, '2019-05-18 06:29:54', '2019-05-18 06:29:54'),
(19, 9, 2, 'developing', 50.00, '2019-05-18 06:29:54', '2019-05-18 06:29:54'),
(20, 9, 3, 'satisfactory', 75.00, '2019-05-18 06:29:54', '2019-05-18 06:29:54'),
(21, 9, 4, 'exemplary', 95.00, '2019-05-18 06:29:54', '2019-05-18 06:29:54'),
(22, 10, 1, 'asd', 25.00, '2019-05-18 06:43:44', '2019-05-18 06:43:44'),
(23, 10, 2, 'asd', 50.00, '2019-05-18 06:43:44', '2019-05-18 06:43:44'),
(24, 10, 3, 'asdasd', 75.00, '2019-05-18 06:43:44', '2019-05-18 06:43:44'),
(25, 10, 4, 'asdasd', 95.00, '2019-05-18 06:43:45', '2019-05-18 06:43:45'),
(26, 11, 1, 'asd', 25.00, '2019-05-18 06:44:34', '2019-05-18 06:44:34'),
(27, 11, 2, 'asdasd', 50.00, '2019-05-18 06:44:34', '2019-05-18 06:44:34'),
(28, 11, 3, 'asdasd', 75.00, '2019-05-18 06:44:34', '2019-05-18 06:44:34'),
(29, 11, 4, 'asdasd', 95.00, '2019-05-18 06:44:34', '2019-05-18 06:44:34'),
(30, 12, 1, 'asdasd', 25.00, '2019-05-18 06:46:21', '2019-05-18 06:46:21'),
(31, 12, 2, 'asdasd', 50.00, '2019-05-18 06:46:21', '2019-05-18 06:46:21'),
(32, 12, 3, 'asdasdasd', 75.00, '2019-05-18 06:46:21', '2019-05-18 06:46:21'),
(33, 12, 4, 'asdasdadsad', 95.00, '2019-05-18 06:46:21', '2019-05-18 06:46:21'),
(34, 13, 1, 'unsatisfactory', 25.00, '2019-05-18 06:48:06', '2019-05-18 07:29:58'),
(35, 13, 2, 'developing', 50.00, '2019-05-18 06:48:07', '2019-05-18 07:29:58'),
(36, 13, 3, 'satisfactory', 75.00, '2019-05-18 06:48:07', '2019-05-18 07:29:58'),
(37, 13, 4, 'exemplary', 95.00, '2019-05-18 06:48:07', '2019-05-18 07:29:58'),
(38, 14, 1, 'asd', 25.00, '2019-05-18 07:34:09', '2019-05-18 07:34:09'),
(39, 14, 2, 'asdasd', 50.00, '2019-05-18 07:34:09', '2019-05-18 07:34:09'),
(40, 14, 3, 'asdasd', 75.00, '2019-05-18 07:34:09', '2019-05-18 07:34:09'),
(41, 14, 4, 'asdasd', 95.00, '2019-05-18 07:34:09', '2019-05-18 07:34:09'),
(42, 15, 1, 'asd', 25.00, '2019-05-18 07:40:22', '2019-05-18 07:40:22'),
(43, 15, 2, 'asd', 50.00, '2019-05-18 07:40:22', '2019-05-18 07:40:22'),
(44, 15, 3, 'asdasdsad', 75.00, '2019-05-18 07:40:22', '2019-05-18 07:40:22'),
(45, 15, 4, 'sdsdsd', 95.00, '2019-05-18 07:40:22', '2019-05-18 07:40:22'),
(46, 16, 1, 'ddd1', 25.00, '2019-05-18 13:22:49', '2019-05-18 13:23:02'),
(47, 16, 2, 'ddd1', 50.00, '2019-05-18 13:22:49', '2019-05-18 13:23:02'),
(48, 16, 3, 'ddd1', 75.00, '2019-05-18 13:22:49', '2019-05-18 13:23:02'),
(49, 16, 4, 'ddd1', 95.00, '2019-05-18 13:22:49', '2019-05-18 13:23:02'),
(50, 17, 1, 'asd', 25.00, '2019-05-18 13:23:28', '2019-05-18 13:23:28'),
(51, 17, 2, 'asd', 50.00, '2019-05-18 13:23:28', '2019-05-18 13:23:28'),
(52, 17, 3, 'asda', 75.00, '2019-05-18 13:23:28', '2019-05-18 13:23:28'),
(53, 17, 4, 'asd', 95.00, '2019-05-18 13:23:28', '2019-05-18 13:23:28'),
(54, 18, 1, 'asdasd', 25.00, '2019-05-18 13:33:48', '2019-05-18 13:33:48'),
(55, 18, 2, 'asdasd', 50.00, '2019-05-18 13:33:48', '2019-05-18 13:33:48'),
(56, 18, 3, 'asdasd', 75.00, '2019-05-18 13:33:48', '2019-05-18 13:33:48'),
(57, 18, 4, 'asdasd', 95.00, '2019-05-18 13:33:48', '2019-05-18 13:33:48'),
(58, 19, 1, 'unsatisfactory', 25.00, '2019-05-27 05:46:43', '2019-05-27 05:46:43'),
(59, 19, 2, 'developing', 50.00, '2019-05-27 05:46:43', '2019-05-27 05:46:43'),
(60, 19, 3, 'satisfactory', 75.00, '2019-05-27 05:46:43', '2019-05-27 05:46:43'),
(61, 19, 4, 'exemplary', 95.00, '2019-05-27 05:46:43', '2019-05-27 05:46:43'),
(62, 20, 1, 'unsatisfactory', 25.00, '2019-05-27 05:47:34', '2019-05-27 05:47:34'),
(63, 20, 2, 'developing', 50.00, '2019-05-27 05:47:34', '2019-05-27 05:47:34'),
(64, 20, 3, 'satisfactory', 75.00, '2019-05-27 05:47:34', '2019-05-27 05:47:34'),
(65, 20, 4, 'exemplary', 95.00, '2019-05-27 05:47:34', '2019-05-27 05:47:34'),
(66, 21, 1, 'unsatisfactory', 25.00, '2019-05-27 05:48:13', '2019-05-27 05:48:13'),
(67, 21, 2, 'developing', 50.00, '2019-05-27 05:48:13', '2019-05-27 05:48:13'),
(68, 21, 3, 'satisfactory', 75.00, '2019-05-27 05:48:14', '2019-05-27 05:48:14'),
(69, 21, 4, 'exemplary', 95.00, '2019-05-27 05:48:14', '2019-05-27 05:48:14'),
(70, 22, 1, 'test', 25.00, '2019-07-22 01:32:48', '2019-07-22 01:32:48'),
(71, 22, 2, 'test', 50.00, '2019-07-22 01:32:48', '2019-07-22 01:32:48'),
(72, 22, 3, 'test', 75.00, '2019-07-22 01:32:48', '2019-07-22 01:32:48'),
(73, 22, 4, 'test', 95.00, '2019-07-22 01:32:48', '2019-07-22 01:32:48'),
(74, 23, 1, 'asdasd', 25.00, '2019-07-22 03:04:07', '2019-07-22 03:04:07'),
(75, 23, 2, 'asdasd', 50.00, '2019-07-22 03:04:07', '2019-07-22 03:04:07'),
(76, 23, 3, 'asdasd', 75.00, '2019-07-22 03:04:07', '2019-07-22 03:04:07'),
(77, 23, 4, 'asdasd', 95.00, '2019-07-22 03:04:07', '2019-07-22 03:04:07'),
(78, 24, 1, 'asdasd', 25.00, '2019-07-28 00:58:51', '2019-07-28 00:58:51'),
(79, 24, 2, 'asdasd', 50.00, '2019-07-28 00:58:51', '2019-07-28 00:58:51'),
(80, 24, 3, 'asdasd', 75.00, '2019-07-28 00:58:51', '2019-07-28 00:58:51'),
(81, 24, 4, 'asdasd', 95.00, '2019-07-28 00:58:51', '2019-07-28 00:58:51'),
(82, 25, 1, 'test1', 25.00, '2019-07-28 03:31:52', '2019-07-28 03:31:52'),
(83, 25, 2, 'twst2', 50.00, '2019-07-28 03:31:52', '2019-07-28 03:31:52'),
(84, 25, 3, 'test3', 75.00, '2019-07-28 03:31:52', '2019-07-28 03:31:52'),
(85, 25, 4, 'test4', 95.00, '2019-07-28 03:31:52', '2019-07-28 03:31:52'),
(86, 26, 1, 'unsatisfactory', 25.00, '2019-07-28 03:35:37', '2019-07-28 03:35:37'),
(87, 26, 2, 'developing', 50.00, '2019-07-28 03:35:37', '2019-07-28 03:35:37'),
(88, 26, 3, 'satisfactory', 75.00, '2019-07-28 03:35:37', '2019-07-28 03:35:37'),
(89, 26, 4, 'exemplary', 95.00, '2019-07-28 03:35:37', '2019-07-28 03:35:37'),
(90, 27, 1, 'unsatisfactory', 25.00, '2019-07-28 03:37:27', '2019-07-28 03:37:27'),
(91, 27, 2, 'developing', 50.00, '2019-07-28 03:37:27', '2019-07-28 03:37:27'),
(92, 27, 3, 'satisfactory', 75.00, '2019-07-28 03:37:27', '2019-07-28 03:37:27'),
(93, 27, 4, 'exemplary', 95.00, '2019-07-28 03:37:27', '2019-07-28 03:37:27'),
(94, 28, 1, 'unsatisfactory', 25.00, '2019-07-28 03:40:31', '2019-07-28 03:40:31'),
(95, 28, 2, 'developing', 50.00, '2019-07-28 03:40:31', '2019-07-28 03:40:31'),
(96, 28, 3, 'satisfactory', 75.00, '2019-07-28 03:40:31', '2019-07-28 03:40:31'),
(97, 28, 4, 'exemplary', 95.00, '2019-07-28 03:40:31', '2019-07-28 03:40:31'),
(98, 29, 1, 'unsatisfactory', 25.00, '2019-07-28 03:46:18', '2019-07-28 03:46:18'),
(99, 29, 2, 'developing', 50.00, '2019-07-28 03:46:18', '2019-07-28 03:46:18'),
(100, 29, 3, 'satisfactory', 75.00, '2019-07-28 03:46:18', '2019-07-28 03:46:18'),
(101, 29, 4, 'sxdsd', 95.00, '2019-07-28 03:46:19', '2019-07-28 03:46:19'),
(102, 30, 1, 'asas', 25.00, '2019-07-28 03:48:57', '2019-07-28 03:48:57'),
(103, 30, 2, 'dfd', 50.00, '2019-07-28 03:48:57', '2019-07-28 03:48:57'),
(104, 30, 3, 'dfsd', 75.00, '2019-07-28 03:48:57', '2019-07-28 03:48:57'),
(105, 30, 4, 'sdds', 95.00, '2019-07-28 03:48:57', '2019-07-28 03:48:57'),
(106, 31, 1, 'sda', 25.00, '2019-07-28 03:51:37', '2019-07-28 03:51:37'),
(107, 31, 2, 'adsa', 50.00, '2019-07-28 03:51:37', '2019-07-28 03:51:37'),
(108, 31, 3, 'efve', 75.00, '2019-07-28 03:51:37', '2019-07-28 03:51:37'),
(109, 31, 4, 'sdcs', 95.00, '2019-07-28 03:51:37', '2019-07-28 03:51:37'),
(110, 32, 1, 'sdfdf', 25.00, '2019-07-28 03:54:51', '2019-07-28 03:54:51'),
(111, 32, 2, 'jtgh', 50.00, '2019-07-28 03:54:51', '2019-07-28 03:54:51'),
(112, 32, 3, 'fgf', 75.00, '2019-07-28 03:54:51', '2019-07-28 03:54:51'),
(113, 32, 4, 'fdg', 95.00, '2019-07-28 03:54:52', '2019-07-28 03:54:52'),
(114, 33, 1, 'dsc', 25.00, '2019-07-28 03:56:14', '2019-07-28 03:56:14'),
(115, 33, 2, 'sdf', 50.00, '2019-07-28 03:56:14', '2019-07-28 03:56:14'),
(116, 33, 3, 'fg', 75.00, '2019-07-28 03:56:14', '2019-07-28 03:56:14'),
(117, 33, 4, 'fgfd', 95.00, '2019-07-28 03:56:14', '2019-07-28 03:56:14');

-- --------------------------------------------------------

--
-- Table structure for table `performance_criteria_indicator_archives`
--

CREATE TABLE `performance_criteria_indicator_archives` (
  `id` int(10) UNSIGNED NOT NULL,
  `performance_criteria_id` int(11) NOT NULL,
  `performance_indicator_id` int(11) NOT NULL,
  `description` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `score_percentage` double(8,2) NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `performance_criteria_indicator_archives`
--

INSERT INTO `performance_criteria_indicator_archives` (`id`, `performance_criteria_id`, `performance_indicator_id`, `description`, `score_percentage`, `created_at`, `updated_at`) VALUES
(1, 14, 1, 'Can hardly manifest any knowledge of computing, science and math appropriate to the discipline', 25.00, '2019-07-22 06:52:29', '2019-07-22 06:52:29'),
(2, 14, 2, 'Obtain some knowledge of computing, science, and mathematics appropriate to the discipline', 50.00, '2019-07-22 06:52:29', '2019-07-22 06:52:29'),
(3, 14, 3, 'Obtain substantial knowledge of computing, science and mathematics appropriate to the discipline', 75.00, '2019-07-22 06:52:29', '2019-07-22 06:52:29'),
(4, 14, 4, 'Obtain almost all knowledge of computing, science, and mathematics appropriate to the discipline', 95.00, '2019-07-22 06:52:29', '2019-07-22 06:52:29'),
(5, 15, 1, 'Can hardly understand best practice and standards, and their applications', 25.00, '2019-07-22 06:52:30', '2019-07-22 06:52:30'),
(6, 15, 2, 'Can sometimes understand best practice and standards, and their applications', 50.00, '2019-07-22 06:52:30', '2019-07-22 06:52:30'),
(7, 15, 3, 'Can easily understand best practice and standards, and their applications', 75.00, '2019-07-22 06:52:30', '2019-07-22 06:52:30'),
(8, 15, 4, 'Can apply and understand best practice and standards, and their applications', 95.00, '2019-07-22 06:52:30', '2019-07-22 06:52:30'),
(9, 16, 1, 'unsatisfactory', 25.00, '2019-07-22 06:52:30', '2019-07-22 06:52:30'),
(10, 16, 2, 'developing', 50.00, '2019-07-22 06:52:30', '2019-07-22 06:52:30'),
(11, 16, 3, 'satisfactory', 75.00, '2019-07-22 06:52:30', '2019-07-22 06:52:30'),
(12, 16, 4, 'exemplary', 95.00, '2019-07-22 06:52:30', '2019-07-22 06:52:30'),
(13, 17, 1, 'unsatisfactory', 26.00, '2019-07-22 06:52:30', '2019-07-22 06:52:30'),
(14, 17, 2, 'developing', 50.00, '2019-07-22 06:52:30', '2019-07-22 06:52:30'),
(15, 17, 3, 'satisfactory', 75.00, '2019-07-22 06:52:30', '2019-07-22 06:52:30'),
(16, 17, 4, 'exemplary', 95.00, '2019-07-22 06:52:31', '2019-07-22 06:52:31'),
(17, 18, 1, 'asd', 25.00, '2019-07-22 06:52:31', '2019-07-22 06:52:31'),
(18, 18, 2, 'asd', 50.00, '2019-07-22 06:52:31', '2019-07-22 06:52:31'),
(19, 18, 3, 'asdasd', 75.00, '2019-07-22 06:52:31', '2019-07-22 06:52:31'),
(20, 18, 4, 'asdasd', 95.00, '2019-07-22 06:52:31', '2019-07-22 06:52:31'),
(21, 19, 1, 'asd', 25.00, '2019-07-22 06:52:31', '2019-07-22 06:52:31'),
(22, 19, 2, 'asdasd', 50.00, '2019-07-22 06:52:31', '2019-07-22 06:52:31'),
(23, 19, 3, 'asdasd', 75.00, '2019-07-22 06:52:31', '2019-07-22 06:52:31'),
(24, 19, 4, 'asdasd', 95.00, '2019-07-22 06:52:31', '2019-07-22 06:52:31'),
(25, 20, 1, 'asdasd', 25.00, '2019-07-22 06:52:31', '2019-07-22 06:52:31'),
(26, 20, 2, 'asdasd', 50.00, '2019-07-22 06:52:31', '2019-07-22 06:52:31'),
(27, 20, 3, 'asdasdasd', 75.00, '2019-07-22 06:52:31', '2019-07-22 06:52:31'),
(28, 20, 4, 'asdasdadsad', 95.00, '2019-07-22 06:52:32', '2019-07-22 06:52:32'),
(29, 21, 1, 'unsatisfactory', 25.00, '2019-07-22 06:52:32', '2019-07-22 06:52:32'),
(30, 21, 2, 'developing', 50.00, '2019-07-22 06:52:32', '2019-07-22 06:52:32'),
(31, 21, 3, 'satisfactory', 75.00, '2019-07-22 06:52:32', '2019-07-22 06:52:32'),
(32, 21, 4, 'exemplary', 95.00, '2019-07-22 06:52:32', '2019-07-22 06:52:32'),
(33, 22, 1, 'asd', 25.00, '2019-07-22 06:52:32', '2019-07-22 06:52:32'),
(34, 22, 2, 'asdasd', 50.00, '2019-07-22 06:52:32', '2019-07-22 06:52:32'),
(35, 22, 3, 'asdasd', 75.00, '2019-07-22 06:52:32', '2019-07-22 06:52:32'),
(36, 22, 4, 'asdasd', 95.00, '2019-07-22 06:52:32', '2019-07-22 06:52:32'),
(37, 23, 1, 'ddd1', 25.00, '2019-07-22 06:52:32', '2019-07-22 06:52:32'),
(38, 23, 2, 'ddd1', 50.00, '2019-07-22 06:52:32', '2019-07-22 06:52:32'),
(39, 23, 3, 'ddd1', 75.00, '2019-07-22 06:52:32', '2019-07-22 06:52:32'),
(40, 23, 4, 'ddd1', 95.00, '2019-07-22 06:52:33', '2019-07-22 06:52:33'),
(41, 24, 1, 'unsatisfactory', 25.00, '2019-07-22 06:52:33', '2019-07-22 06:52:33'),
(42, 24, 2, 'developing', 50.00, '2019-07-22 06:52:33', '2019-07-22 06:52:33'),
(43, 24, 3, 'satisfactory', 75.00, '2019-07-22 06:52:33', '2019-07-22 06:52:33'),
(44, 24, 4, 'exemplary', 95.00, '2019-07-22 06:52:33', '2019-07-22 06:52:33'),
(45, 25, 1, 'unsatisfactory', 25.00, '2019-07-22 06:52:33', '2019-07-22 06:52:33'),
(46, 25, 2, 'developing', 50.00, '2019-07-22 06:52:33', '2019-07-22 06:52:33'),
(47, 25, 3, 'satisfactory', 75.00, '2019-07-22 06:52:33', '2019-07-22 06:52:33'),
(48, 25, 4, 'exemplary', 95.00, '2019-07-22 06:52:33', '2019-07-22 06:52:33'),
(49, 26, 1, 'unsatisfactory', 25.00, '2019-07-22 06:52:33', '2019-07-22 06:52:33'),
(50, 26, 2, 'developing', 50.00, '2019-07-22 06:52:33', '2019-07-22 06:52:33'),
(51, 26, 3, 'satisfactory', 75.00, '2019-07-22 06:52:33', '2019-07-22 06:52:33'),
(52, 26, 4, 'exemplary', 95.00, '2019-07-22 06:52:33', '2019-07-22 06:52:33'),
(53, 27, 1, 'Can hardly manifest any knowledge of computing, science and math appropriate to the discipline', 25.00, '2019-07-22 06:56:57', '2019-07-22 06:56:57'),
(54, 27, 2, 'Obtain some knowledge of computing, science, and mathematics appropriate to the discipline', 50.00, '2019-07-22 06:56:57', '2019-07-22 06:56:57'),
(55, 27, 3, 'Obtain substantial knowledge of computing, science and mathematics appropriate to the discipline', 75.00, '2019-07-22 06:56:58', '2019-07-22 06:56:58'),
(56, 27, 4, 'Obtain almost all knowledge of computing, science, and mathematics appropriate to the discipline', 95.00, '2019-07-22 06:56:58', '2019-07-22 06:56:58'),
(57, 28, 1, 'Can hardly understand best practice and standards, and their applications', 25.00, '2019-07-22 06:56:58', '2019-07-22 06:56:58'),
(58, 28, 2, 'Can sometimes understand best practice and standards, and their applications', 50.00, '2019-07-22 06:56:58', '2019-07-22 06:56:58'),
(59, 28, 3, 'Can easily understand best practice and standards, and their applications', 75.00, '2019-07-22 06:56:58', '2019-07-22 06:56:58'),
(60, 28, 4, 'Can apply and understand best practice and standards, and their applications', 95.00, '2019-07-22 06:56:58', '2019-07-22 06:56:58'),
(61, 29, 1, 'unsatisfactory', 25.00, '2019-07-22 06:56:58', '2019-07-22 06:56:58'),
(62, 29, 2, 'developing', 50.00, '2019-07-22 06:56:58', '2019-07-22 06:56:58'),
(63, 29, 3, 'satisfactory', 75.00, '2019-07-22 06:56:58', '2019-07-22 06:56:58'),
(64, 29, 4, 'exemplary', 95.00, '2019-07-22 06:56:58', '2019-07-22 06:56:58'),
(65, 30, 1, 'unsatisfactory', 26.00, '2019-07-22 06:56:59', '2019-07-22 06:56:59'),
(66, 30, 2, 'developing', 50.00, '2019-07-22 06:56:59', '2019-07-22 06:56:59'),
(67, 30, 3, 'satisfactory', 75.00, '2019-07-22 06:56:59', '2019-07-22 06:56:59'),
(68, 30, 4, 'exemplary', 95.00, '2019-07-22 06:56:59', '2019-07-22 06:56:59'),
(69, 31, 1, 'asd', 25.00, '2019-07-22 06:56:59', '2019-07-22 06:56:59'),
(70, 31, 2, 'asd', 50.00, '2019-07-22 06:56:59', '2019-07-22 06:56:59'),
(71, 31, 3, 'asdasd', 75.00, '2019-07-22 06:56:59', '2019-07-22 06:56:59'),
(72, 31, 4, 'asdasd', 95.00, '2019-07-22 06:56:59', '2019-07-22 06:56:59'),
(73, 32, 1, 'asd', 25.00, '2019-07-22 06:56:59', '2019-07-22 06:56:59'),
(74, 32, 2, 'asdasd', 50.00, '2019-07-22 06:56:59', '2019-07-22 06:56:59'),
(75, 32, 3, 'asdasd', 75.00, '2019-07-22 06:56:59', '2019-07-22 06:56:59'),
(76, 32, 4, 'asdasd', 95.00, '2019-07-22 06:56:59', '2019-07-22 06:56:59'),
(77, 33, 1, 'asdasd', 25.00, '2019-07-22 06:56:59', '2019-07-22 06:56:59'),
(78, 33, 2, 'asdasd', 50.00, '2019-07-22 06:56:59', '2019-07-22 06:56:59'),
(79, 33, 3, 'asdasdasd', 75.00, '2019-07-22 06:57:00', '2019-07-22 06:57:00'),
(80, 33, 4, 'asdasdadsad', 95.00, '2019-07-22 06:57:00', '2019-07-22 06:57:00'),
(81, 34, 1, 'unsatisfactory', 25.00, '2019-07-22 06:57:00', '2019-07-22 06:57:00'),
(82, 34, 2, 'developing', 50.00, '2019-07-22 06:57:00', '2019-07-22 06:57:00'),
(83, 34, 3, 'satisfactory', 75.00, '2019-07-22 06:57:00', '2019-07-22 06:57:00'),
(84, 34, 4, 'exemplary', 95.00, '2019-07-22 06:57:00', '2019-07-22 06:57:00'),
(85, 35, 1, 'asd', 25.00, '2019-07-22 06:57:00', '2019-07-22 06:57:00'),
(86, 35, 2, 'asdasd', 50.00, '2019-07-22 06:57:00', '2019-07-22 06:57:00'),
(87, 35, 3, 'asdasd', 75.00, '2019-07-22 06:57:00', '2019-07-22 06:57:00'),
(88, 35, 4, 'asdasd', 95.00, '2019-07-22 06:57:00', '2019-07-22 06:57:00'),
(89, 36, 1, 'ddd1', 25.00, '2019-07-22 06:57:00', '2019-07-22 06:57:00'),
(90, 36, 2, 'ddd1', 50.00, '2019-07-22 06:57:00', '2019-07-22 06:57:00'),
(91, 36, 3, 'ddd1', 75.00, '2019-07-22 06:57:00', '2019-07-22 06:57:00'),
(92, 36, 4, 'ddd1', 95.00, '2019-07-22 06:57:01', '2019-07-22 06:57:01'),
(93, 37, 1, 'unsatisfactory', 25.00, '2019-07-22 06:57:01', '2019-07-22 06:57:01'),
(94, 37, 2, 'developing', 50.00, '2019-07-22 06:57:01', '2019-07-22 06:57:01'),
(95, 37, 3, 'satisfactory', 75.00, '2019-07-22 06:57:01', '2019-07-22 06:57:01'),
(96, 37, 4, 'exemplary', 95.00, '2019-07-22 06:57:01', '2019-07-22 06:57:01'),
(97, 38, 1, 'unsatisfactory', 25.00, '2019-07-22 06:57:01', '2019-07-22 06:57:01'),
(98, 38, 2, 'developing', 50.00, '2019-07-22 06:57:01', '2019-07-22 06:57:01'),
(99, 38, 3, 'satisfactory', 75.00, '2019-07-22 06:57:01', '2019-07-22 06:57:01'),
(100, 38, 4, 'exemplary', 95.00, '2019-07-22 06:57:01', '2019-07-22 06:57:01'),
(101, 39, 1, 'unsatisfactory', 25.00, '2019-07-22 06:57:01', '2019-07-22 06:57:01'),
(102, 39, 2, 'developing', 50.00, '2019-07-22 06:57:01', '2019-07-22 06:57:01'),
(103, 39, 3, 'satisfactory', 75.00, '2019-07-22 06:57:01', '2019-07-22 06:57:01'),
(104, 39, 4, 'exemplary', 95.00, '2019-07-22 06:57:01', '2019-07-22 06:57:01'),
(105, 40, 1, 'Can hardly manifest any knowledge of computing, science and math appropriate to the discipline', 25.00, '2019-07-22 06:59:26', '2019-07-22 06:59:26'),
(106, 40, 2, 'Obtain some knowledge of computing, science, and mathematics appropriate to the discipline', 50.00, '2019-07-22 06:59:27', '2019-07-22 06:59:27'),
(107, 40, 3, 'Obtain substantial knowledge of computing, science and mathematics appropriate to the discipline', 75.00, '2019-07-22 06:59:27', '2019-07-22 06:59:27'),
(108, 40, 4, 'Obtain almost all knowledge of computing, science, and mathematics appropriate to the discipline', 95.00, '2019-07-22 06:59:27', '2019-07-22 06:59:27'),
(109, 41, 1, 'Can hardly understand best practice and standards, and their applications', 25.00, '2019-07-22 06:59:27', '2019-07-22 06:59:27'),
(110, 41, 2, 'Can sometimes understand best practice and standards, and their applications', 50.00, '2019-07-22 06:59:27', '2019-07-22 06:59:27'),
(111, 41, 3, 'Can easily understand best practice and standards, and their applications', 75.00, '2019-07-22 06:59:27', '2019-07-22 06:59:27'),
(112, 41, 4, 'Can apply and understand best practice and standards, and their applications', 95.00, '2019-07-22 06:59:27', '2019-07-22 06:59:27'),
(113, 42, 1, 'unsatisfactory', 25.00, '2019-07-22 06:59:27', '2019-07-22 06:59:27'),
(114, 42, 2, 'developing', 50.00, '2019-07-22 06:59:27', '2019-07-22 06:59:27'),
(115, 42, 3, 'satisfactory', 75.00, '2019-07-22 06:59:27', '2019-07-22 06:59:27'),
(116, 42, 4, 'exemplary', 95.00, '2019-07-22 06:59:27', '2019-07-22 06:59:27'),
(117, 43, 1, 'unsatisfactory', 26.00, '2019-07-22 06:59:27', '2019-07-22 06:59:27'),
(118, 43, 2, 'developing', 50.00, '2019-07-22 06:59:27', '2019-07-22 06:59:27'),
(119, 43, 3, 'satisfactory', 75.00, '2019-07-22 06:59:27', '2019-07-22 06:59:27'),
(120, 43, 4, 'exemplary', 95.00, '2019-07-22 06:59:28', '2019-07-22 06:59:28'),
(121, 44, 1, 'asd', 25.00, '2019-07-22 06:59:28', '2019-07-22 06:59:28'),
(122, 44, 2, 'asd', 50.00, '2019-07-22 06:59:28', '2019-07-22 06:59:28'),
(123, 44, 3, 'asdasd', 75.00, '2019-07-22 06:59:28', '2019-07-22 06:59:28'),
(124, 44, 4, 'asdasd', 95.00, '2019-07-22 06:59:28', '2019-07-22 06:59:28'),
(125, 45, 1, 'asd', 25.00, '2019-07-22 06:59:28', '2019-07-22 06:59:28'),
(126, 45, 2, 'asdasd', 50.00, '2019-07-22 06:59:28', '2019-07-22 06:59:28'),
(127, 45, 3, 'asdasd', 75.00, '2019-07-22 06:59:28', '2019-07-22 06:59:28'),
(128, 45, 4, 'asdasd', 95.00, '2019-07-22 06:59:28', '2019-07-22 06:59:28'),
(129, 46, 1, 'asdasd', 25.00, '2019-07-22 06:59:28', '2019-07-22 06:59:28'),
(130, 46, 2, 'asdasd', 50.00, '2019-07-22 06:59:28', '2019-07-22 06:59:28'),
(131, 46, 3, 'asdasdasd', 75.00, '2019-07-22 06:59:29', '2019-07-22 06:59:29'),
(132, 46, 4, 'asdasdadsad', 95.00, '2019-07-22 06:59:29', '2019-07-22 06:59:29'),
(133, 47, 1, 'unsatisfactory', 25.00, '2019-07-22 06:59:29', '2019-07-22 06:59:29'),
(134, 47, 2, 'developing', 50.00, '2019-07-22 06:59:29', '2019-07-22 06:59:29'),
(135, 47, 3, 'satisfactory', 75.00, '2019-07-22 06:59:29', '2019-07-22 06:59:29'),
(136, 47, 4, 'exemplary', 95.00, '2019-07-22 06:59:29', '2019-07-22 06:59:29'),
(137, 48, 1, 'asd', 25.00, '2019-07-22 06:59:29', '2019-07-22 06:59:29'),
(138, 48, 2, 'asdasd', 50.00, '2019-07-22 06:59:29', '2019-07-22 06:59:29'),
(139, 48, 3, 'asdasd', 75.00, '2019-07-22 06:59:29', '2019-07-22 06:59:29'),
(140, 48, 4, 'asdasd', 95.00, '2019-07-22 06:59:29', '2019-07-22 06:59:29'),
(141, 49, 1, 'ddd1', 25.00, '2019-07-22 06:59:29', '2019-07-22 06:59:29'),
(142, 49, 2, 'ddd1', 50.00, '2019-07-22 06:59:29', '2019-07-22 06:59:29'),
(143, 49, 3, 'ddd1', 75.00, '2019-07-22 06:59:30', '2019-07-22 06:59:30'),
(144, 49, 4, 'ddd1', 95.00, '2019-07-22 06:59:30', '2019-07-22 06:59:30'),
(145, 50, 1, 'unsatisfactory', 25.00, '2019-07-22 06:59:30', '2019-07-22 06:59:30'),
(146, 50, 2, 'developing', 50.00, '2019-07-22 06:59:30', '2019-07-22 06:59:30'),
(147, 50, 3, 'satisfactory', 75.00, '2019-07-22 06:59:30', '2019-07-22 06:59:30'),
(148, 50, 4, 'exemplary', 95.00, '2019-07-22 06:59:30', '2019-07-22 06:59:30'),
(149, 51, 1, 'unsatisfactory', 25.00, '2019-07-22 06:59:30', '2019-07-22 06:59:30'),
(150, 51, 2, 'developing', 50.00, '2019-07-22 06:59:30', '2019-07-22 06:59:30'),
(151, 51, 3, 'satisfactory', 75.00, '2019-07-22 06:59:30', '2019-07-22 06:59:30'),
(152, 51, 4, 'exemplary', 95.00, '2019-07-22 06:59:30', '2019-07-22 06:59:30'),
(153, 52, 1, 'unsatisfactory', 25.00, '2019-07-22 06:59:30', '2019-07-22 06:59:30'),
(154, 52, 2, 'developing', 50.00, '2019-07-22 06:59:30', '2019-07-22 06:59:30'),
(155, 52, 3, 'satisfactory', 75.00, '2019-07-22 06:59:30', '2019-07-22 06:59:30'),
(156, 52, 4, 'exemplary', 95.00, '2019-07-22 06:59:30', '2019-07-22 06:59:30'),
(157, 53, 1, 'Can hardly manifest any knowledge of computing, science and math appropriate to the discipline', 25.00, '2019-07-22 07:27:35', '2019-07-22 07:27:35'),
(158, 53, 2, 'Obtain some knowledge of computing, science, and mathematics appropriate to the discipline', 50.00, '2019-07-22 07:27:35', '2019-07-22 07:27:35'),
(159, 53, 3, 'Obtain substantial knowledge of computing, science and mathematics appropriate to the discipline', 75.00, '2019-07-22 07:27:35', '2019-07-22 07:27:35'),
(160, 53, 4, 'Obtain almost all knowledge of computing, science, and mathematics appropriate to the discipline', 95.00, '2019-07-22 07:27:35', '2019-07-22 07:27:35'),
(161, 54, 1, 'Can hardly understand best practice and standards, and their applications', 25.00, '2019-07-22 07:27:35', '2019-07-22 07:27:35'),
(162, 54, 2, 'Can sometimes understand best practice and standards, and their applications', 50.00, '2019-07-22 07:27:35', '2019-07-22 07:27:35'),
(163, 54, 3, 'Can easily understand best practice and standards, and their applications', 75.00, '2019-07-22 07:27:36', '2019-07-22 07:27:36'),
(164, 54, 4, 'Can apply and understand best practice and standards, and their applications', 95.00, '2019-07-22 07:27:36', '2019-07-22 07:27:36'),
(165, 55, 1, 'unsatisfactory', 25.00, '2019-07-22 07:27:36', '2019-07-22 07:27:36'),
(166, 55, 2, 'developing', 50.00, '2019-07-22 07:27:36', '2019-07-22 07:27:36'),
(167, 55, 3, 'satisfactory', 75.00, '2019-07-22 07:27:36', '2019-07-22 07:27:36'),
(168, 55, 4, 'exemplary', 95.00, '2019-07-22 07:27:36', '2019-07-22 07:27:36'),
(169, 56, 1, 'unsatisfactory', 26.00, '2019-07-22 07:27:36', '2019-07-22 07:27:36'),
(170, 56, 2, 'developing', 50.00, '2019-07-22 07:27:36', '2019-07-22 07:27:36'),
(171, 56, 3, 'satisfactory', 75.00, '2019-07-22 07:27:36', '2019-07-22 07:27:36'),
(172, 56, 4, 'exemplary', 95.00, '2019-07-22 07:27:36', '2019-07-22 07:27:36'),
(173, 57, 1, 'asd', 25.00, '2019-07-22 07:27:36', '2019-07-22 07:27:36'),
(174, 57, 2, 'asd', 50.00, '2019-07-22 07:27:36', '2019-07-22 07:27:36'),
(175, 57, 3, 'asdasd', 75.00, '2019-07-22 07:27:36', '2019-07-22 07:27:36'),
(176, 57, 4, 'asdasd', 95.00, '2019-07-22 07:27:36', '2019-07-22 07:27:36'),
(177, 58, 1, 'asd', 25.00, '2019-07-22 07:27:37', '2019-07-22 07:27:37'),
(178, 58, 2, 'asdasd', 50.00, '2019-07-22 07:27:37', '2019-07-22 07:27:37'),
(179, 58, 3, 'asdasd', 75.00, '2019-07-22 07:27:37', '2019-07-22 07:27:37'),
(180, 58, 4, 'asdasd', 95.00, '2019-07-22 07:27:37', '2019-07-22 07:27:37'),
(181, 59, 1, 'asdasd', 25.00, '2019-07-22 07:27:37', '2019-07-22 07:27:37'),
(182, 59, 2, 'asdasd', 50.00, '2019-07-22 07:27:37', '2019-07-22 07:27:37'),
(183, 59, 3, 'asdasdasd', 75.00, '2019-07-22 07:27:37', '2019-07-22 07:27:37'),
(184, 59, 4, 'asdasdadsad', 95.00, '2019-07-22 07:27:37', '2019-07-22 07:27:37'),
(185, 60, 1, 'unsatisfactory', 25.00, '2019-07-22 07:27:37', '2019-07-22 07:27:37'),
(186, 60, 2, 'developing', 50.00, '2019-07-22 07:27:37', '2019-07-22 07:27:37'),
(187, 60, 3, 'satisfactory', 75.00, '2019-07-22 07:27:37', '2019-07-22 07:27:37'),
(188, 60, 4, 'exemplary', 95.00, '2019-07-22 07:27:38', '2019-07-22 07:27:38'),
(189, 61, 1, 'asd', 25.00, '2019-07-22 07:27:38', '2019-07-22 07:27:38'),
(190, 61, 2, 'asdasd', 50.00, '2019-07-22 07:27:38', '2019-07-22 07:27:38'),
(191, 61, 3, 'asdasd', 75.00, '2019-07-22 07:27:38', '2019-07-22 07:27:38'),
(192, 61, 4, 'asdasd', 95.00, '2019-07-22 07:27:38', '2019-07-22 07:27:38'),
(193, 62, 1, 'ddd1', 25.00, '2019-07-22 07:27:38', '2019-07-22 07:27:38'),
(194, 62, 2, 'ddd1', 50.00, '2019-07-22 07:27:38', '2019-07-22 07:27:38'),
(195, 62, 3, 'ddd1', 75.00, '2019-07-22 07:27:38', '2019-07-22 07:27:38'),
(196, 62, 4, 'ddd1', 95.00, '2019-07-22 07:27:38', '2019-07-22 07:27:38'),
(197, 63, 1, 'unsatisfactory', 25.00, '2019-07-22 07:27:39', '2019-07-22 07:27:39'),
(198, 63, 2, 'developing', 50.00, '2019-07-22 07:27:39', '2019-07-22 07:27:39'),
(199, 63, 3, 'satisfactory', 75.00, '2019-07-22 07:27:39', '2019-07-22 07:27:39'),
(200, 63, 4, 'exemplary', 95.00, '2019-07-22 07:27:39', '2019-07-22 07:27:39'),
(201, 64, 1, 'unsatisfactory', 25.00, '2019-07-22 07:27:39', '2019-07-22 07:27:39'),
(202, 64, 2, 'developing', 50.00, '2019-07-22 07:27:39', '2019-07-22 07:27:39'),
(203, 64, 3, 'satisfactory', 75.00, '2019-07-22 07:27:39', '2019-07-22 07:27:39'),
(204, 64, 4, 'exemplary', 95.00, '2019-07-22 07:27:39', '2019-07-22 07:27:39'),
(205, 65, 1, 'unsatisfactory', 25.00, '2019-07-22 07:27:39', '2019-07-22 07:27:39'),
(206, 65, 2, 'developing', 50.00, '2019-07-22 07:27:39', '2019-07-22 07:27:39'),
(207, 65, 3, 'satisfactory', 75.00, '2019-07-22 07:27:39', '2019-07-22 07:27:39'),
(208, 65, 4, 'exemplary', 95.00, '2019-07-22 07:27:39', '2019-07-22 07:27:39'),
(209, 66, 1, 'asdasd', 25.00, '2019-07-22 07:27:40', '2019-07-22 07:27:40'),
(210, 66, 2, 'asdasd', 50.00, '2019-07-22 07:27:40', '2019-07-22 07:27:40'),
(211, 66, 3, 'asdasd', 75.00, '2019-07-22 07:27:40', '2019-07-22 07:27:40'),
(212, 66, 4, 'asdasd', 95.00, '2019-07-22 07:27:40', '2019-07-22 07:27:40'),
(213, 67, 1, 'Can hardly manifest any knowledge of computing, science and math appropriate to the discipline', 25.00, '2019-09-15 09:24:11', '2019-09-15 09:24:11'),
(214, 67, 2, 'Obtain some knowledge of computing, science, and mathematics appropriate to the discipline', 50.00, '2019-09-15 09:24:11', '2019-09-15 09:24:11'),
(215, 67, 3, 'Obtain substantial knowledge of computing, science and mathematics appropriate to the discipline', 75.00, '2019-09-15 09:24:11', '2019-09-15 09:24:11'),
(216, 67, 4, 'Obtain almost all knowledge of computing, science, and mathematics appropriate to the discipline', 95.00, '2019-09-15 09:24:11', '2019-09-15 09:24:11'),
(217, 68, 1, 'Can hardly understand best practice and standards, and their applications', 25.00, '2019-09-15 09:24:11', '2019-09-15 09:24:11'),
(218, 68, 2, 'Can sometimes understand best practice and standards, and their applications', 50.00, '2019-09-15 09:24:11', '2019-09-15 09:24:11'),
(219, 68, 3, 'Can easily understand best practice and standards, and their applications', 75.00, '2019-09-15 09:24:11', '2019-09-15 09:24:11'),
(220, 68, 4, 'Can apply and understand best practice and standards, and their applications', 95.00, '2019-09-15 09:24:11', '2019-09-15 09:24:11'),
(221, 69, 1, 'unsatisfactory', 25.00, '2019-09-15 09:24:12', '2019-09-15 09:24:12'),
(222, 69, 2, 'developing', 50.00, '2019-09-15 09:24:12', '2019-09-15 09:24:12'),
(223, 69, 3, 'satisfactory', 75.00, '2019-09-15 09:24:12', '2019-09-15 09:24:12'),
(224, 69, 4, 'exemplary', 95.00, '2019-09-15 09:24:12', '2019-09-15 09:24:12'),
(225, 70, 1, 'unsatisfactory', 26.00, '2019-09-15 09:24:12', '2019-09-15 09:24:12'),
(226, 70, 2, 'developing', 50.00, '2019-09-15 09:24:12', '2019-09-15 09:24:12'),
(227, 70, 3, 'satisfactory', 75.00, '2019-09-15 09:24:12', '2019-09-15 09:24:12'),
(228, 70, 4, 'exemplary', 95.00, '2019-09-15 09:24:12', '2019-09-15 09:24:12'),
(229, 71, 1, 'asd', 25.00, '2019-09-15 09:24:12', '2019-09-15 09:24:12'),
(230, 71, 2, 'asd', 50.00, '2019-09-15 09:24:12', '2019-09-15 09:24:12'),
(231, 71, 3, 'asdasd', 75.00, '2019-09-15 09:24:12', '2019-09-15 09:24:12'),
(232, 71, 4, 'asdasd', 95.00, '2019-09-15 09:24:12', '2019-09-15 09:24:12'),
(233, 72, 1, 'asd', 25.00, '2019-09-15 09:24:12', '2019-09-15 09:24:12'),
(234, 72, 2, 'asdasd', 50.00, '2019-09-15 09:24:13', '2019-09-15 09:24:13'),
(235, 72, 3, 'asdasd', 75.00, '2019-09-15 09:24:13', '2019-09-15 09:24:13'),
(236, 72, 4, 'asdasd', 95.00, '2019-09-15 09:24:13', '2019-09-15 09:24:13'),
(237, 73, 1, 'asdasd', 25.00, '2019-09-15 09:24:13', '2019-09-15 09:24:13'),
(238, 73, 2, 'asdasd', 50.00, '2019-09-15 09:24:13', '2019-09-15 09:24:13'),
(239, 73, 3, 'asdasdasd', 75.00, '2019-09-15 09:24:13', '2019-09-15 09:24:13'),
(240, 73, 4, 'asdasdadsad', 95.00, '2019-09-15 09:24:13', '2019-09-15 09:24:13'),
(241, 74, 1, 'unsatisfactory', 25.00, '2019-09-15 09:24:13', '2019-09-15 09:24:13'),
(242, 74, 2, 'developing', 50.00, '2019-09-15 09:24:13', '2019-09-15 09:24:13'),
(243, 74, 3, 'satisfactory', 75.00, '2019-09-15 09:24:13', '2019-09-15 09:24:13'),
(244, 74, 4, 'exemplary', 95.00, '2019-09-15 09:24:13', '2019-09-15 09:24:13'),
(245, 75, 1, 'asd', 25.00, '2019-09-15 09:24:14', '2019-09-15 09:24:14'),
(246, 75, 2, 'asdasd', 50.00, '2019-09-15 09:24:14', '2019-09-15 09:24:14'),
(247, 75, 3, 'asdasd', 75.00, '2019-09-15 09:24:14', '2019-09-15 09:24:14'),
(248, 75, 4, 'asdasd', 95.00, '2019-09-15 09:24:14', '2019-09-15 09:24:14'),
(249, 76, 1, 'ddd1', 25.00, '2019-09-15 09:24:14', '2019-09-15 09:24:14'),
(250, 76, 2, 'ddd1', 50.00, '2019-09-15 09:24:14', '2019-09-15 09:24:14'),
(251, 76, 3, 'ddd1', 75.00, '2019-09-15 09:24:14', '2019-09-15 09:24:14'),
(252, 76, 4, 'ddd1', 95.00, '2019-09-15 09:24:14', '2019-09-15 09:24:14'),
(253, 77, 1, 'unsatisfactory', 25.00, '2019-09-15 09:24:14', '2019-09-15 09:24:14'),
(254, 77, 2, 'developing', 50.00, '2019-09-15 09:24:14', '2019-09-15 09:24:14'),
(255, 77, 3, 'satisfactory', 75.00, '2019-09-15 09:24:14', '2019-09-15 09:24:14'),
(256, 77, 4, 'exemplary', 95.00, '2019-09-15 09:24:14', '2019-09-15 09:24:14'),
(257, 78, 1, 'unsatisfactory', 25.00, '2019-09-15 09:24:15', '2019-09-15 09:24:15'),
(258, 78, 2, 'developing', 50.00, '2019-09-15 09:24:15', '2019-09-15 09:24:15'),
(259, 78, 3, 'satisfactory', 75.00, '2019-09-15 09:24:15', '2019-09-15 09:24:15'),
(260, 78, 4, 'exemplary', 95.00, '2019-09-15 09:24:15', '2019-09-15 09:24:15'),
(261, 79, 1, 'unsatisfactory', 25.00, '2019-09-15 09:24:15', '2019-09-15 09:24:15'),
(262, 79, 2, 'developing', 50.00, '2019-09-15 09:24:15', '2019-09-15 09:24:15'),
(263, 79, 3, 'satisfactory', 75.00, '2019-09-15 09:24:15', '2019-09-15 09:24:15'),
(264, 79, 4, 'exemplary', 95.00, '2019-09-15 09:24:15', '2019-09-15 09:24:15');

-- --------------------------------------------------------

--
-- Table structure for table `performance_indicators`
--

CREATE TABLE `performance_indicators` (
  `id` int(11) NOT NULL,
  `description` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `performance_indicators`
--

INSERT INTO `performance_indicators` (`id`, `description`) VALUES
(1, 'Unsatisfactory'),
(2, 'Developing'),
(3, 'Satisfactory'),
(4, 'Exemplary');

-- --------------------------------------------------------

--
-- Table structure for table `programs`
--

CREATE TABLE `programs` (
  `id` int(11) NOT NULL,
  `program_code` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL,
  `description` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `college_id` int(11) NOT NULL,
  `color` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `so_rev_no` int(11) DEFAULT '1',
  `so_is_saved` tinyint(1) DEFAULT '0',
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `programs`
--

INSERT INTO `programs` (`id`, `program_code`, `description`, `college_id`, `color`, `so_rev_no`, `so_is_saved`, `created_at`, `updated_at`) VALUES
(1, 'BSIT', 'BACHELOR OF SCIENCE IN INFORMATION TECHNOLOGY', 1, '#00ACC1', 11, 0, '2019-05-07 23:08:33', '2019-09-15 09:24:15'),
(2, 'BSCS', 'BACHELOR OF SCIENCE IN COMPUTER SCIENCE', 1, '#FDD835', 1, 0, '2019-05-07 23:35:06', '2019-05-08 00:26:28'),
(9, 'BSBA', 'BACHELOR OF SCIENCE IN BUSINESS ADMINISTRATION', 5, '#43A047', 1, 0, '2019-05-08 01:17:34', '2019-05-08 01:17:34'),
(10, 'BSA', 'BACHELOR OF SCIENCE IN ACCOUNTING', 5, '#00ACC1', 1, 0, '2019-05-08 01:31:31', '2019-05-08 01:31:31'),
(11, 'BSN', 'BACHELOR OF SCIENCE IN NURSING', 6, '#1E88E5', 1, 0, '2019-05-08 02:24:12', '2019-05-08 02:28:58'),
(12, 'TEST', 'TESTING LANG', 1, '#E53935', 1, 0, '2019-07-28 00:51:42', '2019-07-28 00:51:42');

-- --------------------------------------------------------

--
-- Table structure for table `settings`
--

CREATE TABLE `settings` (
  `id` int(10) UNSIGNED NOT NULL,
  `name` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `value` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `settings`
--

INSERT INTO `settings` (`id`, `name`, `value`, `created_at`, `updated_at`) VALUES
(1, 'show_assessment_details_to_student', 'true', NULL, '2019-09-17 05:27:27');

-- --------------------------------------------------------

--
-- Table structure for table `students`
--

CREATE TABLE `students` (
  `id` int(11) NOT NULL,
  `student_id` varchar(7) COLLATE utf8mb4_unicode_ci NOT NULL,
  `program_id` int(11) NOT NULL,
  `curriculum_id` int(11) NOT NULL,
  `user_id` int(11) NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `students`
--

INSERT INTO `students` (`id`, `student_id`, `program_id`, `curriculum_id`, `user_id`, `created_at`, `updated_at`) VALUES
(9, '1823456', 1, 44, 30, '2019-07-02 22:47:29', '2019-09-01 02:43:02'),
(10, '1923345', 1, 44, 35, '2019-07-04 14:36:41', '2019-07-04 14:36:41'),
(11, '1989345', 1, 44, 36, '2019-07-04 14:38:16', '2019-09-01 05:15:18'),
(12, '1989576', 2, 43, 37, '2019-07-04 14:40:21', '2019-08-09 10:00:51'),
(13, '1989458', 1, 44, 38, '2019-07-04 14:43:40', '2019-07-04 14:43:40'),
(14, '1519247', 2, 43, 49, '2019-08-09 09:53:53', '2019-08-09 09:53:53'),
(15, '1617456', 1, 44, 50, '2019-08-09 09:56:37', '2019-08-09 09:56:37'),
(16, '1698597', 1, 44, 51, '2019-08-10 05:07:12', '2019-08-10 05:07:12'),
(17, '1585958', 1, 44, 52, '2019-08-10 05:30:11', '2019-08-11 06:07:35'),
(18, '1465981', 1, 44, 53, '2019-08-10 05:32:26', '2019-08-10 05:32:26'),
(19, '1489597', 1, 44, 54, '2019-08-10 05:34:55', '2019-08-10 05:34:55'),
(20, '1359875', 1, 44, 55, '2019-08-10 05:37:06', '2019-08-11 06:16:14'),
(21, '1684789', 1, 44, 56, '2019-08-10 05:38:19', '2019-08-11 06:24:05'),
(22, '1569878', 1, 43, 57, '2019-08-10 05:39:46', '2019-08-10 05:39:46'),
(23, '1489757', 1, 44, 58, '2019-08-10 05:40:49', '2019-08-11 06:29:19'),
(24, '1458978', 1, 44, 59, '2019-08-10 05:41:56', '2019-08-10 05:41:56'),
(25, '1385878', 1, 44, 60, '2019-08-10 05:42:56', '2019-08-10 05:42:56'),
(26, '1589748', 2, 43, 61, '2019-08-10 05:44:01', '2019-08-10 05:44:01'),
(27, '1654876', 1, 44, 62, '2019-08-10 05:46:59', '2019-08-10 05:46:59'),
(28, '1568978', 1, 44, 63, '2019-08-10 05:49:22', '2019-08-10 05:49:22'),
(29, '1659878', 1, 44, 64, '2019-08-10 05:50:17', '2019-08-10 05:50:17'),
(30, '1598875', 2, 43, 65, '2019-08-10 05:51:34', '2019-08-10 05:51:34'),
(31, '1568974', 2, 43, 66, '2019-08-10 05:52:47', '2019-08-10 05:52:47'),
(32, '1658975', 1, 44, 67, '2019-08-10 05:54:00', '2019-08-10 05:54:00'),
(33, '1658978', 1, 44, 68, '2019-08-10 05:55:20', '2019-08-10 05:55:20'),
(34, '1478945', 1, 44, 69, '2019-08-10 05:56:33', '2019-08-10 05:56:33'),
(35, '1457895', 1, 44, 70, '2019-08-10 06:00:01', '2019-08-11 06:48:50'),
(36, '1519876', 1, 44, 71, '2019-09-15 04:28:56', '2019-09-15 04:28:56');

-- --------------------------------------------------------

--
-- Table structure for table `student_outcomes`
--

CREATE TABLE `student_outcomes` (
  `id` int(11) NOT NULL,
  `program_id` int(11) NOT NULL,
  `so_code` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `description` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `assessment_type_id` int(11) NOT NULL DEFAULT '1',
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  `is_active` tinyint(1) NOT NULL DEFAULT '1'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `student_outcomes`
--

INSERT INTO `student_outcomes` (`id`, `program_id`, `so_code`, `description`, `assessment_type_id`, `created_at`, `updated_at`, `is_active`) VALUES
(7, 1, 'A', 'Apply knowldege of computing, science, and mathematics appropriate to the discipline', 1, '2019-05-17 14:43:14', '2019-09-15 11:54:26', 1),
(8, 1, 'B', 'Undestand best practice and standards, and their applications', 1, '2019-05-17 14:51:54', '2019-07-22 02:57:16', 1),
(9, 1, 'C', 'Analyze complex problems, and identify and define the computing requirements appropriate to its solution', 1, '2019-05-18 03:26:45', '2019-07-22 02:58:16', 1),
(10, 1, 'D', 'Identify and analyze user need and take them into account in the selection, creation, evaluation, and administration of computer based systems', 1, '2019-05-18 06:29:54', '2019-05-27 05:34:49', 1),
(11, 1, 'E', 'Design, implement, and evaluate computer based systems, processes, components, or programs to meet desired needs and requirements under various constraints', 1, '2019-05-18 06:43:44', '2019-07-22 02:58:39', 1),
(12, 1, 'F', 'Integrate IT-based solutions into the user environment effectively', 1, '2019-05-18 06:44:34', '2019-05-27 05:42:27', 1),
(13, 1, 'G', 'Apply knowledge through the use of current techniques, skills, tools and practices necessary for the IT profession', 1, '2019-05-18 06:46:21', '2019-05-27 05:43:00', 1),
(14, 1, 'H', 'Function effectively as a member or leader of a development team recognizing the different roles within a team to accomplish a common goal', 1, '2019-05-18 06:48:06', '2019-05-27 05:43:44', 1),
(15, 1, 'I', 'Assist in the creation of an effective IT project plan', 1, '2019-05-18 07:34:09', '2019-05-27 05:44:11', 1),
(16, 2, 'CS01', 'asdasdasd', 1, '2019-05-18 07:40:22', '2019-08-01 09:58:18', 0),
(17, 1, 'J', 'Communicate effectively with the computing community and with society at large about complex computing activities through logical writing, presentations, and clear instructions', 2, '2019-05-18 13:22:49', '2019-09-15 11:35:20', 1),
(18, 2, 'CS02', 'tryasd', 1, '2019-05-18 13:23:28', '2019-08-01 09:58:22', 0),
(19, 10, 'BA01', 'asdasd', 1, '2019-05-18 13:33:48', '2019-05-18 13:33:48', 1),
(20, 1, 'K', 'Analyze the local and global impact of computing information technology on individuals, organizations, and society', 1, '2019-05-27 05:46:43', '2019-05-27 05:46:43', 1),
(21, 1, 'L', 'Understand professional, ethical, legal, security and social issues and responsibilities in the utilization of information technology', 1, '2019-05-27 05:47:34', '2019-05-27 05:47:34', 1),
(22, 1, 'M', 'Recognize the need for and engage in planning self-learning and improving performance as a foundation for continuing professional development', 1, '2019-05-27 05:48:13', '2019-07-22 03:05:52', 1),
(23, 2, 'c', 'test', 1, '2019-07-22 01:32:48', '2019-08-01 09:58:35', 0),
(24, 1, 'N', 'teasdasd', 1, '2019-07-22 03:04:07', '2019-07-22 07:27:51', 0),
(25, 12, 'TEST', 'asdasd', 1, '2019-07-28 00:58:51', '2019-07-28 00:58:51', 1),
(26, 2, 'A', 'Apply knowledge of computing fundamentals, knowledge of a computing specialization, and mathematics, science and domain knowledge appropriate for the computing specialization to the abstraction and conceptualization of computing models from defined problems and requirements.', 1, '2019-07-28 03:16:44', '2019-07-28 03:16:44', 1),
(27, 2, 'B', 'Identify, analyze, formulate, research literature and solve complex computing problems and requirements reaching substantiated conclusions using fundamental principles of mathematics , computing sciences and relevant domain disciplines.', 1, '2019-07-28 03:31:52', '2019-07-28 03:31:52', 1),
(28, 2, 'C', 'An ability to apply mathematical foundations, algorithmic principles and computer science theory in the modeling and design of computer-based systems in a way that demonstrates comprehension of the trade-offs involved in design choices.', 1, '2019-07-28 03:35:37', '2019-07-28 03:35:37', 1),
(29, 2, 'D', 'Knowledge and understanding of information securitt issues in relation to the design, development and use of information systems.', 1, '2019-07-28 03:37:27', '2019-07-28 03:37:27', 1),
(30, 2, 'E', 'Create, select, adapt and apply appropriate techniques, resources and modern computing tools to complex computing activities, with an understanding of the limitations to accomplish a common goal.', 1, '2019-07-28 03:40:31', '2019-07-28 03:40:31', 1),
(31, 2, 'F', 'Function effectively as an individual and as a member or leader in diverse teams and in multidisciplinary settings', 1, '2019-07-28 03:46:18', '2019-07-28 03:46:18', 1),
(32, 2, 'G', 'Function effectively as a member or leader of a development team recognizing the different roles within a team to accomplish a common goal', 1, '2019-07-28 03:48:57', '2019-07-28 03:48:57', 1),
(33, 2, 'H', 'Communicate effectively with the computing community and with society at large about complex computing activities by being able to comprehend and write effective reports, design documentation make effective presentations and give and understand clear instructions', 1, '2019-07-28 03:51:37', '2019-07-28 03:51:37', 1),
(34, 2, 'I', 'An ability to recognize the legal, social, ethical and professional issues involved in the utilization of computer technology and be guided  by the adoption of appropriate professional ethical and legal practices.', 1, '2019-07-28 03:54:51', '2019-07-28 03:54:51', 1),
(35, 2, 'J', 'Recognize the need and have the ability to engage in independent learning for continual development as a computing professional', 1, '2019-07-28 03:56:14', '2019-07-28 03:56:14', 1);

-- --------------------------------------------------------

--
-- Table structure for table `student_outcome_archives`
--

CREATE TABLE `student_outcome_archives` (
  `id` int(10) UNSIGNED NOT NULL,
  `program_id` int(11) NOT NULL,
  `so_code` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `description` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `revision_no` int(11) NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `student_outcome_archives`
--

INSERT INTO `student_outcome_archives` (`id`, `program_id`, `so_code`, `description`, `revision_no`, `created_at`, `updated_at`) VALUES
(27, 1, 'A', 'Apply knowldege of computing, science, and mathematics appropriate to the discipline', 6, '2019-07-22 06:52:29', '2019-07-22 06:52:29'),
(28, 1, 'B', 'Undestand best practice and standards, and their applications', 6, '2019-07-22 06:52:30', '2019-07-22 06:52:30'),
(29, 1, 'C', 'Analyze complex problems, and identify and define the computing requirements appropriate to its solution', 6, '2019-07-22 06:52:30', '2019-07-22 06:52:30'),
(30, 1, 'D', 'Identify and analyze user need and take them into account in the selection, creation, evaluation, and administration of computer based systems', 6, '2019-07-22 06:52:30', '2019-07-22 06:52:30'),
(31, 1, 'E', 'Design, implement, and evaluate computer based systems, processes, components, or programs to meet desired needs and requirements under various constraints', 6, '2019-07-22 06:52:31', '2019-07-22 06:52:31'),
(32, 1, 'F', 'Integrate IT-based solutions into the user environment effectively', 6, '2019-07-22 06:52:31', '2019-07-22 06:52:31'),
(33, 1, 'G', 'Apply knowledge through the use of current techniques, skills, tools and practices necessary for the IT profession', 6, '2019-07-22 06:52:31', '2019-07-22 06:52:31'),
(34, 1, 'H', 'Function effectively as a member or leader of a development team recognizing the different roles within a team to accomplish a common goal', 6, '2019-07-22 06:52:32', '2019-07-22 06:52:32'),
(35, 1, 'I', 'Assist in the creation of an effective IT project plan', 6, '2019-07-22 06:52:32', '2019-07-22 06:52:32'),
(36, 1, 'J', 'Communicate effectively with the computing community and with society at large about complex computing activities through logical writing, presentations, and clear instructions', 6, '2019-07-22 06:52:32', '2019-07-22 06:52:32'),
(37, 1, 'K', 'Analyze the local and global impact of computing information technology on individuals, organizations, and society', 6, '2019-07-22 06:52:33', '2019-07-22 06:52:33'),
(38, 1, 'L', 'Understand professional, ethical, legal, security and social issues and responsibilities in the utilization of information technology', 6, '2019-07-22 06:52:33', '2019-07-22 06:52:33'),
(39, 1, 'M', 'Recognize the need for and engage in planning self-learning and improving performance as a foundation for continuing professional development', 6, '2019-07-22 06:52:33', '2019-07-22 06:52:33'),
(40, 1, 'A', 'Apply knowldege of computing, science, and mathematics appropriate to the discipline', 7, '2019-07-22 06:56:57', '2019-07-22 06:56:57'),
(41, 1, 'B', 'Undestand best practice and standards, and their applications', 7, '2019-07-22 06:56:58', '2019-07-22 06:56:58'),
(42, 1, 'C', 'Analyze complex problems, and identify and define the computing requirements appropriate to its solution', 7, '2019-07-22 06:56:58', '2019-07-22 06:56:58'),
(43, 1, 'D', 'Identify and analyze user need and take them into account in the selection, creation, evaluation, and administration of computer based systems', 7, '2019-07-22 06:56:58', '2019-07-22 06:56:58'),
(44, 1, 'E', 'Design, implement, and evaluate computer based systems, processes, components, or programs to meet desired needs and requirements under various constraints', 7, '2019-07-22 06:56:59', '2019-07-22 06:56:59'),
(45, 1, 'F', 'Integrate IT-based solutions into the user environment effectively', 7, '2019-07-22 06:56:59', '2019-07-22 06:56:59'),
(46, 1, 'G', 'Apply knowledge through the use of current techniques, skills, tools and practices necessary for the IT profession', 7, '2019-07-22 06:56:59', '2019-07-22 06:56:59'),
(47, 1, 'H', 'Function effectively as a member or leader of a development team recognizing the different roles within a team to accomplish a common goal', 7, '2019-07-22 06:57:00', '2019-07-22 06:57:00'),
(48, 1, 'I', 'Assist in the creation of an effective IT project plan', 7, '2019-07-22 06:57:00', '2019-07-22 06:57:00'),
(49, 1, 'J', 'Communicate effectively with the computing community and with society at large about complex computing activities through logical writing, presentations, and clear instructions', 7, '2019-07-22 06:57:00', '2019-07-22 06:57:00'),
(50, 1, 'K', 'Analyze the local and global impact of computing information technology on individuals, organizations, and society', 7, '2019-07-22 06:57:01', '2019-07-22 06:57:01'),
(51, 1, 'L', 'Understand professional, ethical, legal, security and social issues and responsibilities in the utilization of information technology', 7, '2019-07-22 06:57:01', '2019-07-22 06:57:01'),
(52, 1, 'M', 'Recognize the need for and engage in planning self-learning and improving performance as a foundation for continuing professional development', 7, '2019-07-22 06:57:01', '2019-07-22 06:57:01'),
(53, 1, 'A', 'Apply knowldege of computing, science, and mathematics appropriate to the discipline', 8, '2019-07-22 06:59:26', '2019-07-22 06:59:26'),
(54, 1, 'B', 'Undestand best practice and standards, and their applications', 8, '2019-07-22 06:59:27', '2019-07-22 06:59:27'),
(55, 1, 'C', 'Analyze complex problems, and identify and define the computing requirements appropriate to its solution', 8, '2019-07-22 06:59:27', '2019-07-22 06:59:27'),
(56, 1, 'D', 'Identify and analyze user need and take them into account in the selection, creation, evaluation, and administration of computer based systems', 8, '2019-07-22 06:59:27', '2019-07-22 06:59:27'),
(57, 1, 'E', 'Design, implement, and evaluate computer based systems, processes, components, or programs to meet desired needs and requirements under various constraints', 8, '2019-07-22 06:59:28', '2019-07-22 06:59:28'),
(58, 1, 'F', 'Integrate IT-based solutions into the user environment effectively', 8, '2019-07-22 06:59:28', '2019-07-22 06:59:28'),
(59, 1, 'G', 'Apply knowledge through the use of current techniques, skills, tools and practices necessary for the IT profession', 8, '2019-07-22 06:59:28', '2019-07-22 06:59:28'),
(60, 1, 'H', 'Function effectively as a member or leader of a development team recognizing the different roles within a team to accomplish a common goal', 8, '2019-07-22 06:59:29', '2019-07-22 06:59:29'),
(61, 1, 'I', 'Assist in the creation of an effective IT project plan', 8, '2019-07-22 06:59:29', '2019-07-22 06:59:29'),
(62, 1, 'J', 'Communicate effectively with the computing community and with society at large about complex computing activities through logical writing, presentations, and clear instructions', 8, '2019-07-22 06:59:29', '2019-07-22 06:59:29'),
(63, 1, 'K', 'Analyze the local and global impact of computing information technology on individuals, organizations, and society', 8, '2019-07-22 06:59:30', '2019-07-22 06:59:30'),
(64, 1, 'L', 'Understand professional, ethical, legal, security and social issues and responsibilities in the utilization of information technology', 8, '2019-07-22 06:59:30', '2019-07-22 06:59:30'),
(65, 1, 'M', 'Recognize the need for and engage in planning self-learning and improving performance as a foundation for continuing professional development', 8, '2019-07-22 06:59:30', '2019-07-22 06:59:30'),
(66, 1, 'A', 'Apply knowldege of computing, science, and mathematics appropriate to the discipline', 9, '2019-07-22 07:27:35', '2019-07-22 07:27:35'),
(67, 1, 'B', 'Undestand best practice and standards, and their applications', 9, '2019-07-22 07:27:35', '2019-07-22 07:27:35'),
(68, 1, 'C', 'Analyze complex problems, and identify and define the computing requirements appropriate to its solution', 9, '2019-07-22 07:27:36', '2019-07-22 07:27:36'),
(69, 1, 'D', 'Identify and analyze user need and take them into account in the selection, creation, evaluation, and administration of computer based systems', 9, '2019-07-22 07:27:36', '2019-07-22 07:27:36'),
(70, 1, 'E', 'Design, implement, and evaluate computer based systems, processes, components, or programs to meet desired needs and requirements under various constraints', 9, '2019-07-22 07:27:36', '2019-07-22 07:27:36'),
(71, 1, 'F', 'Integrate IT-based solutions into the user environment effectively', 9, '2019-07-22 07:27:37', '2019-07-22 07:27:37'),
(72, 1, 'G', 'Apply knowledge through the use of current techniques, skills, tools and practices necessary for the IT profession', 9, '2019-07-22 07:27:37', '2019-07-22 07:27:37'),
(73, 1, 'H', 'Function effectively as a member or leader of a development team recognizing the different roles within a team to accomplish a common goal', 9, '2019-07-22 07:27:37', '2019-07-22 07:27:37'),
(74, 1, 'I', 'Assist in the creation of an effective IT project plan', 9, '2019-07-22 07:27:38', '2019-07-22 07:27:38'),
(75, 1, 'J', 'Communicate effectively with the computing community and with society at large about complex computing activities through logical writing, presentations, and clear instructions', 9, '2019-07-22 07:27:38', '2019-07-22 07:27:38'),
(76, 1, 'K', 'Analyze the local and global impact of computing information technology on individuals, organizations, and society', 9, '2019-07-22 07:27:38', '2019-07-22 07:27:38'),
(77, 1, 'L', 'Understand professional, ethical, legal, security and social issues and responsibilities in the utilization of information technology', 9, '2019-07-22 07:27:39', '2019-07-22 07:27:39'),
(78, 1, 'M', 'Recognize the need for and engage in planning self-learning and improving performance as a foundation for continuing professional development', 9, '2019-07-22 07:27:39', '2019-07-22 07:27:39'),
(79, 1, 'N', 'teasdasd', 9, '2019-07-22 07:27:40', '2019-07-22 07:27:40'),
(80, 1, 'A', 'Apply knowldege of computing, science, and mathematics appropriate to the discipline', 10, '2019-09-15 09:24:11', '2019-09-15 09:24:11'),
(81, 1, 'B', 'Undestand best practice and standards, and their applications', 10, '2019-09-15 09:24:11', '2019-09-15 09:24:11'),
(82, 1, 'C', 'Analyze complex problems, and identify and define the computing requirements appropriate to its solution', 10, '2019-09-15 09:24:11', '2019-09-15 09:24:11'),
(83, 1, 'D', 'Identify and analyze user need and take them into account in the selection, creation, evaluation, and administration of computer based systems', 10, '2019-09-15 09:24:12', '2019-09-15 09:24:12'),
(84, 1, 'E', 'Design, implement, and evaluate computer based systems, processes, components, or programs to meet desired needs and requirements under various constraints', 10, '2019-09-15 09:24:12', '2019-09-15 09:24:12'),
(85, 1, 'F', 'Integrate IT-based solutions into the user environment effectively', 10, '2019-09-15 09:24:12', '2019-09-15 09:24:12'),
(86, 1, 'G', 'Apply knowledge through the use of current techniques, skills, tools and practices necessary for the IT profession', 10, '2019-09-15 09:24:13', '2019-09-15 09:24:13'),
(87, 1, 'H', 'Function effectively as a member or leader of a development team recognizing the different roles within a team to accomplish a common goal', 10, '2019-09-15 09:24:13', '2019-09-15 09:24:13'),
(88, 1, 'I', 'Assist in the creation of an effective IT project plan', 10, '2019-09-15 09:24:14', '2019-09-15 09:24:14'),
(89, 1, 'J', 'Communicate effectively with the computing community and with society at large about complex computing activities through logical writing, presentations, and clear instructions', 10, '2019-09-15 09:24:14', '2019-09-15 09:24:14'),
(90, 1, 'K', 'Analyze the local and global impact of computing information technology on individuals, organizations, and society', 10, '2019-09-15 09:24:14', '2019-09-15 09:24:14'),
(91, 1, 'L', 'Understand professional, ethical, legal, security and social issues and responsibilities in the utilization of information technology', 10, '2019-09-15 09:24:14', '2019-09-15 09:24:14'),
(92, 1, 'M', 'Recognize the need for and engage in planning self-learning and improving performance as a foundation for continuing professional development', 10, '2019-09-15 09:24:15', '2019-09-15 09:24:15');

-- --------------------------------------------------------

--
-- Table structure for table `student_outcome_archive_versions`
--

CREATE TABLE `student_outcome_archive_versions` (
  `id` int(10) UNSIGNED NOT NULL,
  `revision_no` int(11) NOT NULL,
  `program_id` int(11) NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `student_outcome_archive_versions`
--

INSERT INTO `student_outcome_archive_versions` (`id`, `revision_no`, `program_id`, `created_at`, `updated_at`) VALUES
(3, 5, 1, '2019-07-22 06:44:25', '2019-07-22 06:44:25'),
(4, 6, 1, '2019-07-22 06:52:29', '2019-07-22 06:52:29'),
(5, 7, 1, '2019-07-22 06:56:57', '2019-07-22 06:56:57'),
(6, 8, 1, '2019-07-22 06:59:26', '2019-07-22 06:59:26'),
(7, 9, 1, '2019-07-22 07:27:35', '2019-07-22 07:27:35'),
(8, 10, 1, '2019-09-15 09:24:11', '2019-09-15 09:24:11');

-- --------------------------------------------------------

--
-- Table structure for table `test_questions`
--

CREATE TABLE `test_questions` (
  `id` int(11) NOT NULL,
  `tq_code` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL,
  `title` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `body` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `student_outcome_id` int(11) NOT NULL,
  `course_id` int(11) NOT NULL,
  `difficulty_level_id` int(11) NOT NULL,
  `user_id` int(11) NOT NULL,
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  `performance_criteria_id` int(11) NOT NULL,
  `ref_id` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `parent_id` int(11) DEFAULT NULL,
  `version_no` int(11) DEFAULT '1',
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `test_questions`
--

INSERT INTO `test_questions` (`id`, `tq_code`, `title`, `body`, `student_outcome_id`, `course_id`, `difficulty_level_id`, `user_id`, `is_active`, `performance_criteria_id`, `ref_id`, `parent_id`, `version_no`, `created_at`, `updated_at`) VALUES
(1, 'TQ0000001', 'Solving for basic equation - Q1', 'solve for x:\n2x + 3 = 5', 7, 92, 1, 2, 1, 6, '_usr0traiv', NULL, 1, '2019-06-29 19:56:29', '2019-08-17 22:34:57'),
(2, 'TQ0000002', 'Count the vetices from graphs', 'How many vertices are in the graph below?\n\n[[#img14]]', 7, 102, 2, 2, 0, 6, '_fms2kphli', NULL, 1, '2019-06-29 23:17:32', '2019-08-17 22:38:14'),
(3, 'TQ0000003', 'Finding shortest path from graph 1', 'What is the shortest path between Audrey and Dave in this graph?\n\n [[#img15]]', 7, 102, 1, 2, 0, 6, '_7v48v35ad', NULL, 1, '2019-06-29 23:22:31', '2019-08-17 22:38:48'),
(4, 'TQ0000004', 'Find shortest path from graph 2', 'What is the shortest path between Hartford and Canton?\n\n[[#img16]]', 7, 102, 2, 2, 0, 6, '_b658znune', NULL, 1, '2019-06-29 23:28:34', '2019-08-17 22:39:11'),
(5, 'TQ0000005', 'Identify stability in sorting algorithm -Q1', 'Which of the following is not a stable sorting algorithm in its typical implementation?', 7, 102, 2, 2, 1, 6, '_m8fep3l1l', NULL, 1, '2019-06-29 23:32:17', '2019-08-17 22:39:59'),
(6, 'TQ0000006', 'Identify linear data structure - Q2', 'Which one of the below mentioned is linear data structure?', 7, 102, 1, 2, 1, 6, '_pg1wifzec', NULL, 1, '2019-06-29 23:38:24', '2019-08-17 22:40:23'),
(7, 'TQ0000007', 'CCS107 - DATA STRICTURES AND ALGORITHM 1 - Q3', 'Minimum number of queues required for priority queue implementation?', 7, 102, 2, 2, 1, 6, '_43tl8hzxy', NULL, 1, '2019-06-29 23:39:37', '2019-08-17 22:41:14'),
(8, 'TQ0000008', 'trace output of square matrix of size n x n - Q4', 'Let A be a square matrix of size n x n. Consider the following program. What is the expected output?\n\n[[#code10]]', 7, 102, 3, 2, 1, 6, '_38ft1whqq', NULL, 1, '2019-06-29 23:44:25', '2019-08-17 22:41:55'),
(9, 'TQ0000009', 'How to declare array in java - Q5', 'Which of the following correctly declares an array?', 7, 102, 1, 2, 1, 6, '_h9k4kfvox', NULL, 1, '2019-06-29 23:48:40', '2019-08-17 22:42:39'),
(10, 'TQ0000010', 'linked lisT - Q6', 'What does the following function do for a given Linked List with first node as head?\n\n [[#code11]]', 7, 102, 2, 2, 1, 6, '_5iwu57dwp', NULL, 1, '2019-06-29 23:51:28', '2019-08-17 22:43:22'),
(11, 'TQ0000011', 'linked list and array comparison -Q7', 'Which of the following points is/are true about Linked List data structure when it is compared with array', 7, 102, 1, 2, 1, 6, '_vyg7arz0w', NULL, 1, '2019-06-29 23:52:51', '2019-08-17 22:43:52'),
(12, 'TQ0000012', 'Linked list sorting - Q8', 'Which of the following sorting algorithms can be used to sort a random linked list with minimum time complexity?', 7, 102, 1, 2, 1, 6, '_ovkzxw3n0', NULL, 1, '2019-06-29 23:54:26', '2019-08-17 22:44:25'),
(13, 'TQ0000013', 'Reverse a linked list in java, implementation. - Q9', 'The following function reverse() is supposed to reverse a singly linked list. There is one line missing at the end of the function.\n[[#code12]]\nWhat should be added in place of \"/*ADD A STATEMENT HERE*/\", so that the function correctly reverses a linked list.', 7, 102, 3, 2, 1, 6, '_buo3nzql7', NULL, 1, '2019-06-29 23:56:54', '2019-08-17 22:44:55'),
(14, 'TQ0000014', 'Printing node in linked list java - Q10', 'What is the output of following function for start pointing to first node of following linked list? 1->2->3->4->5->6\n[[#code13]]', 7, 102, 2, 2, 1, 6, '_kzf234t5n', NULL, 1, '2019-06-30 00:00:04', '2019-08-17 22:45:28'),
(15, 'TQ0000015', 'Application of stack -Q11', 'Which one of the following is an application of Stack Data Structure?', 7, 102, 1, 2, 1, 6, '_lojsgvbu1', NULL, 1, '2019-06-30 00:04:31', '2019-08-17 22:46:04'),
(16, 'TQ0000016', 'About linked list implementation of stack -Q12', 'Which of the following is true about linked list implementation of stack?', 7, 102, 2, 2, 1, 6, '_mnukyedww', NULL, 1, '2019-06-30 00:05:58', '2019-08-17 22:46:25'),
(17, 'TQ0000017', 'Evaluating postfix expression - Q13', 'The result evaluating the postfix expression 10 5 + 60 6 / * 8 – is', 7, 102, 2, 2, 1, 6, '_h7d19lpkn', NULL, 1, '2019-06-30 00:08:07', '2019-08-17 22:46:56'),
(18, 'TQ0000018', 'Best algorithm for balanced parenthesis -Q14', 'The best data structure to check whether an arithmetic expression has balanced parenthesis is a', 7, 102, 1, 2, 1, 6, '_6mblcnaez', NULL, 1, '2019-06-30 00:09:55', '2019-08-17 22:47:27'),
(19, 'TQ0000019', 'Define binary tree - Q15', 'Which of the following is a true about Binary Trees', 7, 102, 1, 2, 1, 6, '_g7heaxjjh', NULL, 1, '2019-06-30 00:36:09', '2019-08-17 22:47:45'),
(20, 'TQ0000020', 'Number of leaf nodes - Q16', 'The number of leaf nodes in a rooted tree of n nodes, with each node having 0 or 3 children is:', 7, 102, 1, 2, 1, 6, '_dn6qkoji4', NULL, 1, '2019-06-30 00:37:44', '2019-08-17 22:48:06'),
(21, 'TQ0000021', 'Application queue - Q17', 'Which one of the following is an application of Queue Data Structure?', 7, 102, 1, 2, 1, 6, '_543gypgel', NULL, 1, '2019-06-30 00:40:43', '2019-08-17 22:48:25'),
(22, 'TQ0000022', 'STACKS - Q18', 'How many stacks are needed to implement a queue. Consider the situation where no other data structure like arrays, linked list is available to you.', 7, 102, 1, 2, 1, 6, '_99gxpp5fz', NULL, 1, '2019-06-30 00:41:28', '2019-08-17 22:48:59'),
(23, 'TQ0000023', 'BINARY SEARCH TREE - Q19', 'What is the worst case time complexity for search, insert and delete operations in a general Binary Search Tree?', 7, 102, 3, 2, 1, 6, '_39k5oiqnc', NULL, 1, '2019-06-30 00:43:13', '2019-08-17 22:49:40'),
(24, 'TQ0000024', 'Traversal outputs the data in sorted order - Q20', 'Which of the following traversal outputs the data in sorted order in a BST?', 7, 102, 2, 2, 1, 6, '_2qrkm8l5q', NULL, 1, '2019-06-30 00:45:21', '2019-08-17 22:50:03'),
(25, 'TQ0000025', 'binary search tree - Q21', 'Suppose the numbers 7, 5, 1, 8, 3, 6, 0, 9, 4, 2 are inserted in that order into an initially empty binary search tree. The binary search tree uses the usual ordering on natural numbers. What is the in-order traversal sequence of the resultant tree?', 7, 102, 3, 2, 1, 6, '_6wpfjdv86', NULL, 1, '2019-06-30 00:46:32', '2019-08-17 22:50:36'),
(26, 'TQ0000026', 'preorder traversal sequence - Q22', 'The preorder traversal sequence of a binary search tree is 30, 20, 10, 15, 25, 23, 39, 35, 42. Which one of the following is the postorder traversal sequence of the same tree?', 7, 102, 3, 2, 1, 6, '_e5lxsvxvr', NULL, 1, '2019-06-30 00:47:33', '2019-08-17 22:50:58'),
(27, 'TQ0000027', 'Hash table of length 10 - Q23', 'A hash table of length 10 uses open addressing with hash function h(k)=k mod 10, and linear probing. After inserting 6 values into an empty hash table, the table is as shown below. \n[[#img17]] \nWhich one of the following choices gives a possible order in which the key values could have been inserted in the table?', 7, 102, 3, 2, 1, 6, '_259pjadc3', NULL, 1, '2019-06-30 00:50:30', '2019-08-17 22:51:15'),
(28, 'TQ0000028', 'Gate hash - Q24', 'The keys 12, 18, 13, 2, 3, 23, 5 and 15 are inserted into an initially empty hash table of length 10 using open addressing with hash function h(k) = k mod 10 and linear probing. What is the resultant hash table?\n[[#img18]]', 7, 102, 3, 2, 1, 6, '_ykl4l69p8', NULL, 1, '2019-06-30 00:52:27', '2019-08-17 22:51:38'),
(29, 'TQ0000029', 'Identify Max Heap - Q25', 'A max-heap is a heap where the value of each parent is greater than or equal to the values of its children. Which of the following is a max-heap?\n\n[[#img19]]', 7, 102, 3, 2, 1, 6, '_72wu42saw', NULL, 1, '2019-06-30 00:55:10', '2019-08-17 22:51:57'),
(30, 'TQ0000030', 'linked list search - Q26', 'In the worst case, the number of comparisons needed to search a singly linked list of length n for a given element is', 7, 102, 2, 2, 1, 6, '_x48k3zqgm', NULL, 1, '2019-06-30 00:57:17', '2019-08-17 22:52:15'),
(31, 'TQ0000031', 'Order of operation - Q1', 'What is the output of the following code?\n\n[[#code14]]', 7, 90, 1, 2, 1, 6, '_lm0hh1z5o', NULL, 1, '2019-06-30 01:08:18', '2019-08-17 22:33:45'),
(32, 'TQ0000032', 'CCS102 - COMPUTER PROGRAMMING 1 - Q2', 'Which of the following is a reserved keyword in C#?', 7, 90, 1, 2, 1, 6, '_i1uj35ion', NULL, 1, '2019-06-30 03:03:18', '2019-08-24 23:45:13'),
(33, 'TQ0000033', 'IT01- CCS102 - COMPUTER PROGRAMMING 1 - Q3', 'Which of the following converts a type to a double type in C#?', 7, 90, 1, 2, 1, 6, '_d48x3ei97', NULL, 1, '2019-06-30 03:03:47', '2019-08-25 01:08:02'),
(34, 'TQ0000034', 'IT01- CCS102 - COMPUTER PROGRAMMING 1 - Q4', 'Which of the following operator returns the size of a data type in C#?', 7, 90, 1, 2, 1, 6, '_nlm86pl9w', NULL, 1, '2019-06-30 03:04:26', '2019-08-25 01:09:24'),
(35, 'TQ0000035', 'IT01- CCS102 - COMPUTER PROGRAMMING 1 - Q5', 'Which of the following access specifier in C# allows a class to expose its member variables and member functions to other functions and objects?', 7, 90, 1, 2, 1, 6, '_lv896oxqq', NULL, 1, '2019-06-30 03:04:48', '2019-08-25 01:10:40'),
(36, 'TQ0000036', 'IT01- CCS102 - COMPUTER PROGRAMMING 1 - Q6', 'Which of the following is correct about params in C#?', 7, 90, 1, 2, 1, 6, '_86fqbcjua', NULL, 1, '2019-06-30 03:05:32', '2019-08-25 01:12:04'),
(37, 'TQ0000037', 'CCS102 - COMPUTER PROGRAMMING 1 - Q7', 'Which of the following preprocessor directive allows creating a compound conditional directive in C#?', 7, 90, 1, 2, 1, 6, '_k1o2n8p2y', NULL, 1, '2019-06-30 03:06:00', '2019-08-25 01:16:45'),
(38, 'TQ0000038', 'CCS102 - COMPUTER PROGRAMMING 1 - Q8', 'Which of the following is true about try block in C#?', 7, 90, 1, 2, 1, 6, '_hlcekev22', NULL, 1, '2019-06-30 03:06:30', '2019-08-25 01:18:06'),
(39, 'TQ0000039', 'CCS102 - COMPUTER PROGRAMMING 1 Q9', 'What of the following is the default value of an instance variable?', 7, 90, 1, 2, 1, 6, '_0ewi8g8o5', NULL, 1, '2019-06-30 03:06:53', '2019-08-25 01:25:42'),
(40, 'TQ0000040', 'CCS102 - COMPUTER PROGRAMMING 1 Q10', 'Static binding uses which information for binding?', 7, 90, 1, 2, 1, 6, '_d9a0yoz4s', NULL, 1, '2019-06-30 03:07:13', '2019-08-25 01:27:52'),
(41, 'TQ0000041', 'CCS102 - COMPUTER PROGRAMMING 1 Q11', 'What is correct syntax for main method of a java class?', 7, 90, 1, 2, 1, 6, '_bh9dfhmj0', NULL, 1, '2019-06-30 03:07:48', '2019-08-25 01:35:31'),
(42, 'TQ0000042', 'CCS102 - COMPUTER PROGRAMMING 1 Q12', 'Which of the following is not a keyword in java?', 7, 90, 1, 2, 1, 6, '_i3nqz9r45', NULL, 1, '2019-06-30 03:08:07', '2019-08-25 01:36:58'),
(43, 'TQ0000043', 'CCS102 - COMPUTER PROGRAMMING 1 Q13', 'What is the size of byte variable?', 7, 90, 1, 2, 1, 6, '_68vtzhzlp', NULL, 1, '2019-06-30 03:08:25', '2019-08-25 01:38:37'),
(44, 'TQ0000044', 'CCS102 - COMPUTER PROGRAMMING 1 Q14', 'What is the size of int variable?', 7, 90, 1, 2, 1, 6, '_wadnc8vpz', NULL, 1, '2019-06-30 03:08:47', '2019-08-25 01:39:58'),
(45, 'TQ0000045', 'CCS102 - COMPUTER PROGRAMMING 1 Q15', 'What kind of variables a class can consist of?', 7, 90, 1, 2, 1, 6, '_ytobg7a87', NULL, 1, '2019-06-30 03:09:04', '2019-08-25 01:42:08'),
(46, 'TQ0000046', 'CCS102 - COMPUTER PROGRAMMING 1 Q16', 'What happens when thread\'s sleep() method is called?', 7, 90, 2, 2, 1, 6, '_zc2dk1pji', NULL, 1, '2019-06-30 03:09:21', '2019-08-25 01:43:22'),
(47, 'TQ0000047', 'CCS102 - COMPUTER PROGRAMMING 1 Q17', 'What invokes a thread\'s run() method?', 7, 90, 2, 2, 1, 6, '_r3c3u5jd7', NULL, 1, '2019-06-30 03:09:40', '2019-08-25 01:44:23'),
(48, 'TQ0000048', 'CCS102 - COMPUTER PROGRAMMING 1 Q18', 'What is JRE?', 7, 90, 2, 2, 1, 6, '_4j5cy38pg', NULL, 1, '2019-06-30 03:10:02', '2019-08-25 01:45:55'),
(49, 'TQ0000049', 'CCS102 - COMPUTER PROGRAMMING Q19', 'What is JIT compiler?', 7, 90, 2, 2, 1, 6, '_nhva160x2', NULL, 1, '2019-06-30 03:10:33', '2019-08-25 01:47:18'),
(50, 'TQ0000050', 'CCS102 - COMPUTER PROGRAMMING Q20', 'What happens when thread\'s yield() method is called?', 7, 90, 2, 2, 1, 6, '_57slbhiam', NULL, 1, '2019-06-30 03:10:57', '2019-08-25 01:48:45'),
(51, 'TQ0000051', 'CCS102 - COMPUTER PROGRAMMING 1 Q21', 'What is the output of this program?\n\n[[#code18]]', 7, 90, 2, 2, 1, 6, '_b133khdbg', NULL, 1, '2019-06-30 03:11:23', '2019-08-25 02:03:45'),
(52, 'TQ0000052', 'CCS102 - COMPUTER PROGRAMMING 1 Q22', 'What is the output of this program?\n\n[[#code19]]', 7, 90, 3, 2, 1, 6, '_hkq4xkevp', NULL, 1, '2019-06-30 03:12:02', '2019-08-25 02:05:51'),
(53, 'TQ0000053', 'CCS102 - COMPUTER PROGRAMMING 1 Q23', 'What is the output of this program?\n\n[[#code20]]', 7, 90, 3, 2, 1, 6, '_3f21keg22', NULL, 1, '2019-06-30 03:12:25', '2019-08-25 02:07:30'),
(54, 'TQ0000054', 'CCS102 - COMPUTER PROGRAMMING 1 Q24', 'What is the output of this program?\n\n[[#code21]]', 7, 90, 3, 2, 1, 6, '_ni9zfh0qx', NULL, 1, '2019-06-30 03:12:44', '2019-08-25 02:09:08'),
(55, 'TQ0000055', 'CCS102 - COMPUTER PROGRAMMING 1 Q25', 'Which of these operators is used to allocate memory to array variable in Java?', 7, 90, 2, 2, 1, 6, '_zbaxiggdb', NULL, 1, '2019-06-30 03:13:09', '2019-08-25 02:12:43'),
(56, 'TQ0000056', 'CCS102 - COMPUTER PROGRAMMING 1 Q26', 'Which of these is an incorrect array declaration?', 7, 90, 2, 2, 1, 6, '_n67d76ld3', NULL, 1, '2019-06-30 03:13:26', '2019-08-25 02:14:54'),
(57, 'TQ0000057', 'CCS102 - COMPUTER PROGRAMMING 1 Q27', 'Which of these is necessary to specify at time of array initialization?', 7, 90, 2, 2, 1, 6, '_gmzsnaoz0', NULL, 1, '2019-06-30 03:13:44', '2019-08-25 02:18:55'),
(58, 'TQ0000058', 'CCS102 - COMPUTER PROGRAMMING 1 Q28', 'What is the output of this program?\n\n[[#code22]]', 7, 90, 3, 2, 1, 6, '_45lqncqd0', NULL, 1, '2019-06-30 03:14:01', '2019-08-25 02:21:34'),
(59, 'TQ0000059', 'CCS102 - COMPUTER PROGRAMMING 1 Q29', 'What is the output of this program?\n\n[[#code24]]', 7, 90, 3, 2, 1, 6, '_h4j12raef', NULL, 1, '2019-06-30 03:14:19', '2019-08-25 02:28:06'),
(60, 'TQ0000060', 'CCS102 - COMPUTER PROGRAMMING 1 Q30', 'What is the output of below snippet?\n\n[[#code25]]', 7, 90, 3, 2, 1, 6, '_06709hb1j', NULL, 1, '2019-06-30 03:14:39', '2019-08-25 02:30:47'),
(61, 'TQ0000061', 'CCS102 - COMPUTER PROGRAMMING 1 Q31', 'Where is array stored in memory?', 7, 90, 2, 2, 1, 6, '_dus7hb8em', NULL, 1, '2019-06-30 03:14:59', '2019-08-25 02:32:31'),
(62, 'TQ0000062', 'Speed and velocity', 'A car travels from point A to B in 3 hours and returns back to point A in 5 hours. Points A and B are 150 miles apart along a straight highway. Which of the following statements most accurately describes the motion of the car?', 7, 89, 1, 2, 0, 6, '_3ysjloma2', NULL, 1, '2019-06-30 09:48:38', '2019-08-17 22:54:18'),
(63, 'TQ0000063', 'Angled launch projectile vectors', 'A ball is kicked at an angle with negligible air resistance as seen below.\n\n [[#img20]]\n\nHow is the total speed changing at point P?', 7, 89, 1, 2, 0, 6, '_exir5sfe1', NULL, 1, '2019-06-30 09:49:06', '2019-08-17 22:54:36'),
(64, 'TQ0000064', 'Testing code - Q1', 'What is the output of the following code?\n[[#code15]]', 7, 89, 1, 2, 0, 6, '_tmhqbyq4r', NULL, 1, '2019-06-30 09:49:30', '2019-08-31 15:27:56'),
(65, 'TQ0000065', 'Comparing projectile trajectories 1', 'Mathis kicked a ball on a level surface at 60° and 30° with the same total speed as shown below.\n\n [[#img21]] \n\nWhich launch angle results in the greater maximum height for the ball?', 7, 89, 1, 2, 0, 6, '_syswp5cp3', NULL, 1, '2019-06-30 09:49:49', '2019-08-17 22:54:57'),
(66, 'TQ0000066', 'Binary to decimal conversion 1', 'Convert 10100011 from binary to decimal.', 7, 89, 1, 2, 1, 6, '_1ige5114a', NULL, 1, '2019-06-30 09:50:07', '2019-08-01 00:43:01'),
(67, 'TQ0000067', 'IT01 - CCS101 - INTRODUCTION TO COMPUTING q6', 'IT01 - CCS101 - INTRODUCTION TO COMPUTING q6', 7, 89, 3, 2, 1, 6, '_abstuwsi1', NULL, 1, '2019-06-30 09:50:23', '2019-09-01 01:51:03'),
(68, 'TQ0000068', 'Describing two-dimensional motion with vectors', 'A golfer hits a golf ball upwards at an angle of 75°, degree with the horizontal. We can ignore air resistance.\n\n[[#img22]]\n\nWhich graph best describes the golf ball\'s vertical displacement over time?\n\nAssume the origin of the coordinate system to be the point on the ground where the ball was initially at rest.', 7, 89, 1, 2, 1, 6, '_1m6y209q4', NULL, 1, '2019-06-30 09:50:47', '2019-08-01 00:43:01'),
(69, 'TQ0000069', 'Testing math', 'Evaluate this function\n[[#math22]]\n[[#math23]]', 7, 89, 1, 2, 0, 6, '_25cwy4ert', NULL, 1, '2019-06-30 09:51:07', '2019-08-31 15:27:34'),
(70, 'TQ0000070', 'Projectile motion 2', 'An adventurous cliff jumper runs horizontally off a cliff. We can ignore air resistance.\n\n[[#img27]]\n\nWhich diagram best describes the horizontal velocity vectors and trajectory during the person’s fall?\n\nAssume the origin of the coordinate system to be the cliff edge.\n\nA red dot represents a vector of zero magnitude.', 7, 89, 1, 2, 1, 6, '_6781uclej', NULL, 1, '2019-06-30 09:51:24', '2019-08-01 00:43:01'),
(71, 'TQ0000071', 'CCS101 - INTRODUCTION TO COMPUTING - Q26', 'What is cache memory?', 7, 89, 2, 2, 1, 6, '_zvx4m4hpg', NULL, 1, '2019-06-30 09:51:41', '2019-08-11 18:54:33'),
(72, 'TQ0000072', 'CCS101 - INTRODUCTION TO COMPUTING - Q25', 'What type of software is a screen saver?', 7, 89, 2, 2, 1, 6, '_okfmaohh5', NULL, 1, '2019-06-30 09:52:02', '2019-08-11 18:52:29'),
(73, 'TQ0000073', 'CCS101 - INTRODUCTION TO COMPUTING - Q24', 'The brain of the computer. This part does the calculation, moving and processing of information.', 7, 89, 1, 2, 1, 6, '_m3xy590tc', NULL, 1, '2019-06-30 09:52:19', '2019-08-11 18:41:22'),
(74, 'TQ0000074', 'CCS101 - INTRODUCTION TO COMPUTING - Q23', 'An electronic tool that allows information to be input, processed, and output.', 7, 89, 1, 2, 1, 6, '_am0sioyr6', NULL, 1, '2019-06-30 09:52:42', '2019-08-11 18:39:47'),
(75, 'TQ0000075', 'CCS101 - INTRODUCTION TO COMPUTING - Q22', 'This computer term is used to describe the number of bits that a CPU accessed at one time.', 7, 89, 1, 2, 1, 6, '_rd5djwlrr', NULL, 1, '2019-06-30 09:53:02', '2019-08-11 18:18:40'),
(76, 'TQ0000076', 'CCS101 - INTRODUCTION TO COMPUTING _ Q21', '_______ is a duplicate copy of data or other computer content for use in the event that the original version is destroyed.', 7, 89, 2, 2, 1, 6, '_clvcsap6w', NULL, 1, '2019-06-30 09:53:23', '2019-08-11 18:17:08'),
(77, 'TQ0000077', 'CCS101 - INTRODUCTION TO COMPUTING - Q20', 'A programming error that occurs when running a program produces incorrect results.', 7, 89, 1, 2, 1, 6, '_cvn7gcguj', NULL, 1, '2019-06-30 09:53:48', '2019-08-11 07:04:38'),
(78, 'TQ0000078', 'CCS101 - INTRODUCTION TO COMPUTING -  Q19', 'This coding system is designed to support international languages like Chinese and Japanese.', 7, 89, 3, 2, 1, 6, '_heime0m5n', NULL, 1, '2019-06-30 09:54:10', '2019-09-01 01:51:19'),
(79, 'TQ0000079', 'CCS101 - INTRODUCTION TO COMPUTING -Q18', 'Which of the following is/are not part of the CPU?', 7, 89, 3, 2, 1, 6, '_ver7azzkb', NULL, 1, '2019-06-30 09:54:30', '2019-09-01 01:51:39'),
(80, 'TQ0000080', 'CCS101 - INTRODUCTION TO COMPUTING - Q17', 'The result of the operation NOT ((97)<sub>16</sub> XOR (AC)<sub>16</sub>) is', 7, 89, 3, 2, 1, 6, '_4jjyq8x95', NULL, 1, '2019-06-30 09:54:47', '2019-08-11 06:58:42'),
(81, 'TQ0000081', 'CCS101 - INTRODUCTION TO COMPUTING - Q16', 'What is the process of allocating main memory to programs and keeping the programs in memory separate from one another called?', 7, 89, 1, 2, 1, 6, '_yq4i5kyfi', NULL, 1, '2019-06-30 09:55:06', '2019-08-11 06:55:06'),
(82, 'TQ0000082', 'CCS101 - INTRODUCTION TO COMPUTING - Q15', '10111 is the two\'s complement representation of', 7, 89, 1, 2, 1, 6, '_pm29f9zug', NULL, 1, '2019-06-30 09:55:35', '2019-08-11 06:53:27'),
(83, 'TQ0000083', 'CCS101 - INTRODUCTION TO COMPUTING - Q14', 'A television broadcast is an example of _______ transmission.', 7, 89, 1, 2, 1, 6, '_pkzix6x6d', NULL, 1, '2019-06-30 09:55:55', '2019-08-11 06:51:38'),
(84, 'TQ0000084', 'CCS101 - INTRODUCTION TO COMPUTING Q13', '___ refers to the physical or logical arrangement of a network.', 7, 89, 2, 2, 1, 6, '_akxwv31yd', NULL, 1, '2019-06-30 09:56:12', '2019-08-11 06:50:00'),
(85, 'TQ0000085', 'CCS101 - INTRODUCTION TO COMPUTING - Q10', 'Converting (153)<sub>10</sub> to base 8 yields which of the following results?', 7, 89, 2, 2, 1, 6, '_rnm4u5tbv', NULL, 1, '2019-06-30 09:56:36', '2019-08-11 06:39:11'),
(86, 'TQ0000086', 'CCS101 - INTRODUCTION TO COMPUTING - Q9', 'The time required to position a disk driver\'s access arm over a particular track is known as _______________.', 7, 89, 2, 2, 1, 6, '_c7om3i75o', NULL, 1, '2019-06-30 09:56:58', '2019-08-11 06:36:46'),
(87, 'TQ0000087', 'CCS101 - INTRODUCTION TO COMPUTING - Q8', '____________ are the four general operations that are performed in each machine cycle.', 7, 89, 2, 2, 1, 6, '_vx2cqu9t1', NULL, 1, '2019-06-30 09:57:17', '2019-08-11 06:34:54'),
(88, 'TQ0000088', 'IT01 - CCS101 - INTRODUCTION TO COMPUTING - Q6', 'A computer network must contain at least this number of computers.', 7, 89, 3, 2, 1, 6, '_l90j6ij3s', NULL, 1, '2019-06-30 09:57:34', '2019-09-01 01:50:16'),
(89, 'TQ0000089', 'CCS101 - INTRODUCTION TO COMPUTING - Q5', 'A memory management technique that uses hard drive space as additional RAM.', 7, 89, 1, 2, 1, 6, '_e9u8s715d', NULL, 1, '2019-06-30 09:57:52', '2019-08-11 06:25:28'),
(90, 'TQ0000090', 'CCS101 - INTRODUCTION TO COMPUTING - Q4', 'A letter, digit, or special character is represented by a code in a ___.', 7, 89, 3, 2, 1, 6, '_t9j5dmtu4', NULL, 1, '2019-06-30 09:58:12', '2019-09-01 01:49:58'),
(91, 'TQ0000091', 'IT01 - CCS101 - INTRODUCTION TO COMPUTING q30', 'IT01 - CCS101 - INTRODUCTION TO COMPUTING q30', 7, 89, 3, 2, 0, 6, '_4f2brsuzk', NULL, 1, '2019-06-30 09:58:35', '2019-08-01 00:43:02'),
(92, 'TQ0000092', 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q2', 'Solve the inequality \n4x + 8 > 5x +9', 7, 92, 1, 2, 1, 6, '_pssq4h7gu', NULL, 1, '2019-06-30 09:59:38', '2019-08-26 05:03:48'),
(93, 'TQ0000093', 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q3', 'If 2x - 8 ≥ 2, then', 7, 92, 1, 2, 1, 6, '_eui4zpjyu', NULL, 1, '2019-06-30 10:00:00', '2019-08-26 05:05:11'),
(94, 'TQ0000094', 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q4', 'Which of the following graphs represents the inequality 3y ≤ 2x +1?', 7, 92, 3, 2, 1, 6, '_tzwzg7sj6', NULL, 1, '2019-06-30 10:01:01', '2019-08-26 05:10:31'),
(95, 'TQ0000095', 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q5', 'What is the square root of -144?', 7, 92, 1, 2, 1, 6, '_ccv7guy3t', NULL, 1, '2019-06-30 10:01:19', '2019-08-26 18:04:07'),
(96, 'TQ0000096', 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q6', 'What is the square root of -9?', 7, 92, 1, 2, 1, 6, '_j04g10gkq', NULL, 1, '2019-06-30 10:01:38', '2019-08-26 05:13:51'),
(97, 'TQ0000097', 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q7', 'The expression (3i - 2)(i + 1) - 7 can be simplified to which of the following expressions?', 7, 92, 2, 2, 1, 6, '_7yfx4d7en', NULL, 1, '2019-06-30 10:02:04', '2019-08-26 05:15:14'),
(98, 'TQ0000098', 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q8', 'In the equation x^2 - 10x + 34 = 0, x is equal to which of the following solution sets?', 7, 92, 2, 2, 1, 6, '_ttyozgokl', NULL, 1, '2019-06-30 10:02:21', '2019-08-26 05:16:30'),
(99, 'TQ0000099', 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q9', 'Evaluate the following:\n \nlog<sub>4</sub> 25', 7, 92, 1, 2, 1, 6, '_4e3wxb7ht', NULL, 1, '2019-06-30 10:02:38', '2019-08-26 05:18:10'),
(100, 'TQ0000100', 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q10', 'Write the following expression as a single logarithm. Simplify as much as possible.\n\n[[#img40]]', 7, 92, 3, 2, 1, 6, '_pksjfi4db', NULL, 1, '2019-06-30 10:02:56', '2019-08-26 05:24:41'),
(101, 'TQ0000101', 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q11', 'Simplify (combine) the logarithmic expression: 4log x - 5log y', 7, 92, 1, 2, 1, 6, '_uberjqh9v', NULL, 1, '2019-06-30 10:03:13', '2019-08-26 05:28:58'),
(102, 'TQ0000102', 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD  Q12', 'Which of the following combinations of inequalities will give rise to graphs with correctly described lines?', 7, 92, 3, 2, 1, 6, '_hyoh851wi', NULL, 1, '2019-06-30 10:03:30', '2019-08-26 05:34:25'),
(103, 'TQ0000103', 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q13', 'Which of the following combinations of inequalities will give rise to graphs with correctly described lines?', 7, 92, 2, 2, 1, 6, '_trd4wqy43', NULL, 1, '2019-06-30 10:03:52', '2019-08-26 17:19:00'),
(104, 'TQ0000104', 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q14', 'What is the result when you put the expression x<sup>2</sup> +10x+41 into vertex form by completing the square ?', 7, 92, 3, 2, 1, 6, '_nbpor404c', NULL, 1, '2019-06-30 10:04:22', '2019-08-26 17:24:29'),
(105, 'TQ0000105', 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q15', 'The factors of x<sup>2</sup>-10x-24 are _____.', 7, 92, 2, 2, 1, 6, '_pi0cee2fq', NULL, 1, '2019-06-30 10:04:41', '2019-08-26 17:25:59'),
(106, 'TQ0000106', 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q16', '20 % of 2 is equal to', 7, 92, 1, 2, 1, 6, '_cwd58ejnj', NULL, 1, '2019-06-30 10:05:01', '2019-08-26 17:33:30'),
(107, 'TQ0000107', 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q17', 'If Log <sub>4 </sub>(x) = 12, then log 2 (x / 4) is equal to', 7, 92, 1, 2, 1, 6, '_auoa083q5', NULL, 1, '2019-06-30 10:05:18', '2019-08-26 17:34:51'),
(108, 'TQ0000108', 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q18', 'The population of a country increased by an average of 2% per year from 2000 to 2003. If the population of this country was 2 000 000 on December 31, 2003, then the population of this country on January 1, 2000, to the nearest thousand would have been', 7, 92, 3, 2, 1, 6, '_agyrsk3pq', NULL, 1, '2019-06-30 10:05:39', '2019-08-26 17:38:06'),
(109, 'TQ0000109', 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q19', 'f is a function such that f(x) < 0. The graph of the new function g defined by g(x) = | f(x) | is a reflection of the graph of f', 7, 92, 2, 2, 1, 6, '_3h4hz73o3', NULL, 1, '2019-06-30 10:06:00', '2019-08-26 17:39:18'),
(110, 'TQ0000110', 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q20', 'The graphs of the two linear equations a x + b y = c and b x - a y = c, where a, b and c are all not equal to zero,', 7, 92, 2, 2, 1, 6, '_s70zjs2c6', NULL, 1, '2019-06-30 10:06:18', '2019-08-26 18:04:41'),
(111, 'TQ0000111', 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q21', 'For x greater than or equal to zero and less than or equal to 2 π, sin x and cos x are both decreasing on the intervals', 7, 92, 2, 2, 1, 6, '_55dgxo2he', NULL, 1, '2019-06-30 10:06:39', '2019-08-26 17:41:41'),
(112, 'TQ0000112', 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q22', 'A school committee consists of 2 teachers and 4 students. The number of different committees that can be formed from 5 teachers and 10 students is', 7, 92, 1, 2, 1, 6, '_br7al12qg', NULL, 1, '2019-06-30 10:07:28', '2019-08-26 17:44:12'),
(113, 'TQ0000113', 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q23', 'Five different books (A, B, C, D and E) are to be arranged on a shelf. Books C and D are to be arranged first and second starting from the right of the shelf. The number of different orders in which books A, B and E may be arranged is', 7, 92, 2, 2, 1, 6, '_6cgmc8q1p', NULL, 1, '2019-06-30 10:07:46', '2019-08-26 17:46:13'),
(114, 'TQ0000114', 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q24', 'The mean of a data set is equal to 10 and its standard deviation is equal to 1. If we add 5 to each data value, then the mean and standard deviation become', 7, 92, 2, 2, 1, 6, '_yl8l5yfiz', NULL, 1, '2019-06-30 10:08:04', '2019-08-26 17:48:45'),
(115, 'TQ0000115', 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q25', 'The exam scores of all 500 students were recorded and it was determined that these scores were normally distributed. If Jane\'s score is 0.8 standard deviation above the mean, then how many, to the nearest unit, students scored above Jane?', 7, 92, 3, 2, 1, 6, '_ft8djpmml', NULL, 1, '2019-06-30 10:08:29', '2019-08-26 17:59:24'),
(116, 'TQ0000116', 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q26', 'If f(x) is an odd function, then | f(x) | is', 7, 92, 2, 2, 1, 6, '_t0xy92wg1', NULL, 1, '2019-06-30 10:08:50', '2019-08-26 18:02:17'),
(117, 'TQ0000117', 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q27', 'The period of | sin (3x) | is', 7, 92, 1, 2, 1, 6, '_bfuh87an4', NULL, 1, '2019-06-30 10:09:08', '2019-08-26 18:06:17'),
(118, 'TQ0000118', 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q28', 'When a metallic ball bearing is placed inside a cylindrical container, of radius 2 cm, the height of the water, inside the container, increases by 0.6 cm. The radius, to the nearest tenth of a centimeter, of the ball bearing is', 7, 92, 3, 2, 1, 6, '_v0n4vq3wm', NULL, 1, '2019-06-30 10:09:27', '2019-08-26 18:08:41'),
(119, 'TQ0000119', 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q1', 'This is a repetition control stricture that allows you to efficiently write a loop that needs to execute a specific number of times.', 7, 95, 1, 2, 1, 6, '_farja33id', NULL, 1, '2019-06-30 10:10:06', '2019-08-25 05:57:40'),
(120, 'TQ0000120', 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q2', 'This operator works on bits and perform bit by bit operation.', 7, 95, 1, 2, 1, 6, '_ral4xx17g', NULL, 1, '2019-06-30 10:10:22', '2019-08-25 05:59:44'),
(121, 'TQ0000121', 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q3', 'These are additional operators used to return Boolean values.', 7, 95, 1, 2, 1, 6, '_61pfq5vy9', NULL, 1, '2019-06-30 10:10:41', '2019-08-25 06:01:29'),
(122, 'TQ0000122', 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q4', 'These operators take two operands, such as arithmetic operators (+,-,*,/).', 7, 95, 1, 2, 1, 6, '_se7t1r881', NULL, 1, '2019-06-30 10:11:03', '2019-08-25 06:03:30'),
(123, 'TQ0000123', 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q5', 'These are used to compare two values to see whether the values are equal or one value is greater or less than the other, returning a Boolean true or false.', 7, 95, 1, 2, 1, 6, '_fsm0a4fja', NULL, 1, '2019-06-30 10:11:22', '2019-08-25 06:06:02'),
(124, 'TQ0000124', 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q6', 'This data type stores the address of the value which means that they refer to a memory location.', 7, 95, 1, 2, 1, 6, '_x704j0dli', NULL, 1, '2019-06-30 10:11:37', '2019-08-25 06:18:03'),
(125, 'TQ0000125', 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q7', 'int i = 10 is an example of _________.', 7, 95, 1, 2, 1, 6, '_vdhrl7iwh', NULL, 1, '2019-06-30 10:11:59', '2019-08-25 06:19:40'),
(126, 'TQ0000126', 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q8', 'A control used to show a list of strings which you can select.', 7, 95, 1, 2, 1, 6, '_mgjy14ngi', NULL, 1, '2019-06-30 10:12:17', '2019-08-25 06:30:16'),
(127, 'TQ0000127', 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q9', 'Commonly used  control to execute commansd when it is clicked.', 7, 95, 1, 2, 1, 6, '_w10kqc4cd', NULL, 1, '2019-06-30 10:12:52', '2019-08-25 06:32:37'),
(128, 'TQ0000128', 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q10', 'A textbox control property used to allow more than one line input.', 7, 95, 1, 2, 1, 6, '_9f8jxj9p2', NULL, 1, '2019-06-30 10:13:14', '2019-08-25 06:34:31'),
(129, 'TQ0000129', 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q11', 'A control similar to an ordinary label having an underline and resembles a link on a web page.', 7, 95, 1, 2, 1, 6, '_sj41z3op9', NULL, 1, '2019-06-30 10:13:31', '2019-08-25 06:36:26'),
(130, 'TQ0000130', 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q12', 'A control typically used to get numeric inputs and automatically restricts user for giving invalid non-numeric values.', 7, 95, 1, 2, 1, 6, '_ns0v2fwx2', NULL, 1, '2019-06-30 10:13:48', '2019-08-25 06:39:17'),
(131, 'TQ0000131', 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q13', 'A method of MessageBox class that allows you to call a message box for prompting user with messages and information.', 7, 95, 1, 2, 1, 6, '_qn2yfgvzj', NULL, 1, '2019-06-30 10:14:08', '2019-08-25 06:41:13'),
(132, 'TQ0000132', 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q14', 'C# treats the multiple catch statements like cases in a _____________ statement.', 7, 95, 1, 2, 1, 6, '_adqe3l9ct', NULL, 1, '2019-06-30 10:14:31', '2019-08-26 04:14:59'),
(133, 'TQ0000133', 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q15', 'The ______ are the Graphical User Interface (GUI) components created for web based interactions..', 7, 95, 1, 2, 1, 6, '_gd62r4oda', NULL, 1, '2019-06-30 10:14:55', '2019-08-26 04:19:29'),
(134, 'TQ0000134', 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q16', '_________parameters allows you to give a method parameter a default value so that you do not have to specify it every time you call the method.', 7, 95, 2, 2, 1, 6, '_i5hrw546r', NULL, 1, '2019-06-30 10:15:12', '2019-08-26 04:20:50'),
(135, 'TQ0000135', 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q17', 'Duck typing is implemented by using_________ keyword.', 7, 95, 2, 2, 1, 6, '_ce0rh0o6a', NULL, 1, '2019-06-30 10:15:31', '2019-08-26 04:22:21'),
(136, 'TQ0000136', 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q18', 'Private Button print = new button();', 7, 95, 2, 2, 1, 6, '_2rkiocnsb', NULL, 1, '2019-06-30 10:15:48', '2019-08-26 04:24:44'),
(137, 'TQ0000137', 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q19', 'Polymorphism occurs when the methods of the child class.', 7, 95, 2, 2, 1, 6, '_4bdzw81h6', NULL, 1, '2019-06-30 10:16:04', '2019-08-26 04:32:00'),
(138, 'TQ0000138', 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q20', 'A method_____an exception when that method detects that a problem has occured.', 7, 95, 2, 2, 1, 6, '_73oknu4o0', NULL, 1, '2019-06-30 10:16:27', '2019-08-26 04:33:10'),
(139, 'TQ0000139', 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q21', 'All C# applications begin execution by calling the _____ method.', 7, 95, 2, 2, 1, 6, '_3ra9ezufk', NULL, 1, '2019-06-30 10:16:43', '2019-08-26 04:35:51'),
(140, 'TQ0000140', 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q22', 'A _______ is an identifier that denotes a storage location.', 7, 95, 2, 2, 1, 6, '_zrkdrhumk', NULL, 1, '2019-06-30 10:17:01', '2019-08-26 04:36:55'),
(141, 'TQ0000141', 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q1', 'A __________ is an ordered collection of objects.', 7, 96, 1, 2, 1, 6, '_lagofy1or', NULL, 1, '2019-06-30 10:17:59', '2019-08-25 04:38:27'),
(142, 'TQ0000142', 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q2', 'The set O of odd positive integers less than 10 can be expressed by _____________.', 7, 96, 1, 2, 1, 6, '_8u545fdky', NULL, 1, '2019-06-30 10:18:20', '2019-08-25 04:40:12'),
(143, 'TQ0000143', 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q3', 'Power set of empty set has exactly _________ subset.', 7, 96, 1, 2, 1, 6, '_933gjcstg', NULL, 1, '2019-06-30 10:18:42', '2019-08-25 04:41:27'),
(144, 'TQ0000144', 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q4', 'What is the cardinality of the set of odd positive integers less than 10?', 7, 96, 1, 2, 1, 6, '_ndkrt0g1h', NULL, 1, '2019-06-30 10:18:59', '2019-08-25 04:42:58'),
(145, 'TQ0000145', 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q5', 'What is the Cartesian product of A = {1, 2} and B = {a, b}?', 7, 96, 2, 2, 1, 6, '_yf1vswyzs', NULL, 1, '2019-06-30 10:19:20', '2019-08-25 04:44:34'),
(146, 'TQ0000146', 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q6', 'Which of the following two sets are equal?', 7, 96, 2, 2, 1, 6, '_l3bxtvw2r', NULL, 1, '2019-06-30 10:19:37', '2019-08-25 04:46:16'),
(147, 'TQ0000147', 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q7', 'The set of positive integers is _____________.', 7, 96, 1, 2, 1, 6, '_uui83jbzg', NULL, 1, '2019-06-30 10:19:55', '2019-08-25 04:47:41'),
(148, 'TQ0000148', 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q8', 'What is the Cardinality of the Power set of the set {0, 1, 2}.', 7, 96, 1, 2, 1, 6, '_kx49665xy', NULL, 1, '2019-06-30 10:20:10', '2019-08-25 04:48:58'),
(149, 'TQ0000149', 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q9', 'The union of the sets {1, 2, 5} and {1, 2, 6} is the set _______________.', 7, 96, 2, 2, 1, 6, '_71okmwpoq', NULL, 1, '2019-06-30 10:20:24', '2019-08-25 04:52:33'),
(150, 'TQ0000150', 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q10', 'The intersection of the sets {1, 2, 5} and {1, 2, 6} is the set _____________.', 7, 96, 1, 2, 1, 6, '_kbsxadpve', NULL, 1, '2019-06-30 10:20:41', '2019-08-25 04:53:42'),
(151, 'TQ0000151', 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q11', 'Two sets are called disjoint if there _____________ is the empty set.', 7, 96, 1, 2, 1, 6, '_k8frjgfbl', NULL, 1, '2019-06-30 10:21:01', '2019-08-25 04:54:40'),
(152, 'TQ0000152', 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q12', 'The bit string for the set {2, 4, 6, 8, 10} (with universal set of natural numbers less than or equal to 10) is ____________________.', 7, 96, 2, 2, 1, 6, '_ks8vn2xs9', NULL, 1, '2019-06-30 10:21:20', '2019-08-25 04:58:27'),
(153, 'TQ0000153', 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q13', 'The difference of {1, 2, 3} and {1, 2, 5} is the set ____________', 7, 96, 1, 2, 1, 6, '_ldlekp0u2', NULL, 1, '2019-06-30 10:21:36', '2019-08-25 04:59:43'),
(154, 'TQ0000154', 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q14', 'The complement of the set A is _____________.', 7, 96, 1, 2, 1, 6, '_24vc2fqh6', NULL, 1, '2019-06-30 10:21:54', '2019-08-25 05:00:41'),
(155, 'TQ0000155', 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q15', 'Let the set A is {1, 2, 3} and B is {2, 3, 4}. Then number of elements in A U B is _____.', 7, 96, 1, 2, 1, 6, '_cdwuo1oft', NULL, 1, '2019-06-30 10:22:15', '2019-08-25 05:02:12'),
(156, 'TQ0000156', 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q16', 'If A has 4 elements B has 8 elements then the minimum and maximum number of elements in A U B are respectively', 7, 96, 1, 2, 1, 6, '_r5xir1jyj', NULL, 1, '2019-06-30 10:22:30', '2019-08-25 05:03:22'),
(157, 'TQ0000157', 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q17', 'If A is {{Φ}, {Φ, {Φ}}, then the power set of A has how many element?', 7, 96, 1, 2, 1, 6, '_qffyhgame', NULL, 1, '2019-06-30 10:22:46', '2019-08-25 05:04:19'),
(158, 'TQ0000158', 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q18', 'Two sets A and B contains a and b elements respectively .If power set of A contains 16 more elements than that of B, value of ‘b’ and ‘a’ are respectively', 7, 96, 1, 2, 1, 6, '_evp9h8mvn', NULL, 1, '2019-06-30 10:23:11', '2019-08-25 05:05:26'),
(159, 'TQ0000159', 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q19', 'Which sets are not empty?', 7, 96, 2, 2, 1, 6, '_ddc6bwsf3', NULL, 1, '2019-06-30 10:23:30', '2019-08-25 05:06:29'),
(160, 'TQ0000160', 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q20', 'The shaded area of figure is best described by\n\n[[#img32]]', 7, 96, 3, 2, 1, 6, '_z3a9lj8aw', NULL, 1, '2019-06-30 10:23:50', '2019-08-25 05:22:46'),
(161, 'TQ0000161', 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q21', 'The shaded area of figure is best described by\n\n[[#img33]]', 7, 96, 3, 2, 1, 6, '_aibi0q2py', NULL, 1, '2019-06-30 10:24:14', '2019-08-25 05:12:18'),
(162, 'TQ0000162', 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q22', 'If n(A)=10 , n(B)=30,n(C)=50 and if set A,B,C are pairwise disjoint then which of the following is correct?', 7, 96, 2, 2, 1, 6, '_sb7de7pql', NULL, 1, '2019-06-30 10:24:33', '2019-08-25 05:14:02'),
(163, 'TQ0000163', 'ITEW1 - ELECTRONIC COMMERCE - Q1', 'E-commerce can be defined as', 7, 107, 1, 2, 1, 6, '_66rnlmu6i', NULL, 1, '2019-06-30 10:25:17', '2019-08-11 20:47:15'),
(164, 'TQ0000164', 'ITEW2 - ELECTRONIC COMMERCE - Q2', 'Which of the following terms can be considered synonymous with the term e-commerce?', 7, 107, 1, 2, 1, 6, '_kqelc3gd', NULL, 1, '2019-06-30 10:25:39', '2019-08-11 20:51:22'),
(165, 'TQ0000165', 'ITEW1 - ELECTRONIC COMMERCE - Q3', 'Which of the following is a physical place you visit in order to transact?', 7, 107, 1, 2, 1, 6, '_7fbnm089x', NULL, 1, '2019-06-30 10:26:48', '2019-08-11 20:55:58'),
(166, 'TQ0000166', 'ITEW1 - ELECTRONIC COMMERCE - Q4', 'Which of the following is an example of social e-commerce?', 7, 107, 1, 2, 1, 6, '_lh8oea05c', NULL, 1, '2019-06-30 10:27:06', '2019-08-11 20:58:22'),
(167, 'TQ0000167', 'ITEW1 - ELECTRONIC COMMERCE - Q5', 'Which of the following is an example of an on-demand service company?', 7, 107, 1, 2, 1, 6, '_4f08c7ali', NULL, 1, '2019-06-30 10:27:24', '2019-08-11 21:02:16'),
(168, 'TQ0000168', 'ITEW1 - ELECTRONIC COMMERCE - Q6', 'In which year can e-commerce be said to have begun?', 7, 107, 1, 2, 1, 6, '_l1s5zs3kg', NULL, 1, '2019-06-30 10:27:41', '2019-08-11 21:04:23'),
(169, 'TQ0000169', 'ITEW1 - ELECTRONIC COMMERCE - Q7', 'Above all, e-commerce is a ____________ phenomenon.', 7, 107, 1, 2, 1, 6, '_gccl1ujas', NULL, 1, '2019-06-30 10:27:58', '2019-08-11 21:09:46'),
(170, 'TQ0000170', 'ITEW1 - ELECTRONIC COMMERCE - Q8', 'Which of the following is one of the three primary societal issues related to e-commerce?', 7, 107, 1, 2, 1, 6, '_inbe4wp88', NULL, 1, '2019-06-30 10:28:17', '2019-08-11 21:11:45'),
(171, 'TQ0000171', 'ITEW1 - ELECTRONIC COMMERCE - Q9', 'E-commerce is available just about everytime and anytime. This is known as _______.', 7, 107, 1, 2, 1, 6, '_d067jdajp', NULL, 1, '2019-06-30 10:28:56', '2019-08-11 22:08:43'),
(172, 'TQ0000172', 'ITEW1 - ELECTRONIC COMMERCE - Q10', 'Which type of e-commerce is distinguish by the type of technology used in the transaction rather than by the nature of the market relationship?', 7, 107, 1, 2, 1, 6, '_fvyqy2t79', NULL, 1, '2019-06-30 10:29:13', '2019-08-11 22:12:02'),
(173, 'TQ0000173', 'ITEW1 - ELECTRONIC COMMERCE - Q11', 'Which of the following is not a unique feature of e-commerce technology?', 7, 107, 2, 2, 1, 6, '_5rrn9xoht', NULL, 1, '2019-06-30 10:29:27', '2019-08-11 22:14:30'),
(174, 'TQ0000174', 'ITEW1 - ELECTRONIC COMMERCE - Q12', 'Which of the following is the best definitions of transaction cost?', 7, 107, 2, 2, 1, 6, '_x0ysmup27', NULL, 1, '2019-06-30 10:29:47', '2019-08-11 22:18:00'),
(175, 'TQ0000175', 'ITEW1 - ELECTRONIC COMMERCE - Q13', 'Which of the following is an example of B2B e-commerce?', 7, 107, 1, 2, 1, 6, '_7whtj4hs4', NULL, 1, '2019-06-30 10:30:08', '2019-08-11 22:22:03'),
(176, 'TQ0000176', 'ITEW1 - ELECTRONIC COMMERCE - Q14', 'All of the following are examples of social network except:', 7, 107, 1, 2, 1, 6, '_c8p9ulx5a', NULL, 1, '2019-06-30 10:30:24', '2019-08-11 22:24:52'),
(177, 'TQ0000177', 'ITEW1 - ELECTRONIC COMMERCE - Q15', 'All of the following are examples of Web 2.0 sites and applications except:', 7, 107, 1, 2, 1, 6, '_esv79tk3d', NULL, 1, '2019-06-30 10:30:43', '2019-08-11 22:28:36'),
(178, 'TQ0000178', 'ITEW1 - ELECTRONIC COMMERCE - Q16', 'Which of the following is an example of an e-commerce first mover that failed?', 7, 107, 1, 2, 1, 6, '_gkej2jsx0', NULL, 1, '2019-06-30 10:31:02', '2019-08-11 22:31:00'),
(179, 'TQ0000179', 'ITEW1 - ELECTRONIC COMMERCE - Q17', 'Which of the following is the best definition of transaction cost?', 7, 107, 2, 2, 1, 6, '_8kjk98gk2', NULL, 1, '2019-06-30 10:31:23', '2019-08-17 21:25:52'),
(180, 'TQ0000180', 'ITEW1 - ELECTRONIC COMMERCE - Q18', 'Which of the following describes the basic Web policy of large firms during the Invention period?', 7, 107, 2, 2, 1, 6, '_qijxfwsg6', NULL, 1, '2019-06-30 10:31:39', '2019-08-17 21:35:40'),
(181, 'TQ0000181', 'ITEW1 - ELECTRONIC COMMERCE - Q19', 'Interactivity in the context of e-commerce provides which of the following functionalities?', 7, 107, 2, 2, 1, 6, '_8s878uugm', NULL, 1, '2019-06-30 10:31:56', '2019-08-17 21:36:11'),
(182, 'TQ0000182', 'ITEW1 - ELECTRONIC COMMERCE - Q20', 'All of the following can be considered a precursor to e-commerce except:', 7, 107, 2, 2, 1, 6, '_kt9x5fbw2', NULL, 1, '2019-06-30 10:32:16', '2019-08-17 21:39:15'),
(183, 'TQ0000183', 'ITEW1 - ELECTRONIC COMMERCE - Q21', 'Which of the following was  the first truly large-scale digitally enabled transaction system in B2C arena?', 7, 107, 2, 2, 1, 6, '_4mpz3oyeg', NULL, 1, '2019-06-30 10:32:39', '2019-08-17 21:41:33'),
(184, 'TQ0000184', 'IT01 - ITELECT2 - IT ELECTIVE 2 q1', 'IT01 - ITELECT2 - IT ELECTIVE 2 q1', 7, 112, 1, 2, 1, 6, '_bm3nzgwlw', NULL, 1, '2019-06-30 10:33:18', '2019-08-01 00:43:07'),
(185, 'TQ0000185', 'IT01 - ITELECT2 - IT ELECTIVE 2 q2', 'IT01 - ITELECT2 - IT ELECTIVE 2 q2', 7, 112, 1, 2, 1, 6, '_9yqcp1ihm', NULL, 1, '2019-06-30 10:33:39', '2019-08-01 00:43:07'),
(186, 'TQ0000186', 'IT01 - ITELECT2 - IT ELECTIVE 2 q3', 'IT01 - ITELECT2 - IT ELECTIVE 2 q3', 7, 112, 1, 2, 1, 6, '_a3xui114a', NULL, 1, '2019-06-30 10:33:59', '2019-08-01 00:43:07'),
(187, 'TQ0000187', 'IT01 - ITELECT2 - IT ELECTIVE 2 q4', 'IT01 - ITELECT2 - IT ELECTIVE 2 q4', 7, 112, 1, 2, 1, 6, '_2tfbueomg', NULL, 1, '2019-06-30 10:34:15', '2019-08-01 00:43:07'),
(188, 'TQ0000188', 'IT01 - ITELECT2 - IT ELECTIVE 2 q5', 'IT01 - ITELECT2 - IT ELECTIVE 2 q5', 7, 112, 1, 2, 1, 6, '_ihzgdgr5f', NULL, 1, '2019-06-30 10:34:32', '2019-08-01 00:43:07'),
(189, 'TQ0000189', 'IT01 - ITELECT2 - IT ELECTIVE 2 q6', 'IT01 - ITELECT2 - IT ELECTIVE 2 q6', 7, 112, 1, 2, 1, 6, '_gmh80f9nk', NULL, 1, '2019-06-30 10:34:50', '2019-08-01 00:43:07'),
(190, 'TQ0000190', 'IT01 - ITELECT2 - IT ELECTIVE 2 q7', 'IT01 - ITELECT2 - IT ELECTIVE 2 q7', 7, 112, 1, 2, 1, 6, '_v03pyxmit', NULL, 1, '2019-06-30 10:35:04', '2019-08-01 00:43:07'),
(191, 'TQ0000191', 'IT01 - ITELECT2 - IT ELECTIVE 2 q8', 'IT01 - ITELECT2 - IT ELECTIVE 2 q8', 7, 112, 2, 2, 1, 6, '_cg08g2c34', NULL, 1, '2019-06-30 10:35:24', '2019-08-01 00:43:07'),
(192, 'TQ0000192', 'IT01 - ITELECT2 - IT ELECTIVE 2 q9', 'IT01 - ITELECT2 - IT ELECTIVE 2 q9', 7, 112, 2, 2, 1, 6, '_f7baqrqp4', NULL, 1, '2019-06-30 10:35:51', '2019-08-01 00:43:07'),
(193, 'TQ0000193', 'IT01 - ITELECT2 - IT ELECTIVE 2 q10', 'IT01 - ITELECT2 - IT ELECTIVE 2 q10', 7, 112, 2, 2, 1, 6, '_27szch7jc', NULL, 1, '2019-06-30 10:36:20', '2019-08-01 00:43:07'),
(194, 'TQ0000194', 'IT01 - ITELECT2 - IT ELECTIVE 2 q11', 'IT01 - ITELECT2 - IT ELECTIVE 2 q11', 7, 112, 2, 2, 1, 6, '_8ppkxjhhi', NULL, 1, '2019-06-30 10:36:37', '2019-08-01 00:43:07'),
(195, 'TQ0000195', 'IT01 - ITELECT2 - IT ELECTIVE 2 q12', 'IT01 - ITELECT2 - IT ELECTIVE 2 q12', 7, 112, 2, 2, 1, 6, '_42fkgd8se', NULL, 1, '2019-06-30 10:36:55', '2019-08-01 00:43:07'),
(196, 'TQ0000196', 'IT01 - ITELECT2 - IT ELECTIVE 2 q13', 'IT01 - ITELECT2 - IT ELECTIVE 2 q13', 7, 112, 3, 2, 1, 6, '_fowo620q7', NULL, 1, '2019-06-30 10:37:14', '2019-08-01 00:43:07'),
(197, 'TQ0000197', 'IT01 - ITELECT2 - IT ELECTIVE 2 q14', 'IT01 - ITELECT2 - IT ELECTIVE 2 q14', 7, 112, 3, 2, 1, 6, '_58lrxhrr0', NULL, 1, '2019-06-30 10:37:29', '2019-08-01 00:43:07'),
(198, 'TQ0000198', 'IT01 - ITELECT2 - IT ELECTIVE 2 q15', 'IT01 - ITELECT2 - IT ELECTIVE 2 q15', 7, 112, 3, 2, 1, 6, '_852pqhquf', NULL, 1, '2019-06-30 10:37:51', '2019-08-01 00:43:07'),
(199, 'TQ0000199', 'IT01 - ITELECT2 - IT ELECTIVE 2 q16', 'IT01 - ITELECT2 - IT ELECTIVE 2 q16', 7, 112, 3, 2, 1, 6, '_goes2qlp2', NULL, 1, '2019-06-30 10:38:07', '2019-08-01 00:43:07'),
(200, 'TQ0000200', 'IT01 - ITELECT2 - IT ELECTIVE 2 q17', 'IT01 - ITELECT2 - IT ELECTIVE 2 q17', 7, 112, 3, 2, 1, 6, '_7fcktsjpk', NULL, 1, '2019-06-30 10:38:28', '2019-08-01 00:43:08'),
(201, 'TQ0000201', 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q1', 'Android is based on which languange?', 7, 125, 1, 2, 1, 6, '_bc1vmf5j5', NULL, 1, '2019-06-30 10:39:03', '2019-08-24 22:14:05'),
(202, 'TQ0000202', 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q2', 'What is android?', 7, 125, 1, 2, 1, 6, '_yyxsdu0v6', NULL, 1, '2019-06-30 10:39:20', '2019-08-24 22:17:38'),
(203, 'TQ0000203', 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q3', 'Android doesn\'t  support which format?', 7, 125, 1, 2, 1, 6, '_syv70u7xh', NULL, 1, '2019-06-30 10:39:40', '2019-08-24 22:19:22'),
(204, 'TQ0000204', 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q4', 'Android supports which features.', 7, 125, 1, 2, 1, 6, '_r86ykopzo', NULL, 1, '2019-06-30 10:39:58', '2019-08-24 22:21:28'),
(205, 'TQ0000205', 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q5', 'For ___________, code used by Android is not open source.', 7, 125, 1, 2, 1, 6, '_5738em0rc', NULL, 1, '2019-06-30 10:40:25', '2019-08-24 22:23:28'),
(206, 'TQ0000206', 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q6', 'For creating user interface in Android, you have to use', 7, 125, 1, 2, 1, 6, '_ipb445etf', NULL, 1, '2019-06-30 10:40:45', '2019-08-24 22:29:47'),
(207, 'TQ0000207', 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q7', 'ABD stands for', 7, 125, 1, 2, 1, 6, '_ebxox0kwm', NULL, 1, '2019-06-30 10:41:02', '2019-08-24 22:32:01'),
(208, 'TQ0000208', 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q8', 'What is mean by ANR?', 7, 125, 1, 2, 1, 6, '_za2dbomfy', NULL, 1, '2019-06-30 10:41:21', '2019-08-24 22:34:05'),
(209, 'TQ0000209', 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q9', 'In _________, sender specifies types of receiver.', 7, 125, 1, 2, 1, 6, '_2of46spx0', NULL, 1, '2019-06-30 10:41:36', '2019-08-24 22:35:48'),
(210, 'TQ0000210', 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q10', 'Eclipse is an ______________.', 7, 125, 1, 2, 1, 6, '_0bstoprxw', NULL, 1, '2019-06-30 10:41:53', '2019-08-24 22:37:12'),
(211, 'TQ0000211', 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q11', 'Web browser available in android based on', 7, 125, 1, 2, 1, 6, '_remktvw7b', NULL, 1, '2019-06-30 10:42:10', '2019-08-24 22:39:40'),
(212, 'TQ0000212', 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q12', 'Which company bought android?', 7, 125, 1, 2, 1, 6, '_lvhc8k382', NULL, 1, '2019-06-30 10:42:28', '2019-08-24 22:40:53'),
(213, 'TQ0000213', 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q13', 'Which company developed android?', 7, 125, 1, 2, 1, 6, '_wa9neyzua', NULL, 1, '2019-06-30 10:42:45', '2019-08-24 22:42:02'),
(214, 'TQ0000214', 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q14', 'Android is based on which kernel?', 7, 125, 1, 2, 1, 6, '_vjx5nm5yv', NULL, 1, '2019-06-30 10:43:14', '2019-08-24 22:43:58'),
(215, 'TQ0000215', 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q15', 'Which is the latest mobile version of android?', 7, 125, 1, 2, 1, 6, '_fxdeigm5j', NULL, 1, '2019-06-30 10:43:32', '2019-08-24 22:45:54');
INSERT INTO `test_questions` (`id`, `tq_code`, `title`, `body`, `student_outcome_id`, `course_id`, `difficulty_level_id`, `user_id`, `is_active`, `performance_criteria_id`, `ref_id`, `parent_id`, `version_no`, `created_at`, `updated_at`) VALUES
(216, 'TQ0000216', 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q16', 'Which of the following Dialog boxes are supported by Android? \n(1)AlertDialog (2) ProgressDialog (3) DatePickerDialog (4) TimePickerDialog', 7, 125, 2, 2, 1, 6, '_6d9u9dsy5', NULL, 1, '2019-06-30 10:43:49', '2019-08-24 22:49:10'),
(217, 'TQ0000217', 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q17', 'If you provide a _________, your choice identifier (second parameter) can be 0.', 7, 125, 2, 2, 1, 6, '_5bo7gem46', NULL, 1, '2019-06-30 10:44:04', '2019-08-24 22:50:45'),
(218, 'TQ0000218', 'test', 'test1', 7, 89, 2, 2, 0, 6, '_uwb1x0ozn', NULL, 1, '2019-07-02 14:12:40', '2019-08-01 00:43:08'),
(219, 'TQ0000219', 'Computer Hardware - Q3', 'A device that enables a computer to communicate over telephone lines.', 7, 89, 2, 2, 1, 6, '_510cchkep', NULL, 1, '2019-08-01 01:19:29', '2019-09-12 11:31:03'),
(220, 'TQ0000220', 'Computer Hardware - Q2', 'An input device that reads printed text and graphics and transfers them to a computer in digital form.', 7, 89, 1, 2, 1, 6, '_urjulssrj', NULL, 1, '2019-08-01 01:20:36', '2019-08-11 06:32:27'),
(221, 'TQ0000221', 'Computer Hardware - Q1', 'This computer component holds processed information before it is input.', 7, 89, 3, 2, 1, 6, '_h3rl1bu4i', NULL, 1, '2019-08-01 01:38:03', '2019-09-01 01:49:39'),
(222, 'TQ0000222', 'CC101 - INTRODUCTION TO COMPUTING - Q12', 'What is the technique in shared systems that avoids mixing printout from several programs called?', 7, 89, 2, 2, 1, 6, '_fpzfe4tho', NULL, 1, '2019-08-06 18:55:18', '2019-08-11 06:48:21'),
(223, 'TQ0000223', 'CC101 - INTRODUCTION TO COMPUTING - Q11', 'The sum of 11101 + 10111 equals ________.', 7, 89, 2, 2, 1, 6, '_g25clie36', NULL, 1, '2019-08-06 19:07:29', '2019-08-11 06:45:17'),
(224, 'TQ0000224', 'try', '[[#code16]]', 7, 89, 1, 2, 0, 6, '_hbc90k790', NULL, 1, '2019-08-07 00:49:05', '2019-08-31 15:27:08'),
(225, 'TQ0000225', 'CCS101 - INTRODUCTION TO COMPUTING - Q7', 'Converting (1010111)<sub>2</sub> to base yields which of the following results?', 7, 89, 2, 2, 1, 6, '_5rl1xcltv', NULL, 1, '2019-08-07 01:30:50', '2019-08-11 06:29:12'),
(226, 'TQ0000226', 'CCS107 - DATA STRUCTURES AND ALGORITHM 1 - Q27', 'Process of inserting an element in stack is called ____________.', 7, 102, 1, 2, 1, 6, '_3fj3kb3vx', NULL, 1, '2019-08-11 20:02:12', '2019-08-17 22:52:32'),
(227, 'TQ0000227', 'CCS107 - DATA STRUCTURES AND ALGORITHM 1 - Q28', 'The data structure required to check whether an expression contains balanced parenthesis is?', 7, 102, 1, 2, 1, 6, '_oe4va6lmn', NULL, 1, '2019-08-11 20:04:54', '2019-08-17 22:52:48'),
(228, 'TQ0000228', 'CCS101 - DATA STRUCTURES AND ALGORITHM 1 - Q29', 'If the elements “A”, “B”, “C” and “D” are placed in a stack and are deleted one at a time, what is the order of removal?', 7, 102, 1, 2, 1, 6, '_fdhyus4fv', NULL, 1, '2019-08-11 20:15:05', '2019-08-17 22:53:02'),
(229, 'TQ0000229', 'CCS107 - DATA STRUCTURES AND ALGORITHM 1 - Q30', 'Which of the following is an advantage of bit array?', 7, 102, 2, 2, 1, 6, '_m3s3q4c78', NULL, 1, '2019-08-11 20:22:42', '2019-08-17 22:53:18'),
(230, 'TQ0000230', 'ITEW1 - ELECTRONIC COMMERCE - Q22', 'All of the following are issues facing Pinteres except :', 7, 107, 2, 2, 1, 6, '_sgjo41nuu', NULL, 1, '2019-08-17 21:43:10', '2019-08-17 21:43:10'),
(231, 'TQ0000231', 'ITEW1 - ELECTRONIC COMMERCE - Q23', 'Unfair competitve advantages occur when :', 7, 107, 2, 2, 1, 6, '_tz021ttcz', NULL, 1, '2019-08-17 21:46:22', '2019-08-17 21:46:22'),
(232, 'TQ0000232', 'ITEW1 - ELECTRONIC COMMERCE - Q24', 'Which of the following refers to the practice of researching a product online before purchasing it at a physical store?', 7, 107, 2, 2, 1, 6, '_ksgs0evlz', NULL, 1, '2019-08-17 21:48:44', '2019-08-17 21:48:44'),
(233, 'TQ0000233', 'ITEW1 - ELECTRONIC COMMERCE - Q25', 'Which of the following retailers that offers a transactional Web site from which to conduct business?', 7, 107, 1, 2, 1, 6, '_gzc5gslmn', NULL, 1, '2019-08-17 21:58:02', '2019-08-17 21:58:35'),
(234, 'TQ0000234', 'ITEW1 - ELECTRONIC COMMERCE - Q26', 'Which of the following statements is not true?', 7, 107, 3, 2, 1, 6, '_zpie0t6fj', NULL, 1, '2019-08-17 22:04:39', '2019-08-17 22:04:39'),
(235, 'TQ0000235', 'ITEW1 - ELECTRONIC COMMERCE - Q27', 'Which business application is associated with the technological development of local area networks and client/server computing?', 7, 107, 3, 2, 1, 6, '_mvtw84zxp', NULL, 1, '2019-08-17 22:09:39', '2019-08-17 22:09:39'),
(236, 'TQ0000236', 'ITEW1 - ELECTRONIC COMMERCE - Q28', 'Which of the following is not an element of friction-free commerce?', 7, 107, 3, 2, 1, 6, '_aaswxf5t6', NULL, 1, '2019-08-17 22:13:48', '2019-08-17 22:14:04'),
(237, 'TQ0000237', 'ITEW1 - ELECTRONIC COMMERCE - Q29', 'Which of the following best describes the early years of e-commerce?', 7, 107, 3, 2, 1, 6, '_a8mp16uir', NULL, 1, '2019-08-17 22:18:14', '2019-08-17 22:18:14'),
(238, 'TQ0000238', 'ITEW1 - ELECTRONIC COMMERCE - Q30', 'Which of the following is a characteristic of Reinvention phase of e-commerce?', 7, 107, 3, 2, 1, 6, '_v6ezt4kg9', NULL, 1, '2019-08-17 22:21:29', '2019-08-17 22:21:29'),
(239, 'TQ0000239', 'ITEW1 - ELECTRONIC COMMERCE - Q31', 'Which of the following  is a characteristic of the Consolidation phase of e-commerce?', 7, 107, 3, 2, 1, 6, '_ozhcbl83d', NULL, 1, '2019-08-17 22:24:37', '2019-08-17 22:24:37'),
(240, 'TQ0000240', 'ITEW1 - ELECTRONIC COMMERCE - Q32', 'Which of the following  is <i>not</i> true regading e-commerce today?', 7, 107, 3, 2, 1, 6, '_7yz5dv7fn', NULL, 1, '2019-08-17 22:28:11', '2019-08-17 22:28:11'),
(241, 'TQ0000241', 'ITEW1 - ELECTRONIC COMMERCE - Q33', 'Which of the following is <i>not</i> a characteristic of a perfect competitive market?', 7, 107, 3, 2, 1, 6, '_jzom9791w', NULL, 1, '2019-08-17 22:31:38', '2019-08-17 22:31:38'),
(242, 'TQ0000242', 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q18', 'If you want to increase the whitespace between widgets, you will need to use the __________ property.', 7, 125, 2, 2, 1, 6, '_phgpet833', NULL, 1, '2019-08-24 23:01:48', '2019-08-24 23:01:48'),
(243, 'TQ0000243', 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q19', 'Android provides a few standard themes, listed in ________.', 7, 125, 2, 2, 1, 6, '_1wqqt6ru4', NULL, 1, '2019-08-24 23:03:20', '2019-08-24 23:03:20'),
(244, 'TQ0000244', 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q20', 'To update contents of content provider using curser and commit you need to call _______________.', 7, 125, 2, 2, 1, 6, '_c52ntiutw', NULL, 1, '2019-08-24 23:05:17', '2019-08-24 23:05:17'),
(245, 'TQ0000245', 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q21', 'Typically MIME type will be', 7, 125, 2, 2, 1, 6, '_gai8ddc3e', NULL, 1, '2019-08-24 23:07:07', '2019-08-24 23:07:07'),
(246, 'TQ0000246', 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q22', 'Which of  the following holds Java source code for the application?', 7, 125, 2, 2, 1, 6, '_c2r39yg5c', NULL, 1, '2019-08-24 23:08:29', '2019-08-24 23:17:20'),
(247, 'TQ0000247', 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q23', 'Which of the following don\'t have UI component and run as a background process?', 7, 125, 2, 2, 1, 6, '_ysixml1u8', NULL, 1, '2019-08-24 23:09:57', '2019-08-24 23:17:35'),
(248, 'TQ0000248', 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q24', 'What is the use of content provider in android?', 7, 125, 2, 2, 1, 6, '_7v7uljgie', NULL, 1, '2019-08-24 23:12:14', '2019-08-24 23:17:58'),
(249, 'TQ0000249', 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q25', 'Which method is used to find GPS enabled or disabled pro-grammatically in android?', 7, 125, 2, 2, 1, 6, '_qjyeskkwb', NULL, 1, '2019-08-24 23:13:31', '2019-08-24 23:18:13'),
(250, 'TQ0000250', 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q26', 'What is the package name of HTTP client in android?', 7, 125, 3, 2, 1, 6, '_hrljkn1lr', NULL, 1, '2019-08-24 23:14:37', '2019-08-24 23:18:30'),
(251, 'TQ0000251', 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q27', 'What is the difference between services and thread in android?', 7, 125, 3, 2, 1, 6, '_lr21ojpim', NULL, 1, '2019-08-24 23:16:54', '2019-08-24 23:18:50'),
(252, 'TQ0000252', 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q28', 'What is bean class in android?', 7, 125, 3, 2, 1, 6, '_j1yvbs0r7', NULL, 1, '2019-08-24 23:20:18', '2019-08-24 23:20:18'),
(253, 'TQ0000253', 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q29', 'How to access the context in android content provider?', 7, 125, 3, 2, 1, 6, '_x57fmnwi5', NULL, 1, '2019-08-24 23:26:32', '2019-08-24 23:26:32'),
(254, 'TQ0000254', 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q30', 'What is an HTTP client class in android?', 7, 125, 3, 2, 1, 6, '_8jh3ictbj', NULL, 1, '2019-08-24 23:28:00', '2019-08-24 23:28:00'),
(255, 'TQ0000255', 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q31', 'What are the debugging techniques available in android?', 7, 125, 3, 2, 1, 6, '_71wn02p2x', NULL, 1, '2019-08-24 23:29:10', '2019-08-24 23:29:10'),
(256, 'TQ0000256', 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q32', 'What is the difference between content values and cursor in android SQlite?', 7, 125, 3, 2, 1, 6, '_qbcm48s34', NULL, 1, '2019-08-24 23:30:21', '2019-08-24 23:30:21'),
(257, 'TQ0000257', 'ITP107 - MOBILE APPLICATION DEVELOPMENT - Q33', 'How many protection levels are available in the android permission tag?', 7, 125, 3, 2, 1, 6, '_ptvi4ejxp', NULL, 1, '2019-08-24 23:31:29', '2019-08-24 23:31:29'),
(258, 'TQ0000258', 'CCS102 - COMPUTER PROGRAMMING 1 Q32', 'An array elements are always stored in ________ memory locations?', 7, 90, 3, 2, 1, 6, '_uzxghrkmy', NULL, 1, '2019-08-25 02:34:55', '2019-08-25 02:34:55'),
(259, 'TQ0000259', 'CCS102 - COMPUTER PROGRAMMING 1 Q33', 'With x = 0, which of the following are legal lines of Java code for changing the value of x to 1?\n\n[[#code26]]', 7, 90, 3, 2, 1, 6, '_zbuktdfsj', NULL, 1, '2019-08-25 02:38:44', '2019-08-25 02:38:44'),
(260, 'TQ0000260', 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q23', 'In the given figure the if n(A)=20,n(U)=50,n(C)=10 and n(A∩B)=5 then n(B)=? \n\n[[#img34]]', 7, 96, 2, 2, 1, 6, '_7fb2cc8zl', NULL, 1, '2019-08-25 05:15:54', '2019-08-25 05:15:54'),
(261, 'TQ0000261', 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q24', 'The shaded area of figure is best described by\n\n[[#img35]]', 7, 96, 2, 2, 1, 6, '_w9g41h4uc', NULL, 1, '2019-08-25 05:18:18', '2019-08-25 05:18:18'),
(262, 'TQ0000262', 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q25', 'If set A has 4 elements and B has 3 elements then set n(A X B) is', 7, 96, 1, 2, 1, 6, '_uo4s8ei41', NULL, 1, '2019-08-25 05:19:40', '2019-08-25 05:20:03'),
(263, 'TQ0000263', 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q26', 'A function is said to be ______________ if and only if f(a) = f(b) implies that a = b for all a and b in the domain of f.', 7, 96, 2, 2, 1, 6, '_gulz9ky8d', NULL, 1, '2019-08-25 05:22:05', '2019-08-25 05:22:05'),
(264, 'TQ0000264', 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q27', 'The inverse of function f(x) = x3 + 2 is ____________.', 7, 96, 2, 2, 1, 6, '_1486rgm9w', NULL, 1, '2019-08-25 05:24:13', '2019-08-25 05:24:13'),
(265, 'TQ0000265', 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q28', 'If f(x) = (x<sup>3</sup> – 1) / (3x + 1) then f(x) is', 7, 96, 3, 2, 1, 6, '_7nhlgphma', NULL, 1, '2019-08-25 05:30:59', '2019-08-25 05:30:59'),
(266, 'TQ0000266', 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q29', 'What is range of function f(x) = x-1 which is defined everywhere on its domain?', 7, 96, 3, 2, 1, 6, '_9fd78mg2b', NULL, 1, '2019-08-25 05:34:32', '2019-08-25 05:34:32'),
(267, 'TQ0000267', 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q30', 'A floor function map a real number to :', 7, 96, 3, 2, 1, 6, '_0ahu6ur7o', NULL, 1, '2019-08-25 05:42:50', '2019-08-25 05:42:50'),
(268, 'TQ0000268', 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q31', 'The solution to f(x) = f<sup> -1</sup>(x) are :', 7, 96, 3, 2, 1, 6, '_aag1m4s50', NULL, 1, '2019-08-25 05:44:30', '2019-08-25 05:44:30'),
(269, 'TQ0000269', 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q32', 'Let the sequence be 1, 3, 5, 7, 9……… then this sequence is', 7, 96, 3, 2, 1, 6, '_c08wouzbw', NULL, 1, '2019-08-25 05:45:26', '2019-08-25 05:45:26'),
(270, 'TQ0000270', 'IT01 - CCS104 - DISCRETE STRUCTURES 1 Q33', 'In the given AP series the term at position 11 would be\n5, 8, 11, 14, 17, 20………50.', 7, 96, 3, 2, 1, 6, '_e522m4wsa', NULL, 1, '2019-08-25 05:46:21', '2019-08-25 05:46:21'),
(271, 'TQ0000271', 'CCS107 - DATA STRUCTURES AND ALGORITHM 1 - Q31', 'Which of the following algorithm implementations is similar to that of an insertion sort?', 7, 102, 1, 2, 1, 6, '_lfurqjecp', NULL, 1, '2019-08-25 05:49:07', '2019-08-25 05:49:07'),
(272, 'TQ0000272', 'CCS107 - DATA STRUCTURES AND ALGORITHM 1 - Q32', 'Strand sort algorithm used which of the following method for sorting a list?', 7, 102, 1, 2, 1, 6, '_myzbu78j1', NULL, 1, '2019-08-25 05:52:13', '2019-08-25 05:52:13'),
(273, 'TQ0000273', 'CCS107 - DATA STRUCTURES AND ALGORITHM 1 - Q33', 'If a, b, c are in AP then relation between a, b, c can be', 7, 102, 2, 2, 1, 6, '_wnthd2j27', NULL, 1, '2019-08-25 05:53:48', '2019-08-25 05:53:48'),
(274, 'TQ0000274', 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q23', 'Boxing converts a value type on the stack to an ______ on the heap.', 7, 95, 2, 2, 1, 6, '_3jehwpgxy', NULL, 1, '2019-08-26 04:37:57', '2019-08-26 04:37:57'),
(275, 'TQ0000275', 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q24', 'How should you arrange catch blocks?', 7, 95, 2, 2, 1, 6, '_bv3q14csh', NULL, 1, '2019-08-26 04:41:33', '2019-08-26 04:41:33'),
(276, 'TQ0000276', 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q25', 'In data reader, what can be used before read method?', 7, 95, 2, 2, 1, 6, '_fb0mqn4sn', NULL, 1, '2019-08-26 04:45:22', '2019-08-26 04:45:22'),
(277, 'TQ0000277', 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q26', 'Which of the following will result from compiling this code, assuming that all other code for your form works properly?\n\n[[#code27]]', 7, 95, 3, 2, 1, 6, '_an897sonj', NULL, 1, '2019-08-26 04:47:49', '2019-08-26 04:47:49'),
(278, 'TQ0000278', 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q27', 'What will be the output of the following code?\n\n[[#code28]]', 7, 95, 3, 2, 1, 6, '_ai34x81ug', NULL, 1, '2019-08-26 04:49:26', '2019-08-26 04:49:26'),
(279, 'TQ0000279', 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q28', 'You have designed a logon form with two TextBox controls named txtUserName and txtpassword. You want to ensure that the user can enter only lowercase characters in the controls. Which of the following solutions will fulfill this requirement using the simplest method?', 7, 95, 3, 2, 1, 6, '_u79rkmztb', NULL, 1, '2019-08-26 04:50:36', '2019-08-26 04:50:36'),
(280, 'TQ0000280', 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q29', 'You are designing a Windows Form that enables you to add a new product to the product catalog of your company. You need to validate the controls as the user enters the data. If incorrect data is entered in the field, you should set the focus back to the control and ask the user to enter the correct data. Which of the following events will you use to validate user input?', 7, 95, 3, 2, 1, 6, '_0q8in2ux5', NULL, 1, '2019-08-26 04:51:57', '2019-08-26 04:51:57'),
(281, 'TQ0000281', 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q30', 'You have an order entry form. When an exception occurs, you want to get information about the sequence of method calls and the line number in the method where the exception occurs. Which property of your custom exception class that derives from the ApplicationException class should be used?', 7, 95, 3, 2, 1, 6, '_lpll03pgt', NULL, 1, '2019-08-26 04:52:58', '2019-08-26 04:52:58'),
(282, 'TQ0000282', 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q31', 'You want to log events generated by exception-handling code within your application, which will run on standalone systems running Windows 98 and Windows 2000. Which of the four methods of logging is the best single solution able to fulfill this requirement?', 7, 95, 3, 2, 1, 6, '_t2uk4wrsn', NULL, 1, '2019-08-26 04:53:51', '2019-08-26 04:53:51'),
(283, 'TQ0000283', 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q32', 'You have a TextBox control and a Help button that the user can press to get help on allowable values. You validate the data entered by the user in the TextBox control. If the user enters an invalid value, you set the focus back in the control using the Cancel property of the CancelEventArgs. A user reports that once he enters invalid data in the text box, he cannot click the Help button. What should you do to correct the problem?', 7, 95, 3, 2, 1, 6, '_3e0navpr2', NULL, 1, '2019-08-26 04:55:39', '2019-08-26 04:55:39'),
(284, 'TQ0000284', 'IT01 - CCS103 - COMPUTER PROGRAMMING 2 Q33', 'Exponential formatting character (‘E’ or ‘e’) converts a given value to string in the form of _______.', 7, 95, 3, 2, 1, 6, '_p7uv2l567', NULL, 1, '2019-08-26 04:57:15', '2019-08-26 04:57:15'),
(285, 'TQ0000285', 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q29', 'The period of 2 sin x cos x is', 7, 92, 1, 2, 1, 6, '_r6u8vf6kh', NULL, 1, '2019-08-26 18:09:50', '2019-08-26 18:09:50'),
(286, 'TQ0000286', 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q30', 'The probability that an electronic device produced by a company does not function properly is equal to 0.1. If 10 devices are bought, then the probability, to the nearest thousandth, that 7 devices function properly is', 7, 92, 3, 2, 1, 6, '_u5n71awu7', NULL, 1, '2019-08-26 18:10:52', '2019-08-26 18:10:52'),
(287, 'TQ0000287', 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q31', 'Round (202)<sup>2</sup> to the nearest hundred.', 7, 92, 1, 2, 1, 6, '_7dsfzatj8', NULL, 1, '2019-08-26 18:14:49', '2019-08-26 18:14:49'),
(288, 'TQ0000288', 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q32', 'a, b, c and d are numbers of different values such that \na + b = d \na·b·c = 0 \nWhich of the 4 numbers MUST be equal to 0?', 7, 92, 1, 2, 1, 6, '_f0ac088z8', NULL, 1, '2019-08-26 18:16:10', '2019-08-26 18:16:10'),
(289, 'TQ0000289', 'IT01 - MAT101 - MATHEMATICS IN THE MODERN WORLD Q33', 'A number of the form 213ab, where a and b are digits, has a reminder less than 10 when divided by 100. The sum of all the digits in the above number is equal to 13. Find the digit b.', 7, 92, 1, 2, 1, 6, '_f9qzadphr', NULL, 1, '2019-08-26 18:17:10', '2019-08-26 18:17:10'),
(290, 'TQ0000290', 'Test 123123123', 'test1', 7, 89, 2, 48, 1, 6, '_6k5mr8apy', 290, 1, '2019-09-15 02:16:45', '2019-09-15 02:16:46');

-- --------------------------------------------------------

--
-- Table structure for table `test_question_problems`
--

CREATE TABLE `test_question_problems` (
  `id` int(10) UNSIGNED NOT NULL,
  `student_id` int(11) NOT NULL,
  `test_question_id` int(11) NOT NULL,
  `message` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `is_resolved` tinyint(1) NOT NULL DEFAULT '0',
  `resolved_description` text COLLATE utf8mb4_unicode_ci,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `test_question_problems`
--

INSERT INTO `test_question_problems` (`id`, `student_id`, `test_question_id`, `message`, `is_resolved`, `resolved_description`, `created_at`, `updated_at`) VALUES
(1, 36, 223, 'testing report', 1, NULL, '2019-09-15 05:04:29', '2019-09-15 07:15:25'),
(2, 36, 70, 'testing report 2', 1, NULL, '2019-09-15 05:05:58', '2019-09-15 07:17:23'),
(3, 36, 68, 'testing report 3', 1, NULL, '2019-09-15 05:11:33', '2019-09-15 07:18:31');

-- --------------------------------------------------------

--
-- Table structure for table `users`
--

CREATE TABLE `users` (
  `id` int(11) NOT NULL,
  `first_name` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `last_name` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `middle_name` varchar(191) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `username` varchar(25) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `email` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `password` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `contact_no` varchar(191) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `date_of_birth` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `sex` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `address` varchar(191) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `user_type_id` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `is_active` tinyint(1) DEFAULT '1',
  `remember_token` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `users`
--

INSERT INTO `users` (`id`, `first_name`, `last_name`, `middle_name`, `username`, `email`, `password`, `contact_no`, `date_of_birth`, `sex`, `address`, `user_type_id`, `is_active`, `remember_token`, `created_at`, `updated_at`) VALUES
(2, 'GLORIA', 'HERNANDEZ', 'TESTING', 'glohernandez', 'glohernandez@gmail.com', '$2y$10$UBX0VciWUJ2/5Tppg5kkxOumscoKLY7NjLhBQrEP8QqDgmrNuo8Aa', '09151606316', '1990-07-24T16:00:00.000Z', 'F', 'Cabuyao, Laguna', 'dean', 1, 'kNXct498avPciI8OTN0roGcqeMdqOUjinwO0nFQQC65PSX3AqugEPzDufcFu', '2019-05-05 05:27:38', '2019-09-14 05:24:47'),
(3, 'JOHN', 'DOE', 'SMITH', 'johndoe', 'johndoe@gmail.com', '$2y$10$/nvGNjis..htaL7SySoLr.Aj6nNPx0.5p5OWUkNXjYyGaQq9sHAQy', NULL, '23 Apr 1999', 'M', NULL, 'dean', 1, NULL, '2019-05-05 05:32:31', '2019-05-06 04:27:30'),
(4, 'JUAN', 'CRUZ', 'DELA', 'juandelacruz', 'juandelacruz@gmail.com', '$2y$10$gyvWCofZWSLXL53Vr310c.3wGAalS3I7uan9ZZSnxmmX9H5mPaad.', NULL, '09 May 2001', 'M', NULL, 'prof', 1, NULL, '2019-05-05 05:33:57', '2019-07-04 09:08:13'),
(7, 'ANNA', 'LOPEZ', 'VIDA', 'annalopez', 'annavida@gmail.com', '$2y$10$JNmLAe8Gs4pn/tl666TDRuk1/mRYvNahqMU9pqh1WpCbjslrlQCJK', '09123-123-123', '04 May 1995', 'F', NULL, 'dean', 1, NULL, '2019-05-05 05:56:43', '2019-07-04 09:37:58'),
(8, 'JOHN CARLO', 'LOPEZ', 'TRY', 'johncarlo', 'test@gmail.com', '$2y$10$FrIAAFs4iDcTmBjOaXN6FuibUoN87UEMEPUG9e35L8BnK1KIhFpS6', '091233323112', '23 Apr 1999', 'M', 'Cabuyao, Laguna', 'dean', 1, NULL, '2019-05-05 20:18:29', '2019-05-06 04:35:09'),
(12, 'TEST', 'TRY', NULL, 'testtry', 'test1@gmail.com', '$2y$10$.ggAFkK9L92ZP95hYqagOuL71YWIREjd1W.aCT7z3Gl27jKA5DgNm', NULL, '02 Feb 2011', 'F', NULL, 'prof', 1, NULL, '2019-05-05 22:55:21', '2019-06-29 13:14:59'),
(13, 'TRY AGAIN', 'TRY', '', 'tryagain', 'try@gmail.com', '$2y$10$LCYx3Q5CfpwPTUraD2hTEuvJEni7dB1d1Nfh2fS7.Bc47.N3VYu7C', NULL, '05 May 1990', 'M', NULL, 'prof', 1, NULL, '2019-05-05 22:57:31', '2019-06-29 13:14:59'),
(14, 'ASD', 'ASD', 'ASD', 'asd123', 'asd@gmail.com', '$2y$10$tWVpiPFADk6zVtH0LpYiQ.NzW74vuoKiA11MD9Nd87F0iK16jDtqq', NULL, '01 May 2019', 'F', NULL, 'prof', 1, NULL, '2019-05-05 23:13:47', '2019-05-05 23:13:47'),
(15, 'ROMOLO', 'TACMOY', 'TRY', 'tacmoy123', 'tacmoy@gmail.com', '$2y$10$btBlCGIE.9GkXXDv7Hwq0OUOxpBY3rIEKeCBUBopIt4.Zxr1Q.6F6', NULL, '17 May 1990', 'M', NULL, 'dean', 1, NULL, '2019-05-06 04:37:00', '2019-05-06 04:37:21'),
(16, 'VINCENT', 'ORTEGA', 'JOHN', 'vincentortega', 'vincent@gmail.com', '$2y$10$C/r5p4kTHI7T17/E0EkOLuw9NfCGOM5h7nl1RS9G.w381LlkcmoRe', '09129998987', '01 May 1994', 'M', 'Cabuyao, Laguna', 'prof', 1, NULL, '2019-05-06 06:44:04', '2019-07-04 08:23:08'),
(17, 'RICHLYN', 'REBANA', 'TRY', 'richlynrebana', 'rich@gmail.com', '$2y$10$TSz2wgB5RoexytAckr.DX.H7SA5gqCgXBiNIdLX92aseEcZb5Yv7O', NULL, '11 Jun 1997', 'F', NULL, 'dean', 1, NULL, '2019-05-06 06:44:51', '2019-05-12 03:23:19'),
(18, 'SUPER', 'ADMIN', '', 'superadmin', 'superadmin@me.com', '$2y$10$HLF0cAij4GIxSBAmSpw84OIKLtrpu7wK/Nu5ZeShvXyfmTT34ugMy', NULL, '23 Apr 1999', 'M', NULL, 's_admin', 1, NULL, '2019-05-07 21:18:52', '2019-05-07 21:18:52'),
(19, 'RYAN', 'FOSTER', 'TRY', 'ryanrey', 'foster@gmail.com', '$2y$10$Io7Qc8wcz7BRgJIS7DKQkuN5MZpdabFJz9aoPFng2xDJ7dzHtnKgK', NULL, '07 May 1991', 'M', NULL, 'prof', 1, NULL, '2019-05-22 16:10:48', '2019-05-22 19:03:52'),
(20, 'JEPEE', 'ASD', 'TRYL', 'jepee', 'jepee@gmail.com', '$2y$10$.3sWCuNml0P0VrQ5XQ5uAudWHd1skzllWv8KGqd6xDXOA3pgURFFS', '09898776767', '04 Jan 2000', 'M', NULL, 'prof', 1, NULL, '2019-05-22 17:30:10', '2019-07-04 08:19:28'),
(21, 'JOHN MARK', 'ASD', 'TRY', 'johnmark', 'johnmark@gmail.com', '$2y$10$.s6cNLIHYXEc2xAZPl7i5e5/loCeLW170Az2af55Hx4qTTwKTuIbW', '09898778767', '08 Feb 1990', 'M', NULL, 'prof', 1, NULL, '2019-05-22 17:31:20', '2019-07-04 13:15:10'),
(30, 'GABRIEL', 'OLIVARES', 'DIO', 'gab_olivares', 'gab@gmail.com', '$2y$10$uZdz6v9.vI9gLPwQMUdTYOPLE2neG3z5G6O9mKyWIKNuWFxiy6HHe', NULL, '1990-05-31T20:42:00.000Z', 'M', NULL, 'stud', 1, NULL, '2019-05-23 20:43:16', '2019-09-14 05:26:54'),
(35, 'FRANCIS KARL', 'PUNONGBAYAN', 'TEST', 'franciskarl', 'karl@gmail.com', '$2y$10$ZAGlV3v1huE5kCXD/HvtSeb5sYdRUU5iitCkFvHpP4sXJ83E3NUvq', NULL, '1996-05-09T14:35:00.000Z', 'M', NULL, 'stud', 1, NULL, '2019-07-04 14:36:41', '2019-07-04 14:36:41'),
(36, 'JENCEL', 'CANCISIO', 'TEST', 'jencelcancisio', 'jencel@gmail.com', '$2y$10$D5cJ1C4W1YUqCkGJD0v6P.3xyg.EyfsR8upvzud8xxQDhVbK3BJ8i', NULL, '1998-06-02T14:37:00.000Z', 'M', NULL, 'stud', 1, NULL, '2019-07-04 14:38:16', '2019-07-04 14:38:16'),
(37, 'JEFFREY', 'DAYSA', 'TEST', 'jeffreydaysa', 'daysa@gmail.com', '$2y$10$1aGWoam5u3YQE2cUtWbwuOoOYn/Ri1MnunnFbusn2Vc4z8uHr5bzq', NULL, '1997-05-04T14:39:00.000Z', 'M', NULL, 'stud', 1, NULL, '2019-07-04 14:40:21', '2019-07-04 14:40:21'),
(38, 'PATRICK', 'FLORAS', 'TEST', 'patrickflora', 'florastudent@gmail.com', '$2y$10$0VrWG0j6O/ynPOCI2.gi4.AkkklAqjfPN12R2EDEW2/EK/V18yYry', NULL, '1998-06-27T14:42:00.000Z', 'M', NULL, 'stud', 1, NULL, '2019-07-04 14:43:40', '2019-07-06 08:56:19'),
(39, 'JANUS', 'TAN', 'TEST', 'janustan', 'janus@gmail.com', '$2y$10$Nf4eJ6kAMogTu1K44pn1eOptuStb4bTaii1AnXzoATasAZjtVwZyG', NULL, '14 May 1990', 'M', NULL, 'prof', 1, NULL, '2019-07-06 09:17:28', '2019-07-06 11:52:23'),
(43, 'PATRICK', 'OGALESCO', 'TEST', 'patrickogalesco', 'patrickogalesco@gmail.com', '$2y$10$hdDPcL4ytFCrWRFNBwYbaOqiceopfi7f5nJdTrIziMft4E.HRYubi', NULL, '1990-01-13T10:38:00.000Z', 'M', NULL, 'prof', 1, NULL, '2019-07-06 10:41:15', '2019-07-06 10:41:15'),
(44, 'JOHNNY', 'SMITH', 'TEST', 'johnnysmith', 'smitty@gmail.com', '$2y$10$jYdt6xgujSVMwxro7fnYOOodt/uk9xFAjuuZUpzfNMc3p59Z9Cpku', NULL, '1990-01-03T10:42:00.000Z', 'M', NULL, 'prof', 1, NULL, '2019-07-06 10:42:40', '2019-08-09 09:25:04'),
(45, 'JUN', 'ERCIA', 'TEST', 'junercia', 'junercia@gmail.com', '$2y$10$gviXPXz8o.Yj7xLwRa4wWOJoe4r3r7EgJnf59EdE8mWa2LtERFDZW', NULL, '1984-06-12T10:43:00.000Z', 'M', NULL, 'prof', 1, NULL, '2019-07-06 10:43:42', '2019-07-06 20:49:38'),
(46, 'RENELYN', 'MAÑABO', 'TEST', 'lenmanabo', 'len@gmail.com', '$2y$10$v2f6O6ZdudZdtHvDfsoh6uQHgFDej5uTdXMuGT5Du1Mn7J/.U7Y3q', NULL, '1981-08-25T20:49:00.000Z', 'F', NULL, 'prof', 1, NULL, '2019-07-06 20:50:57', '2019-07-06 20:50:57'),
(47, 'GIE', 'MARTE', 'TESTING', 'giemarte', 'giemarte@gmail.com', '$2y$10$TnR7OcTpDV9Ud7EfR15T5OA2gmipXNHdAzxrj59azESzKT2.wfM6u', NULL, '1990-05-26T09:12:00.000Z', 'F', NULL, 'prof', 1, NULL, '2019-08-09 09:13:29', '2019-09-14 05:08:47'),
(48, 'GIGI', 'HAWAK', 'TESTING', 'gigihawak', 'gigihawak@gmail.com', '$2y$10$yYqyZYiR7/MhfXPRMMoEhulnC8DA1KZU6qijOK0K1hWRQiU22yl1i', NULL, '1990-01-26T09:12:00.000Z', 'F', NULL, 'prof', 1, NULL, '2019-08-09 09:15:17', '2019-08-09 09:22:18'),
(49, 'JONER', 'PEREY', 'TESTING', 'jonerperey', 'jonerperey@gmail.com', '$2y$10$pRdgsElqKJColOJ62vugNOKiLaKYwxyt4yOuPZCu9WeCI966/CBLe', NULL, '1998-08-01T09:52:00.000Z', 'M', NULL, 'stud', 1, NULL, '2019-08-09 09:53:53', '2019-08-09 09:53:53'),
(50, 'CAMILLE', 'MANALASTAS', 'TESTING', 'camillemanalastas', 'camille@gmail.com', '$2y$10$oxx6nSdYEZrkNpLmkWyMZ.oC768/ECObdlv57CdgkSpjMhN1yeTTu', NULL, '1997-08-13T09:55:00.000Z', 'F', NULL, 'stud', 1, NULL, '2019-08-09 09:56:37', '2019-08-09 10:10:08'),
(51, 'JOSEPH', 'GONZALES', 'YU', 'yujoseph', 'josephgonzales@gmail.com', '$2y$10$CykhlUe8oRMB8oOIhkbdyedGkCqggiBhKCyaSUtAdSMJ0hQRdc51i', NULL, '1998-02-05T13:05:00.000Z', 'M', NULL, 'stud', 1, NULL, '2019-08-10 05:07:12', '2019-08-10 05:07:12'),
(52, 'CLARISSE', 'AMANDO', 'DIAZ', 'clarissediaz', 'clarisseamando@gmail.com', '$2y$10$XTg.nwN52y7Ya62fcpbaV.YC5RQ68hoOmaK1lBR70LljG4J997cP2', NULL, '1997-06-26T13:27:00.000Z', 'F', NULL, 'stud', 1, NULL, '2019-08-10 05:30:11', '2019-08-10 05:30:11'),
(53, 'DEBBIE', 'SAN JUAN', 'LOPE', 'debbielope', 'debbiesanjuan@gmail.com', '$2y$10$tptceFf85Gu/9vFMW8RRuOvVHbAm.JYwO/WII4gQhxiLBo544o.j6', NULL, '1998-08-27T13:30:00.000Z', 'F', NULL, 'stud', 1, NULL, '2019-08-10 05:32:26', '2019-08-10 05:32:26'),
(54, 'RENE', 'SOCORRO', 'TAN', 'socorrorene', 'renesocorro@gmail.com', '$2y$10$u3JX7L1w2ypiHKl2qz4Y9.coQoupvTa0lYKGGhxNcyyS/.fh1omlq', NULL, '1999-10-12T13:30:00.000Z', 'M', NULL, 'stud', 1, NULL, '2019-08-10 05:34:55', '2019-08-10 05:34:55'),
(55, 'HILARY', 'GONZAGA', 'CRUZ', 'hilarycruz', 'hilarygonzaga@gmail.com', '$2y$10$wqOz/1lAtnOddYgIfoekXOxhxbY52FgI98dpcqHl/PsIRRC1DkBh.', NULL, '1997-09-01T13:30:00.000Z', 'F', NULL, 'stud', 1, NULL, '2019-08-10 05:37:06', '2019-08-10 05:37:06'),
(56, 'KRISTILLE MAE', 'ONIO', 'AREVALO', 'kristillemae', 'kristilleonio@gmail.com', '$2y$10$weQS7OIrSIRykzU.raRKDeZ4K5q21k5u4AuTq/Rk2hLowq2JgmkwW', NULL, '1998-05-29T13:30:00.000Z', 'F', NULL, 'stud', 1, NULL, '2019-08-10 05:38:19', '2019-08-10 05:38:19'),
(57, 'DINO', 'FERNANDEZ', 'SY', 'fernandezdino', 'dinofernandez@gmail.com', '$2y$10$TelINTemi0JkPPs6yzmh2.vDtbhKfVWtMEMlew/0bw9.dWuOfnW6C', NULL, '1999-04-18T13:30:00.000Z', 'M', NULL, 'stud', 1, NULL, '2019-08-10 05:39:46', '2019-08-10 05:39:46'),
(58, 'NAZH', 'ARAGONES', 'GERON', 'aragonesnazh', 'nazharagones@gmail.com', '$2y$10$6Ow4LmHOtLWOczeLI9z1E.M.lBt6FMRs3CsD84neRnuQfwNXCz/5a', NULL, '1998-03-24T13:30:00.000Z', 'M', NULL, 'stud', 1, NULL, '2019-08-10 05:40:49', '2019-08-10 05:40:49'),
(59, 'JOSIE', 'PALOMA', 'CIRON', 'palomajosie', 'josiepaloma@gmail.com', '$2y$10$NN/5C2sm7f9/CAh.nyJTzuCq0XNUahSz.q.Otyrtv275cmTGJax.2', NULL, '1999-02-24T13:30:00.000Z', 'F', NULL, 'stud', 1, NULL, '2019-08-10 05:41:56', '2019-08-10 05:41:56'),
(60, 'DANTE', 'SALAMAT', 'PEREZ', 'salamatdante', 'dantesalamat@gmail.com', '$2y$10$.2W9IdY2GWGAkmrBBa8Y4OdzwO56UO9XB8pNez.OvLfB0Yk.hRFD2', NULL, '1998-07-16T13:30:00.000Z', 'M', NULL, 'stud', 1, NULL, '2019-08-10 05:42:56', '2019-08-10 05:42:56'),
(61, 'MARY JANE', 'MACALINTAL', 'PASIA', 'majhane', 'maryjanemacalintal@gmail.com', '$2y$10$luhkHcQO/pS0w6VEZW2X2uyRMMtvKilg4LjAxR0dkHv92ZRZO2vT6', NULL, '1995-11-29T13:30:00.000Z', 'F', NULL, 'stud', 1, NULL, '2019-08-10 05:44:01', '2019-08-10 05:44:01'),
(62, 'JOCEL', 'DE JESUS', 'BENETO', 'jocelgracia', 'joceldejesus@gmail.com', '$2y$10$YM.PkxsKv9qSJ75TfrsgCOIvI8D5u//o/AaMYg/2ZRG17E3IdhcXS', NULL, '1999-04-29T13:30:00.000Z', 'F', NULL, 'stud', 1, NULL, '2019-08-10 05:46:59', '2019-08-10 05:46:59'),
(63, 'KARREN', 'ARELLANO', 'FIAG', 'karrenkaye', 'karrenarellano@gmail.com', '$2y$10$x35ddcnyZo26mRDMCY.jju5XmlhmSz9HNBVwKFODvQFMoBqNs0ZIa', NULL, '1997-01-06T13:47:00.000Z', 'F', NULL, 'stud', 1, NULL, '2019-08-10 05:49:22', '2019-08-10 05:49:22'),
(64, 'DIONISIO', 'MABUHAY', 'JUAN', 'dionisio', 'dionisiomabuhay@gmail.com', '$2y$10$gSCjmme0.OiqT/OvHSuUgOdZOz1EYDz6IoKk9v6dUaSk2HIe81F5O', NULL, '1998-05-03T13:47:00.000Z', 'M', NULL, 'stud', 1, NULL, '2019-08-10 05:50:17', '2019-08-10 05:50:17'),
(65, 'ARIEL', 'GERONIMO', 'HOMOR', 'arielhomor', 'arielgeronimo@gmail.com', '$2y$10$fc0/sxCCgWfYW2a5Jbmdyu7KIVPw32fsBHBT4giBWDdNti.Jl9Xna', NULL, '1999-07-10T13:47:00.000Z', 'M', NULL, 'stud', 1, NULL, '2019-08-10 05:51:34', '2019-08-10 05:51:34'),
(66, 'JOSHUA', 'DIMAANO', 'DIMACULANGAN', 'joshua', 'joshuadimaano@gmail.com', '$2y$10$DJDCvCY65rm9MZR1RmoXC.gPHUrR9qJAST9y7O6B80wmwGScHw/jG', NULL, '1997-12-26T13:47:00.000Z', 'M', NULL, 'stud', 1, NULL, '2019-08-10 05:52:47', '2019-08-10 05:52:47'),
(67, 'RODRIGRO', 'VELASCO', 'ORSUA', 'rodrigo', 'rodrigovelasco@gmail.com', '$2y$10$fmKrCyM9u9fXC9CaJv.2s.1n51eq1Yw2ySslhaeQmMP4k4FIhhK5S', NULL, '1998-07-04T13:47:00.000Z', 'M', NULL, 'stud', 1, NULL, '2019-08-10 05:54:00', '2019-08-10 05:54:00'),
(68, 'ROSALONA', 'DELMUNDO', 'GIRE', 'rosalona', 'rosalonadelmundo@gmail.com', '$2y$10$..ZULurNEoA0Ko56I8L1Q..L3MWi9Pn18BAGO3JDy5lTIIwFnvHVK', NULL, '1997-06-06T13:47:00.000Z', 'F', NULL, 'stud', 1, NULL, '2019-08-10 05:55:20', '2019-08-10 05:55:20'),
(69, 'ROMANO', 'LOPEZ', 'ALON', 'romano', 'romanolopez@gmail.com', '$2y$10$ew694tgABetp0dCyzJMpAuNl04K49rfxQ37RcPDp/diF3Rci52hqS', NULL, '1999-08-09T13:47:00.000Z', 'M', NULL, 'stud', 1, NULL, '2019-08-10 05:56:33', '2019-08-10 05:56:33'),
(70, 'REYNOLD', 'SAIF', 'CRUZ', 'reynolds', 'reynoldsaif@gmail.com', '$2y$10$ZiqPTN2g13izQV8.5jn5kO1yoIbFf0q0FkYDg7B2VWmv5A/R.WBSm', NULL, '1996-10-31T13:47:00.000Z', 'M', NULL, 'stud', 1, NULL, '2019-08-10 06:00:01', '2019-08-10 06:00:01'),
(71, 'JENNY', 'LOPEZ', 'TESTING', 'jenny_lopez', 'jennylopez@gmail.com', '$2y$10$GG7ccpAB8VYEzII6wxA.ceWUNJfos0nq0sZ3vFSocPlab.WAA0xYK', NULL, '2000-05-27T04:28:00.000Z', 'F', NULL, 'stud', 1, NULL, '2019-09-15 04:28:56', '2019-09-15 04:28:56');

-- --------------------------------------------------------

--
-- Table structure for table `user_profiles`
--

CREATE TABLE `user_profiles` (
  `id` int(10) UNSIGNED NOT NULL,
  `user_id` int(11) NOT NULL,
  `house_no` varchar(191) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `barangay` varchar(191) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `town_city` varchar(191) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `province` varchar(191) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `country` varchar(191) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `zip_code` varchar(191) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `place_of_birth` varchar(191) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `civil_status` varchar(191) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `nationality` varchar(191) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `religion` varchar(191) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `contact_no` varchar(191) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `user_profiles`
--

INSERT INTO `user_profiles` (`id`, `user_id`, `house_no`, `barangay`, `town_city`, `province`, `country`, `zip_code`, `place_of_birth`, `civil_status`, `nationality`, `religion`, `contact_no`, `created_at`, `updated_at`) VALUES
(1, 30, 'Blk21 Lot 16', 'Bigaa', NULL, 'Laguna', NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2019-09-13 12:18:52', '2019-09-14 05:25:36'),
(2, 2, 'Blk21 Lot 23', 'Butong', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2019-09-14 05:16:12', '2019-09-14 05:29:36'),
(3, 48, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2019-09-14 05:31:01', '2019-09-14 05:31:01'),
(4, 71, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2019-09-16 11:08:27', '2019-09-16 11:08:27');

-- --------------------------------------------------------

--
-- Table structure for table `user_types`
--

CREATE TABLE `user_types` (
  `id` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `description` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `user_types`
--

INSERT INTO `user_types` (`id`, `description`) VALUES
('stud', 'Student'),
('prof', 'Professor'),
('dean', 'Dean'),
('s_admin', 'Super Admin');

--
-- Indexes for dumped tables
--

--
-- Indexes for table `answer_sheets`
--
ALTER TABLE `answer_sheets`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `answer_sheet_test_questions`
--
ALTER TABLE `answer_sheet_test_questions`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `answer_sheet_test_question_choices`
--
ALTER TABLE `answer_sheet_test_question_choices`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `assessments`
--
ALTER TABLE `assessments`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `assessment_code` (`assessment_code`);

--
-- Indexes for table `assessment_details`
--
ALTER TABLE `assessment_details`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `assessment_types`
--
ALTER TABLE `assessment_types`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `choices`
--
ALTER TABLE `choices`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `ch_code` (`ch_code`),
  ADD KEY `fk_choices_test_questions_test_questions_id__idx` (`test_question_id`),
  ADD KEY `fk_choices_users_user_id_idx` (`user_id`);

--
-- Indexes for table `code_objects`
--
ALTER TABLE `code_objects`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `colleges`
--
ALTER TABLE `colleges`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `colleges_college_code_unique` (`college_code`);

--
-- Indexes for table `courses`
--
ALTER TABLE `courses`
  ADD PRIMARY KEY (`id`),
  ADD KEY `fk_courses_colleges_college_id_idx` (`college_id`);

--
-- Indexes for table `course_requisites`
--
ALTER TABLE `course_requisites`
  ADD PRIMARY KEY (`id`),
  ADD KEY `fk_course_requisites_curriculum_courses_curriculum_course_i_idx` (`curriculum_course_id`),
  ADD KEY `fk_course_requisites_curriculum_courses_pre_req_id_idx` (`pre_req_id`);

--
-- Indexes for table `curricula`
--
ALTER TABLE `curricula`
  ADD PRIMARY KEY (`id`),
  ADD KEY `fk_curricula_programs_program_id_idx` (`program_id`),
  ADD KEY `fk_curriula_users_user_id_idx` (`user_id`);

--
-- Indexes for table `curriculum_courses`
--
ALTER TABLE `curriculum_courses`
  ADD PRIMARY KEY (`id`),
  ADD KEY `fk_curriculum_courses_courses_course_id_idx` (`course_id`),
  ADD KEY `fk_curriculum_courses_curricula_curriculum_id_idx` (`curriculum_id`);

--
-- Indexes for table `curriculum_mapping_statuses`
--
ALTER TABLE `curriculum_mapping_statuses`
  ADD PRIMARY KEY (`id`),
  ADD KEY `fk_curriculum_mapping_statuses_curricula_curriculum_id_idx` (`curriculum_id`);

--
-- Indexes for table `curriculum_maps`
--
ALTER TABLE `curriculum_maps`
  ADD PRIMARY KEY (`id`),
  ADD KEY `fk_curriculum_maps_student_outcomes_student_outcome_id_idx` (`student_outcome_id`),
  ADD KEY `fk_curriculum_maps_curriculum_courses_curriculum_course_id_idx` (`curriculum_course_id`),
  ADD KEY `fk_curriculum_maps_learning_levels_learning_level_id_idx` (`learning_level_id`);

--
-- Indexes for table `custom_recorded_assessments`
--
ALTER TABLE `custom_recorded_assessments`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `difficulty_levels`
--
ALTER TABLE `difficulty_levels`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `exams`
--
ALTER TABLE `exams`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `exam_code` (`exam_code`),
  ADD KEY `fk_exams_student_outcomes_student_outcome_id_idx` (`student_outcome_id`),
  ADD KEY `fk_exams_curricula_curriculum_id_idx` (`curriculum_id`),
  ADD KEY `fk_exams_users_user_id_idx` (`user_id`);

--
-- Indexes for table `exam_levels`
--
ALTER TABLE `exam_levels`
  ADD PRIMARY KEY (`id`),
  ADD KEY `fk_exam_levels_exams_exam_id_idx` (`exam_id`),
  ADD KEY `exam_levels_difficulty_levels_difficulty_level_id_idx` (`difficulty_level_id`);

--
-- Indexes for table `exam_test_questions`
--
ALTER TABLE `exam_test_questions`
  ADD PRIMARY KEY (`id`),
  ADD KEY `fk_exam_test_questions_exams_exam_id_idx` (`exam_id`),
  ADD KEY `exam_test_questions_test_questions_test_question_id_idx` (`test_question_id`);

--
-- Indexes for table `faculties`
--
ALTER TABLE `faculties`
  ADD PRIMARY KEY (`id`),
  ADD KEY `fk_faculties_colleges_college_id_idx` (`college_id`),
  ADD KEY `fk_faculties_users_user_id_idx` (`user_id`);

--
-- Indexes for table `faculty_courses`
--
ALTER TABLE `faculty_courses`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `grades`
--
ALTER TABLE `grades`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `grade_values`
--
ALTER TABLE `grade_values`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `image_objects`
--
ALTER TABLE `image_objects`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `item_analyses`
--
ALTER TABLE `item_analyses`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `item_analysis_details`
--
ALTER TABLE `item_analysis_details`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `item_analysis_detail_actions`
--
ALTER TABLE `item_analysis_detail_actions`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `learning_levels`
--
ALTER TABLE `learning_levels`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `math_objects`
--
ALTER TABLE `math_objects`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `migrations`
--
ALTER TABLE `migrations`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `password_resets`
--
ALTER TABLE `password_resets`
  ADD KEY `password_resets_email_index` (`email`);

--
-- Indexes for table `performance_criterias`
--
ALTER TABLE `performance_criterias`
  ADD PRIMARY KEY (`id`),
  ADD KEY `fk_performance_criterias_student_outcomes_id_idx` (`student_outcome_id`);

--
-- Indexes for table `performance_criteria_archives`
--
ALTER TABLE `performance_criteria_archives`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `performance_criteria_indicators`
--
ALTER TABLE `performance_criteria_indicators`
  ADD PRIMARY KEY (`id`),
  ADD KEY `fk_performance_criteria_indicators_performance_criterias_pe_idx` (`performance_criteria_id`),
  ADD KEY `fk_performance_criteria_indicators_performance_indicators_p_idx` (`performance_indicator_id`);

--
-- Indexes for table `performance_criteria_indicator_archives`
--
ALTER TABLE `performance_criteria_indicator_archives`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `performance_indicators`
--
ALTER TABLE `performance_indicators`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `programs`
--
ALTER TABLE `programs`
  ADD PRIMARY KEY (`id`),
  ADD KEY `fk_programs_colleges_college_id_idx` (`college_id`);

--
-- Indexes for table `settings`
--
ALTER TABLE `settings`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `students`
--
ALTER TABLE `students`
  ADD PRIMARY KEY (`id`),
  ADD KEY `fk_students_users_user_id_idx` (`user_id`),
  ADD KEY `fk_students_programs_program_id_idx` (`program_id`),
  ADD KEY `fk_students_curricula_curriculum_id_idx` (`curriculum_id`);

--
-- Indexes for table `student_outcomes`
--
ALTER TABLE `student_outcomes`
  ADD PRIMARY KEY (`id`),
  ADD KEY `fk_student_outcomes_programs_program_id_idx` (`program_id`);

--
-- Indexes for table `student_outcome_archives`
--
ALTER TABLE `student_outcome_archives`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `student_outcome_archive_versions`
--
ALTER TABLE `student_outcome_archive_versions`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `test_questions`
--
ALTER TABLE `test_questions`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `tq_code` (`tq_code`),
  ADD KEY `fk_test_questions_student_outcomes_student_outcome_id_idx` (`student_outcome_id`),
  ADD KEY `fk_test_questions_courses_course_id_idx` (`course_id`),
  ADD KEY `fk_test_questions_difficulty_levels_difficulty_level_id_idx` (`difficulty_level_id`),
  ADD KEY `fk_test_questions_users_user_id_idx` (`user_id`),
  ADD KEY `fk_test_questions_performance_criterias_performance_criteri_idx` (`performance_criteria_id`);

--
-- Indexes for table `test_question_problems`
--
ALTER TABLE `test_question_problems`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `users`
--
ALTER TABLE `users`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `users_email_unique` (`email`);

--
-- Indexes for table `user_profiles`
--
ALTER TABLE `user_profiles`
  ADD PRIMARY KEY (`id`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `answer_sheets`
--
ALTER TABLE `answer_sheets`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=22;

--
-- AUTO_INCREMENT for table `answer_sheet_test_questions`
--
ALTER TABLE `answer_sheet_test_questions`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2101;

--
-- AUTO_INCREMENT for table `answer_sheet_test_question_choices`
--
ALTER TABLE `answer_sheet_test_question_choices`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=8107;

--
-- AUTO_INCREMENT for table `assessments`
--
ALTER TABLE `assessments`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=22;

--
-- AUTO_INCREMENT for table `assessment_details`
--
ALTER TABLE `assessment_details`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2101;

--
-- AUTO_INCREMENT for table `assessment_types`
--
ALTER TABLE `assessment_types`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=4;

--
-- AUTO_INCREMENT for table `choices`
--
ALTER TABLE `choices`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=1111;

--
-- AUTO_INCREMENT for table `code_objects`
--
ALTER TABLE `code_objects`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=29;

--
-- AUTO_INCREMENT for table `colleges`
--
ALTER TABLE `colleges`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=8;

--
-- AUTO_INCREMENT for table `courses`
--
ALTER TABLE `courses`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=165;

--
-- AUTO_INCREMENT for table `course_requisites`
--
ALTER TABLE `course_requisites`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=89;

--
-- AUTO_INCREMENT for table `curricula`
--
ALTER TABLE `curricula`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=45;

--
-- AUTO_INCREMENT for table `curriculum_courses`
--
ALTER TABLE `curriculum_courses`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=327;

--
-- AUTO_INCREMENT for table `curriculum_mapping_statuses`
--
ALTER TABLE `curriculum_mapping_statuses`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=13;

--
-- AUTO_INCREMENT for table `curriculum_maps`
--
ALTER TABLE `curriculum_maps`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=324;

--
-- AUTO_INCREMENT for table `custom_recorded_assessments`
--
ALTER TABLE `custom_recorded_assessments`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=3;

--
-- AUTO_INCREMENT for table `difficulty_levels`
--
ALTER TABLE `difficulty_levels`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=4;

--
-- AUTO_INCREMENT for table `exams`
--
ALTER TABLE `exams`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2;

--
-- AUTO_INCREMENT for table `exam_levels`
--
ALTER TABLE `exam_levels`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT for table `exam_test_questions`
--
ALTER TABLE `exam_test_questions`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=101;

--
-- AUTO_INCREMENT for table `faculties`
--
ALTER TABLE `faculties`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=24;

--
-- AUTO_INCREMENT for table `faculty_courses`
--
ALTER TABLE `faculty_courses`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=8;

--
-- AUTO_INCREMENT for table `grades`
--
ALTER TABLE `grades`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=331;

--
-- AUTO_INCREMENT for table `grade_values`
--
ALTER TABLE `grade_values`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=12;

--
-- AUTO_INCREMENT for table `image_objects`
--
ALTER TABLE `image_objects`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=48;

--
-- AUTO_INCREMENT for table `item_analyses`
--
ALTER TABLE `item_analyses`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2;

--
-- AUTO_INCREMENT for table `item_analysis_details`
--
ALTER TABLE `item_analysis_details`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=101;

--
-- AUTO_INCREMENT for table `item_analysis_detail_actions`
--
ALTER TABLE `item_analysis_detail_actions`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=121;

--
-- AUTO_INCREMENT for table `learning_levels`
--
ALTER TABLE `learning_levels`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=14;

--
-- AUTO_INCREMENT for table `math_objects`
--
ALTER TABLE `math_objects`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=24;

--
-- AUTO_INCREMENT for table `migrations`
--
ALTER TABLE `migrations`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=52;

--
-- AUTO_INCREMENT for table `performance_criterias`
--
ALTER TABLE `performance_criterias`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=34;

--
-- AUTO_INCREMENT for table `performance_criteria_archives`
--
ALTER TABLE `performance_criteria_archives`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=80;

--
-- AUTO_INCREMENT for table `performance_criteria_indicators`
--
ALTER TABLE `performance_criteria_indicators`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=118;

--
-- AUTO_INCREMENT for table `performance_criteria_indicator_archives`
--
ALTER TABLE `performance_criteria_indicator_archives`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=265;

--
-- AUTO_INCREMENT for table `performance_indicators`
--
ALTER TABLE `performance_indicators`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=5;

--
-- AUTO_INCREMENT for table `programs`
--
ALTER TABLE `programs`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=13;

--
-- AUTO_INCREMENT for table `settings`
--
ALTER TABLE `settings`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2;

--
-- AUTO_INCREMENT for table `students`
--
ALTER TABLE `students`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=37;

--
-- AUTO_INCREMENT for table `student_outcomes`
--
ALTER TABLE `student_outcomes`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=36;

--
-- AUTO_INCREMENT for table `student_outcome_archives`
--
ALTER TABLE `student_outcome_archives`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=93;

--
-- AUTO_INCREMENT for table `student_outcome_archive_versions`
--
ALTER TABLE `student_outcome_archive_versions`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=9;

--
-- AUTO_INCREMENT for table `test_questions`
--
ALTER TABLE `test_questions`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=291;

--
-- AUTO_INCREMENT for table `test_question_problems`
--
ALTER TABLE `test_question_problems`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=4;

--
-- AUTO_INCREMENT for table `users`
--
ALTER TABLE `users`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=72;

--
-- AUTO_INCREMENT for table `user_profiles`
--
ALTER TABLE `user_profiles`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=5;

--
-- Constraints for dumped tables
--

--
-- Constraints for table `choices`
--
ALTER TABLE `choices`
  ADD CONSTRAINT `fk_choices_test_questions_test_question_id_` FOREIGN KEY (`test_question_id`) REFERENCES `test_questions` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `fk_choices_users_user_id` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Constraints for table `courses`
--
ALTER TABLE `courses`
  ADD CONSTRAINT `fk_courses_colleges_college_id` FOREIGN KEY (`college_id`) REFERENCES `colleges` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Constraints for table `course_requisites`
--
ALTER TABLE `course_requisites`
  ADD CONSTRAINT `fk_course_requisites_curriculum_courses_curriculum_course_id` FOREIGN KEY (`curriculum_course_id`) REFERENCES `curriculum_courses` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `fk_course_requisites_curriculum_courses_pre_req_id` FOREIGN KEY (`pre_req_id`) REFERENCES `curriculum_courses` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Constraints for table `curricula`
--
ALTER TABLE `curricula`
  ADD CONSTRAINT `fk_curricula_programs_program_id` FOREIGN KEY (`program_id`) REFERENCES `programs` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `fk_curriula_users_user_id` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Constraints for table `curriculum_courses`
--
ALTER TABLE `curriculum_courses`
  ADD CONSTRAINT `fk_curriculum_courses_courses_course_id` FOREIGN KEY (`course_id`) REFERENCES `courses` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `fk_curriculum_courses_curricula_curriculum_id` FOREIGN KEY (`curriculum_id`) REFERENCES `curricula` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Constraints for table `curriculum_mapping_statuses`
--
ALTER TABLE `curriculum_mapping_statuses`
  ADD CONSTRAINT `fk_curriculum_mapping_statuses_curricula_curriculum_id` FOREIGN KEY (`curriculum_id`) REFERENCES `curricula` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Constraints for table `curriculum_maps`
--
ALTER TABLE `curriculum_maps`
  ADD CONSTRAINT `fk_curriculum_maps_curriculum_courses_curriculum_course_id` FOREIGN KEY (`curriculum_course_id`) REFERENCES `curriculum_courses` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `fk_curriculum_maps_learning_levels_learning_level_id` FOREIGN KEY (`learning_level_id`) REFERENCES `learning_levels` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `fk_curriculum_maps_student_outcomes_student_outcome_id` FOREIGN KEY (`student_outcome_id`) REFERENCES `student_outcomes` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Constraints for table `exams`
--
ALTER TABLE `exams`
  ADD CONSTRAINT `fk_exams_curricula_curriculum_id` FOREIGN KEY (`curriculum_id`) REFERENCES `curricula` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `fk_exams_student_outcomes_student_outcome_id` FOREIGN KEY (`student_outcome_id`) REFERENCES `student_outcomes` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `fk_exams_users_user_id` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Constraints for table `exam_levels`
--
ALTER TABLE `exam_levels`
  ADD CONSTRAINT `exam_levels_difficulty_levels_difficulty_level_id` FOREIGN KEY (`difficulty_level_id`) REFERENCES `difficulty_levels` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `fk_exam_levels_exams_exam_id` FOREIGN KEY (`exam_id`) REFERENCES `exams` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Constraints for table `exam_test_questions`
--
ALTER TABLE `exam_test_questions`
  ADD CONSTRAINT `exam_test_questions_test_questions_test_question_id` FOREIGN KEY (`test_question_id`) REFERENCES `test_questions` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `fk_exam_test_questions_exams_exam_id` FOREIGN KEY (`exam_id`) REFERENCES `exams` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Constraints for table `faculties`
--
ALTER TABLE `faculties`
  ADD CONSTRAINT `fk_faculties_colleges_college_id` FOREIGN KEY (`college_id`) REFERENCES `colleges` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `fk_faculties_users_user_id` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Constraints for table `performance_criterias`
--
ALTER TABLE `performance_criterias`
  ADD CONSTRAINT `fk_performance_criterias_student_outcomes_id` FOREIGN KEY (`student_outcome_id`) REFERENCES `student_outcomes` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Constraints for table `performance_criteria_indicators`
--
ALTER TABLE `performance_criteria_indicators`
  ADD CONSTRAINT `fk_performance_criteria_indicators_performance_criterias__id` FOREIGN KEY (`performance_criteria_id`) REFERENCES `performance_criterias` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `fk_performance_criteria_indicators_performance_indicators_id` FOREIGN KEY (`performance_indicator_id`) REFERENCES `performance_indicators` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Constraints for table `programs`
--
ALTER TABLE `programs`
  ADD CONSTRAINT `fk_programs_colleges_college_id` FOREIGN KEY (`college_id`) REFERENCES `colleges` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Constraints for table `students`
--
ALTER TABLE `students`
  ADD CONSTRAINT `fk_students_curricula_curriculum_id` FOREIGN KEY (`curriculum_id`) REFERENCES `curricula` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `fk_students_programs_program_id` FOREIGN KEY (`program_id`) REFERENCES `programs` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `fk_students_users_user_id` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Constraints for table `student_outcomes`
--
ALTER TABLE `student_outcomes`
  ADD CONSTRAINT `fk_student_outcomes_programs_program_id` FOREIGN KEY (`program_id`) REFERENCES `programs` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Constraints for table `test_questions`
--
ALTER TABLE `test_questions`
  ADD CONSTRAINT `fk_test_questions_courses_course_id` FOREIGN KEY (`course_id`) REFERENCES `courses` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `fk_test_questions_difficulty_levels_difficulty_level_id` FOREIGN KEY (`difficulty_level_id`) REFERENCES `difficulty_levels` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `fk_test_questions_performance_criterias_performance_criteria_id` FOREIGN KEY (`performance_criteria_id`) REFERENCES `performance_criterias` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `fk_test_questions_student_outcomes_student_outcome_id` FOREIGN KEY (`student_outcome_id`) REFERENCES `student_outcomes` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `fk_test_questions_users_user_id` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
